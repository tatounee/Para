<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1638" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1621.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1621.00"> </text><svg id="frames" x="10" width="1180" total_samples="5681"><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (3 samples, 0.05%)</title><rect x="0.0000%" y="1541" width="0.0528%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.04%)</title><rect x="0.0176%" y="1525" width="0.0352%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2676%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.04%)</title><rect x="0.0176%" y="1509" width="0.0352%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2676%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.04%)</title><rect x="0.0176%" y="1493" width="0.0352%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2676%" y="1503.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (2 samples, 0.04%)</title><rect x="0.0176%" y="1477" width="0.0352%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2676%" y="1487.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.04%)</title><rect x="0.0176%" y="1461" width="0.0352%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="2"/><text x="0.2676%" y="1471.50"></text></g><g><title>__GI___libc_free (26 samples, 0.46%)</title><rect x="0.0528%" y="1541" width="0.4577%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="26"/><text x="0.3028%" y="1551.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.18%)</title><rect x="0.5105%" y="1541" width="0.1760%" height="15" fill="rgb(228,23,34)" fg:x="29" fg:w="10"/><text x="0.7605%" y="1551.50"></text></g><g><title>__memcpy_evex_unaligned_erms (11 samples, 0.19%)</title><rect x="0.6865%" y="1541" width="0.1936%" height="15" fill="rgb(218,30,26)" fg:x="39" fg:w="11"/><text x="0.9365%" y="1551.50"></text></g><g><title>_int_free (7 samples, 0.12%)</title><rect x="0.8801%" y="1541" width="0.1232%" height="15" fill="rgb(220,122,19)" fg:x="50" fg:w="7"/><text x="1.1301%" y="1551.50"></text></g><g><title>_int_realloc (12 samples, 0.21%)</title><rect x="1.0033%" y="1541" width="0.2112%" height="15" fill="rgb(250,228,42)" fg:x="57" fg:w="12"/><text x="1.2533%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.18%)</title><rect x="1.2146%" y="1541" width="0.1760%" height="15" fill="rgb(240,193,28)" fg:x="69" fg:w="10"/><text x="1.4646%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.28%)</title><rect x="1.3906%" y="1541" width="0.2816%" height="15" fill="rgb(216,20,37)" fg:x="79" fg:w="16"/><text x="1.6406%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="1.6722%" y="1541" width="0.0176%" height="15" fill="rgb(206,188,39)" fg:x="95" fg:w="1"/><text x="1.9222%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="1.6722%" y="1525" width="0.0176%" height="15" fill="rgb(217,207,13)" fg:x="95" fg:w="1"/><text x="1.9222%" y="1535.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="1.6898%" y="1541" width="0.0176%" height="15" fill="rgb(231,73,38)" fg:x="96" fg:w="1"/><text x="1.9398%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.6898%" y="1525" width="0.0176%" height="15" fill="rgb(225,20,46)" fg:x="96" fg:w="1"/><text x="1.9398%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.6898%" y="1509" width="0.0176%" height="15" fill="rgb(210,31,41)" fg:x="96" fg:w="1"/><text x="1.9398%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.25%)</title><rect x="2.5876%" y="1365" width="0.2464%" height="15" fill="rgb(221,200,47)" fg:x="147" fg:w="14"/><text x="2.8376%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.25%)</title><rect x="2.5876%" y="1349" width="0.2464%" height="15" fill="rgb(226,26,5)" fg:x="147" fg:w="14"/><text x="2.8376%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.25%)</title><rect x="2.5876%" y="1333" width="0.2464%" height="15" fill="rgb(249,33,26)" fg:x="147" fg:w="14"/><text x="2.8376%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.25%)</title><rect x="2.5876%" y="1317" width="0.2464%" height="15" fill="rgb(235,183,28)" fg:x="147" fg:w="14"/><text x="2.8376%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.25%)</title><rect x="2.5876%" y="1301" width="0.2464%" height="15" fill="rgb(221,5,38)" fg:x="147" fg:w="14"/><text x="2.8376%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.25%)</title><rect x="2.5876%" y="1285" width="0.2464%" height="15" fill="rgb(247,18,42)" fg:x="147" fg:w="14"/><text x="2.8376%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.44%)</title><rect x="2.5876%" y="1429" width="0.4401%" height="15" fill="rgb(241,131,45)" fg:x="147" fg:w="25"/><text x="2.8376%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.44%)</title><rect x="2.5876%" y="1413" width="0.4401%" height="15" fill="rgb(249,31,29)" fg:x="147" fg:w="25"/><text x="2.8376%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.44%)</title><rect x="2.5876%" y="1397" width="0.4401%" height="15" fill="rgb(225,111,53)" fg:x="147" fg:w="25"/><text x="2.8376%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.44%)</title><rect x="2.5876%" y="1381" width="0.4401%" height="15" fill="rgb(238,160,17)" fg:x="147" fg:w="25"/><text x="2.8376%" y="1391.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.19%)</title><rect x="2.8340%" y="1365" width="0.1936%" height="15" fill="rgb(214,148,48)" fg:x="161" fg:w="11"/><text x="3.0840%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.19%)</title><rect x="2.8340%" y="1349" width="0.1936%" height="15" fill="rgb(232,36,49)" fg:x="161" fg:w="11"/><text x="3.0840%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="3.0276%" y="1397" width="0.0352%" height="15" fill="rgb(209,103,24)" fg:x="172" fg:w="2"/><text x="3.2776%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="3.0276%" y="1381" width="0.0352%" height="15" fill="rgb(229,88,8)" fg:x="172" fg:w="2"/><text x="3.2776%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (9 samples, 0.16%)</title><rect x="3.0276%" y="1429" width="0.1584%" height="15" fill="rgb(213,181,19)" fg:x="172" fg:w="9"/><text x="3.2776%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.16%)</title><rect x="3.0276%" y="1413" width="0.1584%" height="15" fill="rgb(254,191,54)" fg:x="172" fg:w="9"/><text x="3.2776%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.12%)</title><rect x="3.0628%" y="1397" width="0.1232%" height="15" fill="rgb(241,83,37)" fg:x="174" fg:w="7"/><text x="3.3128%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.14%)</title><rect x="3.1861%" y="1429" width="0.1408%" height="15" fill="rgb(233,36,39)" fg:x="181" fg:w="8"/><text x="3.4361%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 1.07%)</title><rect x="2.3235%" y="1525" width="1.0738%" height="15" fill="rgb(226,3,54)" fg:x="132" fg:w="61"/><text x="2.5735%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 1.07%)</title><rect x="2.3235%" y="1509" width="1.0738%" height="15" fill="rgb(245,192,40)" fg:x="132" fg:w="61"/><text x="2.5735%" y="1519.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 1.07%)</title><rect x="2.3235%" y="1493" width="1.0738%" height="15" fill="rgb(238,167,29)" fg:x="132" fg:w="61"/><text x="2.5735%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (61 samples, 1.07%)</title><rect x="2.3235%" y="1477" width="1.0738%" height="15" fill="rgb(232,182,51)" fg:x="132" fg:w="61"/><text x="2.5735%" y="1487.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (61 samples, 1.07%)</title><rect x="2.3235%" y="1461" width="1.0738%" height="15" fill="rgb(231,60,39)" fg:x="132" fg:w="61"/><text x="2.5735%" y="1471.50"></text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (61 samples, 1.07%)</title><rect x="2.3235%" y="1445" width="1.0738%" height="15" fill="rgb(208,69,12)" fg:x="132" fg:w="61"/><text x="2.5735%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.3269%" y="1429" width="0.0704%" height="15" fill="rgb(235,93,37)" fg:x="189" fg:w="4"/><text x="3.5769%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.3269%" y="1413" width="0.0704%" height="15" fill="rgb(213,116,39)" fg:x="189" fg:w="4"/><text x="3.5769%" y="1423.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="3.3269%" y="1397" width="0.0704%" height="15" fill="rgb(222,207,29)" fg:x="189" fg:w="4"/><text x="3.5769%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="3.3269%" y="1381" width="0.0704%" height="15" fill="rgb(206,96,30)" fg:x="189" fg:w="4"/><text x="3.5769%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="3.3269%" y="1365" width="0.0704%" height="15" fill="rgb(218,138,4)" fg:x="189" fg:w="4"/><text x="3.5769%" y="1375.50"></text></g><g><title>[[heap]] (200 samples, 3.52%)</title><rect x="0.0000%" y="1557" width="3.5205%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="200"/><text x="0.2500%" y="1567.50">[[h..</text></g><g><title>paranagram::utils::find_sum_inner (103 samples, 1.81%)</title><rect x="1.7074%" y="1541" width="1.8131%" height="15" fill="rgb(239,60,40)" fg:x="97" fg:w="103"/><text x="1.9574%" y="1551.50">p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (7 samples, 0.12%)</title><rect x="3.3973%" y="1525" width="0.1232%" height="15" fill="rgb(206,27,48)" fg:x="193" fg:w="7"/><text x="3.6473%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (7 samples, 0.12%)</title><rect x="3.3973%" y="1509" width="0.1232%" height="15" fill="rgb(225,35,8)" fg:x="193" fg:w="7"/><text x="3.6473%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="3.3973%" y="1493" width="0.1232%" height="15" fill="rgb(250,213,24)" fg:x="193" fg:w="7"/><text x="3.6473%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.12%)</title><rect x="3.3973%" y="1477" width="0.1232%" height="15" fill="rgb(247,123,22)" fg:x="193" fg:w="7"/><text x="3.6473%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.12%)</title><rect x="3.3973%" y="1461" width="0.1232%" height="15" fill="rgb(231,138,38)" fg:x="193" fg:w="7"/><text x="3.6473%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="3.5205%" y="1541" width="0.0176%" height="15" fill="rgb(231,145,46)" fg:x="200" fg:w="1"/><text x="3.7705%" y="1551.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="3.5381%" y="1541" width="0.0176%" height="15" fill="rgb(251,118,11)" fg:x="201" fg:w="1"/><text x="3.7881%" y="1551.50"></text></g><g><title>__GI___libc_realloc (18 samples, 0.32%)</title><rect x="3.5557%" y="1541" width="0.3168%" height="15" fill="rgb(217,147,25)" fg:x="202" fg:w="18"/><text x="3.8057%" y="1551.50"></text></g><g><title>__rdl_realloc (6 samples, 0.11%)</title><rect x="3.8726%" y="1541" width="0.1056%" height="15" fill="rgb(247,81,37)" fg:x="220" fg:w="6"/><text x="4.1226%" y="1551.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.11%)</title><rect x="3.8726%" y="1525" width="0.1056%" height="15" fill="rgb(209,12,38)" fg:x="220" fg:w="6"/><text x="4.1226%" y="1535.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="3.9782%" y="1541" width="0.1056%" height="15" fill="rgb(227,1,9)" fg:x="226" fg:w="6"/><text x="4.2282%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="4.0838%" y="1541" width="0.0176%" height="15" fill="rgb(248,47,43)" fg:x="232" fg:w="1"/><text x="4.3338%" y="1551.50"></text></g><g><title>[[stack]] (34 samples, 0.60%)</title><rect x="3.5205%" y="1557" width="0.5985%" height="15" fill="rgb(221,10,30)" fg:x="200" fg:w="34"/><text x="3.7705%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="4.1014%" y="1541" width="0.0176%" height="15" fill="rgb(210,229,1)" fg:x="233" fg:w="1"/><text x="4.3514%" y="1551.50"></text></g><g><title>[para] (2 samples, 0.04%)</title><rect x="4.1190%" y="1557" width="0.0352%" height="15" fill="rgb(222,148,37)" fg:x="234" fg:w="2"/><text x="4.3690%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.04%)</title><rect x="4.1190%" y="1541" width="0.0352%" height="15" fill="rgb(234,67,33)" fg:x="234" fg:w="2"/><text x="4.3690%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.11%)</title><rect x="4.7527%" y="1541" width="0.1056%" height="15" fill="rgb(247,98,35)" fg:x="270" fg:w="6"/><text x="5.0027%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="4.8407%" y="1525" width="0.0176%" height="15" fill="rgb(247,138,52)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="4.8407%" y="1509" width="0.0176%" height="15" fill="rgb(213,79,30)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="4.8407%" y="1493" width="0.0176%" height="15" fill="rgb(246,177,23)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="4.8407%" y="1477" width="0.0176%" height="15" fill="rgb(230,62,27)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="4.8407%" y="1461" width="0.0176%" height="15" fill="rgb(216,154,8)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="4.8407%" y="1445" width="0.0176%" height="15" fill="rgb(244,35,45)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="4.8407%" y="1429" width="0.0176%" height="15" fill="rgb(251,115,12)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="4.8407%" y="1413" width="0.0176%" height="15" fill="rgb(240,54,50)" fg:x="275" fg:w="1"/><text x="5.0907%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="4.8583%" y="1541" width="0.0176%" height="15" fill="rgb(233,84,52)" fg:x="276" fg:w="1"/><text x="5.1083%" y="1551.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (14 samples, 0.25%)</title><rect x="4.8759%" y="1413" width="0.2464%" height="15" fill="rgb(207,117,47)" fg:x="277" fg:w="14"/><text x="5.1259%" y="1423.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (14 samples, 0.25%)</title><rect x="4.8759%" y="1397" width="0.2464%" height="15" fill="rgb(249,43,39)" fg:x="277" fg:w="14"/><text x="5.1259%" y="1407.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (14 samples, 0.25%)</title><rect x="4.8759%" y="1381" width="0.2464%" height="15" fill="rgb(209,38,44)" fg:x="277" fg:w="14"/><text x="5.1259%" y="1391.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.1223%" y="1381" width="0.0176%" height="15" fill="rgb(236,212,23)" fg:x="291" fg:w="1"/><text x="5.3723%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.1223%" y="1365" width="0.0176%" height="15" fill="rgb(242,79,21)" fg:x="291" fg:w="1"/><text x="5.3723%" y="1375.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.48%)</title><rect x="4.8759%" y="1461" width="0.4753%" height="15" fill="rgb(211,96,35)" fg:x="277" fg:w="27"/><text x="5.1259%" y="1471.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}}::{{closure}} (27 samples, 0.48%)</title><rect x="4.8759%" y="1445" width="0.4753%" height="15" fill="rgb(253,215,40)" fg:x="277" fg:w="27"/><text x="5.1259%" y="1455.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::merge (27 samples, 0.48%)</title><rect x="4.8759%" y="1429" width="0.4753%" height="15" fill="rgb(211,81,21)" fg:x="277" fg:w="27"/><text x="5.1259%" y="1439.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13 samples, 0.23%)</title><rect x="5.1223%" y="1413" width="0.2288%" height="15" fill="rgb(208,190,38)" fg:x="291" fg:w="13"/><text x="5.3723%" y="1423.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (13 samples, 0.23%)</title><rect x="5.1223%" y="1397" width="0.2288%" height="15" fill="rgb(235,213,38)" fg:x="291" fg:w="13"/><text x="5.3723%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.21%)</title><rect x="5.1399%" y="1381" width="0.2112%" height="15" fill="rgb(237,122,38)" fg:x="292" fg:w="12"/><text x="5.3899%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt; (3 samples, 0.05%)</title><rect x="5.3512%" y="1461" width="0.0528%" height="15" fill="rgb(244,218,35)" fg:x="304" fg:w="3"/><text x="5.6012%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::Word&gt;&gt; (3 samples, 0.05%)</title><rect x="5.3512%" y="1445" width="0.0528%" height="15" fill="rgb(240,68,47)" fg:x="304" fg:w="3"/><text x="5.6012%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="5.3512%" y="1429" width="0.0528%" height="15" fill="rgb(210,16,53)" fg:x="304" fg:w="3"/><text x="5.6012%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="5.3512%" y="1413" width="0.0528%" height="15" fill="rgb(235,124,12)" fg:x="304" fg:w="3"/><text x="5.6012%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="5.3512%" y="1397" width="0.0528%" height="15" fill="rgb(224,169,11)" fg:x="304" fg:w="3"/><text x="5.6012%" y="1407.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (31 samples, 0.55%)</title><rect x="4.8759%" y="1493" width="0.5457%" height="15" fill="rgb(250,166,2)" fg:x="277" fg:w="31"/><text x="5.1259%" y="1503.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (31 samples, 0.55%)</title><rect x="4.8759%" y="1477" width="0.5457%" height="15" fill="rgb(242,216,29)" fg:x="277" fg:w="31"/><text x="5.1259%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (1 samples, 0.02%)</title><rect x="5.4040%" y="1461" width="0.0176%" height="15" fill="rgb(230,116,27)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="5.4040%" y="1445" width="0.0176%" height="15" fill="rgb(228,99,48)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (1 samples, 0.02%)</title><rect x="5.4040%" y="1429" width="0.0176%" height="15" fill="rgb(253,11,6)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.4040%" y="1413" width="0.0176%" height="15" fill="rgb(247,143,39)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="5.4040%" y="1397" width="0.0176%" height="15" fill="rgb(236,97,10)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="5.4040%" y="1381" width="0.0176%" height="15" fill="rgb(233,208,19)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.4040%" y="1365" width="0.0176%" height="15" fill="rgb(216,164,2)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.4040%" y="1349" width="0.0176%" height="15" fill="rgb(220,129,5)" fg:x="307" fg:w="1"/><text x="5.6540%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.04%)</title><rect x="5.4216%" y="1461" width="0.0352%" height="15" fill="rgb(242,17,10)" fg:x="308" fg:w="2"/><text x="5.6716%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="5.4216%" y="1445" width="0.0352%" height="15" fill="rgb(242,107,0)" fg:x="308" fg:w="2"/><text x="5.6716%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.62%)</title><rect x="4.8759%" y="1541" width="0.6161%" height="15" fill="rgb(251,28,31)" fg:x="277" fg:w="35"/><text x="5.1259%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (35 samples, 0.62%)</title><rect x="4.8759%" y="1525" width="0.6161%" height="15" fill="rgb(233,223,10)" fg:x="277" fg:w="35"/><text x="5.1259%" y="1535.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (35 samples, 0.62%)</title><rect x="4.8759%" y="1509" width="0.6161%" height="15" fill="rgb(215,21,27)" fg:x="277" fg:w="35"/><text x="5.1259%" y="1519.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (4 samples, 0.07%)</title><rect x="5.4216%" y="1493" width="0.0704%" height="15" fill="rgb(232,23,21)" fg:x="308" fg:w="4"/><text x="5.6716%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::word::FromIndexAndWeight&gt;::from_index_and_weight (4 samples, 0.07%)</title><rect x="5.4216%" y="1477" width="0.0704%" height="15" fill="rgb(244,5,23)" fg:x="308" fg:w="4"/><text x="5.6716%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (2 samples, 0.04%)</title><rect x="5.4568%" y="1461" width="0.0352%" height="15" fill="rgb(226,81,46)" fg:x="310" fg:w="2"/><text x="5.7068%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (2 samples, 0.04%)</title><rect x="5.4568%" y="1445" width="0.0352%" height="15" fill="rgb(247,70,30)" fg:x="310" fg:w="2"/><text x="5.7068%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="5.4568%" y="1429" width="0.0352%" height="15" fill="rgb(212,68,19)" fg:x="310" fg:w="2"/><text x="5.7068%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="5.4568%" y="1413" width="0.0352%" height="15" fill="rgb(240,187,13)" fg:x="310" fg:w="2"/><text x="5.7068%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="5.4568%" y="1397" width="0.0352%" height="15" fill="rgb(223,113,26)" fg:x="310" fg:w="2"/><text x="5.7068%" y="1407.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1541" width="0.2112%" height="15" fill="rgb(206,192,2)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1551.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1525" width="0.2112%" height="15" fill="rgb(241,108,4)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1535.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1509" width="0.2112%" height="15" fill="rgb(247,173,49)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1519.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1493" width="0.2112%" height="15" fill="rgb(224,114,35)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1503.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1477" width="0.2112%" height="15" fill="rgb(245,159,27)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1487.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1461" width="0.2112%" height="15" fill="rgb(245,172,44)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1471.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1445" width="0.2112%" height="15" fill="rgb(236,23,11)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1455.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1429" width="0.2112%" height="15" fill="rgb(205,117,38)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1439.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1413" width="0.2112%" height="15" fill="rgb(237,72,25)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1423.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1397" width="0.2112%" height="15" fill="rgb(244,70,9)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1407.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1381" width="0.2112%" height="15" fill="rgb(217,125,39)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1391.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1365" width="0.2112%" height="15" fill="rgb(235,36,10)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1375.50"></text></g><g><title>[unknown] (12 samples, 0.21%)</title><rect x="5.4920%" y="1349" width="0.2112%" height="15" fill="rgb(251,123,47)" fg:x="312" fg:w="12"/><text x="5.7420%" y="1359.50"></text></g><g><title>[unknown] (10 samples, 0.18%)</title><rect x="5.5272%" y="1333" width="0.1760%" height="15" fill="rgb(221,13,13)" fg:x="314" fg:w="10"/><text x="5.7772%" y="1343.50"></text></g><g><title>[unknown] (8 samples, 0.14%)</title><rect x="5.5624%" y="1317" width="0.1408%" height="15" fill="rgb(238,131,9)" fg:x="316" fg:w="8"/><text x="5.8124%" y="1327.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="5.5976%" y="1301" width="0.1056%" height="15" fill="rgb(211,50,8)" fg:x="318" fg:w="6"/><text x="5.8476%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="5.6152%" y="1285" width="0.0880%" height="15" fill="rgb(245,182,24)" fg:x="319" fg:w="5"/><text x="5.8652%" y="1295.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="5.6328%" y="1269" width="0.0704%" height="15" fill="rgb(242,14,37)" fg:x="320" fg:w="4"/><text x="5.8828%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="5.6504%" y="1253" width="0.0528%" height="15" fill="rgb(246,228,12)" fg:x="321" fg:w="3"/><text x="5.9004%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="5.6680%" y="1237" width="0.0352%" height="15" fill="rgb(213,55,15)" fg:x="322" fg:w="2"/><text x="5.9180%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.6856%" y="1221" width="0.0176%" height="15" fill="rgb(209,9,3)" fg:x="323" fg:w="1"/><text x="5.9356%" y="1231.50"></text></g><g><title>__GI___libc_free (10 samples, 0.18%)</title><rect x="5.7032%" y="1541" width="0.1760%" height="15" fill="rgb(230,59,30)" fg:x="324" fg:w="10"/><text x="5.9532%" y="1551.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.09%)</title><rect x="5.8792%" y="1541" width="0.0880%" height="15" fill="rgb(209,121,21)" fg:x="334" fg:w="5"/><text x="6.1292%" y="1551.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.28%)</title><rect x="5.9673%" y="1541" width="0.2816%" height="15" fill="rgb(220,109,13)" fg:x="339" fg:w="16"/><text x="6.2173%" y="1551.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.16%)</title><rect x="6.2489%" y="1541" width="0.1584%" height="15" fill="rgb(232,18,1)" fg:x="355" fg:w="9"/><text x="6.4989%" y="1551.50"></text></g><g><title>__memset_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="6.4073%" y="1541" width="0.0528%" height="15" fill="rgb(215,41,42)" fg:x="364" fg:w="3"/><text x="6.6573%" y="1551.50"></text></g><g><title>__rdl_realloc (7 samples, 0.12%)</title><rect x="6.4601%" y="1541" width="0.1232%" height="15" fill="rgb(224,123,36)" fg:x="367" fg:w="7"/><text x="6.7101%" y="1551.50"></text></g><g><title>_int_free (62 samples, 1.09%)</title><rect x="6.5833%" y="1541" width="1.0914%" height="15" fill="rgb(240,125,3)" fg:x="374" fg:w="62"/><text x="6.8333%" y="1551.50"></text></g><g><title>_int_malloc (25 samples, 0.44%)</title><rect x="7.6747%" y="1541" width="0.4401%" height="15" fill="rgb(205,98,50)" fg:x="436" fg:w="25"/><text x="7.9247%" y="1551.50"></text></g><g><title>_int_realloc (57 samples, 1.00%)</title><rect x="8.1148%" y="1541" width="1.0033%" height="15" fill="rgb(205,185,37)" fg:x="461" fg:w="57"/><text x="8.3648%" y="1551.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.04%)</title><rect x="9.1181%" y="1509" width="0.0352%" height="15" fill="rgb(238,207,15)" fg:x="518" fg:w="2"/><text x="9.3681%" y="1519.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.04%)</title><rect x="9.1181%" y="1493" width="0.0352%" height="15" fill="rgb(213,199,42)" fg:x="518" fg:w="2"/><text x="9.3681%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.05%)</title><rect x="9.1181%" y="1541" width="0.0528%" height="15" fill="rgb(235,201,11)" fg:x="518" fg:w="3"/><text x="9.3681%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.05%)</title><rect x="9.1181%" y="1525" width="0.0528%" height="15" fill="rgb(207,46,11)" fg:x="518" fg:w="3"/><text x="9.3681%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="9.1533%" y="1509" width="0.0176%" height="15" fill="rgb(241,35,35)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.02%)</title><rect x="9.1533%" y="1493" width="0.0176%" height="15" fill="rgb(243,32,47)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.02%)</title><rect x="9.1533%" y="1477" width="0.0176%" height="15" fill="rgb(247,202,23)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="9.1533%" y="1461" width="0.0176%" height="15" fill="rgb(219,102,11)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1471.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="9.1533%" y="1445" width="0.0176%" height="15" fill="rgb(243,110,44)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.02%)</title><rect x="9.1533%" y="1429" width="0.0176%" height="15" fill="rgb(222,74,54)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="9.1533%" y="1413" width="0.0176%" height="15" fill="rgb(216,99,12)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="9.1533%" y="1397" width="0.0176%" height="15" fill="rgb(226,22,26)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="9.1533%" y="1381" width="0.0176%" height="15" fill="rgb(217,163,10)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1391.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="9.1533%" y="1365" width="0.0176%" height="15" fill="rgb(213,25,53)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="9.1533%" y="1349" width="0.0176%" height="15" fill="rgb(252,105,26)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.1533%" y="1333" width="0.0176%" height="15" fill="rgb(220,39,43)" fg:x="520" fg:w="1"/><text x="9.4033%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.23%)</title><rect x="9.1709%" y="1541" width="0.2288%" height="15" fill="rgb(229,68,48)" fg:x="521" fg:w="13"/><text x="9.4209%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.23%)</title><rect x="9.1709%" y="1525" width="0.2288%" height="15" fill="rgb(252,8,32)" fg:x="521" fg:w="13"/><text x="9.4209%" y="1535.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (9 samples, 0.16%)</title><rect x="9.2413%" y="1509" width="0.1584%" height="15" fill="rgb(223,20,43)" fg:x="525" fg:w="9"/><text x="9.4913%" y="1519.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (9 samples, 0.16%)</title><rect x="9.2413%" y="1493" width="0.1584%" height="15" fill="rgb(229,81,49)" fg:x="525" fg:w="9"/><text x="9.4913%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.30%)</title><rect x="9.3998%" y="1541" width="0.2992%" height="15" fill="rgb(236,28,36)" fg:x="534" fg:w="17"/><text x="9.6498%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.28%)</title><rect x="9.4174%" y="1525" width="0.2816%" height="15" fill="rgb(249,185,26)" fg:x="535" fg:w="16"/><text x="9.6674%" y="1535.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.28%)</title><rect x="9.4174%" y="1509" width="0.2816%" height="15" fill="rgb(249,174,33)" fg:x="535" fg:w="16"/><text x="9.6674%" y="1519.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.28%)</title><rect x="9.4174%" y="1493" width="0.2816%" height="15" fill="rgb(233,201,37)" fg:x="535" fg:w="16"/><text x="9.6674%" y="1503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.19%)</title><rect x="9.6990%" y="1541" width="0.1936%" height="15" fill="rgb(221,78,26)" fg:x="551" fg:w="11"/><text x="9.9490%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (6 samples, 0.11%)</title><rect x="9.8926%" y="1541" width="0.1056%" height="15" fill="rgb(250,127,30)" fg:x="562" fg:w="6"/><text x="10.1426%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="10.0686%" y="1493" width="0.0176%" height="15" fill="rgb(230,49,44)" fg:x="572" fg:w="1"/><text x="10.3186%" y="1503.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="10.0686%" y="1477" width="0.0176%" height="15" fill="rgb(229,67,23)" fg:x="572" fg:w="1"/><text x="10.3186%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.02%)</title><rect x="10.0686%" y="1461" width="0.0176%" height="15" fill="rgb(249,83,47)" fg:x="572" fg:w="1"/><text x="10.3186%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="10.0686%" y="1445" width="0.0176%" height="15" fill="rgb(215,43,3)" fg:x="572" fg:w="1"/><text x="10.3186%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="10.0686%" y="1429" width="0.0176%" height="15" fill="rgb(238,154,13)" fg:x="572" fg:w="1"/><text x="10.3186%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="10.0686%" y="1413" width="0.0176%" height="15" fill="rgb(219,56,2)" fg:x="572" fg:w="1"/><text x="10.3186%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.11%)</title><rect x="9.9982%" y="1541" width="0.1056%" height="15" fill="rgb(233,0,4)" fg:x="568" fg:w="6"/><text x="10.2482%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (6 samples, 0.11%)</title><rect x="9.9982%" y="1525" width="0.1056%" height="15" fill="rgb(235,30,7)" fg:x="568" fg:w="6"/><text x="10.2482%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.04%)</title><rect x="10.0686%" y="1509" width="0.0352%" height="15" fill="rgb(250,79,13)" fg:x="572" fg:w="2"/><text x="10.3186%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="10.0863%" y="1493" width="0.0176%" height="15" fill="rgb(211,146,34)" fg:x="573" fg:w="1"/><text x="10.3363%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="10.0863%" y="1477" width="0.0176%" height="15" fill="rgb(228,22,38)" fg:x="573" fg:w="1"/><text x="10.3363%" y="1487.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="10.0863%" y="1461" width="0.0176%" height="15" fill="rgb(235,168,5)" fg:x="573" fg:w="1"/><text x="10.3363%" y="1471.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="10.0863%" y="1445" width="0.0176%" height="15" fill="rgb(221,155,16)" fg:x="573" fg:w="1"/><text x="10.3363%" y="1455.50"></text></g><g><title>[unknown] (340 samples, 5.98%)</title><rect x="4.1542%" y="1557" width="5.9849%" height="15" fill="rgb(215,215,53)" fg:x="236" fg:w="340"/><text x="4.4042%" y="1567.50">[unknown]</text></g><g><title>unidecode::unidecode (2 samples, 0.04%)</title><rect x="10.1039%" y="1541" width="0.0352%" height="15" fill="rgb(223,4,10)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.04%)</title><rect x="10.1039%" y="1525" width="0.0352%" height="15" fill="rgb(234,103,6)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="10.1039%" y="1509" width="0.0352%" height="15" fill="rgb(227,97,0)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (2 samples, 0.04%)</title><rect x="10.1039%" y="1493" width="0.0352%" height="15" fill="rgb(234,150,53)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.04%)</title><rect x="10.1039%" y="1477" width="0.0352%" height="15" fill="rgb(228,201,54)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="10.1039%" y="1461" width="0.0352%" height="15" fill="rgb(222,22,37)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.04%)</title><rect x="10.1039%" y="1445" width="0.0352%" height="15" fill="rgb(237,53,32)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1455.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.04%)</title><rect x="10.1039%" y="1429" width="0.0352%" height="15" fill="rgb(233,25,53)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.04%)</title><rect x="10.1039%" y="1413" width="0.0352%" height="15" fill="rgb(210,40,34)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (2 samples, 0.04%)</title><rect x="10.1039%" y="1397" width="0.0352%" height="15" fill="rgb(241,220,44)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1407.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.04%)</title><rect x="10.1039%" y="1381" width="0.0352%" height="15" fill="rgb(235,28,35)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="10.1039%" y="1365" width="0.0352%" height="15" fill="rgb(210,56,17)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="10.1039%" y="1349" width="0.0352%" height="15" fill="rgb(224,130,29)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="10.1039%" y="1333" width="0.0352%" height="15" fill="rgb(235,212,8)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1343.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="10.1039%" y="1317" width="0.0352%" height="15" fill="rgb(223,33,50)" fg:x="574" fg:w="2"/><text x="10.3539%" y="1327.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="10.1391%" y="1557" width="0.0176%" height="15" fill="rgb(219,149,13)" fg:x="576" fg:w="1"/><text x="10.3891%" y="1567.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="10.1567%" y="1557" width="0.0880%" height="15" fill="rgb(250,156,29)" fg:x="577" fg:w="5"/><text x="10.4067%" y="1567.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="10.2447%" y="1269" width="0.0352%" height="15" fill="rgb(216,193,19)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1279.50"></text></g><g><title>__GI___munmap (2 samples, 0.04%)</title><rect x="10.2447%" y="1253" width="0.0352%" height="15" fill="rgb(216,135,14)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1237" width="0.0352%" height="15" fill="rgb(241,47,5)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1221" width="0.0352%" height="15" fill="rgb(233,42,35)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1205" width="0.0352%" height="15" fill="rgb(231,13,6)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1189" width="0.0352%" height="15" fill="rgb(207,181,40)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1173" width="0.0352%" height="15" fill="rgb(254,173,49)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1183.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1157" width="0.0352%" height="15" fill="rgb(221,1,38)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1141" width="0.0352%" height="15" fill="rgb(206,124,46)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1125" width="0.0352%" height="15" fill="rgb(249,21,11)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1109" width="0.0352%" height="15" fill="rgb(222,201,40)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1093" width="0.0352%" height="15" fill="rgb(235,61,29)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1077" width="0.0352%" height="15" fill="rgb(219,207,3)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="10.2447%" y="1061" width="0.0352%" height="15" fill="rgb(222,56,46)" fg:x="582" fg:w="2"/><text x="10.4947%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (114 samples, 2.01%)</title><rect x="10.2799%" y="1173" width="2.0067%" height="15" fill="rgb(239,76,54)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1183.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (114 samples, 2.01%)</title><rect x="10.2799%" y="1157" width="2.0067%" height="15" fill="rgb(231,124,27)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1167.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (114 samples, 2.01%)</title><rect x="10.2799%" y="1141" width="2.0067%" height="15" fill="rgb(249,195,6)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1151.50">&lt;..</text></g><g><title>alloc::string::String::push_str (114 samples, 2.01%)</title><rect x="10.2799%" y="1125" width="2.0067%" height="15" fill="rgb(237,174,47)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1135.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (114 samples, 2.01%)</title><rect x="10.2799%" y="1109" width="2.0067%" height="15" fill="rgb(206,201,31)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1119.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (114 samples, 2.01%)</title><rect x="10.2799%" y="1093" width="2.0067%" height="15" fill="rgb(231,57,52)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1103.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (114 samples, 2.01%)</title><rect x="10.2799%" y="1077" width="2.0067%" height="15" fill="rgb(248,177,22)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1087.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (114 samples, 2.01%)</title><rect x="10.2799%" y="1061" width="2.0067%" height="15" fill="rgb(215,211,37)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1071.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (114 samples, 2.01%)</title><rect x="10.2799%" y="1045" width="2.0067%" height="15" fill="rgb(241,128,51)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1055.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (114 samples, 2.01%)</title><rect x="10.2799%" y="1029" width="2.0067%" height="15" fill="rgb(227,165,31)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1039.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (114 samples, 2.01%)</title><rect x="10.2799%" y="1013" width="2.0067%" height="15" fill="rgb(228,167,24)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1023.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (114 samples, 2.01%)</title><rect x="10.2799%" y="997" width="2.0067%" height="15" fill="rgb(228,143,12)" fg:x="584" fg:w="114"/><text x="10.5299%" y="1007.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (114 samples, 2.01%)</title><rect x="10.2799%" y="981" width="2.0067%" height="15" fill="rgb(249,149,8)" fg:x="584" fg:w="114"/><text x="10.5299%" y="991.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (114 samples, 2.01%)</title><rect x="10.2799%" y="965" width="2.0067%" height="15" fill="rgb(243,35,44)" fg:x="584" fg:w="114"/><text x="10.5299%" y="975.50">a..</text></g><g><title>alloc::alloc::realloc (114 samples, 2.01%)</title><rect x="10.2799%" y="949" width="2.0067%" height="15" fill="rgb(246,89,9)" fg:x="584" fg:w="114"/><text x="10.5299%" y="959.50">a..</text></g><g><title>__GI___libc_realloc (114 samples, 2.01%)</title><rect x="10.2799%" y="933" width="2.0067%" height="15" fill="rgb(233,213,13)" fg:x="584" fg:w="114"/><text x="10.5299%" y="943.50">_..</text></g><g><title>_int_realloc (114 samples, 2.01%)</title><rect x="10.2799%" y="917" width="2.0067%" height="15" fill="rgb(233,141,41)" fg:x="584" fg:w="114"/><text x="10.5299%" y="927.50">_..</text></g><g><title>_int_malloc (114 samples, 2.01%)</title><rect x="10.2799%" y="901" width="2.0067%" height="15" fill="rgb(239,167,4)" fg:x="584" fg:w="114"/><text x="10.5299%" y="911.50">_..</text></g><g><title>malloc_consolidate (114 samples, 2.01%)</title><rect x="10.2799%" y="885" width="2.0067%" height="15" fill="rgb(209,217,16)" fg:x="584" fg:w="114"/><text x="10.5299%" y="895.50">m..</text></g><g><title>unlink_chunk (30 samples, 0.53%)</title><rect x="11.7585%" y="869" width="0.5281%" height="15" fill="rgb(219,88,35)" fg:x="668" fg:w="30"/><text x="12.0085%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (116 samples, 2.04%)</title><rect x="10.2799%" y="1269" width="2.0419%" height="15" fill="rgb(220,193,23)" fg:x="584" fg:w="116"/><text x="10.5299%" y="1279.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (116 samples, 2.04%)</title><rect x="10.2799%" y="1253" width="2.0419%" height="15" fill="rgb(230,90,52)" fg:x="584" fg:w="116"/><text x="10.5299%" y="1263.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (116 samples, 2.04%)</title><rect x="10.2799%" y="1237" width="2.0419%" height="15" fill="rgb(252,106,19)" fg:x="584" fg:w="116"/><text x="10.5299%" y="1247.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (116 samples, 2.04%)</title><rect x="10.2799%" y="1221" width="2.0419%" height="15" fill="rgb(206,74,20)" fg:x="584" fg:w="116"/><text x="10.5299%" y="1231.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (116 samples, 2.04%)</title><rect x="10.2799%" y="1205" width="2.0419%" height="15" fill="rgb(230,138,44)" fg:x="584" fg:w="116"/><text x="10.5299%" y="1215.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (116 samples, 2.04%)</title><rect x="10.2799%" y="1189" width="2.0419%" height="15" fill="rgb(235,182,43)" fg:x="584" fg:w="116"/><text x="10.5299%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="12.2866%" y="1173" width="0.0352%" height="15" fill="rgb(242,16,51)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="12.2866%" y="1157" width="0.0352%" height="15" fill="rgb(248,9,4)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.04%)</title><rect x="12.2866%" y="1141" width="0.0352%" height="15" fill="rgb(210,31,22)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="12.2866%" y="1125" width="0.0352%" height="15" fill="rgb(239,54,39)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="12.2866%" y="1109" width="0.0352%" height="15" fill="rgb(230,99,41)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="12.2866%" y="1093" width="0.0352%" height="15" fill="rgb(253,106,12)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="12.2866%" y="1077" width="0.0352%" height="15" fill="rgb(213,46,41)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="12.2866%" y="1061" width="0.0352%" height="15" fill="rgb(215,133,35)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1071.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="12.2866%" y="1045" width="0.0352%" height="15" fill="rgb(213,28,5)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1055.50"></text></g><g><title>__GI___munmap (2 samples, 0.04%)</title><rect x="12.2866%" y="1029" width="0.0352%" height="15" fill="rgb(215,77,49)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="1013" width="0.0352%" height="15" fill="rgb(248,100,22)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="997" width="0.0352%" height="15" fill="rgb(208,67,9)" fg:x="698" fg:w="2"/><text x="12.5366%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="981" width="0.0352%" height="15" fill="rgb(219,133,21)" fg:x="698" fg:w="2"/><text x="12.5366%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="965" width="0.0352%" height="15" fill="rgb(246,46,29)" fg:x="698" fg:w="2"/><text x="12.5366%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="949" width="0.0352%" height="15" fill="rgb(246,185,52)" fg:x="698" fg:w="2"/><text x="12.5366%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="933" width="0.0352%" height="15" fill="rgb(252,136,11)" fg:x="698" fg:w="2"/><text x="12.5366%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="917" width="0.0352%" height="15" fill="rgb(219,138,53)" fg:x="698" fg:w="2"/><text x="12.5366%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="901" width="0.0352%" height="15" fill="rgb(211,51,23)" fg:x="698" fg:w="2"/><text x="12.5366%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="885" width="0.0352%" height="15" fill="rgb(247,221,28)" fg:x="698" fg:w="2"/><text x="12.5366%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="869" width="0.0352%" height="15" fill="rgb(251,222,45)" fg:x="698" fg:w="2"/><text x="12.5366%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="853" width="0.0352%" height="15" fill="rgb(217,162,53)" fg:x="698" fg:w="2"/><text x="12.5366%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="12.2866%" y="837" width="0.0352%" height="15" fill="rgb(229,93,14)" fg:x="698" fg:w="2"/><text x="12.5366%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.3042%" y="821" width="0.0176%" height="15" fill="rgb(209,67,49)" fg:x="699" fg:w="1"/><text x="12.5542%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.05%)</title><rect x="12.3570%" y="1189" width="0.0528%" height="15" fill="rgb(213,87,29)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.05%)</title><rect x="12.3570%" y="1173" width="0.0528%" height="15" fill="rgb(205,151,52)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.05%)</title><rect x="12.3570%" y="1157" width="0.0528%" height="15" fill="rgb(253,215,39)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="12.3570%" y="1141" width="0.0528%" height="15" fill="rgb(221,220,41)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="12.3570%" y="1125" width="0.0528%" height="15" fill="rgb(218,133,21)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="12.3570%" y="1109" width="0.0528%" height="15" fill="rgb(221,193,43)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1119.50"></text></g><g><title>__GI___libc_free (3 samples, 0.05%)</title><rect x="12.3570%" y="1093" width="0.0528%" height="15" fill="rgb(240,128,52)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1103.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="12.3570%" y="1077" width="0.0528%" height="15" fill="rgb(253,114,12)" fg:x="702" fg:w="3"/><text x="12.6070%" y="1087.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="12.4098%" y="1045" width="0.0352%" height="15" fill="rgb(215,223,47)" fg:x="705" fg:w="2"/><text x="12.6598%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::Paranagram&gt; (9 samples, 0.16%)</title><rect x="12.3218%" y="1269" width="0.1584%" height="15" fill="rgb(248,225,23)" fg:x="700" fg:w="9"/><text x="12.5718%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;paranagram::word::Word&gt;&gt; (9 samples, 0.16%)</title><rect x="12.3218%" y="1253" width="0.1584%" height="15" fill="rgb(250,108,0)" fg:x="700" fg:w="9"/><text x="12.5718%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.16%)</title><rect x="12.3218%" y="1237" width="0.1584%" height="15" fill="rgb(228,208,7)" fg:x="700" fg:w="9"/><text x="12.5718%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[paranagram::word::Word]&gt; (9 samples, 0.16%)</title><rect x="12.3218%" y="1221" width="0.1584%" height="15" fill="rgb(244,45,10)" fg:x="700" fg:w="9"/><text x="12.5718%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::word::Word&gt; (9 samples, 0.16%)</title><rect x="12.3218%" y="1205" width="0.1584%" height="15" fill="rgb(207,125,25)" fg:x="700" fg:w="9"/><text x="12.5718%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (4 samples, 0.07%)</title><rect x="12.4098%" y="1189" width="0.0704%" height="15" fill="rgb(210,195,18)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.07%)</title><rect x="12.4098%" y="1173" width="0.0704%" height="15" fill="rgb(249,80,12)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (4 samples, 0.07%)</title><rect x="12.4098%" y="1157" width="0.0704%" height="15" fill="rgb(221,65,9)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="12.4098%" y="1141" width="0.0704%" height="15" fill="rgb(235,49,36)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 0.07%)</title><rect x="12.4098%" y="1125" width="0.0704%" height="15" fill="rgb(225,32,20)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.07%)</title><rect x="12.4098%" y="1109" width="0.0704%" height="15" fill="rgb(215,141,46)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="12.4098%" y="1093" width="0.0704%" height="15" fill="rgb(250,160,47)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="12.4098%" y="1077" width="0.0704%" height="15" fill="rgb(216,222,40)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1087.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="12.4098%" y="1061" width="0.0704%" height="15" fill="rgb(234,217,39)" fg:x="705" fg:w="4"/><text x="12.6598%" y="1071.50"></text></g><g><title>arena_for_chunk (2 samples, 0.04%)</title><rect x="12.4450%" y="1045" width="0.0352%" height="15" fill="rgb(207,178,40)" fg:x="707" fg:w="2"/><text x="12.6950%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.02%)</title><rect x="12.4802%" y="1269" width="0.0176%" height="15" fill="rgb(221,136,13)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.02%)</title><rect x="12.4802%" y="1253" width="0.0176%" height="15" fill="rgb(249,199,10)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.02%)</title><rect x="12.4802%" y="1237" width="0.0176%" height="15" fill="rgb(249,222,13)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.02%)</title><rect x="12.4802%" y="1221" width="0.0176%" height="15" fill="rgb(244,185,38)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1231.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.4802%" y="1205" width="0.0176%" height="15" fill="rgb(236,202,9)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1215.50"></text></g><g><title>__GI___close (1 samples, 0.02%)</title><rect x="12.4802%" y="1189" width="0.0176%" height="15" fill="rgb(250,229,37)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1173" width="0.0176%" height="15" fill="rgb(206,174,23)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1157" width="0.0176%" height="15" fill="rgb(211,33,43)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1141" width="0.0176%" height="15" fill="rgb(245,58,50)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1125" width="0.0176%" height="15" fill="rgb(244,68,36)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1109" width="0.0176%" height="15" fill="rgb(232,229,15)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1093" width="0.0176%" height="15" fill="rgb(254,30,23)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1077" width="0.0176%" height="15" fill="rgb(235,160,14)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1061" width="0.0176%" height="15" fill="rgb(212,155,44)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1045" width="0.0176%" height="15" fill="rgb(226,2,50)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1029" width="0.0176%" height="15" fill="rgb(234,177,6)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="1013" width="0.0176%" height="15" fill="rgb(217,24,9)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="997" width="0.0176%" height="15" fill="rgb(220,13,46)" fg:x="709" fg:w="1"/><text x="12.7302%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="981" width="0.0176%" height="15" fill="rgb(239,221,27)" fg:x="709" fg:w="1"/><text x="12.7302%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="965" width="0.0176%" height="15" fill="rgb(222,198,25)" fg:x="709" fg:w="1"/><text x="12.7302%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="949" width="0.0176%" height="15" fill="rgb(211,99,13)" fg:x="709" fg:w="1"/><text x="12.7302%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="933" width="0.0176%" height="15" fill="rgb(232,111,31)" fg:x="709" fg:w="1"/><text x="12.7302%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="917" width="0.0176%" height="15" fill="rgb(245,82,37)" fg:x="709" fg:w="1"/><text x="12.7302%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="901" width="0.0176%" height="15" fill="rgb(227,149,46)" fg:x="709" fg:w="1"/><text x="12.7302%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="885" width="0.0176%" height="15" fill="rgb(218,36,50)" fg:x="709" fg:w="1"/><text x="12.7302%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="869" width="0.0176%" height="15" fill="rgb(226,80,48)" fg:x="709" fg:w="1"/><text x="12.7302%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.4802%" y="853" width="0.0176%" height="15" fill="rgb(238,224,15)" fg:x="709" fg:w="1"/><text x="12.7302%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="12.5330%" y="1141" width="0.0352%" height="15" fill="rgb(241,136,10)" fg:x="712" fg:w="2"/><text x="12.7830%" y="1151.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="12.5506%" y="1125" width="0.0176%" height="15" fill="rgb(208,32,45)" fg:x="713" fg:w="1"/><text x="12.8006%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="12.6562%" y="1109" width="0.0176%" height="15" fill="rgb(207,135,9)" fg:x="719" fg:w="1"/><text x="12.9062%" y="1119.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="12.7266%" y="1077" width="0.0176%" height="15" fill="rgb(206,86,44)" fg:x="723" fg:w="1"/><text x="12.9766%" y="1087.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="12.7442%" y="1077" width="0.0176%" height="15" fill="rgb(245,177,15)" fg:x="724" fg:w="1"/><text x="12.9942%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="12.7442%" y="1061" width="0.0176%" height="15" fill="rgb(206,64,50)" fg:x="724" fg:w="1"/><text x="12.9942%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.21%)</title><rect x="13.2547%" y="1061" width="0.2112%" height="15" fill="rgb(234,36,40)" fg:x="753" fg:w="12"/><text x="13.5047%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.16%)</title><rect x="13.7652%" y="981" width="0.1584%" height="15" fill="rgb(213,64,8)" fg:x="782" fg:w="9"/><text x="14.0152%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.09%)</title><rect x="13.8356%" y="965" width="0.0880%" height="15" fill="rgb(210,75,36)" fg:x="786" fg:w="5"/><text x="14.0856%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.63%)</title><rect x="13.5540%" y="1045" width="0.6337%" height="15" fill="rgb(229,88,21)" fg:x="770" fg:w="36"/><text x="13.8040%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.63%)</title><rect x="13.5540%" y="1029" width="0.6337%" height="15" fill="rgb(252,204,47)" fg:x="770" fg:w="36"/><text x="13.8040%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.63%)</title><rect x="13.5540%" y="1013" width="0.6337%" height="15" fill="rgb(208,77,27)" fg:x="770" fg:w="36"/><text x="13.8040%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (24 samples, 0.42%)</title><rect x="13.7652%" y="997" width="0.4225%" height="15" fill="rgb(221,76,26)" fg:x="782" fg:w="24"/><text x="14.0152%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (15 samples, 0.26%)</title><rect x="13.9236%" y="981" width="0.2640%" height="15" fill="rgb(225,139,18)" fg:x="791" fg:w="15"/><text x="14.1736%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.26%)</title><rect x="13.9236%" y="965" width="0.2640%" height="15" fill="rgb(230,137,11)" fg:x="791" fg:w="15"/><text x="14.1736%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.26%)</title><rect x="13.9236%" y="949" width="0.2640%" height="15" fill="rgb(212,28,1)" fg:x="791" fg:w="15"/><text x="14.1736%" y="959.50"></text></g><g><title>&lt;u16 as core::ops::arith::AddAssign&lt;&amp;u16&gt;&gt;::add_assign (24 samples, 0.42%)</title><rect x="14.1876%" y="1045" width="0.4225%" height="15" fill="rgb(248,164,17)" fg:x="806" fg:w="24"/><text x="14.4376%" y="1055.50"></text></g><g><title>&lt;u16 as core::ops::arith::AddAssign&gt;::add_assign (24 samples, 0.42%)</title><rect x="14.1876%" y="1029" width="0.4225%" height="15" fill="rgb(222,171,42)" fg:x="806" fg:w="24"/><text x="14.4376%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.09%)</title><rect x="14.6101%" y="1013" width="0.0880%" height="15" fill="rgb(243,84,45)" fg:x="830" fg:w="5"/><text x="14.8601%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.04%)</title><rect x="14.7685%" y="981" width="0.0352%" height="15" fill="rgb(252,49,23)" fg:x="839" fg:w="2"/><text x="15.0185%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.04%)</title><rect x="14.7685%" y="965" width="0.0352%" height="15" fill="rgb(215,19,7)" fg:x="839" fg:w="2"/><text x="15.0185%" y="975.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="14.7685%" y="949" width="0.0352%" height="15" fill="rgb(238,81,41)" fg:x="839" fg:w="2"/><text x="15.0185%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (4 samples, 0.07%)</title><rect x="14.8037%" y="981" width="0.0704%" height="15" fill="rgb(210,199,37)" fg:x="841" fg:w="4"/><text x="15.0537%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.07%)</title><rect x="14.8037%" y="965" width="0.0704%" height="15" fill="rgb(244,192,49)" fg:x="841" fg:w="4"/><text x="15.0537%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.07%)</title><rect x="14.8037%" y="949" width="0.0704%" height="15" fill="rgb(226,211,11)" fg:x="841" fg:w="4"/><text x="15.0537%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.07%)</title><rect x="14.8037%" y="933" width="0.0704%" height="15" fill="rgb(236,162,54)" fg:x="841" fg:w="4"/><text x="15.0537%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.11%)</title><rect x="14.9446%" y="933" width="0.1056%" height="15" fill="rgb(220,229,9)" fg:x="849" fg:w="6"/><text x="15.1946%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (14 samples, 0.25%)</title><rect x="14.8917%" y="949" width="0.2464%" height="15" fill="rgb(250,87,22)" fg:x="846" fg:w="14"/><text x="15.1417%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.09%)</title><rect x="15.0502%" y="933" width="0.0880%" height="15" fill="rgb(239,43,17)" fg:x="855" fg:w="5"/><text x="15.3002%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.09%)</title><rect x="15.0502%" y="917" width="0.0880%" height="15" fill="rgb(231,177,25)" fg:x="855" fg:w="5"/><text x="15.3002%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (18 samples, 0.32%)</title><rect x="15.1910%" y="933" width="0.3168%" height="15" fill="rgb(219,179,1)" fg:x="863" fg:w="18"/><text x="15.4410%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="15.5078%" y="933" width="0.0176%" height="15" fill="rgb(238,219,53)" fg:x="881" fg:w="1"/><text x="15.7578%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (24 samples, 0.42%)</title><rect x="15.1382%" y="949" width="0.4225%" height="15" fill="rgb(232,167,36)" fg:x="860" fg:w="24"/><text x="15.3882%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.04%)</title><rect x="15.5254%" y="933" width="0.0352%" height="15" fill="rgb(244,19,51)" fg:x="882" fg:w="2"/><text x="15.7754%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.04%)</title><rect x="15.5254%" y="917" width="0.0352%" height="15" fill="rgb(224,6,22)" fg:x="882" fg:w="2"/><text x="15.7754%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (10 samples, 0.18%)</title><rect x="15.5606%" y="949" width="0.1760%" height="15" fill="rgb(224,145,5)" fg:x="884" fg:w="10"/><text x="15.8106%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (53 samples, 0.93%)</title><rect x="14.8917%" y="965" width="0.9329%" height="15" fill="rgb(234,130,49)" fg:x="846" fg:w="53"/><text x="15.1417%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.09%)</title><rect x="15.7367%" y="949" width="0.0880%" height="15" fill="rgb(254,6,2)" fg:x="894" fg:w="5"/><text x="15.9867%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.09%)</title><rect x="15.7367%" y="933" width="0.0880%" height="15" fill="rgb(208,96,46)" fg:x="894" fg:w="5"/><text x="15.9867%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.09%)</title><rect x="15.7367%" y="917" width="0.0880%" height="15" fill="rgb(239,3,39)" fg:x="894" fg:w="5"/><text x="15.9867%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (59 samples, 1.04%)</title><rect x="14.8741%" y="981" width="1.0385%" height="15" fill="rgb(233,210,1)" fg:x="845" fg:w="59"/><text x="15.1241%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.09%)</title><rect x="15.8247%" y="965" width="0.0880%" height="15" fill="rgb(244,137,37)" fg:x="899" fg:w="5"/><text x="16.0747%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.09%)</title><rect x="15.8247%" y="949" width="0.0880%" height="15" fill="rgb(240,136,2)" fg:x="899" fg:w="5"/><text x="16.0747%" y="959.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (77 samples, 1.36%)</title><rect x="14.6101%" y="1045" width="1.3554%" height="15" fill="rgb(239,18,37)" fg:x="830" fg:w="77"/><text x="14.8601%" y="1055.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (77 samples, 1.36%)</title><rect x="14.6101%" y="1029" width="1.3554%" height="15" fill="rgb(218,185,22)" fg:x="830" fg:w="77"/><text x="14.8601%" y="1039.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (72 samples, 1.27%)</title><rect x="14.6981%" y="1013" width="1.2674%" height="15" fill="rgb(225,218,4)" fg:x="835" fg:w="72"/><text x="14.9481%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (72 samples, 1.27%)</title><rect x="14.6981%" y="997" width="1.2674%" height="15" fill="rgb(230,182,32)" fg:x="835" fg:w="72"/><text x="14.9481%" y="1007.50"></text></g><g><title>hashbrown::raw::special_is_empty (3 samples, 0.05%)</title><rect x="15.9127%" y="981" width="0.0528%" height="15" fill="rgb(242,56,43)" fg:x="904" fg:w="3"/><text x="16.1627%" y="991.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="16.1415%" y="949" width="0.0176%" height="15" fill="rgb(233,99,24)" fg:x="917" fg:w="1"/><text x="16.3915%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="16.1415%" y="933" width="0.0176%" height="15" fill="rgb(234,209,42)" fg:x="917" fg:w="1"/><text x="16.3915%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.12%)</title><rect x="16.1591%" y="949" width="0.1232%" height="15" fill="rgb(227,7,12)" fg:x="918" fg:w="7"/><text x="16.4091%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.09%)</title><rect x="16.3352%" y="933" width="0.0880%" height="15" fill="rgb(245,203,43)" fg:x="928" fg:w="5"/><text x="16.5852%" y="943.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.09%)</title><rect x="16.4232%" y="933" width="0.0880%" height="15" fill="rgb(238,205,33)" fg:x="933" fg:w="5"/><text x="16.6732%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.09%)</title><rect x="16.4232%" y="917" width="0.0880%" height="15" fill="rgb(231,56,7)" fg:x="933" fg:w="5"/><text x="16.6732%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.09%)</title><rect x="16.4232%" y="901" width="0.0880%" height="15" fill="rgb(244,186,29)" fg:x="933" fg:w="5"/><text x="16.6732%" y="911.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="16.5112%" y="933" width="0.0176%" height="15" fill="rgb(234,111,31)" fg:x="938" fg:w="1"/><text x="16.7612%" y="943.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.02%)</title><rect x="16.5112%" y="917" width="0.0176%" height="15" fill="rgb(241,149,10)" fg:x="938" fg:w="1"/><text x="16.7612%" y="927.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="16.5112%" y="901" width="0.0176%" height="15" fill="rgb(249,206,44)" fg:x="938" fg:w="1"/><text x="16.7612%" y="911.50"></text></g><g><title>__GI___libc_free (8 samples, 0.14%)</title><rect x="16.5816%" y="837" width="0.1408%" height="15" fill="rgb(251,153,30)" fg:x="942" fg:w="8"/><text x="16.8316%" y="847.50"></text></g><g><title>_int_free (7 samples, 0.12%)</title><rect x="16.5992%" y="821" width="0.1232%" height="15" fill="rgb(239,152,38)" fg:x="943" fg:w="7"/><text x="16.8492%" y="831.50"></text></g><g><title>tcache_put (2 samples, 0.04%)</title><rect x="16.6872%" y="805" width="0.0352%" height="15" fill="rgb(249,139,47)" fg:x="948" fg:w="2"/><text x="16.9372%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.16%)</title><rect x="16.5816%" y="853" width="0.1584%" height="15" fill="rgb(244,64,35)" fg:x="942" fg:w="9"/><text x="16.8316%" y="863.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="16.7224%" y="837" width="0.0176%" height="15" fill="rgb(216,46,15)" fg:x="950" fg:w="1"/><text x="16.9724%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="16.7224%" y="821" width="0.0176%" height="15" fill="rgb(250,74,19)" fg:x="950" fg:w="1"/><text x="16.9724%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (13 samples, 0.23%)</title><rect x="16.5288%" y="933" width="0.2288%" height="15" fill="rgb(249,42,33)" fg:x="939" fg:w="13"/><text x="16.7788%" y="943.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.23%)</title><rect x="16.5288%" y="917" width="0.2288%" height="15" fill="rgb(242,149,17)" fg:x="939" fg:w="13"/><text x="16.7788%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (13 samples, 0.23%)</title><rect x="16.5288%" y="901" width="0.2288%" height="15" fill="rgb(244,29,21)" fg:x="939" fg:w="13"/><text x="16.7788%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (11 samples, 0.19%)</title><rect x="16.5640%" y="885" width="0.1936%" height="15" fill="rgb(220,130,37)" fg:x="941" fg:w="11"/><text x="16.8140%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.19%)</title><rect x="16.5640%" y="869" width="0.1936%" height="15" fill="rgb(211,67,2)" fg:x="941" fg:w="11"/><text x="16.8140%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="16.7400%" y="853" width="0.0176%" height="15" fill="rgb(235,68,52)" fg:x="951" fg:w="1"/><text x="16.9900%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.04%)</title><rect x="16.7576%" y="933" width="0.0352%" height="15" fill="rgb(246,142,3)" fg:x="952" fg:w="2"/><text x="17.0076%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.05%)</title><rect x="16.9336%" y="821" width="0.0528%" height="15" fill="rgb(241,25,7)" fg:x="962" fg:w="3"/><text x="17.1836%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.16%)</title><rect x="17.1097%" y="805" width="0.1584%" height="15" fill="rgb(242,119,39)" fg:x="972" fg:w="9"/><text x="17.3597%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.67%)</title><rect x="16.7928%" y="869" width="0.6689%" height="15" fill="rgb(241,98,45)" fg:x="954" fg:w="38"/><text x="17.0428%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (38 samples, 0.67%)</title><rect x="16.7928%" y="853" width="0.6689%" height="15" fill="rgb(254,28,30)" fg:x="954" fg:w="38"/><text x="17.0428%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (38 samples, 0.67%)</title><rect x="16.7928%" y="837" width="0.6689%" height="15" fill="rgb(241,142,54)" fg:x="954" fg:w="38"/><text x="17.0428%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.48%)</title><rect x="16.9864%" y="821" width="0.4753%" height="15" fill="rgb(222,85,15)" fg:x="965" fg:w="27"/><text x="17.2364%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.19%)</title><rect x="17.2681%" y="805" width="0.1936%" height="15" fill="rgb(210,85,47)" fg:x="981" fg:w="11"/><text x="17.5181%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (41 samples, 0.72%)</title><rect x="16.7928%" y="933" width="0.7217%" height="15" fill="rgb(224,206,25)" fg:x="954" fg:w="41"/><text x="17.0428%" y="943.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (41 samples, 0.72%)</title><rect x="16.7928%" y="917" width="0.7217%" height="15" fill="rgb(243,201,19)" fg:x="954" fg:w="41"/><text x="17.0428%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.72%)</title><rect x="16.7928%" y="901" width="0.7217%" height="15" fill="rgb(236,59,4)" fg:x="954" fg:w="41"/><text x="17.0428%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41 samples, 0.72%)</title><rect x="16.7928%" y="885" width="0.7217%" height="15" fill="rgb(254,179,45)" fg:x="954" fg:w="41"/><text x="17.0428%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.05%)</title><rect x="17.4617%" y="869" width="0.0528%" height="15" fill="rgb(226,14,10)" fg:x="992" fg:w="3"/><text x="17.7117%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.16%)</title><rect x="17.6025%" y="885" width="0.1584%" height="15" fill="rgb(244,27,41)" fg:x="1000" fg:w="9"/><text x="17.8525%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.07%)</title><rect x="17.6905%" y="869" width="0.0704%" height="15" fill="rgb(235,35,32)" fg:x="1005" fg:w="4"/><text x="17.9405%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (17 samples, 0.30%)</title><rect x="17.5145%" y="901" width="0.2992%" height="15" fill="rgb(218,68,31)" fg:x="995" fg:w="17"/><text x="17.7645%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.05%)</title><rect x="17.7610%" y="885" width="0.0528%" height="15" fill="rgb(207,120,37)" fg:x="1009" fg:w="3"/><text x="18.0110%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.05%)</title><rect x="17.7610%" y="869" width="0.0528%" height="15" fill="rgb(227,98,0)" fg:x="1009" fg:w="3"/><text x="18.0110%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (27 samples, 0.48%)</title><rect x="17.8138%" y="901" width="0.4753%" height="15" fill="rgb(207,7,3)" fg:x="1012" fg:w="27"/><text x="18.0638%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (21 samples, 0.37%)</title><rect x="17.9194%" y="885" width="0.3697%" height="15" fill="rgb(206,98,19)" fg:x="1018" fg:w="21"/><text x="18.1694%" y="895.50"></text></g><g><title>hashbrown::raw::is_full (21 samples, 0.37%)</title><rect x="17.9194%" y="869" width="0.3697%" height="15" fill="rgb(217,5,26)" fg:x="1018" fg:w="21"/><text x="18.1694%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.05%)</title><rect x="18.2890%" y="901" width="0.0528%" height="15" fill="rgb(235,190,38)" fg:x="1039" fg:w="3"/><text x="18.5390%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (50 samples, 0.88%)</title><rect x="17.5145%" y="917" width="0.8801%" height="15" fill="rgb(247,86,24)" fg:x="995" fg:w="50"/><text x="17.7645%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.05%)</title><rect x="18.3418%" y="901" width="0.0528%" height="15" fill="rgb(205,101,16)" fg:x="1042" fg:w="3"/><text x="18.5918%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.05%)</title><rect x="18.3418%" y="885" width="0.0528%" height="15" fill="rgb(246,168,33)" fg:x="1042" fg:w="3"/><text x="18.5918%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="18.3418%" y="869" width="0.0528%" height="15" fill="rgb(231,114,1)" fg:x="1042" fg:w="3"/><text x="18.5918%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (54 samples, 0.95%)</title><rect x="17.5145%" y="933" width="0.9505%" height="15" fill="rgb(207,184,53)" fg:x="995" fg:w="54"/><text x="17.7645%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (4 samples, 0.07%)</title><rect x="18.3946%" y="917" width="0.0704%" height="15" fill="rgb(224,95,51)" fg:x="1045" fg:w="4"/><text x="18.6446%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (4 samples, 0.07%)</title><rect x="18.3946%" y="901" width="0.0704%" height="15" fill="rgb(212,188,45)" fg:x="1045" fg:w="4"/><text x="18.6446%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (4 samples, 0.07%)</title><rect x="18.4651%" y="901" width="0.0704%" height="15" fill="rgb(223,154,38)" fg:x="1049" fg:w="4"/><text x="18.7151%" y="911.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.07%)</title><rect x="18.4651%" y="885" width="0.0704%" height="15" fill="rgb(251,22,52)" fg:x="1049" fg:w="4"/><text x="18.7151%" y="895.50"></text></g><g><title>__memset_evex_unaligned_erms (2 samples, 0.04%)</title><rect x="18.5003%" y="869" width="0.0352%" height="15" fill="rgb(229,209,22)" fg:x="1051" fg:w="2"/><text x="18.7503%" y="879.50"></text></g><g><title>checked_request2size (2 samples, 0.04%)</title><rect x="18.7467%" y="805" width="0.0352%" height="15" fill="rgb(234,138,34)" fg:x="1065" fg:w="2"/><text x="18.9967%" y="815.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.16%)</title><rect x="18.6939%" y="821" width="0.1584%" height="15" fill="rgb(212,95,11)" fg:x="1062" fg:w="9"/><text x="18.9439%" y="831.50"></text></g><g><title>tcache_get (4 samples, 0.07%)</title><rect x="18.7819%" y="805" width="0.0704%" height="15" fill="rgb(240,179,47)" fg:x="1067" fg:w="4"/><text x="19.0319%" y="815.50"></text></g><g><title>__rdl_alloc (6 samples, 0.11%)</title><rect x="18.8523%" y="821" width="0.1056%" height="15" fill="rgb(240,163,11)" fg:x="1071" fg:w="6"/><text x="19.1023%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.11%)</title><rect x="18.8523%" y="805" width="0.1056%" height="15" fill="rgb(236,37,12)" fg:x="1071" fg:w="6"/><text x="19.1023%" y="815.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="18.9579%" y="821" width="0.0352%" height="15" fill="rgb(232,164,16)" fg:x="1077" fg:w="2"/><text x="19.2079%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (28 samples, 0.49%)</title><rect x="18.5355%" y="901" width="0.4929%" height="15" fill="rgb(244,205,15)" fg:x="1053" fg:w="28"/><text x="18.7855%" y="911.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (26 samples, 0.46%)</title><rect x="18.5707%" y="885" width="0.4577%" height="15" fill="rgb(223,117,47)" fg:x="1055" fg:w="26"/><text x="18.8207%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.46%)</title><rect x="18.5707%" y="869" width="0.4577%" height="15" fill="rgb(244,107,35)" fg:x="1055" fg:w="26"/><text x="18.8207%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.46%)</title><rect x="18.5707%" y="853" width="0.4577%" height="15" fill="rgb(205,140,8)" fg:x="1055" fg:w="26"/><text x="18.8207%" y="863.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.40%)</title><rect x="18.6235%" y="837" width="0.4049%" height="15" fill="rgb(228,84,46)" fg:x="1058" fg:w="23"/><text x="18.8735%" y="847.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.04%)</title><rect x="18.9931%" y="821" width="0.0352%" height="15" fill="rgb(254,188,9)" fg:x="1079" fg:w="2"/><text x="19.2431%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (158 samples, 2.78%)</title><rect x="16.2823%" y="949" width="2.7812%" height="15" fill="rgb(206,112,54)" fg:x="925" fg:w="158"/><text x="16.5323%" y="959.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (34 samples, 0.60%)</title><rect x="18.4651%" y="933" width="0.5985%" height="15" fill="rgb(216,84,49)" fg:x="1049" fg:w="34"/><text x="18.7151%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (34 samples, 0.60%)</title><rect x="18.4651%" y="917" width="0.5985%" height="15" fill="rgb(214,194,35)" fg:x="1049" fg:w="34"/><text x="18.7151%" y="927.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2 samples, 0.04%)</title><rect x="19.0283%" y="901" width="0.0352%" height="15" fill="rgb(249,28,3)" fg:x="1081" fg:w="2"/><text x="19.2783%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (179 samples, 3.15%)</title><rect x="15.9655%" y="1013" width="3.1509%" height="15" fill="rgb(222,56,52)" fg:x="907" fg:w="179"/><text x="16.2155%" y="1023.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (175 samples, 3.08%)</title><rect x="16.0359%" y="997" width="3.0804%" height="15" fill="rgb(245,217,50)" fg:x="911" fg:w="175"/><text x="16.2859%" y="1007.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (170 samples, 2.99%)</title><rect x="16.1239%" y="981" width="2.9924%" height="15" fill="rgb(213,201,24)" fg:x="916" fg:w="170"/><text x="16.3739%" y="991.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (170 samples, 2.99%)</title><rect x="16.1239%" y="965" width="2.9924%" height="15" fill="rgb(248,116,28)" fg:x="916" fg:w="170"/><text x="16.3739%" y="975.50">has..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (3 samples, 0.05%)</title><rect x="19.0635%" y="949" width="0.0528%" height="15" fill="rgb(219,72,43)" fg:x="1083" fg:w="3"/><text x="19.3135%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.39%)</title><rect x="19.6092%" y="917" width="0.3873%" height="15" fill="rgb(209,138,14)" fg:x="1114" fg:w="22"/><text x="19.8592%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (40 samples, 0.70%)</title><rect x="19.4332%" y="933" width="0.7041%" height="15" fill="rgb(222,18,33)" fg:x="1104" fg:w="40"/><text x="19.6832%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.14%)</title><rect x="19.9965%" y="917" width="0.1408%" height="15" fill="rgb(213,199,7)" fg:x="1136" fg:w="8"/><text x="20.2465%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (50 samples, 0.88%)</title><rect x="20.7182%" y="917" width="0.8801%" height="15" fill="rgb(250,110,10)" fg:x="1177" fg:w="50"/><text x="20.9682%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (154 samples, 2.71%)</title><rect x="19.2044%" y="949" width="2.7108%" height="15" fill="rgb(248,123,6)" fg:x="1091" fg:w="154"/><text x="19.4544%" y="959.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (101 samples, 1.78%)</title><rect x="20.1373%" y="933" width="1.7779%" height="15" fill="rgb(206,91,31)" fg:x="1144" fg:w="101"/><text x="20.3873%" y="943.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (18 samples, 0.32%)</title><rect x="21.5983%" y="917" width="0.3168%" height="15" fill="rgb(211,154,13)" fg:x="1227" fg:w="18"/><text x="21.8483%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (162 samples, 2.85%)</title><rect x="19.2044%" y="981" width="2.8516%" height="15" fill="rgb(225,148,7)" fg:x="1091" fg:w="162"/><text x="19.4544%" y="991.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (162 samples, 2.85%)</title><rect x="19.2044%" y="965" width="2.8516%" height="15" fill="rgb(220,160,43)" fg:x="1091" fg:w="162"/><text x="19.4544%" y="975.50">&lt;c..</text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.14%)</title><rect x="21.9152%" y="949" width="0.1408%" height="15" fill="rgb(213,52,39)" fg:x="1245" fg:w="8"/><text x="22.1652%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (182 samples, 3.20%)</title><rect x="19.1164%" y="1013" width="3.2037%" height="15" fill="rgb(243,137,7)" fg:x="1086" fg:w="182"/><text x="19.3664%" y="1023.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (177 samples, 3.12%)</title><rect x="19.2044%" y="997" width="3.1156%" height="15" fill="rgb(230,79,13)" fg:x="1091" fg:w="177"/><text x="19.4544%" y="1007.50">cor..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.26%)</title><rect x="22.0560%" y="981" width="0.2640%" height="15" fill="rgb(247,105,23)" fg:x="1253" fg:w="15"/><text x="22.3060%" y="991.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.26%)</title><rect x="22.0560%" y="965" width="0.2640%" height="15" fill="rgb(223,179,41)" fg:x="1253" fg:w="15"/><text x="22.3060%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (15 samples, 0.26%)</title><rect x="22.0560%" y="949" width="0.2640%" height="15" fill="rgb(218,9,34)" fg:x="1253" fg:w="15"/><text x="22.3060%" y="959.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (15 samples, 0.26%)</title><rect x="22.0560%" y="933" width="0.2640%" height="15" fill="rgb(222,106,8)" fg:x="1253" fg:w="15"/><text x="22.3060%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.30%)</title><rect x="22.8833%" y="965" width="0.2992%" height="15" fill="rgb(211,220,0)" fg:x="1300" fg:w="17"/><text x="23.1333%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.46%)</title><rect x="22.8305%" y="981" width="0.4577%" height="15" fill="rgb(229,52,16)" fg:x="1297" fg:w="26"/><text x="23.0805%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (6 samples, 0.11%)</title><rect x="23.1825%" y="965" width="0.1056%" height="15" fill="rgb(212,155,18)" fg:x="1317" fg:w="6"/><text x="23.4325%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (37 samples, 0.65%)</title><rect x="23.2882%" y="981" width="0.6513%" height="15" fill="rgb(242,21,14)" fg:x="1323" fg:w="37"/><text x="23.5382%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (24 samples, 0.42%)</title><rect x="23.5170%" y="965" width="0.4225%" height="15" fill="rgb(222,19,48)" fg:x="1336" fg:w="24"/><text x="23.7670%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (24 samples, 0.42%)</title><rect x="23.5170%" y="949" width="0.4225%" height="15" fill="rgb(232,45,27)" fg:x="1336" fg:w="24"/><text x="23.7670%" y="959.50"></text></g><g><title>hashbrown::raw::h2 (30 samples, 0.53%)</title><rect x="23.9394%" y="981" width="0.5281%" height="15" fill="rgb(249,103,42)" fg:x="1360" fg:w="30"/><text x="24.1894%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.11%)</title><rect x="24.4675%" y="981" width="0.1056%" height="15" fill="rgb(246,81,33)" fg:x="1390" fg:w="6"/><text x="24.7175%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.11%)</title><rect x="24.4675%" y="965" width="0.1056%" height="15" fill="rgb(252,33,42)" fg:x="1390" fg:w="6"/><text x="24.7175%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.11%)</title><rect x="24.4675%" y="949" width="0.1056%" height="15" fill="rgb(209,212,41)" fg:x="1390" fg:w="6"/><text x="24.7175%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (19 samples, 0.33%)</title><rect x="24.5731%" y="981" width="0.3344%" height="15" fill="rgb(207,154,6)" fg:x="1396" fg:w="19"/><text x="24.8231%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.33%)</title><rect x="24.5731%" y="965" width="0.3344%" height="15" fill="rgb(223,64,47)" fg:x="1396" fg:w="19"/><text x="24.8231%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (519 samples, 9.14%)</title><rect x="15.9655%" y="1045" width="9.1357%" height="15" fill="rgb(211,161,38)" fg:x="907" fg:w="519"/><text x="16.2155%" y="1055.50">std::collecti..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (519 samples, 9.14%)</title><rect x="15.9655%" y="1029" width="9.1357%" height="15" fill="rgb(219,138,40)" fg:x="907" fg:w="519"/><text x="16.2155%" y="1039.50">hashbrown::ru..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (158 samples, 2.78%)</title><rect x="22.3200%" y="1013" width="2.7812%" height="15" fill="rgb(241,228,46)" fg:x="1268" fg:w="158"/><text x="22.5700%" y="1023.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (152 samples, 2.68%)</title><rect x="22.4256%" y="997" width="2.6756%" height="15" fill="rgb(223,209,38)" fg:x="1274" fg:w="152"/><text x="22.6756%" y="1007.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (11 samples, 0.19%)</title><rect x="24.9076%" y="981" width="0.1936%" height="15" fill="rgb(236,164,45)" fg:x="1415" fg:w="11"/><text x="25.1576%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.19%)</title><rect x="24.9076%" y="965" width="0.1936%" height="15" fill="rgb(231,15,5)" fg:x="1415" fg:w="11"/><text x="25.1576%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.19%)</title><rect x="24.9076%" y="949" width="0.1936%" height="15" fill="rgb(252,35,15)" fg:x="1415" fg:w="11"/><text x="25.1576%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (4 samples, 0.07%)</title><rect x="25.1716%" y="997" width="0.0704%" height="15" fill="rgb(248,181,18)" fg:x="1430" fg:w="4"/><text x="25.4216%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (4 samples, 0.07%)</title><rect x="25.1716%" y="981" width="0.0704%" height="15" fill="rgb(233,39,42)" fg:x="1430" fg:w="4"/><text x="25.4216%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (4 samples, 0.07%)</title><rect x="25.1716%" y="965" width="0.0704%" height="15" fill="rgb(238,110,33)" fg:x="1430" fg:w="4"/><text x="25.4216%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (717 samples, 12.62%)</title><rect x="12.6738%" y="1093" width="12.6210%" height="15" fill="rgb(233,195,10)" fg:x="720" fg:w="717"/><text x="12.9238%" y="1103.50">&lt;core::slice::iter:..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}}::{{closure}} (712 samples, 12.53%)</title><rect x="12.7618%" y="1077" width="12.5330%" height="15" fill="rgb(254,105,3)" fg:x="725" fg:w="712"/><text x="13.0118%" y="1087.50">paranagram::Paranag..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::merge (672 samples, 11.83%)</title><rect x="13.4659%" y="1061" width="11.8289%" height="15" fill="rgb(221,225,9)" fg:x="765" fg:w="672"/><text x="13.7159%" y="1071.50">&lt;std::collections:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (11 samples, 0.19%)</title><rect x="25.1012%" y="1045" width="0.1936%" height="15" fill="rgb(224,227,45)" fg:x="1426" fg:w="11"/><text x="25.3512%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (11 samples, 0.19%)</title><rect x="25.1012%" y="1029" width="0.1936%" height="15" fill="rgb(229,198,43)" fg:x="1426" fg:w="11"/><text x="25.3512%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (11 samples, 0.19%)</title><rect x="25.1012%" y="1013" width="0.1936%" height="15" fill="rgb(206,209,35)" fg:x="1426" fg:w="11"/><text x="25.3512%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (3 samples, 0.05%)</title><rect x="25.2420%" y="997" width="0.0528%" height="15" fill="rgb(245,195,53)" fg:x="1434" fg:w="3"/><text x="25.4920%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.07%)</title><rect x="25.2948%" y="1093" width="0.0704%" height="15" fill="rgb(240,92,26)" fg:x="1437" fg:w="4"/><text x="25.5448%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.07%)</title><rect x="25.2948%" y="1077" width="0.0704%" height="15" fill="rgb(207,40,23)" fg:x="1437" fg:w="4"/><text x="25.5448%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.05%)</title><rect x="25.3124%" y="1061" width="0.0528%" height="15" fill="rgb(223,111,35)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.05%)</title><rect x="25.3124%" y="1045" width="0.0528%" height="15" fill="rgb(229,147,28)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (3 samples, 0.05%)</title><rect x="25.3124%" y="1029" width="0.0528%" height="15" fill="rgb(211,29,28)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (3 samples, 0.05%)</title><rect x="25.3124%" y="1013" width="0.0528%" height="15" fill="rgb(228,72,33)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.05%)</title><rect x="25.3124%" y="997" width="0.0528%" height="15" fill="rgb(205,214,31)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.05%)</title><rect x="25.3124%" y="981" width="0.0528%" height="15" fill="rgb(224,111,15)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.05%)</title><rect x="25.3124%" y="965" width="0.0528%" height="15" fill="rgb(253,21,26)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.05%)</title><rect x="25.3124%" y="949" width="0.0528%" height="15" fill="rgb(245,139,43)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.05%)</title><rect x="25.3124%" y="933" width="0.0528%" height="15" fill="rgb(252,170,7)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.05%)</title><rect x="25.3124%" y="917" width="0.0528%" height="15" fill="rgb(231,118,14)" fg:x="1438" fg:w="3"/><text x="25.5624%" y="927.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.04%)</title><rect x="25.3300%" y="901" width="0.0352%" height="15" fill="rgb(238,83,0)" fg:x="1439" fg:w="2"/><text x="25.5800%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt; (9 samples, 0.16%)</title><rect x="25.3653%" y="1093" width="0.1584%" height="15" fill="rgb(221,39,39)" fg:x="1441" fg:w="9"/><text x="25.6153%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::Word&gt;&gt; (9 samples, 0.16%)</title><rect x="25.3653%" y="1077" width="0.1584%" height="15" fill="rgb(222,119,46)" fg:x="1441" fg:w="9"/><text x="25.6153%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.16%)</title><rect x="25.3653%" y="1061" width="0.1584%" height="15" fill="rgb(222,165,49)" fg:x="1441" fg:w="9"/><text x="25.6153%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.16%)</title><rect x="25.3653%" y="1045" width="0.1584%" height="15" fill="rgb(219,113,52)" fg:x="1441" fg:w="9"/><text x="25.6153%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.16%)</title><rect x="25.3653%" y="1029" width="0.1584%" height="15" fill="rgb(214,7,15)" fg:x="1441" fg:w="9"/><text x="25.6153%" y="1039.50"></text></g><g><title>__GI___libc_free (9 samples, 0.16%)</title><rect x="25.3653%" y="1013" width="0.1584%" height="15" fill="rgb(235,32,4)" fg:x="1441" fg:w="9"/><text x="25.6153%" y="1023.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="25.4181%" y="997" width="0.1056%" height="15" fill="rgb(238,90,54)" fg:x="1444" fg:w="6"/><text x="25.6681%" y="1007.50"></text></g><g><title>tcache_put (2 samples, 0.04%)</title><rect x="25.4885%" y="981" width="0.0352%" height="15" fill="rgb(213,208,19)" fg:x="1448" fg:w="2"/><text x="25.7385%" y="991.50"></text></g><g><title>_int_free (12 samples, 0.21%)</title><rect x="25.5765%" y="949" width="0.2112%" height="15" fill="rgb(233,156,4)" fg:x="1453" fg:w="12"/><text x="25.8265%" y="959.50"></text></g><g><title>__GI___libc_free (15 samples, 0.26%)</title><rect x="25.5413%" y="965" width="0.2640%" height="15" fill="rgb(207,194,5)" fg:x="1451" fg:w="15"/><text x="25.7913%" y="975.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="25.7877%" y="949" width="0.0176%" height="15" fill="rgb(206,111,30)" fg:x="1465" fg:w="1"/><text x="26.0377%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (17 samples, 0.30%)</title><rect x="25.5237%" y="1093" width="0.2992%" height="15" fill="rgb(243,70,54)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (17 samples, 0.30%)</title><rect x="25.5237%" y="1077" width="0.2992%" height="15" fill="rgb(242,28,8)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (17 samples, 0.30%)</title><rect x="25.5237%" y="1061" width="0.2992%" height="15" fill="rgb(219,106,18)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.30%)</title><rect x="25.5237%" y="1045" width="0.2992%" height="15" fill="rgb(244,222,10)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (17 samples, 0.30%)</title><rect x="25.5237%" y="1029" width="0.2992%" height="15" fill="rgb(236,179,52)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (17 samples, 0.30%)</title><rect x="25.5237%" y="1013" width="0.2992%" height="15" fill="rgb(213,23,39)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.30%)</title><rect x="25.5237%" y="997" width="0.2992%" height="15" fill="rgb(238,48,10)" fg:x="1450" fg:w="17"/><text x="25.7737%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.28%)</title><rect x="25.5413%" y="981" width="0.2816%" height="15" fill="rgb(251,196,23)" fg:x="1451" fg:w="16"/><text x="25.7913%" y="991.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="25.8053%" y="965" width="0.0176%" height="15" fill="rgb(250,152,24)" fg:x="1466" fg:w="1"/><text x="26.0553%" y="975.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.02%)</title><rect x="25.8229%" y="997" width="0.0176%" height="15" fill="rgb(209,150,17)" fg:x="1467" fg:w="1"/><text x="26.0729%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="25.8229%" y="981" width="0.0176%" height="15" fill="rgb(234,202,34)" fg:x="1467" fg:w="1"/><text x="26.0729%" y="991.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (750 samples, 13.20%)</title><rect x="12.6562%" y="1125" width="13.2019%" height="15" fill="rgb(253,148,53)" fg:x="719" fg:w="750"/><text x="12.9062%" y="1135.50">core::iter::adapters..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (749 samples, 13.18%)</title><rect x="12.6738%" y="1109" width="13.1843%" height="15" fill="rgb(218,129,16)" fg:x="720" fg:w="749"/><text x="12.9238%" y="1119.50">paranagram::Paranagr..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (2 samples, 0.04%)</title><rect x="25.8229%" y="1093" width="0.0352%" height="15" fill="rgb(216,85,19)" fg:x="1467" fg:w="2"/><text x="26.0729%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2 samples, 0.04%)</title><rect x="25.8229%" y="1077" width="0.0352%" height="15" fill="rgb(235,228,7)" fg:x="1467" fg:w="2"/><text x="26.0729%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (2 samples, 0.04%)</title><rect x="25.8229%" y="1061" width="0.0352%" height="15" fill="rgb(245,175,0)" fg:x="1467" fg:w="2"/><text x="26.0729%" y="1071.50"></text></g><g><title>std::collections::hash::map::RandomState::new (2 samples, 0.04%)</title><rect x="25.8229%" y="1045" width="0.0352%" height="15" fill="rgb(208,168,36)" fg:x="1467" fg:w="2"/><text x="26.0729%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="25.8229%" y="1029" width="0.0352%" height="15" fill="rgb(246,171,24)" fg:x="1467" fg:w="2"/><text x="26.0729%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="25.8229%" y="1013" width="0.0352%" height="15" fill="rgb(215,142,24)" fg:x="1467" fg:w="2"/><text x="26.0729%" y="1023.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (1 samples, 0.02%)</title><rect x="25.8405%" y="997" width="0.0176%" height="15" fill="rgb(250,187,7)" fg:x="1468" fg:w="1"/><text x="26.0905%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="25.8405%" y="981" width="0.0176%" height="15" fill="rgb(228,66,33)" fg:x="1468" fg:w="1"/><text x="26.0905%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="25.8405%" y="965" width="0.0176%" height="15" fill="rgb(234,215,21)" fg:x="1468" fg:w="1"/><text x="26.0905%" y="975.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="25.8405%" y="949" width="0.0176%" height="15" fill="rgb(222,191,20)" fg:x="1468" fg:w="1"/><text x="26.0905%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="25.8405%" y="933" width="0.0176%" height="15" fill="rgb(245,79,54)" fg:x="1468" fg:w="1"/><text x="26.0905%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::word::FromIndexAndWeight&gt;::from_index_and_weight::{{closure}} (2 samples, 0.04%)</title><rect x="26.1046%" y="933" width="0.0352%" height="15" fill="rgb(240,10,37)" fg:x="1483" fg:w="2"/><text x="26.3546%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.30%)</title><rect x="25.8581%" y="1029" width="0.2992%" height="15" fill="rgb(214,192,32)" fg:x="1469" fg:w="17"/><text x="26.1081%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (17 samples, 0.30%)</title><rect x="25.8581%" y="1013" width="0.2992%" height="15" fill="rgb(209,36,54)" fg:x="1469" fg:w="17"/><text x="26.1081%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.30%)</title><rect x="25.8581%" y="997" width="0.2992%" height="15" fill="rgb(220,10,11)" fg:x="1469" fg:w="17"/><text x="26.1081%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.30%)</title><rect x="25.8581%" y="981" width="0.2992%" height="15" fill="rgb(221,106,17)" fg:x="1469" fg:w="17"/><text x="26.1081%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.30%)</title><rect x="25.8581%" y="965" width="0.2992%" height="15" fill="rgb(251,142,44)" fg:x="1469" fg:w="17"/><text x="26.1081%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.05%)</title><rect x="26.1046%" y="949" width="0.0528%" height="15" fill="rgb(238,13,15)" fg:x="1483" fg:w="3"/><text x="26.3546%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="26.1398%" y="933" width="0.0176%" height="15" fill="rgb(208,107,27)" fg:x="1485" fg:w="1"/><text x="26.3898%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.02%)</title><rect x="26.1398%" y="917" width="0.0176%" height="15" fill="rgb(205,136,37)" fg:x="1485" fg:w="1"/><text x="26.3898%" y="927.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.02%)</title><rect x="26.1398%" y="901" width="0.0176%" height="15" fill="rgb(250,205,27)" fg:x="1485" fg:w="1"/><text x="26.3898%" y="911.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="26.2806%" y="901" width="0.0176%" height="15" fill="rgb(210,80,43)" fg:x="1493" fg:w="1"/><text x="26.5306%" y="911.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.21%)</title><rect x="26.1926%" y="917" width="0.2112%" height="15" fill="rgb(247,160,36)" fg:x="1488" fg:w="12"/><text x="26.4426%" y="927.50"></text></g><g><title>tcache_get (6 samples, 0.11%)</title><rect x="26.2982%" y="901" width="0.1056%" height="15" fill="rgb(234,13,49)" fg:x="1494" fg:w="6"/><text x="26.5482%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="26.4038%" y="917" width="0.0176%" height="15" fill="rgb(234,122,0)" fg:x="1500" fg:w="1"/><text x="26.6538%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="26.4038%" y="901" width="0.0176%" height="15" fill="rgb(207,146,38)" fg:x="1500" fg:w="1"/><text x="26.6538%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.28%)</title><rect x="26.1750%" y="965" width="0.2816%" height="15" fill="rgb(207,177,25)" fg:x="1487" fg:w="16"/><text x="26.4250%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.28%)</title><rect x="26.1750%" y="949" width="0.2816%" height="15" fill="rgb(211,178,42)" fg:x="1487" fg:w="16"/><text x="26.4250%" y="959.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.28%)</title><rect x="26.1750%" y="933" width="0.2816%" height="15" fill="rgb(230,69,54)" fg:x="1487" fg:w="16"/><text x="26.4250%" y="943.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="26.4214%" y="917" width="0.0352%" height="15" fill="rgb(214,135,41)" fg:x="1501" fg:w="2"/><text x="26.6714%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.62%)</title><rect x="25.8581%" y="1093" width="0.6161%" height="15" fill="rgb(237,67,25)" fg:x="1469" fg:w="35"/><text x="26.1081%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (35 samples, 0.62%)</title><rect x="25.8581%" y="1077" width="0.6161%" height="15" fill="rgb(222,189,50)" fg:x="1469" fg:w="35"/><text x="26.1081%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.62%)</title><rect x="25.8581%" y="1061" width="0.6161%" height="15" fill="rgb(245,148,34)" fg:x="1469" fg:w="35"/><text x="26.1081%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (35 samples, 0.62%)</title><rect x="25.8581%" y="1045" width="0.6161%" height="15" fill="rgb(222,29,6)" fg:x="1469" fg:w="35"/><text x="26.1081%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.32%)</title><rect x="26.1574%" y="1029" width="0.3168%" height="15" fill="rgb(221,189,43)" fg:x="1486" fg:w="18"/><text x="26.4074%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.32%)</title><rect x="26.1574%" y="1013" width="0.3168%" height="15" fill="rgb(207,36,27)" fg:x="1486" fg:w="18"/><text x="26.4074%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.32%)</title><rect x="26.1574%" y="997" width="0.3168%" height="15" fill="rgb(217,90,24)" fg:x="1486" fg:w="18"/><text x="26.4074%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.32%)</title><rect x="26.1574%" y="981" width="0.3168%" height="15" fill="rgb(224,66,35)" fg:x="1486" fg:w="18"/><text x="26.4074%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="26.4566%" y="965" width="0.0176%" height="15" fill="rgb(221,13,50)" fg:x="1503" fg:w="1"/><text x="26.7066%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="26.4566%" y="949" width="0.0176%" height="15" fill="rgb(236,68,49)" fg:x="1503" fg:w="1"/><text x="26.7066%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.02%)</title><rect x="26.4742%" y="1093" width="0.0176%" height="15" fill="rgb(229,146,28)" fg:x="1504" fg:w="1"/><text x="26.7242%" y="1103.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.02%)</title><rect x="26.4742%" y="1077" width="0.0176%" height="15" fill="rgb(225,31,38)" fg:x="1504" fg:w="1"/><text x="26.7242%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.30%)</title><rect x="26.4918%" y="1045" width="0.2992%" height="15" fill="rgb(250,208,3)" fg:x="1505" fg:w="17"/><text x="26.7418%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.30%)</title><rect x="26.4918%" y="1029" width="0.2992%" height="15" fill="rgb(246,54,23)" fg:x="1505" fg:w="17"/><text x="26.7418%" y="1039.50"></text></g><g><title>__GI___libc_free (17 samples, 0.30%)</title><rect x="26.4918%" y="1013" width="0.2992%" height="15" fill="rgb(243,76,11)" fg:x="1505" fg:w="17"/><text x="26.7418%" y="1023.50"></text></g><g><title>_int_free (13 samples, 0.23%)</title><rect x="26.5622%" y="997" width="0.2288%" height="15" fill="rgb(245,21,50)" fg:x="1509" fg:w="13"/><text x="26.8122%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (813 samples, 14.31%)</title><rect x="12.4978%" y="1253" width="14.3109%" height="15" fill="rgb(228,9,43)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1263.50">core::iter::traits::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (813 samples, 14.31%)</title><rect x="12.4978%" y="1237" width="14.3109%" height="15" fill="rgb(208,100,47)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1247.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (813 samples, 14.31%)</title><rect x="12.4978%" y="1221" width="14.3109%" height="15" fill="rgb(232,26,8)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1231.50">alloc::vec::in_place_c..</text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (813 samples, 14.31%)</title><rect x="12.4978%" y="1205" width="14.3109%" height="15" fill="rgb(216,166,38)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1215.50">&lt;I as alloc::vec::in_p..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (813 samples, 14.31%)</title><rect x="12.4978%" y="1189" width="14.3109%" height="15" fill="rgb(251,202,51)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1199.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (813 samples, 14.31%)</title><rect x="12.4978%" y="1173" width="14.3109%" height="15" fill="rgb(254,216,34)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1183.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (813 samples, 14.31%)</title><rect x="12.4978%" y="1157" width="14.3109%" height="15" fill="rgb(251,32,27)" fg:x="710" fg:w="813"/><text x="12.7478%" y="1167.50">core::iter::traits::it..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (809 samples, 14.24%)</title><rect x="12.5682%" y="1141" width="14.2405%" height="15" fill="rgb(208,127,28)" fg:x="714" fg:w="809"/><text x="12.8182%" y="1151.50">core::iter::adapters::..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (54 samples, 0.95%)</title><rect x="25.8581%" y="1125" width="0.9505%" height="15" fill="rgb(224,137,22)" fg:x="1469" fg:w="54"/><text x="26.1081%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::word::FromIndexAndWeight&gt;::from_index_and_weight (54 samples, 0.95%)</title><rect x="25.8581%" y="1109" width="0.9505%" height="15" fill="rgb(254,70,32)" fg:x="1469" fg:w="54"/><text x="26.1081%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (18 samples, 0.32%)</title><rect x="26.4918%" y="1093" width="0.3168%" height="15" fill="rgb(229,75,37)" fg:x="1505" fg:w="18"/><text x="26.7418%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (18 samples, 0.32%)</title><rect x="26.4918%" y="1077" width="0.3168%" height="15" fill="rgb(252,64,23)" fg:x="1505" fg:w="18"/><text x="26.7418%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.32%)</title><rect x="26.4918%" y="1061" width="0.3168%" height="15" fill="rgb(232,162,48)" fg:x="1505" fg:w="18"/><text x="26.7418%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="26.7911%" y="1045" width="0.0176%" height="15" fill="rgb(246,160,12)" fg:x="1522" fg:w="1"/><text x="27.0411%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="26.7911%" y="1029" width="0.0176%" height="15" fill="rgb(247,166,0)" fg:x="1522" fg:w="1"/><text x="27.0411%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="26.8087%" y="1045" width="0.0176%" height="15" fill="rgb(249,219,21)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="26.8087%" y="1029" width="0.0176%" height="15" fill="rgb(205,209,3)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="26.8087%" y="1013" width="0.0176%" height="15" fill="rgb(243,44,1)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="26.8087%" y="997" width="0.0176%" height="15" fill="rgb(206,159,16)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="26.8087%" y="981" width="0.0176%" height="15" fill="rgb(244,77,30)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="26.8087%" y="965" width="0.0176%" height="15" fill="rgb(218,69,12)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="26.8087%" y="949" width="0.0176%" height="15" fill="rgb(212,87,7)" fg:x="1523" fg:w="1"/><text x="27.0587%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="26.8263%" y="997" width="0.0176%" height="15" fill="rgb(245,114,25)" fg:x="1524" fg:w="1"/><text x="27.0763%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.8263%" y="981" width="0.0176%" height="15" fill="rgb(210,61,42)" fg:x="1524" fg:w="1"/><text x="27.0763%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="26.8263%" y="965" width="0.0176%" height="15" fill="rgb(211,52,33)" fg:x="1524" fg:w="1"/><text x="27.0763%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="26.8263%" y="949" width="0.0176%" height="15" fill="rgb(234,58,33)" fg:x="1524" fg:w="1"/><text x="27.0763%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="26.8263%" y="933" width="0.0176%" height="15" fill="rgb(220,115,36)" fg:x="1524" fg:w="1"/><text x="27.0763%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="26.8263%" y="917" width="0.0176%" height="15" fill="rgb(243,153,54)" fg:x="1524" fg:w="1"/><text x="27.0763%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.05%)</title><rect x="26.8263%" y="1045" width="0.0528%" height="15" fill="rgb(251,47,18)" fg:x="1524" fg:w="3"/><text x="27.0763%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.05%)</title><rect x="26.8263%" y="1029" width="0.0528%" height="15" fill="rgb(242,102,42)" fg:x="1524" fg:w="3"/><text x="27.0763%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.05%)</title><rect x="26.8263%" y="1013" width="0.0528%" height="15" fill="rgb(234,31,38)" fg:x="1524" fg:w="3"/><text x="27.0763%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.04%)</title><rect x="26.8439%" y="997" width="0.0352%" height="15" fill="rgb(221,117,51)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="26.8439%" y="981" width="0.0352%" height="15" fill="rgb(212,20,18)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.04%)</title><rect x="26.8439%" y="965" width="0.0352%" height="15" fill="rgb(245,133,36)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.04%)</title><rect x="26.8439%" y="949" width="0.0352%" height="15" fill="rgb(212,6,19)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="959.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.04%)</title><rect x="26.8439%" y="933" width="0.0352%" height="15" fill="rgb(218,1,36)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="943.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.04%)</title><rect x="26.8439%" y="917" width="0.0352%" height="15" fill="rgb(246,84,54)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="26.8439%" y="901" width="0.0352%" height="15" fill="rgb(242,110,6)" fg:x="1525" fg:w="2"/><text x="27.0939%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (1 samples, 0.02%)</title><rect x="26.8615%" y="885" width="0.0176%" height="15" fill="rgb(214,47,5)" fg:x="1526" fg:w="1"/><text x="27.1115%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="26.8791%" y="965" width="0.0176%" height="15" fill="rgb(218,159,25)" fg:x="1527" fg:w="1"/><text x="27.1291%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="26.8791%" y="949" width="0.0176%" height="15" fill="rgb(215,211,28)" fg:x="1527" fg:w="1"/><text x="27.1291%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="26.8791%" y="933" width="0.0176%" height="15" fill="rgb(238,59,32)" fg:x="1527" fg:w="1"/><text x="27.1291%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="26.8791%" y="917" width="0.0176%" height="15" fill="rgb(226,82,3)" fg:x="1527" fg:w="1"/><text x="27.1291%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.04%)</title><rect x="26.8791%" y="1045" width="0.0352%" height="15" fill="rgb(240,164,32)" fg:x="1527" fg:w="2"/><text x="27.1291%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.04%)</title><rect x="26.8791%" y="1029" width="0.0352%" height="15" fill="rgb(232,46,7)" fg:x="1527" fg:w="2"/><text x="27.1291%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.04%)</title><rect x="26.8791%" y="1013" width="0.0352%" height="15" fill="rgb(229,129,53)" fg:x="1527" fg:w="2"/><text x="27.1291%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="26.8791%" y="997" width="0.0352%" height="15" fill="rgb(234,188,29)" fg:x="1527" fg:w="2"/><text x="27.1291%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="26.8791%" y="981" width="0.0352%" height="15" fill="rgb(246,141,4)" fg:x="1527" fg:w="2"/><text x="27.1291%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="26.8967%" y="965" width="0.0176%" height="15" fill="rgb(229,23,39)" fg:x="1528" fg:w="1"/><text x="27.1467%" y="975.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams (11 samples, 0.19%)</title><rect x="26.8087%" y="1253" width="0.1936%" height="15" fill="rgb(206,12,3)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.19%)</title><rect x="26.8087%" y="1237" width="0.1936%" height="15" fill="rgb(252,226,20)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="26.8087%" y="1221" width="0.1936%" height="15" fill="rgb(216,123,35)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="26.8087%" y="1205" width="0.1936%" height="15" fill="rgb(212,68,40)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="26.8087%" y="1189" width="0.1936%" height="15" fill="rgb(254,125,32)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.19%)</title><rect x="26.8087%" y="1173" width="0.1936%" height="15" fill="rgb(253,97,22)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.19%)</title><rect x="26.8087%" y="1157" width="0.1936%" height="15" fill="rgb(241,101,14)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.19%)</title><rect x="26.8087%" y="1141" width="0.1936%" height="15" fill="rgb(238,103,29)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (11 samples, 0.19%)</title><rect x="26.8087%" y="1125" width="0.1936%" height="15" fill="rgb(233,195,47)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.19%)</title><rect x="26.8087%" y="1109" width="0.1936%" height="15" fill="rgb(246,218,30)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1119.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (11 samples, 0.19%)</title><rect x="26.8087%" y="1093" width="0.1936%" height="15" fill="rgb(219,145,47)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1103.50"></text></g><g><title>paranagram::word::Word::contains (11 samples, 0.19%)</title><rect x="26.8087%" y="1077" width="0.1936%" height="15" fill="rgb(243,12,26)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::contains (11 samples, 0.19%)</title><rect x="26.8087%" y="1061" width="0.1936%" height="15" fill="rgb(214,87,16)" fg:x="1523" fg:w="11"/><text x="27.0587%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (5 samples, 0.09%)</title><rect x="26.9143%" y="1045" width="0.0880%" height="15" fill="rgb(208,99,42)" fg:x="1529" fg:w="5"/><text x="27.1643%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (5 samples, 0.09%)</title><rect x="26.9143%" y="1029" width="0.0880%" height="15" fill="rgb(253,99,2)" fg:x="1529" fg:w="5"/><text x="27.1643%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.09%)</title><rect x="26.9143%" y="1013" width="0.0880%" height="15" fill="rgb(220,168,23)" fg:x="1529" fg:w="5"/><text x="27.1643%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5 samples, 0.09%)</title><rect x="26.9143%" y="997" width="0.0880%" height="15" fill="rgb(242,38,24)" fg:x="1529" fg:w="5"/><text x="27.1643%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (5 samples, 0.09%)</title><rect x="26.9143%" y="981" width="0.0880%" height="15" fill="rgb(225,182,9)" fg:x="1529" fg:w="5"/><text x="27.1643%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (5 samples, 0.09%)</title><rect x="26.9143%" y="965" width="0.0880%" height="15" fill="rgb(243,178,37)" fg:x="1529" fg:w="5"/><text x="27.1643%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (20 samples, 0.35%)</title><rect x="27.0023%" y="1125" width="0.3521%" height="15" fill="rgb(232,139,19)" fg:x="1534" fg:w="20"/><text x="27.2523%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.35%)</title><rect x="27.0023%" y="1109" width="0.3521%" height="15" fill="rgb(225,201,24)" fg:x="1534" fg:w="20"/><text x="27.2523%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.35%)</title><rect x="27.0023%" y="1093" width="0.3521%" height="15" fill="rgb(221,47,46)" fg:x="1534" fg:w="20"/><text x="27.2523%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (20 samples, 0.35%)</title><rect x="27.0023%" y="1077" width="0.3521%" height="15" fill="rgb(249,23,13)" fg:x="1534" fg:w="20"/><text x="27.2523%" y="1087.50"></text></g><g><title>[unknown] (16 samples, 0.28%)</title><rect x="27.0727%" y="1061" width="0.2816%" height="15" fill="rgb(219,9,5)" fg:x="1538" fg:w="16"/><text x="27.3227%" y="1071.50"></text></g><g><title>[unknown] (15 samples, 0.26%)</title><rect x="27.0903%" y="1045" width="0.2640%" height="15" fill="rgb(254,171,16)" fg:x="1539" fg:w="15"/><text x="27.3403%" y="1055.50"></text></g><g><title>[unknown] (15 samples, 0.26%)</title><rect x="27.0903%" y="1029" width="0.2640%" height="15" fill="rgb(230,171,20)" fg:x="1539" fg:w="15"/><text x="27.3403%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.26%)</title><rect x="27.0903%" y="1013" width="0.2640%" height="15" fill="rgb(210,71,41)" fg:x="1539" fg:w="15"/><text x="27.3403%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 0.26%)</title><rect x="27.0903%" y="997" width="0.2640%" height="15" fill="rgb(206,173,20)" fg:x="1539" fg:w="15"/><text x="27.3403%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 0.25%)</title><rect x="27.1079%" y="981" width="0.2464%" height="15" fill="rgb(233,88,34)" fg:x="1540" fg:w="14"/><text x="27.3579%" y="991.50"></text></g><g><title>[unknown] (13 samples, 0.23%)</title><rect x="27.1255%" y="965" width="0.2288%" height="15" fill="rgb(223,209,46)" fg:x="1541" fg:w="13"/><text x="27.3755%" y="975.50"></text></g><g><title>[unknown] (10 samples, 0.18%)</title><rect x="27.1783%" y="949" width="0.1760%" height="15" fill="rgb(250,43,18)" fg:x="1544" fg:w="10"/><text x="27.4283%" y="959.50"></text></g><g><title>[unknown] (9 samples, 0.16%)</title><rect x="27.1959%" y="933" width="0.1584%" height="15" fill="rgb(208,13,10)" fg:x="1545" fg:w="9"/><text x="27.4459%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.2487%" y="917" width="0.1056%" height="15" fill="rgb(212,200,36)" fg:x="1548" fg:w="6"/><text x="27.4987%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="27.2663%" y="901" width="0.0880%" height="15" fill="rgb(225,90,30)" fg:x="1549" fg:w="5"/><text x="27.5163%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="27.3015%" y="885" width="0.0528%" height="15" fill="rgb(236,182,39)" fg:x="1551" fg:w="3"/><text x="27.5515%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="27.3191%" y="869" width="0.0352%" height="15" fill="rgb(212,144,35)" fg:x="1552" fg:w="2"/><text x="27.5691%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="27.3543%" y="1125" width="0.0176%" height="15" fill="rgb(228,63,44)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="27.3543%" y="1109" width="0.0176%" height="15" fill="rgb(228,109,6)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="27.3543%" y="1093" width="0.0176%" height="15" fill="rgb(238,117,24)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="27.3543%" y="1077" width="0.0176%" height="15" fill="rgb(242,26,26)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="27.3543%" y="1061" width="0.0176%" height="15" fill="rgb(221,92,48)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1071.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="27.3543%" y="1045" width="0.0176%" height="15" fill="rgb(209,209,32)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1055.50"></text></g><g><title>__GI___munmap (1 samples, 0.02%)</title><rect x="27.3543%" y="1029" width="0.0176%" height="15" fill="rgb(221,70,22)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="1013" width="0.0176%" height="15" fill="rgb(248,145,5)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="997" width="0.0176%" height="15" fill="rgb(226,116,26)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="981" width="0.0176%" height="15" fill="rgb(244,5,17)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="965" width="0.0176%" height="15" fill="rgb(252,159,33)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="949" width="0.0176%" height="15" fill="rgb(206,71,0)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="933" width="0.0176%" height="15" fill="rgb(233,118,54)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="917" width="0.0176%" height="15" fill="rgb(234,83,48)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="901" width="0.0176%" height="15" fill="rgb(228,3,54)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="885" width="0.0176%" height="15" fill="rgb(226,155,13)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="869" width="0.0176%" height="15" fill="rgb(241,28,37)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="853" width="0.0176%" height="15" fill="rgb(233,93,10)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.3543%" y="837" width="0.0176%" height="15" fill="rgb(225,113,19)" fg:x="1554" fg:w="1"/><text x="27.6043%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="27.3719%" y="1013" width="0.0176%" height="15" fill="rgb(241,2,18)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="27.3719%" y="997" width="0.0176%" height="15" fill="rgb(228,207,21)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="27.3719%" y="981" width="0.0176%" height="15" fill="rgb(213,211,35)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="27.3719%" y="965" width="0.0176%" height="15" fill="rgb(209,83,10)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="27.3719%" y="949" width="0.0176%" height="15" fill="rgb(209,164,1)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="27.3719%" y="933" width="0.0176%" height="15" fill="rgb(213,184,43)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="27.3719%" y="917" width="0.0176%" height="15" fill="rgb(231,61,34)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="27.3719%" y="901" width="0.0176%" height="15" fill="rgb(235,75,3)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="27.3719%" y="885" width="0.0176%" height="15" fill="rgb(220,106,47)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="27.3719%" y="869" width="0.0176%" height="15" fill="rgb(210,196,33)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="27.3719%" y="853" width="0.0176%" height="15" fill="rgb(229,154,42)" fg:x="1555" fg:w="1"/><text x="27.6219%" y="863.50"></text></g><g><title>_int_realloc (10 samples, 0.18%)</title><rect x="27.3895%" y="837" width="0.1760%" height="15" fill="rgb(228,114,26)" fg:x="1556" fg:w="10"/><text x="27.6395%" y="847.50"></text></g><g><title>__memcpy_evex_unaligned_erms (10 samples, 0.18%)</title><rect x="27.3895%" y="821" width="0.1760%" height="15" fill="rgb(208,144,1)" fg:x="1556" fg:w="10"/><text x="27.6395%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.14%)</title><rect x="27.4247%" y="805" width="0.1408%" height="15" fill="rgb(239,112,37)" fg:x="1558" fg:w="8"/><text x="27.6747%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="27.4776%" y="789" width="0.0880%" height="15" fill="rgb(210,96,50)" fg:x="1561" fg:w="5"/><text x="27.7276%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="773" width="0.0704%" height="15" fill="rgb(222,178,2)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="757" width="0.0704%" height="15" fill="rgb(226,74,18)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="741" width="0.0704%" height="15" fill="rgb(225,67,54)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="725" width="0.0704%" height="15" fill="rgb(251,92,32)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="709" width="0.0704%" height="15" fill="rgb(228,149,22)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="693" width="0.0704%" height="15" fill="rgb(243,54,13)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.4952%" y="677" width="0.0704%" height="15" fill="rgb(243,180,28)" fg:x="1562" fg:w="4"/><text x="27.7452%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="27.5304%" y="661" width="0.0352%" height="15" fill="rgb(208,167,24)" fg:x="1564" fg:w="2"/><text x="27.7804%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="27.5304%" y="645" width="0.0352%" height="15" fill="rgb(245,73,45)" fg:x="1564" fg:w="2"/><text x="27.7804%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5480%" y="629" width="0.0176%" height="15" fill="rgb(237,203,48)" fg:x="1565" fg:w="1"/><text x="27.7980%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.19%)</title><rect x="27.3895%" y="981" width="0.1936%" height="15" fill="rgb(211,197,16)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.19%)</title><rect x="27.3895%" y="965" width="0.1936%" height="15" fill="rgb(243,99,51)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.19%)</title><rect x="27.3895%" y="949" width="0.1936%" height="15" fill="rgb(215,123,29)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.19%)</title><rect x="27.3895%" y="933" width="0.1936%" height="15" fill="rgb(239,186,37)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.19%)</title><rect x="27.3895%" y="917" width="0.1936%" height="15" fill="rgb(252,136,39)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.19%)</title><rect x="27.3895%" y="901" width="0.1936%" height="15" fill="rgb(223,213,32)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.19%)</title><rect x="27.3895%" y="885" width="0.1936%" height="15" fill="rgb(233,115,5)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="895.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.19%)</title><rect x="27.3895%" y="869" width="0.1936%" height="15" fill="rgb(207,226,44)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="879.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.19%)</title><rect x="27.3895%" y="853" width="0.1936%" height="15" fill="rgb(208,126,0)" fg:x="1556" fg:w="11"/><text x="27.6395%" y="863.50"></text></g><g><title>mremap_chunk (1 samples, 0.02%)</title><rect x="27.5656%" y="837" width="0.0176%" height="15" fill="rgb(244,66,21)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="847.50"></text></g><g><title>__GI___mremap (1 samples, 0.02%)</title><rect x="27.5656%" y="821" width="0.0176%" height="15" fill="rgb(222,97,12)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="805" width="0.0176%" height="15" fill="rgb(219,213,19)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="789" width="0.0176%" height="15" fill="rgb(252,169,30)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="773" width="0.0176%" height="15" fill="rgb(206,32,51)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="757" width="0.0176%" height="15" fill="rgb(250,172,42)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="741" width="0.0176%" height="15" fill="rgb(209,34,43)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="725" width="0.0176%" height="15" fill="rgb(223,11,35)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.5656%" y="709" width="0.0176%" height="15" fill="rgb(251,219,26)" fg:x="1566" fg:w="1"/><text x="27.8156%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (20 samples, 0.35%)</title><rect x="27.3895%" y="1013" width="0.3521%" height="15" fill="rgb(231,119,3)" fg:x="1556" fg:w="20"/><text x="27.6395%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.35%)</title><rect x="27.3895%" y="997" width="0.3521%" height="15" fill="rgb(216,97,11)" fg:x="1556" fg:w="20"/><text x="27.6395%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.16%)</title><rect x="27.5832%" y="981" width="0.1584%" height="15" fill="rgb(223,59,9)" fg:x="1567" fg:w="9"/><text x="27.8332%" y="991.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.16%)</title><rect x="27.5832%" y="965" width="0.1584%" height="15" fill="rgb(233,93,31)" fg:x="1567" fg:w="9"/><text x="27.8332%" y="975.50"></text></g><g><title>[unknown] (8 samples, 0.14%)</title><rect x="27.6008%" y="949" width="0.1408%" height="15" fill="rgb(239,81,33)" fg:x="1568" fg:w="8"/><text x="27.8508%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.6360%" y="933" width="0.1056%" height="15" fill="rgb(213,120,34)" fg:x="1570" fg:w="6"/><text x="27.8860%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.6360%" y="917" width="0.1056%" height="15" fill="rgb(243,49,53)" fg:x="1570" fg:w="6"/><text x="27.8860%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.6360%" y="901" width="0.1056%" height="15" fill="rgb(247,216,33)" fg:x="1570" fg:w="6"/><text x="27.8860%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.6360%" y="885" width="0.1056%" height="15" fill="rgb(226,26,14)" fg:x="1570" fg:w="6"/><text x="27.8860%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.6360%" y="869" width="0.1056%" height="15" fill="rgb(215,49,53)" fg:x="1570" fg:w="6"/><text x="27.8860%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.11%)</title><rect x="27.6360%" y="853" width="0.1056%" height="15" fill="rgb(245,162,40)" fg:x="1570" fg:w="6"/><text x="27.8860%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="27.6536%" y="837" width="0.0880%" height="15" fill="rgb(229,68,17)" fg:x="1571" fg:w="5"/><text x="27.9036%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="27.6536%" y="821" width="0.0880%" height="15" fill="rgb(213,182,10)" fg:x="1571" fg:w="5"/><text x="27.9036%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="27.6536%" y="805" width="0.0880%" height="15" fill="rgb(245,125,30)" fg:x="1571" fg:w="5"/><text x="27.9036%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="27.6536%" y="789" width="0.0880%" height="15" fill="rgb(232,202,2)" fg:x="1571" fg:w="5"/><text x="27.9036%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="27.6712%" y="773" width="0.0704%" height="15" fill="rgb(237,140,51)" fg:x="1572" fg:w="4"/><text x="27.9212%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="27.6888%" y="757" width="0.0528%" height="15" fill="rgb(236,157,25)" fg:x="1573" fg:w="3"/><text x="27.9388%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7240%" y="741" width="0.0176%" height="15" fill="rgb(219,209,0)" fg:x="1575" fg:w="1"/><text x="27.9740%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="27.7416%" y="1013" width="0.0352%" height="15" fill="rgb(240,116,54)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="27.7416%" y="997" width="0.0352%" height="15" fill="rgb(216,10,36)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="27.7416%" y="981" width="0.0352%" height="15" fill="rgb(222,72,44)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="27.7416%" y="965" width="0.0352%" height="15" fill="rgb(232,159,9)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="27.7416%" y="949" width="0.0352%" height="15" fill="rgb(210,39,32)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="27.7416%" y="933" width="0.0352%" height="15" fill="rgb(216,194,45)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="943.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="27.7416%" y="917" width="0.0352%" height="15" fill="rgb(218,18,35)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="927.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.04%)</title><rect x="27.7416%" y="901" width="0.0352%" height="15" fill="rgb(207,83,51)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="911.50"></text></g><g><title>_int_realloc (2 samples, 0.04%)</title><rect x="27.7416%" y="885" width="0.0352%" height="15" fill="rgb(225,63,43)" fg:x="1576" fg:w="2"/><text x="27.9916%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="27.7592%" y="869" width="0.0176%" height="15" fill="rgb(207,57,36)" fg:x="1577" fg:w="1"/><text x="28.0092%" y="879.50"></text></g><g><title>__GI___munmap (1 samples, 0.02%)</title><rect x="27.7768%" y="917" width="0.0176%" height="15" fill="rgb(216,99,33)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="901" width="0.0176%" height="15" fill="rgb(225,42,16)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="885" width="0.0176%" height="15" fill="rgb(220,201,45)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="869" width="0.0176%" height="15" fill="rgb(225,33,4)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="853" width="0.0176%" height="15" fill="rgb(224,33,50)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="837" width="0.0176%" height="15" fill="rgb(246,198,51)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="821" width="0.0176%" height="15" fill="rgb(205,22,4)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="805" width="0.0176%" height="15" fill="rgb(206,3,8)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="789" width="0.0176%" height="15" fill="rgb(251,23,15)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="773" width="0.0176%" height="15" fill="rgb(252,88,28)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="757" width="0.0176%" height="15" fill="rgb(212,127,14)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="741" width="0.0176%" height="15" fill="rgb(247,145,37)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="725" width="0.0176%" height="15" fill="rgb(209,117,53)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="709" width="0.0176%" height="15" fill="rgb(212,90,42)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="693" width="0.0176%" height="15" fill="rgb(218,164,37)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="27.7768%" y="677" width="0.0176%" height="15" fill="rgb(246,65,34)" fg:x="1578" fg:w="1"/><text x="28.0268%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="27.7768%" y="1013" width="0.0352%" height="15" fill="rgb(231,100,33)" fg:x="1578" fg:w="2"/><text x="28.0268%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="27.7768%" y="997" width="0.0352%" height="15" fill="rgb(228,126,14)" fg:x="1578" fg:w="2"/><text x="28.0268%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="27.7768%" y="981" width="0.0352%" height="15" fill="rgb(215,173,21)" fg:x="1578" fg:w="2"/><text x="28.0268%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="27.7768%" y="965" width="0.0352%" height="15" fill="rgb(210,6,40)" fg:x="1578" fg:w="2"/><text x="28.0268%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="27.7768%" y="949" width="0.0352%" height="15" fill="rgb(212,48,18)" fg:x="1578" fg:w="2"/><text x="28.0268%" y="959.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="27.7768%" y="933" width="0.0352%" height="15" fill="rgb(230,214,11)" fg:x="1578" fg:w="2"/><text x="28.0268%" y="943.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="27.7944%" y="917" width="0.0176%" height="15" fill="rgb(254,105,39)" fg:x="1579" fg:w="1"/><text x="28.0444%" y="927.50"></text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="27.9704%" y="917" width="0.0176%" height="15" fill="rgb(245,158,5)" fg:x="1589" fg:w="1"/><text x="28.2204%" y="927.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="28.1465%" y="725" width="0.0176%" height="15" fill="rgb(249,208,11)" fg:x="1599" fg:w="1"/><text x="28.3965%" y="735.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.07%)</title><rect x="28.1289%" y="741" width="0.0704%" height="15" fill="rgb(210,39,28)" fg:x="1598" fg:w="4"/><text x="28.3789%" y="751.50"></text></g><g><title>tcache_get (2 samples, 0.04%)</title><rect x="28.1641%" y="725" width="0.0352%" height="15" fill="rgb(211,56,53)" fg:x="1600" fg:w="2"/><text x="28.4141%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.14%)</title><rect x="28.0936%" y="837" width="0.1408%" height="15" fill="rgb(226,201,30)" fg:x="1596" fg:w="8"/><text x="28.3436%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.14%)</title><rect x="28.0936%" y="821" width="0.1408%" height="15" fill="rgb(239,101,34)" fg:x="1596" fg:w="8"/><text x="28.3436%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.14%)</title><rect x="28.0936%" y="805" width="0.1408%" height="15" fill="rgb(226,209,5)" fg:x="1596" fg:w="8"/><text x="28.3436%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.12%)</title><rect x="28.1112%" y="789" width="0.1232%" height="15" fill="rgb(250,105,47)" fg:x="1597" fg:w="7"/><text x="28.3612%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.12%)</title><rect x="28.1112%" y="773" width="0.1232%" height="15" fill="rgb(230,72,3)" fg:x="1597" fg:w="7"/><text x="28.3612%" y="783.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.12%)</title><rect x="28.1112%" y="757" width="0.1232%" height="15" fill="rgb(232,218,39)" fg:x="1597" fg:w="7"/><text x="28.3612%" y="767.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="28.1993%" y="741" width="0.0352%" height="15" fill="rgb(248,166,6)" fg:x="1602" fg:w="2"/><text x="28.4493%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.04%)</title><rect x="28.1993%" y="725" width="0.0352%" height="15" fill="rgb(247,89,20)" fg:x="1602" fg:w="2"/><text x="28.4493%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.19%)</title><rect x="28.0936%" y="901" width="0.1936%" height="15" fill="rgb(248,130,54)" fg:x="1596" fg:w="11"/><text x="28.3436%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.19%)</title><rect x="28.0936%" y="885" width="0.1936%" height="15" fill="rgb(234,196,4)" fg:x="1596" fg:w="11"/><text x="28.3436%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.19%)</title><rect x="28.0936%" y="869" width="0.1936%" height="15" fill="rgb(250,143,31)" fg:x="1596" fg:w="11"/><text x="28.3436%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.19%)</title><rect x="28.0936%" y="853" width="0.1936%" height="15" fill="rgb(211,110,34)" fg:x="1596" fg:w="11"/><text x="28.3436%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.05%)</title><rect x="28.2345%" y="837" width="0.0528%" height="15" fill="rgb(215,124,48)" fg:x="1604" fg:w="3"/><text x="28.4845%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="28.2345%" y="821" width="0.0528%" height="15" fill="rgb(216,46,13)" fg:x="1604" fg:w="3"/><text x="28.4845%" y="831.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="28.2345%" y="805" width="0.0528%" height="15" fill="rgb(205,184,25)" fg:x="1604" fg:w="3"/><text x="28.4845%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="28.2873%" y="837" width="0.0176%" height="15" fill="rgb(228,1,10)" fg:x="1607" fg:w="1"/><text x="28.5373%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="28.2873%" y="821" width="0.0176%" height="15" fill="rgb(213,116,27)" fg:x="1607" fg:w="1"/><text x="28.5373%" y="831.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.09%)</title><rect x="28.3049%" y="709" width="0.0880%" height="15" fill="rgb(241,95,50)" fg:x="1608" fg:w="5"/><text x="28.5549%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="28.3049%" y="693" width="0.0880%" height="15" fill="rgb(238,48,32)" fg:x="1608" fg:w="5"/><text x="28.5549%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="28.3049%" y="677" width="0.0880%" height="15" fill="rgb(235,113,49)" fg:x="1608" fg:w="5"/><text x="28.5549%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.3225%" y="661" width="0.0704%" height="15" fill="rgb(205,127,43)" fg:x="1609" fg:w="4"/><text x="28.5725%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.3225%" y="645" width="0.0704%" height="15" fill="rgb(250,162,2)" fg:x="1609" fg:w="4"/><text x="28.5725%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.3225%" y="629" width="0.0704%" height="15" fill="rgb(220,13,41)" fg:x="1609" fg:w="4"/><text x="28.5725%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.3225%" y="613" width="0.0704%" height="15" fill="rgb(249,221,25)" fg:x="1609" fg:w="4"/><text x="28.5725%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.3401%" y="597" width="0.0528%" height="15" fill="rgb(215,208,19)" fg:x="1610" fg:w="3"/><text x="28.5901%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.3401%" y="581" width="0.0528%" height="15" fill="rgb(236,175,2)" fg:x="1610" fg:w="3"/><text x="28.5901%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.3401%" y="565" width="0.0528%" height="15" fill="rgb(241,52,2)" fg:x="1610" fg:w="3"/><text x="28.5901%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.3401%" y="549" width="0.0528%" height="15" fill="rgb(248,140,14)" fg:x="1610" fg:w="3"/><text x="28.5901%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.3401%" y="533" width="0.0528%" height="15" fill="rgb(253,22,42)" fg:x="1610" fg:w="3"/><text x="28.5901%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.3401%" y="517" width="0.0528%" height="15" fill="rgb(234,61,47)" fg:x="1610" fg:w="3"/><text x="28.5901%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.3577%" y="501" width="0.0352%" height="15" fill="rgb(208,226,15)" fg:x="1611" fg:w="2"/><text x="28.6077%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.4105%" y="693" width="0.0528%" height="15" fill="rgb(217,221,4)" fg:x="1614" fg:w="3"/><text x="28.6605%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.4281%" y="677" width="0.0352%" height="15" fill="rgb(212,174,34)" fg:x="1615" fg:w="2"/><text x="28.6781%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.4281%" y="661" width="0.0352%" height="15" fill="rgb(253,83,4)" fg:x="1615" fg:w="2"/><text x="28.6781%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.4281%" y="645" width="0.0352%" height="15" fill="rgb(250,195,49)" fg:x="1615" fg:w="2"/><text x="28.6781%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.4281%" y="629" width="0.0352%" height="15" fill="rgb(241,192,25)" fg:x="1615" fg:w="2"/><text x="28.6781%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.4281%" y="613" width="0.0352%" height="15" fill="rgb(208,124,10)" fg:x="1615" fg:w="2"/><text x="28.6781%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="28.4281%" y="597" width="0.0352%" height="15" fill="rgb(222,33,0)" fg:x="1615" fg:w="2"/><text x="28.6781%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="28.4457%" y="581" width="0.0176%" height="15" fill="rgb(234,209,28)" fg:x="1616" fg:w="1"/><text x="28.6957%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.18%)</title><rect x="28.3049%" y="789" width="0.1760%" height="15" fill="rgb(224,11,23)" fg:x="1608" fg:w="10"/><text x="28.5549%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.18%)</title><rect x="28.3049%" y="773" width="0.1760%" height="15" fill="rgb(232,99,1)" fg:x="1608" fg:w="10"/><text x="28.5549%" y="783.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.18%)</title><rect x="28.3049%" y="757" width="0.1760%" height="15" fill="rgb(237,95,45)" fg:x="1608" fg:w="10"/><text x="28.5549%" y="767.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.18%)</title><rect x="28.3049%" y="741" width="0.1760%" height="15" fill="rgb(208,109,11)" fg:x="1608" fg:w="10"/><text x="28.5549%" y="751.50"></text></g><g><title>_int_realloc (10 samples, 0.18%)</title><rect x="28.3049%" y="725" width="0.1760%" height="15" fill="rgb(216,190,48)" fg:x="1608" fg:w="10"/><text x="28.5549%" y="735.50"></text></g><g><title>_int_malloc (5 samples, 0.09%)</title><rect x="28.3929%" y="709" width="0.0880%" height="15" fill="rgb(251,171,36)" fg:x="1613" fg:w="5"/><text x="28.6429%" y="719.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="28.4633%" y="693" width="0.0176%" height="15" fill="rgb(230,62,22)" fg:x="1617" fg:w="1"/><text x="28.7133%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.23%)</title><rect x="28.2873%" y="869" width="0.2288%" height="15" fill="rgb(225,114,35)" fg:x="1607" fg:w="13"/><text x="28.5373%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.23%)</title><rect x="28.2873%" y="853" width="0.2288%" height="15" fill="rgb(215,118,42)" fg:x="1607" fg:w="13"/><text x="28.5373%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.21%)</title><rect x="28.3049%" y="837" width="0.2112%" height="15" fill="rgb(243,119,21)" fg:x="1608" fg:w="12"/><text x="28.5549%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.21%)</title><rect x="28.3049%" y="821" width="0.2112%" height="15" fill="rgb(252,177,53)" fg:x="1608" fg:w="12"/><text x="28.5549%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.21%)</title><rect x="28.3049%" y="805" width="0.2112%" height="15" fill="rgb(237,209,29)" fg:x="1608" fg:w="12"/><text x="28.5549%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="28.4809%" y="789" width="0.0352%" height="15" fill="rgb(212,65,23)" fg:x="1618" fg:w="2"/><text x="28.7309%" y="799.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="28.4985%" y="773" width="0.0176%" height="15" fill="rgb(230,222,46)" fg:x="1619" fg:w="1"/><text x="28.7485%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.40%)</title><rect x="28.2873%" y="885" width="0.4049%" height="15" fill="rgb(215,135,32)" fg:x="1607" fg:w="23"/><text x="28.5373%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.18%)</title><rect x="28.5161%" y="869" width="0.1760%" height="15" fill="rgb(246,101,22)" fg:x="1620" fg:w="10"/><text x="28.7661%" y="879.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.16%)</title><rect x="28.5337%" y="853" width="0.1584%" height="15" fill="rgb(206,107,13)" fg:x="1621" fg:w="9"/><text x="28.7837%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.6217%" y="837" width="0.0704%" height="15" fill="rgb(250,100,44)" fg:x="1626" fg:w="4"/><text x="28.8717%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.6217%" y="821" width="0.0704%" height="15" fill="rgb(231,147,38)" fg:x="1626" fg:w="4"/><text x="28.8717%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.6217%" y="805" width="0.0704%" height="15" fill="rgb(229,8,40)" fg:x="1626" fg:w="4"/><text x="28.8717%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.6217%" y="789" width="0.0704%" height="15" fill="rgb(221,135,30)" fg:x="1626" fg:w="4"/><text x="28.8717%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.07%)</title><rect x="28.6217%" y="773" width="0.0704%" height="15" fill="rgb(249,193,18)" fg:x="1626" fg:w="4"/><text x="28.8717%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.6393%" y="757" width="0.0528%" height="15" fill="rgb(209,133,39)" fg:x="1627" fg:w="3"/><text x="28.8893%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.6393%" y="741" width="0.0528%" height="15" fill="rgb(232,100,14)" fg:x="1627" fg:w="3"/><text x="28.8893%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.6393%" y="725" width="0.0528%" height="15" fill="rgb(224,185,1)" fg:x="1627" fg:w="3"/><text x="28.8893%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="28.6393%" y="709" width="0.0528%" height="15" fill="rgb(223,139,8)" fg:x="1627" fg:w="3"/><text x="28.8893%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="28.6745%" y="693" width="0.0176%" height="15" fill="rgb(232,213,38)" fg:x="1629" fg:w="1"/><text x="28.9245%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="28.6745%" y="677" width="0.0176%" height="15" fill="rgb(207,94,22)" fg:x="1629" fg:w="1"/><text x="28.9245%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="28.6745%" y="661" width="0.0176%" height="15" fill="rgb(219,183,54)" fg:x="1629" fg:w="1"/><text x="28.9245%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (24 samples, 0.42%)</title><rect x="28.2873%" y="901" width="0.4225%" height="15" fill="rgb(216,185,54)" fg:x="1607" fg:w="24"/><text x="28.5373%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.02%)</title><rect x="28.6921%" y="885" width="0.0176%" height="15" fill="rgb(254,217,39)" fg:x="1630" fg:w="1"/><text x="28.9421%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="28.6921%" y="869" width="0.0176%" height="15" fill="rgb(240,178,23)" fg:x="1630" fg:w="1"/><text x="28.9421%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="28.7273%" y="853" width="0.0176%" height="15" fill="rgb(218,11,47)" fg:x="1632" fg:w="1"/><text x="28.9773%" y="863.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.02%)</title><rect x="28.9034%" y="757" width="0.0176%" height="15" fill="rgb(218,51,51)" fg:x="1642" fg:w="1"/><text x="29.1534%" y="767.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="28.9210%" y="757" width="0.0528%" height="15" fill="rgb(238,126,27)" fg:x="1643" fg:w="3"/><text x="29.1710%" y="767.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="28.9562%" y="741" width="0.0176%" height="15" fill="rgb(249,202,22)" fg:x="1645" fg:w="1"/><text x="29.2062%" y="751.50"></text></g><g><title>_int_realloc (25 samples, 0.44%)</title><rect x="28.7977%" y="773" width="0.4401%" height="15" fill="rgb(254,195,49)" fg:x="1636" fg:w="25"/><text x="29.0477%" y="783.50"></text></g><g><title>_int_malloc (15 samples, 0.26%)</title><rect x="28.9738%" y="757" width="0.2640%" height="15" fill="rgb(208,123,14)" fg:x="1646" fg:w="15"/><text x="29.2238%" y="767.50"></text></g><g><title>arena_for_chunk (3 samples, 0.05%)</title><rect x="29.2378%" y="773" width="0.0528%" height="15" fill="rgb(224,200,8)" fg:x="1661" fg:w="3"/><text x="29.4878%" y="783.50"></text></g><g><title>__GI___libc_realloc (30 samples, 0.53%)</title><rect x="28.7801%" y="789" width="0.5281%" height="15" fill="rgb(217,61,36)" fg:x="1635" fg:w="30"/><text x="29.0301%" y="799.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="29.2906%" y="773" width="0.0176%" height="15" fill="rgb(206,35,45)" fg:x="1664" fg:w="1"/><text x="29.5406%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.56%)</title><rect x="28.7801%" y="837" width="0.5633%" height="15" fill="rgb(217,65,33)" fg:x="1635" fg:w="32"/><text x="29.0301%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.56%)</title><rect x="28.7801%" y="821" width="0.5633%" height="15" fill="rgb(222,158,48)" fg:x="1635" fg:w="32"/><text x="29.0301%" y="831.50"></text></g><g><title>alloc::alloc::realloc (32 samples, 0.56%)</title><rect x="28.7801%" y="805" width="0.5633%" height="15" fill="rgb(254,2,54)" fg:x="1635" fg:w="32"/><text x="29.0301%" y="815.50"></text></g><g><title>__rdl_realloc (2 samples, 0.04%)</title><rect x="29.3082%" y="789" width="0.0352%" height="15" fill="rgb(250,143,38)" fg:x="1665" fg:w="2"/><text x="29.5582%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.04%)</title><rect x="29.3082%" y="773" width="0.0352%" height="15" fill="rgb(248,25,0)" fg:x="1665" fg:w="2"/><text x="29.5582%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.62%)</title><rect x="28.7449%" y="853" width="0.6161%" height="15" fill="rgb(206,152,27)" fg:x="1633" fg:w="35"/><text x="28.9949%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="29.3434%" y="837" width="0.0176%" height="15" fill="rgb(240,77,30)" fg:x="1667" fg:w="1"/><text x="29.5934%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.67%)</title><rect x="28.7097%" y="901" width="0.6689%" height="15" fill="rgb(231,5,3)" fg:x="1631" fg:w="38"/><text x="28.9597%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.67%)</title><rect x="28.7097%" y="885" width="0.6689%" height="15" fill="rgb(207,226,32)" fg:x="1631" fg:w="38"/><text x="28.9597%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.67%)</title><rect x="28.7097%" y="869" width="0.6689%" height="15" fill="rgb(222,207,47)" fg:x="1631" fg:w="38"/><text x="28.9597%" y="879.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="29.3610%" y="853" width="0.0176%" height="15" fill="rgb(229,115,45)" fg:x="1668" fg:w="1"/><text x="29.6110%" y="863.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="29.3610%" y="837" width="0.0176%" height="15" fill="rgb(224,191,6)" fg:x="1668" fg:w="1"/><text x="29.6110%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="29.3610%" y="821" width="0.0176%" height="15" fill="rgb(230,227,24)" fg:x="1668" fg:w="1"/><text x="29.6110%" y="831.50"></text></g><g><title>paranagram::utils::find_sum_inner (5 samples, 0.09%)</title><rect x="31.1389%" y="805" width="0.0880%" height="15" fill="rgb(228,80,19)" fg:x="1769" fg:w="5"/><text x="31.3889%" y="815.50"></text></g><g><title>checked_request2size (2 samples, 0.04%)</title><rect x="32.8111%" y="613" width="0.0352%" height="15" fill="rgb(247,229,0)" fg:x="1864" fg:w="2"/><text x="33.0611%" y="623.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.32%)</title><rect x="32.6351%" y="629" width="0.3168%" height="15" fill="rgb(237,194,15)" fg:x="1854" fg:w="18"/><text x="32.8851%" y="639.50"></text></g><g><title>tcache_get (6 samples, 0.11%)</title><rect x="32.8463%" y="613" width="0.1056%" height="15" fill="rgb(219,203,20)" fg:x="1866" fg:w="6"/><text x="33.0963%" y="623.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="32.9519%" y="629" width="0.0352%" height="15" fill="rgb(234,128,8)" fg:x="1872" fg:w="2"/><text x="33.2019%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.04%)</title><rect x="32.9519%" y="613" width="0.0352%" height="15" fill="rgb(248,202,8)" fg:x="1872" fg:w="2"/><text x="33.2019%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.49%)</title><rect x="32.5471%" y="725" width="0.4929%" height="15" fill="rgb(206,104,37)" fg:x="1849" fg:w="28"/><text x="32.7971%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.49%)</title><rect x="32.5471%" y="709" width="0.4929%" height="15" fill="rgb(223,8,27)" fg:x="1849" fg:w="28"/><text x="32.7971%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.49%)</title><rect x="32.5471%" y="693" width="0.4929%" height="15" fill="rgb(216,217,28)" fg:x="1849" fg:w="28"/><text x="32.7971%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.44%)</title><rect x="32.5999%" y="677" width="0.4401%" height="15" fill="rgb(249,199,1)" fg:x="1852" fg:w="25"/><text x="32.8499%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.44%)</title><rect x="32.5999%" y="661" width="0.4401%" height="15" fill="rgb(240,85,17)" fg:x="1852" fg:w="25"/><text x="32.8499%" y="671.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.44%)</title><rect x="32.5999%" y="645" width="0.4401%" height="15" fill="rgb(206,108,45)" fg:x="1852" fg:w="25"/><text x="32.8499%" y="655.50"></text></g><g><title>__rust_alloc (3 samples, 0.05%)</title><rect x="32.9872%" y="629" width="0.0528%" height="15" fill="rgb(245,210,41)" fg:x="1874" fg:w="3"/><text x="33.2372%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.67%)</title><rect x="32.4943%" y="789" width="0.6689%" height="15" fill="rgb(206,13,37)" fg:x="1846" fg:w="38"/><text x="32.7443%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.67%)</title><rect x="32.4943%" y="773" width="0.6689%" height="15" fill="rgb(250,61,18)" fg:x="1846" fg:w="38"/><text x="32.7443%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.67%)</title><rect x="32.4943%" y="757" width="0.6689%" height="15" fill="rgb(235,172,48)" fg:x="1846" fg:w="38"/><text x="32.7443%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.67%)</title><rect x="32.4943%" y="741" width="0.6689%" height="15" fill="rgb(249,201,17)" fg:x="1846" fg:w="38"/><text x="32.7443%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7 samples, 0.12%)</title><rect x="33.0400%" y="725" width="0.1232%" height="15" fill="rgb(219,208,6)" fg:x="1877" fg:w="7"/><text x="33.2900%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.12%)</title><rect x="33.0400%" y="709" width="0.1232%" height="15" fill="rgb(248,31,23)" fg:x="1877" fg:w="7"/><text x="33.2900%" y="719.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.12%)</title><rect x="33.0400%" y="693" width="0.1232%" height="15" fill="rgb(245,15,42)" fg:x="1877" fg:w="7"/><text x="33.2900%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="33.1808%" y="725" width="0.0176%" height="15" fill="rgb(222,217,39)" fg:x="1885" fg:w="1"/><text x="33.4308%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="33.1808%" y="709" width="0.0176%" height="15" fill="rgb(210,219,27)" fg:x="1885" fg:w="1"/><text x="33.4308%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="33.1984%" y="693" width="0.0176%" height="15" fill="rgb(252,166,36)" fg:x="1886" fg:w="1"/><text x="33.4484%" y="703.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.12%)</title><rect x="33.2160%" y="597" width="0.1232%" height="15" fill="rgb(245,132,34)" fg:x="1887" fg:w="7"/><text x="33.4660%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="33.2864%" y="581" width="0.0528%" height="15" fill="rgb(236,54,3)" fg:x="1891" fg:w="3"/><text x="33.5364%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="33.2864%" y="565" width="0.0528%" height="15" fill="rgb(241,173,43)" fg:x="1891" fg:w="3"/><text x="33.5364%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="33.2864%" y="549" width="0.0528%" height="15" fill="rgb(215,190,9)" fg:x="1891" fg:w="3"/><text x="33.5364%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3040%" y="533" width="0.0352%" height="15" fill="rgb(242,101,16)" fg:x="1892" fg:w="2"/><text x="33.5540%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3040%" y="517" width="0.0352%" height="15" fill="rgb(223,190,21)" fg:x="1892" fg:w="2"/><text x="33.5540%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3040%" y="501" width="0.0352%" height="15" fill="rgb(215,228,25)" fg:x="1892" fg:w="2"/><text x="33.5540%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3040%" y="485" width="0.0352%" height="15" fill="rgb(225,36,22)" fg:x="1892" fg:w="2"/><text x="33.5540%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.3216%" y="469" width="0.0176%" height="15" fill="rgb(251,106,46)" fg:x="1893" fg:w="1"/><text x="33.5716%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="581" width="0.0352%" height="15" fill="rgb(208,90,1)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="565" width="0.0352%" height="15" fill="rgb(243,10,4)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="549" width="0.0352%" height="15" fill="rgb(212,137,27)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="533" width="0.0352%" height="15" fill="rgb(231,220,49)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="517" width="0.0352%" height="15" fill="rgb(237,96,20)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="501" width="0.0352%" height="15" fill="rgb(239,229,30)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="485" width="0.0352%" height="15" fill="rgb(219,65,33)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="469" width="0.0352%" height="15" fill="rgb(243,134,7)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="453" width="0.0352%" height="15" fill="rgb(216,177,54)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="437" width="0.0352%" height="15" fill="rgb(211,160,20)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.3744%" y="421" width="0.0352%" height="15" fill="rgb(239,85,39)" fg:x="1896" fg:w="2"/><text x="33.6244%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.21%)</title><rect x="33.2160%" y="677" width="0.2112%" height="15" fill="rgb(232,125,22)" fg:x="1887" fg:w="12"/><text x="33.4660%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.21%)</title><rect x="33.2160%" y="661" width="0.2112%" height="15" fill="rgb(244,57,34)" fg:x="1887" fg:w="12"/><text x="33.4660%" y="671.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.21%)</title><rect x="33.2160%" y="645" width="0.2112%" height="15" fill="rgb(214,203,32)" fg:x="1887" fg:w="12"/><text x="33.4660%" y="655.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.21%)</title><rect x="33.2160%" y="629" width="0.2112%" height="15" fill="rgb(207,58,43)" fg:x="1887" fg:w="12"/><text x="33.4660%" y="639.50"></text></g><g><title>_int_realloc (12 samples, 0.21%)</title><rect x="33.2160%" y="613" width="0.2112%" height="15" fill="rgb(215,193,15)" fg:x="1887" fg:w="12"/><text x="33.4660%" y="623.50"></text></g><g><title>_int_malloc (5 samples, 0.09%)</title><rect x="33.3392%" y="597" width="0.0880%" height="15" fill="rgb(232,15,44)" fg:x="1894" fg:w="5"/><text x="33.5892%" y="607.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="33.4096%" y="581" width="0.0176%" height="15" fill="rgb(212,3,48)" fg:x="1898" fg:w="1"/><text x="33.6596%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="33.4272%" y="677" width="0.0176%" height="15" fill="rgb(218,128,7)" fg:x="1899" fg:w="1"/><text x="33.6772%" y="687.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="33.4272%" y="661" width="0.0176%" height="15" fill="rgb(226,216,39)" fg:x="1899" fg:w="1"/><text x="33.6772%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="33.4448%" y="677" width="0.0176%" height="15" fill="rgb(243,47,51)" fg:x="1900" fg:w="1"/><text x="33.6948%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.32%)</title><rect x="33.1632%" y="757" width="0.3168%" height="15" fill="rgb(241,183,40)" fg:x="1884" fg:w="18"/><text x="33.4132%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.32%)</title><rect x="33.1632%" y="741" width="0.3168%" height="15" fill="rgb(231,217,32)" fg:x="1884" fg:w="18"/><text x="33.4132%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.28%)</title><rect x="33.1984%" y="725" width="0.2816%" height="15" fill="rgb(229,61,38)" fg:x="1886" fg:w="16"/><text x="33.4484%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.28%)</title><rect x="33.1984%" y="709" width="0.2816%" height="15" fill="rgb(225,210,5)" fg:x="1886" fg:w="16"/><text x="33.4484%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.26%)</title><rect x="33.2160%" y="693" width="0.2640%" height="15" fill="rgb(231,79,45)" fg:x="1887" fg:w="15"/><text x="33.4660%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="33.4624%" y="677" width="0.0176%" height="15" fill="rgb(224,100,7)" fg:x="1901" fg:w="1"/><text x="33.7124%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (30 samples, 0.53%)</title><rect x="33.1632%" y="789" width="0.5281%" height="15" fill="rgb(241,198,18)" fg:x="1884" fg:w="30"/><text x="33.4132%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.53%)</title><rect x="33.1632%" y="773" width="0.5281%" height="15" fill="rgb(252,97,53)" fg:x="1884" fg:w="30"/><text x="33.4132%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.21%)</title><rect x="33.4800%" y="757" width="0.2112%" height="15" fill="rgb(220,88,7)" fg:x="1902" fg:w="12"/><text x="33.7300%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (10 samples, 0.18%)</title><rect x="33.5152%" y="741" width="0.1760%" height="15" fill="rgb(213,176,14)" fg:x="1904" fg:w="10"/><text x="33.7652%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.6560%" y="725" width="0.0352%" height="15" fill="rgb(246,73,7)" fg:x="1912" fg:w="2"/><text x="33.9060%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.6560%" y="709" width="0.0352%" height="15" fill="rgb(245,64,36)" fg:x="1912" fg:w="2"/><text x="33.9060%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.6560%" y="693" width="0.0352%" height="15" fill="rgb(245,80,10)" fg:x="1912" fg:w="2"/><text x="33.9060%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="33.6560%" y="677" width="0.0352%" height="15" fill="rgb(232,107,50)" fg:x="1912" fg:w="2"/><text x="33.9060%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.6736%" y="661" width="0.0176%" height="15" fill="rgb(253,3,0)" fg:x="1913" fg:w="1"/><text x="33.9236%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.6736%" y="645" width="0.0176%" height="15" fill="rgb(212,99,53)" fg:x="1913" fg:w="1"/><text x="33.9236%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.6736%" y="629" width="0.0176%" height="15" fill="rgb(249,111,54)" fg:x="1913" fg:w="1"/><text x="33.9236%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.6736%" y="613" width="0.0176%" height="15" fill="rgb(249,55,30)" fg:x="1913" fg:w="1"/><text x="33.9236%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.6736%" y="597" width="0.0176%" height="15" fill="rgb(237,47,42)" fg:x="1913" fg:w="1"/><text x="33.9236%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="33.7441%" y="741" width="0.0176%" height="15" fill="rgb(211,20,18)" fg:x="1917" fg:w="1"/><text x="33.9941%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="33.7617%" y="741" width="0.0352%" height="15" fill="rgb(231,203,46)" fg:x="1918" fg:w="2"/><text x="34.0117%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="34.3073%" y="645" width="0.0176%" height="15" fill="rgb(237,142,3)" fg:x="1949" fg:w="1"/><text x="34.5573%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="34.3249%" y="645" width="0.0528%" height="15" fill="rgb(241,107,1)" fg:x="1950" fg:w="3"/><text x="34.5749%" y="655.50"></text></g><g><title>_int_free (26 samples, 0.46%)</title><rect x="34.3778%" y="645" width="0.4577%" height="15" fill="rgb(229,83,13)" fg:x="1953" fg:w="26"/><text x="34.6278%" y="655.50"></text></g><g><title>tcache_put (3 samples, 0.05%)</title><rect x="34.7826%" y="629" width="0.0528%" height="15" fill="rgb(241,91,40)" fg:x="1976" fg:w="3"/><text x="35.0326%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="629" width="0.0176%" height="15" fill="rgb(225,3,45)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="613" width="0.0176%" height="15" fill="rgb(244,223,14)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="597" width="0.0176%" height="15" fill="rgb(224,124,37)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="581" width="0.0176%" height="15" fill="rgb(251,171,30)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="565" width="0.0176%" height="15" fill="rgb(236,46,54)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="549" width="0.0176%" height="15" fill="rgb(245,213,5)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="35.1875%" y="533" width="0.0176%" height="15" fill="rgb(230,144,27)" fg:x="1999" fg:w="1"/><text x="35.4375%" y="543.50"></text></g><g><title>checked_request2size (3 samples, 0.05%)</title><rect x="35.2051%" y="629" width="0.0528%" height="15" fill="rgb(220,86,6)" fg:x="2000" fg:w="3"/><text x="35.4551%" y="639.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="35.2579%" y="629" width="0.0176%" height="15" fill="rgb(240,20,13)" fg:x="2003" fg:w="1"/><text x="35.5079%" y="639.50"></text></g><g><title>_int_realloc (69 samples, 1.21%)</title><rect x="34.0785%" y="661" width="1.2146%" height="15" fill="rgb(217,89,34)" fg:x="1936" fg:w="69"/><text x="34.3285%" y="671.50"></text></g><g><title>_int_malloc (26 samples, 0.46%)</title><rect x="34.8354%" y="645" width="0.4577%" height="15" fill="rgb(229,13,5)" fg:x="1979" fg:w="26"/><text x="35.0854%" y="655.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="35.2755%" y="629" width="0.0176%" height="15" fill="rgb(244,67,35)" fg:x="2004" fg:w="1"/><text x="35.5255%" y="639.50"></text></g><g><title>__GI___libc_realloc (89 samples, 1.57%)</title><rect x="33.8321%" y="677" width="1.5666%" height="15" fill="rgb(221,40,2)" fg:x="1922" fg:w="89"/><text x="34.0821%" y="687.50"></text></g><g><title>checked_request2size (6 samples, 0.11%)</title><rect x="35.2931%" y="661" width="0.1056%" height="15" fill="rgb(237,157,21)" fg:x="2005" fg:w="6"/><text x="35.5431%" y="671.50"></text></g><g><title>__rdl_realloc (7 samples, 0.12%)</title><rect x="35.3987%" y="677" width="0.1232%" height="15" fill="rgb(222,94,11)" fg:x="2011" fg:w="7"/><text x="35.6487%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.07%)</title><rect x="35.4515%" y="661" width="0.0704%" height="15" fill="rgb(249,113,6)" fg:x="2014" fg:w="4"/><text x="35.7015%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 1.73%)</title><rect x="33.8321%" y="725" width="1.7250%" height="15" fill="rgb(238,137,36)" fg:x="1922" fg:w="98"/><text x="34.0821%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 1.73%)</title><rect x="33.8321%" y="709" width="1.7250%" height="15" fill="rgb(210,102,26)" fg:x="1922" fg:w="98"/><text x="34.0821%" y="719.50"></text></g><g><title>alloc::alloc::realloc (98 samples, 1.73%)</title><rect x="33.8321%" y="693" width="1.7250%" height="15" fill="rgb(218,30,30)" fg:x="1922" fg:w="98"/><text x="34.0821%" y="703.50"></text></g><g><title>__rust_realloc (2 samples, 0.04%)</title><rect x="35.5219%" y="677" width="0.0352%" height="15" fill="rgb(214,67,26)" fg:x="2018" fg:w="2"/><text x="35.7719%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (102 samples, 1.80%)</title><rect x="33.7969%" y="741" width="1.7955%" height="15" fill="rgb(251,9,53)" fg:x="1920" fg:w="102"/><text x="34.0469%" y="751.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.04%)</title><rect x="35.5571%" y="725" width="0.0352%" height="15" fill="rgb(228,204,25)" fg:x="2020" fg:w="2"/><text x="35.8071%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="35.5923%" y="741" width="0.0176%" height="15" fill="rgb(207,153,8)" fg:x="2022" fg:w="1"/><text x="35.8423%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="35.5923%" y="725" width="0.0176%" height="15" fill="rgb(242,9,16)" fg:x="2022" fg:w="1"/><text x="35.8423%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (111 samples, 1.95%)</title><rect x="33.6913%" y="773" width="1.9539%" height="15" fill="rgb(217,211,10)" fg:x="1914" fg:w="111"/><text x="33.9413%" y="783.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (111 samples, 1.95%)</title><rect x="33.6913%" y="757" width="1.9539%" height="15" fill="rgb(219,228,52)" fg:x="1914" fg:w="111"/><text x="33.9413%" y="767.50">a..</text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="35.6099%" y="741" width="0.0352%" height="15" fill="rgb(231,92,29)" fg:x="2023" fg:w="2"/><text x="35.8599%" y="751.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="35.6099%" y="725" width="0.0352%" height="15" fill="rgb(232,8,23)" fg:x="2023" fg:w="2"/><text x="35.8599%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="35.6099%" y="709" width="0.0352%" height="15" fill="rgb(216,211,34)" fg:x="2023" fg:w="2"/><text x="35.8599%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (112 samples, 1.97%)</title><rect x="33.6913%" y="789" width="1.9715%" height="15" fill="rgb(236,151,0)" fg:x="1914" fg:w="112"/><text x="33.9413%" y="799.50">a..</text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="35.6451%" y="773" width="0.0176%" height="15" fill="rgb(209,168,3)" fg:x="2025" fg:w="1"/><text x="35.8951%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="35.6627%" y="741" width="0.0880%" height="15" fill="rgb(208,129,28)" fg:x="2026" fg:w="5"/><text x="35.9127%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="35.6627%" y="725" width="0.0880%" height="15" fill="rgb(229,78,22)" fg:x="2026" fg:w="5"/><text x="35.9127%" y="735.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="35.6627%" y="709" width="0.0880%" height="15" fill="rgb(228,187,13)" fg:x="2026" fg:w="5"/><text x="35.9127%" y="719.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="35.6627%" y="693" width="0.0880%" height="15" fill="rgb(240,119,24)" fg:x="2026" fg:w="5"/><text x="35.9127%" y="703.50"></text></g><g><title>tcache_put (2 samples, 0.04%)</title><rect x="35.7155%" y="677" width="0.0352%" height="15" fill="rgb(209,194,42)" fg:x="2029" fg:w="2"/><text x="35.9655%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (6 samples, 0.11%)</title><rect x="35.6627%" y="789" width="0.1056%" height="15" fill="rgb(247,200,46)" fg:x="2026" fg:w="6"/><text x="35.9127%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (6 samples, 0.11%)</title><rect x="35.6627%" y="773" width="0.1056%" height="15" fill="rgb(218,76,16)" fg:x="2026" fg:w="6"/><text x="35.9127%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="35.6627%" y="757" width="0.1056%" height="15" fill="rgb(225,21,48)" fg:x="2026" fg:w="6"/><text x="35.9127%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="35.7507%" y="741" width="0.0176%" height="15" fill="rgb(239,223,50)" fg:x="2031" fg:w="1"/><text x="36.0007%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="35.7507%" y="725" width="0.0176%" height="15" fill="rgb(244,45,21)" fg:x="2031" fg:w="1"/><text x="36.0007%" y="735.50"></text></g><g><title>paranagram::utils::find_sum_inner (10 samples, 0.18%)</title><rect x="41.2251%" y="693" width="0.1760%" height="15" fill="rgb(232,33,43)" fg:x="2342" fg:w="10"/><text x="41.4751%" y="703.50"></text></g><g><title>checked_request2size (6 samples, 0.11%)</title><rect x="45.3969%" y="501" width="0.1056%" height="15" fill="rgb(209,8,3)" fg:x="2579" fg:w="6"/><text x="45.6469%" y="511.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.67%)</title><rect x="45.0801%" y="517" width="0.6689%" height="15" fill="rgb(214,25,53)" fg:x="2561" fg:w="38"/><text x="45.3301%" y="527.50"></text></g><g><title>tcache_get (14 samples, 0.25%)</title><rect x="45.5026%" y="501" width="0.2464%" height="15" fill="rgb(254,186,54)" fg:x="2585" fg:w="14"/><text x="45.7526%" y="511.50"></text></g><g><title>__rdl_alloc (3 samples, 0.05%)</title><rect x="45.7490%" y="517" width="0.0528%" height="15" fill="rgb(208,174,49)" fg:x="2599" fg:w="3"/><text x="45.9990%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.05%)</title><rect x="45.7490%" y="501" width="0.0528%" height="15" fill="rgb(233,191,51)" fg:x="2599" fg:w="3"/><text x="45.9990%" y="511.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="45.8018%" y="517" width="0.0352%" height="15" fill="rgb(222,134,10)" fg:x="2602" fg:w="2"/><text x="46.0518%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.93%)</title><rect x="44.9217%" y="613" width="0.9329%" height="15" fill="rgb(230,226,20)" fg:x="2552" fg:w="53"/><text x="45.1717%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.93%)</title><rect x="44.9217%" y="597" width="0.9329%" height="15" fill="rgb(251,111,25)" fg:x="2552" fg:w="53"/><text x="45.1717%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.93%)</title><rect x="44.9217%" y="581" width="0.9329%" height="15" fill="rgb(224,40,46)" fg:x="2552" fg:w="53"/><text x="45.1717%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.83%)</title><rect x="45.0273%" y="565" width="0.8273%" height="15" fill="rgb(236,108,47)" fg:x="2558" fg:w="47"/><text x="45.2773%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.83%)</title><rect x="45.0273%" y="549" width="0.8273%" height="15" fill="rgb(234,93,0)" fg:x="2558" fg:w="47"/><text x="45.2773%" y="559.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.83%)</title><rect x="45.0273%" y="533" width="0.8273%" height="15" fill="rgb(224,213,32)" fg:x="2558" fg:w="47"/><text x="45.2773%" y="543.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="45.8370%" y="517" width="0.0176%" height="15" fill="rgb(251,11,48)" fg:x="2604" fg:w="1"/><text x="46.0870%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (60 samples, 1.06%)</title><rect x="44.8865%" y="677" width="1.0562%" height="15" fill="rgb(236,173,5)" fg:x="2550" fg:w="60"/><text x="45.1365%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60 samples, 1.06%)</title><rect x="44.8865%" y="661" width="1.0562%" height="15" fill="rgb(230,95,12)" fg:x="2550" fg:w="60"/><text x="45.1365%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (60 samples, 1.06%)</title><rect x="44.8865%" y="645" width="1.0562%" height="15" fill="rgb(232,209,1)" fg:x="2550" fg:w="60"/><text x="45.1365%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (60 samples, 1.06%)</title><rect x="44.8865%" y="629" width="1.0562%" height="15" fill="rgb(232,6,1)" fg:x="2550" fg:w="60"/><text x="45.1365%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.09%)</title><rect x="45.8546%" y="613" width="0.0880%" height="15" fill="rgb(210,224,50)" fg:x="2605" fg:w="5"/><text x="46.1046%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.09%)</title><rect x="45.8546%" y="597" width="0.0880%" height="15" fill="rgb(228,127,35)" fg:x="2605" fg:w="5"/><text x="46.1046%" y="607.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.09%)</title><rect x="45.8546%" y="581" width="0.0880%" height="15" fill="rgb(245,102,45)" fg:x="2605" fg:w="5"/><text x="46.1046%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.04%)</title><rect x="46.0306%" y="597" width="0.0352%" height="15" fill="rgb(214,1,49)" fg:x="2615" fg:w="2"/><text x="46.2806%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.07%)</title><rect x="46.0306%" y="613" width="0.0704%" height="15" fill="rgb(226,163,40)" fg:x="2615" fg:w="4"/><text x="46.2806%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="46.0658%" y="597" width="0.0352%" height="15" fill="rgb(239,212,28)" fg:x="2617" fg:w="2"/><text x="46.3158%" y="607.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.02%)</title><rect x="46.1010%" y="485" width="0.0176%" height="15" fill="rgb(220,20,13)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="469" width="0.0176%" height="15" fill="rgb(210,164,35)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="453" width="0.0176%" height="15" fill="rgb(248,109,41)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="437" width="0.0176%" height="15" fill="rgb(238,23,50)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="421" width="0.0176%" height="15" fill="rgb(211,48,49)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="405" width="0.0176%" height="15" fill="rgb(223,36,21)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="389" width="0.0176%" height="15" fill="rgb(207,123,46)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="373" width="0.0176%" height="15" fill="rgb(240,218,32)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="357" width="0.0176%" height="15" fill="rgb(252,5,43)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1010%" y="341" width="0.0176%" height="15" fill="rgb(252,84,19)" fg:x="2619" fg:w="1"/><text x="46.3510%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="469" width="0.0528%" height="15" fill="rgb(243,152,39)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="453" width="0.0528%" height="15" fill="rgb(234,160,15)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="437" width="0.0528%" height="15" fill="rgb(237,34,20)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="421" width="0.0528%" height="15" fill="rgb(229,97,13)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="405" width="0.0528%" height="15" fill="rgb(234,71,50)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="389" width="0.0528%" height="15" fill="rgb(253,155,4)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="46.1538%" y="373" width="0.0528%" height="15" fill="rgb(222,185,37)" fg:x="2622" fg:w="3"/><text x="46.4038%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.1714%" y="357" width="0.0352%" height="15" fill="rgb(251,177,13)" fg:x="2623" fg:w="2"/><text x="46.4214%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.1714%" y="341" width="0.0352%" height="15" fill="rgb(250,179,40)" fg:x="2623" fg:w="2"/><text x="46.4214%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.1714%" y="325" width="0.0352%" height="15" fill="rgb(242,44,2)" fg:x="2623" fg:w="2"/><text x="46.4214%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1891%" y="309" width="0.0176%" height="15" fill="rgb(216,177,13)" fg:x="2624" fg:w="1"/><text x="46.4391%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.1891%" y="293" width="0.0176%" height="15" fill="rgb(216,106,43)" fg:x="2624" fg:w="1"/><text x="46.4391%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.12%)</title><rect x="46.1010%" y="565" width="0.1232%" height="15" fill="rgb(216,183,2)" fg:x="2619" fg:w="7"/><text x="46.3510%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.12%)</title><rect x="46.1010%" y="549" width="0.1232%" height="15" fill="rgb(249,75,3)" fg:x="2619" fg:w="7"/><text x="46.3510%" y="559.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.12%)</title><rect x="46.1010%" y="533" width="0.1232%" height="15" fill="rgb(219,67,39)" fg:x="2619" fg:w="7"/><text x="46.3510%" y="543.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.12%)</title><rect x="46.1010%" y="517" width="0.1232%" height="15" fill="rgb(253,228,2)" fg:x="2619" fg:w="7"/><text x="46.3510%" y="527.50"></text></g><g><title>_int_realloc (7 samples, 0.12%)</title><rect x="46.1010%" y="501" width="0.1232%" height="15" fill="rgb(235,138,27)" fg:x="2619" fg:w="7"/><text x="46.3510%" y="511.50"></text></g><g><title>_int_malloc (6 samples, 0.11%)</title><rect x="46.1186%" y="485" width="0.1056%" height="15" fill="rgb(236,97,51)" fg:x="2620" fg:w="6"/><text x="46.3686%" y="495.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="46.2067%" y="469" width="0.0176%" height="15" fill="rgb(240,80,30)" fg:x="2625" fg:w="1"/><text x="46.4567%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="46.2243%" y="565" width="0.0352%" height="15" fill="rgb(230,178,19)" fg:x="2626" fg:w="2"/><text x="46.4743%" y="575.50"></text></g><g><title>tcache_get (2 samples, 0.04%)</title><rect x="46.2243%" y="549" width="0.0352%" height="15" fill="rgb(210,190,27)" fg:x="2626" fg:w="2"/><text x="46.4743%" y="559.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="46.2595%" y="565" width="0.0352%" height="15" fill="rgb(222,107,31)" fg:x="2628" fg:w="2"/><text x="46.5095%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.04%)</title><rect x="46.2595%" y="549" width="0.0352%" height="15" fill="rgb(216,127,34)" fg:x="2628" fg:w="2"/><text x="46.5095%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.21%)</title><rect x="46.1010%" y="581" width="0.2112%" height="15" fill="rgb(234,116,52)" fg:x="2619" fg:w="12"/><text x="46.3510%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="46.2947%" y="565" width="0.0176%" height="15" fill="rgb(222,124,15)" fg:x="2630" fg:w="1"/><text x="46.5447%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.39%)</title><rect x="45.9426%" y="645" width="0.3873%" height="15" fill="rgb(231,179,28)" fg:x="2610" fg:w="22"/><text x="46.1926%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.39%)</title><rect x="45.9426%" y="629" width="0.3873%" height="15" fill="rgb(226,93,45)" fg:x="2610" fg:w="22"/><text x="46.1926%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.23%)</title><rect x="46.1010%" y="613" width="0.2288%" height="15" fill="rgb(215,8,51)" fg:x="2619" fg:w="13"/><text x="46.3510%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.23%)</title><rect x="46.1010%" y="597" width="0.2288%" height="15" fill="rgb(223,106,5)" fg:x="2619" fg:w="13"/><text x="46.3510%" y="607.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="46.3123%" y="581" width="0.0176%" height="15" fill="rgb(250,191,5)" fg:x="2631" fg:w="1"/><text x="46.5623%" y="591.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="46.3123%" y="565" width="0.0176%" height="15" fill="rgb(242,132,44)" fg:x="2631" fg:w="1"/><text x="46.5623%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="46.3123%" y="549" width="0.0176%" height="15" fill="rgb(251,152,29)" fg:x="2631" fg:w="1"/><text x="46.5623%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.12%)</title><rect x="46.3299%" y="645" width="0.1232%" height="15" fill="rgb(218,179,5)" fg:x="2632" fg:w="7"/><text x="46.5799%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.12%)</title><rect x="46.3299%" y="629" width="0.1232%" height="15" fill="rgb(227,67,19)" fg:x="2632" fg:w="7"/><text x="46.5799%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.4179%" y="613" width="0.0352%" height="15" fill="rgb(233,119,31)" fg:x="2637" fg:w="2"/><text x="46.6679%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.4179%" y="597" width="0.0352%" height="15" fill="rgb(241,120,22)" fg:x="2637" fg:w="2"/><text x="46.6679%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.4179%" y="581" width="0.0352%" height="15" fill="rgb(224,102,30)" fg:x="2637" fg:w="2"/><text x="46.6679%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.4179%" y="565" width="0.0352%" height="15" fill="rgb(210,164,37)" fg:x="2637" fg:w="2"/><text x="46.6679%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.4179%" y="549" width="0.0352%" height="15" fill="rgb(226,191,16)" fg:x="2637" fg:w="2"/><text x="46.6679%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="46.4179%" y="533" width="0.0352%" height="15" fill="rgb(214,40,45)" fg:x="2637" fg:w="2"/><text x="46.6679%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.4355%" y="517" width="0.0176%" height="15" fill="rgb(244,29,26)" fg:x="2638" fg:w="1"/><text x="46.6855%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="46.4355%" y="501" width="0.0176%" height="15" fill="rgb(216,16,5)" fg:x="2638" fg:w="1"/><text x="46.6855%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.55%)</title><rect x="45.9426%" y="661" width="0.5457%" height="15" fill="rgb(249,76,35)" fg:x="2610" fg:w="31"/><text x="46.1926%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.04%)</title><rect x="46.4531%" y="645" width="0.0352%" height="15" fill="rgb(207,11,44)" fg:x="2639" fg:w="2"/><text x="46.7031%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (34 samples, 0.60%)</title><rect x="45.9426%" y="677" width="0.5985%" height="15" fill="rgb(228,190,49)" fg:x="2610" fg:w="34"/><text x="46.1926%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3 samples, 0.05%)</title><rect x="46.4883%" y="661" width="0.0528%" height="15" fill="rgb(214,173,12)" fg:x="2641" fg:w="3"/><text x="46.7383%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="46.4883%" y="645" width="0.0528%" height="15" fill="rgb(218,26,35)" fg:x="2641" fg:w="3"/><text x="46.7383%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="46.5587%" y="629" width="0.0352%" height="15" fill="rgb(220,200,19)" fg:x="2645" fg:w="2"/><text x="46.8087%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="47.5797%" y="533" width="0.0352%" height="15" fill="rgb(239,95,49)" fg:x="2703" fg:w="2"/><text x="47.8297%" y="543.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.14%)</title><rect x="47.6149%" y="533" width="0.1408%" height="15" fill="rgb(235,85,53)" fg:x="2705" fg:w="8"/><text x="47.8649%" y="543.50"></text></g><g><title>_int_free (44 samples, 0.77%)</title><rect x="47.7557%" y="533" width="0.7745%" height="15" fill="rgb(233,133,31)" fg:x="2713" fg:w="44"/><text x="48.0057%" y="543.50"></text></g><g><title>tcache_put (3 samples, 0.05%)</title><rect x="48.4774%" y="517" width="0.0528%" height="15" fill="rgb(218,25,20)" fg:x="2754" fg:w="3"/><text x="48.7274%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="517" width="0.0528%" height="15" fill="rgb(252,210,38)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="501" width="0.0528%" height="15" fill="rgb(242,134,21)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="485" width="0.0528%" height="15" fill="rgb(213,28,48)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="469" width="0.0528%" height="15" fill="rgb(250,196,2)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="453" width="0.0528%" height="15" fill="rgb(227,5,17)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="437" width="0.0528%" height="15" fill="rgb(221,226,24)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="421" width="0.0528%" height="15" fill="rgb(211,5,48)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="405" width="0.0528%" height="15" fill="rgb(219,150,6)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="49.5335%" y="389" width="0.0528%" height="15" fill="rgb(251,46,16)" fg:x="2814" fg:w="3"/><text x="49.7835%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="49.5511%" y="373" width="0.0352%" height="15" fill="rgb(220,204,40)" fg:x="2815" fg:w="2"/><text x="49.8011%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="49.5687%" y="357" width="0.0176%" height="15" fill="rgb(211,85,2)" fg:x="2816" fg:w="1"/><text x="49.8187%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="49.5687%" y="341" width="0.0176%" height="15" fill="rgb(229,17,7)" fg:x="2816" fg:w="1"/><text x="49.8187%" y="351.50"></text></g><g><title>checked_request2size (2 samples, 0.04%)</title><rect x="49.5863%" y="517" width="0.0352%" height="15" fill="rgb(239,72,28)" fg:x="2817" fg:w="2"/><text x="49.8363%" y="527.50"></text></g><g><title>_int_realloc (144 samples, 2.53%)</title><rect x="47.1748%" y="549" width="2.5348%" height="15" fill="rgb(230,47,54)" fg:x="2680" fg:w="144"/><text x="47.4248%" y="559.50">_i..</text></g><g><title>_int_malloc (67 samples, 1.18%)</title><rect x="48.5302%" y="533" width="1.1794%" height="15" fill="rgb(214,50,8)" fg:x="2757" fg:w="67"/><text x="48.7802%" y="543.50"></text></g><g><title>tcache_put (5 samples, 0.09%)</title><rect x="49.6215%" y="517" width="0.0880%" height="15" fill="rgb(216,198,43)" fg:x="2819" fg:w="5"/><text x="49.8715%" y="527.50"></text></g><g><title>arena_for_chunk (6 samples, 0.11%)</title><rect x="49.7096%" y="549" width="0.1056%" height="15" fill="rgb(234,20,35)" fg:x="2824" fg:w="6"/><text x="49.9596%" y="559.50"></text></g><g><title>__GI___libc_realloc (174 samples, 3.06%)</title><rect x="46.8051%" y="565" width="3.0628%" height="15" fill="rgb(254,45,19)" fg:x="2659" fg:w="174"/><text x="47.0551%" y="575.50">__G..</text></g><g><title>checked_request2size (3 samples, 0.05%)</title><rect x="49.8152%" y="549" width="0.0528%" height="15" fill="rgb(219,14,44)" fg:x="2830" fg:w="3"/><text x="50.0652%" y="559.50"></text></g><g><title>__rdl_realloc (7 samples, 0.12%)</title><rect x="49.8680%" y="565" width="0.1232%" height="15" fill="rgb(217,220,26)" fg:x="2833" fg:w="7"/><text x="50.1180%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.05%)</title><rect x="49.9384%" y="549" width="0.0528%" height="15" fill="rgb(213,158,28)" fg:x="2837" fg:w="3"/><text x="50.1884%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (182 samples, 3.20%)</title><rect x="46.8051%" y="613" width="3.2037%" height="15" fill="rgb(252,51,52)" fg:x="2659" fg:w="182"/><text x="47.0551%" y="623.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (182 samples, 3.20%)</title><rect x="46.8051%" y="597" width="3.2037%" height="15" fill="rgb(246,89,16)" fg:x="2659" fg:w="182"/><text x="47.0551%" y="607.50">all..</text></g><g><title>alloc::alloc::realloc (182 samples, 3.20%)</title><rect x="46.8051%" y="581" width="3.2037%" height="15" fill="rgb(216,158,49)" fg:x="2659" fg:w="182"/><text x="47.0551%" y="591.50">all..</text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="49.9912%" y="565" width="0.0176%" height="15" fill="rgb(236,107,19)" fg:x="2840" fg:w="1"/><text x="50.2412%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (198 samples, 3.49%)</title><rect x="46.5939%" y="629" width="3.4853%" height="15" fill="rgb(228,185,30)" fg:x="2647" fg:w="198"/><text x="46.8439%" y="639.50">all..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.07%)</title><rect x="50.0088%" y="613" width="0.0704%" height="15" fill="rgb(246,134,8)" fg:x="2841" fg:w="4"/><text x="50.2588%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.04%)</title><rect x="50.0792%" y="629" width="0.0352%" height="15" fill="rgb(214,143,50)" fg:x="2845" fg:w="2"/><text x="50.3292%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.04%)</title><rect x="50.0792%" y="613" width="0.0352%" height="15" fill="rgb(228,75,8)" fg:x="2845" fg:w="2"/><text x="50.3292%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (205 samples, 3.61%)</title><rect x="46.5411%" y="661" width="3.6085%" height="15" fill="rgb(207,175,4)" fg:x="2644" fg:w="205"/><text x="46.7911%" y="671.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (205 samples, 3.61%)</title><rect x="46.5411%" y="645" width="3.6085%" height="15" fill="rgb(205,108,24)" fg:x="2644" fg:w="205"/><text x="46.7911%" y="655.50">allo..</text></g><g><title>core::cmp::max (2 samples, 0.04%)</title><rect x="50.1144%" y="629" width="0.0352%" height="15" fill="rgb(244,120,49)" fg:x="2847" fg:w="2"/><text x="50.3644%" y="639.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.04%)</title><rect x="50.1144%" y="613" width="0.0352%" height="15" fill="rgb(223,47,38)" fg:x="2847" fg:w="2"/><text x="50.3644%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="50.1144%" y="597" width="0.0352%" height="15" fill="rgb(229,179,11)" fg:x="2847" fg:w="2"/><text x="50.3644%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (208 samples, 3.66%)</title><rect x="46.5411%" y="677" width="3.6613%" height="15" fill="rgb(231,122,1)" fg:x="2644" fg:w="208"/><text x="46.7911%" y="687.50">allo..</text></g><g><title>core::ptr::write (3 samples, 0.05%)</title><rect x="50.1496%" y="661" width="0.0528%" height="15" fill="rgb(245,119,9)" fg:x="2849" fg:w="3"/><text x="50.3996%" y="671.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="50.2024%" y="597" width="0.0880%" height="15" fill="rgb(241,163,25)" fg:x="2852" fg:w="5"/><text x="50.4524%" y="607.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="50.2376%" y="581" width="0.0528%" height="15" fill="rgb(217,214,3)" fg:x="2854" fg:w="3"/><text x="50.4876%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.11%)</title><rect x="50.2024%" y="629" width="0.1056%" height="15" fill="rgb(240,86,28)" fg:x="2852" fg:w="6"/><text x="50.4524%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.11%)</title><rect x="50.2024%" y="613" width="0.1056%" height="15" fill="rgb(215,47,9)" fg:x="2852" fg:w="6"/><text x="50.4524%" y="623.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="50.2904%" y="597" width="0.0176%" height="15" fill="rgb(252,25,45)" fg:x="2857" fg:w="1"/><text x="50.5404%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="50.2904%" y="581" width="0.0176%" height="15" fill="rgb(251,164,9)" fg:x="2857" fg:w="1"/><text x="50.5404%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (7 samples, 0.12%)</title><rect x="50.2024%" y="677" width="0.1232%" height="15" fill="rgb(233,194,0)" fg:x="2852" fg:w="7"/><text x="50.4524%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (7 samples, 0.12%)</title><rect x="50.2024%" y="661" width="0.1232%" height="15" fill="rgb(249,111,24)" fg:x="2852" fg:w="7"/><text x="50.4524%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="50.2024%" y="645" width="0.1232%" height="15" fill="rgb(250,223,3)" fg:x="2852" fg:w="7"/><text x="50.4524%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="50.3080%" y="629" width="0.0176%" height="15" fill="rgb(236,178,37)" fg:x="2858" fg:w="1"/><text x="50.5580%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="50.3256%" y="677" width="0.0176%" height="15" fill="rgb(241,158,50)" fg:x="2859" fg:w="1"/><text x="50.5756%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="50.3256%" y="661" width="0.0176%" height="15" fill="rgb(213,121,41)" fg:x="2859" fg:w="1"/><text x="50.5756%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="50.3256%" y="645" width="0.0176%" height="15" fill="rgb(240,92,3)" fg:x="2859" fg:w="1"/><text x="50.5756%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="50.3256%" y="629" width="0.0176%" height="15" fill="rgb(205,123,3)" fg:x="2859" fg:w="1"/><text x="50.5756%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="50.3256%" y="613" width="0.0176%" height="15" fill="rgb(205,97,47)" fg:x="2859" fg:w="1"/><text x="50.5756%" y="623.50"></text></g><g><title>paranagram::utils::find_sum_inner (9 samples, 0.16%)</title><rect x="58.4932%" y="581" width="0.1584%" height="15" fill="rgb(247,152,14)" fg:x="3323" fg:w="9"/><text x="58.7432%" y="591.50"></text></g><g><title>checked_request2size (4 samples, 0.07%)</title><rect x="64.4077%" y="389" width="0.0704%" height="15" fill="rgb(248,195,53)" fg:x="3659" fg:w="4"/><text x="64.6577%" y="399.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.51%)</title><rect x="64.1084%" y="405" width="0.5105%" height="15" fill="rgb(226,201,16)" fg:x="3642" fg:w="29"/><text x="64.3584%" y="415.50"></text></g><g><title>tcache_get (8 samples, 0.14%)</title><rect x="64.4781%" y="389" width="0.1408%" height="15" fill="rgb(205,98,0)" fg:x="3663" fg:w="8"/><text x="64.7281%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.65%)</title><rect x="64.0732%" y="501" width="0.6513%" height="15" fill="rgb(214,191,48)" fg:x="3640" fg:w="37"/><text x="64.3232%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.65%)</title><rect x="64.0732%" y="485" width="0.6513%" height="15" fill="rgb(237,112,39)" fg:x="3640" fg:w="37"/><text x="64.3232%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.65%)</title><rect x="64.0732%" y="469" width="0.6513%" height="15" fill="rgb(247,203,27)" fg:x="3640" fg:w="37"/><text x="64.3232%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.63%)</title><rect x="64.0908%" y="453" width="0.6337%" height="15" fill="rgb(235,124,28)" fg:x="3641" fg:w="36"/><text x="64.3408%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.63%)</title><rect x="64.0908%" y="437" width="0.6337%" height="15" fill="rgb(208,207,46)" fg:x="3641" fg:w="36"/><text x="64.3408%" y="447.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.63%)</title><rect x="64.0908%" y="421" width="0.6337%" height="15" fill="rgb(234,176,4)" fg:x="3641" fg:w="36"/><text x="64.3408%" y="431.50"></text></g><g><title>__rdl_alloc (6 samples, 0.11%)</title><rect x="64.6189%" y="405" width="0.1056%" height="15" fill="rgb(230,133,28)" fg:x="3671" fg:w="6"/><text x="64.8689%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.11%)</title><rect x="64.6189%" y="389" width="0.1056%" height="15" fill="rgb(211,137,40)" fg:x="3671" fg:w="6"/><text x="64.8689%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.74%)</title><rect x="64.0556%" y="565" width="0.7393%" height="15" fill="rgb(254,35,13)" fg:x="3639" fg:w="42"/><text x="64.3056%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.74%)</title><rect x="64.0556%" y="549" width="0.7393%" height="15" fill="rgb(225,49,51)" fg:x="3639" fg:w="42"/><text x="64.3056%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.74%)</title><rect x="64.0556%" y="533" width="0.7393%" height="15" fill="rgb(251,10,15)" fg:x="3639" fg:w="42"/><text x="64.3056%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.74%)</title><rect x="64.0556%" y="517" width="0.7393%" height="15" fill="rgb(228,207,15)" fg:x="3639" fg:w="42"/><text x="64.3056%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.07%)</title><rect x="64.7245%" y="501" width="0.0704%" height="15" fill="rgb(241,99,19)" fg:x="3677" fg:w="4"/><text x="64.9745%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.07%)</title><rect x="64.7245%" y="485" width="0.0704%" height="15" fill="rgb(207,104,49)" fg:x="3677" fg:w="4"/><text x="64.9745%" y="495.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.07%)</title><rect x="64.7245%" y="469" width="0.0704%" height="15" fill="rgb(234,99,18)" fg:x="3677" fg:w="4"/><text x="64.9745%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.04%)</title><rect x="64.8125%" y="501" width="0.0352%" height="15" fill="rgb(213,191,49)" fg:x="3682" fg:w="2"/><text x="65.0625%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="64.8125%" y="485" width="0.0352%" height="15" fill="rgb(210,226,19)" fg:x="3682" fg:w="2"/><text x="65.0625%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="64.8829%" y="373" width="0.0176%" height="15" fill="rgb(229,97,18)" fg:x="3686" fg:w="1"/><text x="65.1329%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.07%)</title><rect x="64.8653%" y="453" width="0.0704%" height="15" fill="rgb(211,167,15)" fg:x="3685" fg:w="4"/><text x="65.1153%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.07%)</title><rect x="64.8653%" y="437" width="0.0704%" height="15" fill="rgb(210,169,34)" fg:x="3685" fg:w="4"/><text x="65.1153%" y="447.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.07%)</title><rect x="64.8653%" y="421" width="0.0704%" height="15" fill="rgb(241,121,31)" fg:x="3685" fg:w="4"/><text x="65.1153%" y="431.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.07%)</title><rect x="64.8653%" y="405" width="0.0704%" height="15" fill="rgb(232,40,11)" fg:x="3685" fg:w="4"/><text x="65.1153%" y="415.50"></text></g><g><title>_int_realloc (3 samples, 0.05%)</title><rect x="64.8829%" y="389" width="0.0528%" height="15" fill="rgb(205,86,26)" fg:x="3686" fg:w="3"/><text x="65.1329%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="64.9005%" y="373" width="0.0352%" height="15" fill="rgb(231,126,28)" fg:x="3687" fg:w="2"/><text x="65.1505%" y="383.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="64.9181%" y="357" width="0.0176%" height="15" fill="rgb(219,221,18)" fg:x="3688" fg:w="1"/><text x="65.1681%" y="367.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="64.9358%" y="453" width="0.0352%" height="15" fill="rgb(211,40,0)" fg:x="3689" fg:w="2"/><text x="65.1858%" y="463.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="64.9534%" y="437" width="0.0176%" height="15" fill="rgb(239,85,43)" fg:x="3690" fg:w="1"/><text x="65.2034%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="64.9710%" y="453" width="0.0176%" height="15" fill="rgb(231,55,21)" fg:x="3691" fg:w="1"/><text x="65.2210%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.21%)</title><rect x="64.7949%" y="533" width="0.2112%" height="15" fill="rgb(225,184,43)" fg:x="3681" fg:w="12"/><text x="65.0449%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.21%)</title><rect x="64.7949%" y="517" width="0.2112%" height="15" fill="rgb(251,158,41)" fg:x="3681" fg:w="12"/><text x="65.0449%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.16%)</title><rect x="64.8477%" y="501" width="0.1584%" height="15" fill="rgb(234,159,37)" fg:x="3684" fg:w="9"/><text x="65.0977%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.16%)</title><rect x="64.8477%" y="485" width="0.1584%" height="15" fill="rgb(216,204,22)" fg:x="3684" fg:w="9"/><text x="65.0977%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.16%)</title><rect x="64.8477%" y="469" width="0.1584%" height="15" fill="rgb(214,17,3)" fg:x="3684" fg:w="9"/><text x="65.0977%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="64.9886%" y="453" width="0.0176%" height="15" fill="rgb(212,111,17)" fg:x="3692" fg:w="1"/><text x="65.2386%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.12%)</title><rect x="65.0062%" y="533" width="0.1232%" height="15" fill="rgb(221,157,24)" fg:x="3693" fg:w="7"/><text x="65.2562%" y="543.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.09%)</title><rect x="65.0414%" y="517" width="0.0880%" height="15" fill="rgb(252,16,13)" fg:x="3695" fg:w="5"/><text x="65.2914%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="501" width="0.0176%" height="15" fill="rgb(221,62,2)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="485" width="0.0176%" height="15" fill="rgb(247,87,22)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="469" width="0.0176%" height="15" fill="rgb(215,73,9)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="453" width="0.0176%" height="15" fill="rgb(207,175,33)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="437" width="0.0176%" height="15" fill="rgb(243,129,54)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="421" width="0.0176%" height="15" fill="rgb(227,119,45)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="405" width="0.0176%" height="15" fill="rgb(205,109,36)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="389" width="0.0176%" height="15" fill="rgb(205,6,39)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="373" width="0.0176%" height="15" fill="rgb(221,32,16)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="65.1118%" y="357" width="0.0176%" height="15" fill="rgb(228,144,50)" fg:x="3699" fg:w="1"/><text x="65.3618%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (21 samples, 0.37%)</title><rect x="64.7949%" y="565" width="0.3697%" height="15" fill="rgb(229,201,53)" fg:x="3681" fg:w="21"/><text x="65.0449%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.37%)</title><rect x="64.7949%" y="549" width="0.3697%" height="15" fill="rgb(249,153,27)" fg:x="3681" fg:w="21"/><text x="65.0449%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.04%)</title><rect x="65.1294%" y="533" width="0.0352%" height="15" fill="rgb(227,106,25)" fg:x="3700" fg:w="2"/><text x="65.3794%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="65.2702%" y="517" width="0.0352%" height="15" fill="rgb(230,65,29)" fg:x="3708" fg:w="2"/><text x="65.5202%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.07%)</title><rect x="66.0095%" y="421" width="0.0704%" height="15" fill="rgb(221,57,46)" fg:x="3750" fg:w="4"/><text x="66.2595%" y="431.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.09%)</title><rect x="66.0799%" y="421" width="0.0880%" height="15" fill="rgb(229,161,17)" fg:x="3754" fg:w="5"/><text x="66.3299%" y="431.50"></text></g><g><title>_int_free (24 samples, 0.42%)</title><rect x="66.1679%" y="421" width="0.4225%" height="15" fill="rgb(222,213,11)" fg:x="3759" fg:w="24"/><text x="66.4179%" y="431.50"></text></g><g><title>tcache_put (4 samples, 0.07%)</title><rect x="66.5200%" y="405" width="0.0704%" height="15" fill="rgb(235,35,13)" fg:x="3779" fg:w="4"/><text x="66.7700%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="405" width="0.0528%" height="15" fill="rgb(233,158,34)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="389" width="0.0528%" height="15" fill="rgb(215,151,48)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="373" width="0.0528%" height="15" fill="rgb(229,84,14)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="357" width="0.0528%" height="15" fill="rgb(229,68,14)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="341" width="0.0528%" height="15" fill="rgb(243,106,26)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="325" width="0.0528%" height="15" fill="rgb(206,45,38)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="309" width="0.0528%" height="15" fill="rgb(226,6,15)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="293" width="0.0528%" height="15" fill="rgb(232,22,54)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.2417%" y="277" width="0.0528%" height="15" fill="rgb(229,222,32)" fg:x="3820" fg:w="3"/><text x="67.4917%" y="287.50"></text></g><g><title>checked_request2size (3 samples, 0.05%)</title><rect x="67.2945%" y="405" width="0.0528%" height="15" fill="rgb(228,62,29)" fg:x="3823" fg:w="3"/><text x="67.5445%" y="415.50"></text></g><g><title>tcache_put (5 samples, 0.09%)</title><rect x="67.3473%" y="405" width="0.0880%" height="15" fill="rgb(251,103,34)" fg:x="3826" fg:w="5"/><text x="67.5973%" y="415.50"></text></g><g><title>_int_realloc (101 samples, 1.78%)</title><rect x="65.6751%" y="437" width="1.7779%" height="15" fill="rgb(233,12,30)" fg:x="3731" fg:w="101"/><text x="65.9251%" y="447.50">_..</text></g><g><title>_int_malloc (49 samples, 0.86%)</title><rect x="66.5904%" y="421" width="0.8625%" height="15" fill="rgb(238,52,0)" fg:x="3783" fg:w="49"/><text x="66.8404%" y="431.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="67.4353%" y="405" width="0.0176%" height="15" fill="rgb(223,98,5)" fg:x="3831" fg:w="1"/><text x="67.6853%" y="415.50"></text></g><g><title>arena_for_chunk (6 samples, 0.11%)</title><rect x="67.4529%" y="437" width="0.1056%" height="15" fill="rgb(228,75,37)" fg:x="3832" fg:w="6"/><text x="67.7029%" y="447.50"></text></g><g><title>__GI___libc_realloc (125 samples, 2.20%)</title><rect x="65.3934%" y="453" width="2.2003%" height="15" fill="rgb(205,115,49)" fg:x="3715" fg:w="125"/><text x="65.6434%" y="463.50">_..</text></g><g><title>checked_request2size (2 samples, 0.04%)</title><rect x="67.5585%" y="437" width="0.0352%" height="15" fill="rgb(250,154,43)" fg:x="3838" fg:w="2"/><text x="67.8085%" y="447.50"></text></g><g><title>__rdl_realloc (5 samples, 0.09%)</title><rect x="67.5937%" y="453" width="0.0880%" height="15" fill="rgb(226,43,29)" fg:x="3840" fg:w="5"/><text x="67.8437%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.07%)</title><rect x="67.6113%" y="437" width="0.0704%" height="15" fill="rgb(249,228,39)" fg:x="3841" fg:w="4"/><text x="67.8613%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (134 samples, 2.36%)</title><rect x="65.3934%" y="501" width="2.3587%" height="15" fill="rgb(216,79,43)" fg:x="3715" fg:w="134"/><text x="65.6434%" y="511.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (134 samples, 2.36%)</title><rect x="65.3934%" y="485" width="2.3587%" height="15" fill="rgb(228,95,12)" fg:x="3715" fg:w="134"/><text x="65.6434%" y="495.50">a..</text></g><g><title>alloc::alloc::realloc (134 samples, 2.36%)</title><rect x="65.3934%" y="469" width="2.3587%" height="15" fill="rgb(249,221,15)" fg:x="3715" fg:w="134"/><text x="65.6434%" y="479.50">a..</text></g><g><title>__rust_realloc (4 samples, 0.07%)</title><rect x="67.6817%" y="453" width="0.0704%" height="15" fill="rgb(233,34,13)" fg:x="3845" fg:w="4"/><text x="67.9317%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="67.7522%" y="501" width="0.0352%" height="15" fill="rgb(214,103,39)" fg:x="3849" fg:w="2"/><text x="68.0022%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (144 samples, 2.53%)</title><rect x="65.3054%" y="517" width="2.5348%" height="15" fill="rgb(251,126,39)" fg:x="3710" fg:w="144"/><text x="65.5554%" y="527.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.05%)</title><rect x="67.7874%" y="501" width="0.0528%" height="15" fill="rgb(214,216,36)" fg:x="3851" fg:w="3"/><text x="68.0374%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.05%)</title><rect x="67.8402%" y="517" width="0.0528%" height="15" fill="rgb(220,221,8)" fg:x="3854" fg:w="3"/><text x="68.0902%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.05%)</title><rect x="67.8402%" y="501" width="0.0528%" height="15" fill="rgb(240,216,3)" fg:x="3854" fg:w="3"/><text x="68.0902%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (158 samples, 2.78%)</title><rect x="65.1646%" y="549" width="2.7812%" height="15" fill="rgb(232,218,17)" fg:x="3702" fg:w="158"/><text x="65.4146%" y="559.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (158 samples, 2.78%)</title><rect x="65.1646%" y="533" width="2.7812%" height="15" fill="rgb(229,163,45)" fg:x="3702" fg:w="158"/><text x="65.4146%" y="543.50">al..</text></g><g><title>core::cmp::max (3 samples, 0.05%)</title><rect x="67.8930%" y="517" width="0.0528%" height="15" fill="rgb(231,110,42)" fg:x="3857" fg:w="3"/><text x="68.1430%" y="527.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.05%)</title><rect x="67.8930%" y="501" width="0.0528%" height="15" fill="rgb(208,170,48)" fg:x="3857" fg:w="3"/><text x="68.1430%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.05%)</title><rect x="67.8930%" y="485" width="0.0528%" height="15" fill="rgb(239,116,25)" fg:x="3857" fg:w="3"/><text x="68.1430%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (160 samples, 2.82%)</title><rect x="65.1646%" y="565" width="2.8164%" height="15" fill="rgb(219,200,50)" fg:x="3702" fg:w="160"/><text x="65.4146%" y="575.50">al..</text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="67.9458%" y="549" width="0.0352%" height="15" fill="rgb(245,200,0)" fg:x="3860" fg:w="2"/><text x="68.1958%" y="559.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="67.9986%" y="469" width="0.0528%" height="15" fill="rgb(245,119,33)" fg:x="3863" fg:w="3"/><text x="68.2486%" y="479.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="68.0338%" y="453" width="0.0176%" height="15" fill="rgb(231,125,12)" fg:x="3865" fg:w="1"/><text x="68.2838%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.09%)</title><rect x="67.9810%" y="517" width="0.0880%" height="15" fill="rgb(216,96,41)" fg:x="3862" fg:w="5"/><text x="68.2310%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.09%)</title><rect x="67.9810%" y="501" width="0.0880%" height="15" fill="rgb(248,43,45)" fg:x="3862" fg:w="5"/><text x="68.2310%" y="511.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="67.9810%" y="485" width="0.0880%" height="15" fill="rgb(217,222,7)" fg:x="3862" fg:w="5"/><text x="68.2310%" y="495.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="68.0514%" y="469" width="0.0176%" height="15" fill="rgb(233,28,6)" fg:x="3866" fg:w="1"/><text x="68.3014%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (8 samples, 0.14%)</title><rect x="67.9810%" y="565" width="0.1408%" height="15" fill="rgb(231,218,15)" fg:x="3862" fg:w="8"/><text x="68.2310%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (8 samples, 0.14%)</title><rect x="67.9810%" y="549" width="0.1408%" height="15" fill="rgb(226,171,48)" fg:x="3862" fg:w="8"/><text x="68.2310%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.14%)</title><rect x="67.9810%" y="533" width="0.1408%" height="15" fill="rgb(235,201,9)" fg:x="3862" fg:w="8"/><text x="68.2310%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.05%)</title><rect x="68.0690%" y="517" width="0.0528%" height="15" fill="rgb(217,80,15)" fg:x="3867" fg:w="3"/><text x="68.3190%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="68.1042%" y="501" width="0.0176%" height="15" fill="rgb(219,152,8)" fg:x="3869" fg:w="1"/><text x="68.3542%" y="511.50"></text></g><g><title>paranagram::utils::find_sum_inner (2 samples, 0.04%)</title><rect x="73.7194%" y="469" width="0.0352%" height="15" fill="rgb(243,107,38)" fg:x="4188" fg:w="2"/><text x="73.9694%" y="479.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="77.5040%" y="277" width="0.0176%" height="15" fill="rgb(231,17,5)" fg:x="4403" fg:w="1"/><text x="77.7540%" y="287.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.19%)</title><rect x="77.4336%" y="293" width="0.1936%" height="15" fill="rgb(209,25,54)" fg:x="4399" fg:w="11"/><text x="77.6836%" y="303.50"></text></g><g><title>tcache_get (6 samples, 0.11%)</title><rect x="77.5216%" y="277" width="0.1056%" height="15" fill="rgb(219,0,2)" fg:x="4404" fg:w="6"/><text x="77.7716%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.28%)</title><rect x="77.3631%" y="453" width="0.2816%" height="15" fill="rgb(246,9,5)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.28%)</title><rect x="77.3631%" y="437" width="0.2816%" height="15" fill="rgb(226,159,4)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.28%)</title><rect x="77.3631%" y="421" width="0.2816%" height="15" fill="rgb(219,175,34)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.28%)</title><rect x="77.3631%" y="405" width="0.2816%" height="15" fill="rgb(236,10,46)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.28%)</title><rect x="77.3631%" y="389" width="0.2816%" height="15" fill="rgb(240,211,16)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.28%)</title><rect x="77.3631%" y="373" width="0.2816%" height="15" fill="rgb(205,3,43)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.28%)</title><rect x="77.3631%" y="357" width="0.2816%" height="15" fill="rgb(245,7,22)" fg:x="4395" fg:w="16"/><text x="77.6131%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.23%)</title><rect x="77.4159%" y="341" width="0.2288%" height="15" fill="rgb(239,132,32)" fg:x="4398" fg:w="13"/><text x="77.6659%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.23%)</title><rect x="77.4159%" y="325" width="0.2288%" height="15" fill="rgb(228,202,34)" fg:x="4398" fg:w="13"/><text x="77.6659%" y="335.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.23%)</title><rect x="77.4159%" y="309" width="0.2288%" height="15" fill="rgb(254,200,22)" fg:x="4398" fg:w="13"/><text x="77.6659%" y="319.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="77.6272%" y="293" width="0.0176%" height="15" fill="rgb(219,10,39)" fg:x="4410" fg:w="1"/><text x="77.8772%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="77.6448%" y="421" width="0.0176%" height="15" fill="rgb(226,210,39)" fg:x="4411" fg:w="1"/><text x="77.8948%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="77.6448%" y="405" width="0.0176%" height="15" fill="rgb(208,219,16)" fg:x="4411" fg:w="1"/><text x="77.8948%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="77.6448%" y="389" width="0.0176%" height="15" fill="rgb(216,158,51)" fg:x="4411" fg:w="1"/><text x="77.8948%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="77.6448%" y="373" width="0.0176%" height="15" fill="rgb(233,14,44)" fg:x="4411" fg:w="1"/><text x="77.8948%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="77.6448%" y="357" width="0.0176%" height="15" fill="rgb(237,97,39)" fg:x="4411" fg:w="1"/><text x="77.8948%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="77.6448%" y="341" width="0.0176%" height="15" fill="rgb(218,198,43)" fg:x="4411" fg:w="1"/><text x="77.8948%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (2 samples, 0.04%)</title><rect x="77.6448%" y="453" width="0.0352%" height="15" fill="rgb(231,104,20)" fg:x="4411" fg:w="2"/><text x="77.8948%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="77.6448%" y="437" width="0.0352%" height="15" fill="rgb(254,36,13)" fg:x="4411" fg:w="2"/><text x="77.8948%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="77.6624%" y="421" width="0.0176%" height="15" fill="rgb(248,14,50)" fg:x="4412" fg:w="1"/><text x="77.9124%" y="431.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.02%)</title><rect x="77.6624%" y="405" width="0.0176%" height="15" fill="rgb(217,107,29)" fg:x="4412" fg:w="1"/><text x="77.9124%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="77.6976%" y="405" width="0.0176%" height="15" fill="rgb(251,169,33)" fg:x="4414" fg:w="1"/><text x="77.9476%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="77.7152%" y="405" width="0.0176%" height="15" fill="rgb(217,108,32)" fg:x="4415" fg:w="1"/><text x="77.9652%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="77.8912%" y="309" width="0.0176%" height="15" fill="rgb(219,66,42)" fg:x="4425" fg:w="1"/><text x="78.1412%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="77.9088%" y="309" width="0.0528%" height="15" fill="rgb(206,180,7)" fg:x="4426" fg:w="3"/><text x="78.1588%" y="319.50"></text></g><g><title>_int_free (8 samples, 0.14%)</title><rect x="77.9616%" y="309" width="0.1408%" height="15" fill="rgb(208,226,31)" fg:x="4429" fg:w="8"/><text x="78.2116%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="293" width="0.0176%" height="15" fill="rgb(218,26,49)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="277" width="0.0176%" height="15" fill="rgb(233,197,48)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="261" width="0.0176%" height="15" fill="rgb(252,181,51)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="245" width="0.0176%" height="15" fill="rgb(253,90,19)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="229" width="0.0176%" height="15" fill="rgb(215,171,30)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="213" width="0.0176%" height="15" fill="rgb(214,222,9)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="197" width="0.0176%" height="15" fill="rgb(223,3,22)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="181" width="0.0176%" height="15" fill="rgb(225,196,46)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="165" width="0.0176%" height="15" fill="rgb(209,110,37)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="149" width="0.0176%" height="15" fill="rgb(249,89,12)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="133" width="0.0176%" height="15" fill="rgb(226,27,33)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4017%" y="117" width="0.0176%" height="15" fill="rgb(213,82,22)" fg:x="4454" fg:w="1"/><text x="78.6517%" y="127.50"></text></g><g><title>sysmalloc (2 samples, 0.04%)</title><rect x="78.4193%" y="293" width="0.0352%" height="15" fill="rgb(248,140,0)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="303.50"></text></g><g><title>__glibc_morecore (2 samples, 0.04%)</title><rect x="78.4193%" y="277" width="0.0352%" height="15" fill="rgb(228,106,3)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="287.50"></text></g><g><title>__GI___sbrk (2 samples, 0.04%)</title><rect x="78.4193%" y="261" width="0.0352%" height="15" fill="rgb(209,23,37)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="271.50"></text></g><g><title>__GI___sbrk (2 samples, 0.04%)</title><rect x="78.4193%" y="245" width="0.0352%" height="15" fill="rgb(241,93,50)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="255.50"></text></g><g><title>__brk (2 samples, 0.04%)</title><rect x="78.4193%" y="229" width="0.0352%" height="15" fill="rgb(253,46,43)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="213" width="0.0352%" height="15" fill="rgb(226,206,43)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="197" width="0.0352%" height="15" fill="rgb(217,54,7)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="181" width="0.0352%" height="15" fill="rgb(223,5,52)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="165" width="0.0352%" height="15" fill="rgb(206,52,46)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="149" width="0.0352%" height="15" fill="rgb(253,136,11)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="133" width="0.0352%" height="15" fill="rgb(208,106,33)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="117" width="0.0352%" height="15" fill="rgb(206,54,4)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="101" width="0.0352%" height="15" fill="rgb(213,3,15)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="85" width="0.0352%" height="15" fill="rgb(252,211,39)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="69" width="0.0352%" height="15" fill="rgb(223,6,36)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.4193%" y="53" width="0.0352%" height="15" fill="rgb(252,169,45)" fg:x="4455" fg:w="2"/><text x="78.6693%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.4369%" y="37" width="0.0176%" height="15" fill="rgb(212,48,26)" fg:x="4456" fg:w="1"/><text x="78.6869%" y="47.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="78.4545%" y="293" width="0.0176%" height="15" fill="rgb(251,102,48)" fg:x="4457" fg:w="1"/><text x="78.7045%" y="303.50"></text></g><g><title>_int_realloc (37 samples, 0.65%)</title><rect x="77.8384%" y="325" width="0.6513%" height="15" fill="rgb(243,208,16)" fg:x="4422" fg:w="37"/><text x="78.0884%" y="335.50"></text></g><g><title>_int_malloc (22 samples, 0.39%)</title><rect x="78.1024%" y="309" width="0.3873%" height="15" fill="rgb(219,96,24)" fg:x="4437" fg:w="22"/><text x="78.3524%" y="319.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="78.4721%" y="293" width="0.0176%" height="15" fill="rgb(219,33,29)" fg:x="4458" fg:w="1"/><text x="78.7221%" y="303.50"></text></g><g><title>__GI___libc_realloc (42 samples, 0.74%)</title><rect x="77.7856%" y="341" width="0.7393%" height="15" fill="rgb(223,176,5)" fg:x="4419" fg:w="42"/><text x="78.0356%" y="351.50"></text></g><g><title>checked_request2size (2 samples, 0.04%)</title><rect x="78.4897%" y="325" width="0.0352%" height="15" fill="rgb(228,140,14)" fg:x="4459" fg:w="2"/><text x="78.7397%" y="335.50"></text></g><g><title>__rdl_realloc (2 samples, 0.04%)</title><rect x="78.5249%" y="341" width="0.0352%" height="15" fill="rgb(217,179,31)" fg:x="4461" fg:w="2"/><text x="78.7749%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.04%)</title><rect x="78.5249%" y="325" width="0.0352%" height="15" fill="rgb(230,9,30)" fg:x="4461" fg:w="2"/><text x="78.7749%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (45 samples, 0.79%)</title><rect x="77.7856%" y="389" width="0.7921%" height="15" fill="rgb(230,136,20)" fg:x="4419" fg:w="45"/><text x="78.0356%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (45 samples, 0.79%)</title><rect x="77.7856%" y="373" width="0.7921%" height="15" fill="rgb(215,210,22)" fg:x="4419" fg:w="45"/><text x="78.0356%" y="383.50"></text></g><g><title>alloc::alloc::realloc (45 samples, 0.79%)</title><rect x="77.7856%" y="357" width="0.7921%" height="15" fill="rgb(218,43,5)" fg:x="4419" fg:w="45"/><text x="78.0356%" y="367.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="78.5601%" y="341" width="0.0176%" height="15" fill="rgb(216,11,5)" fg:x="4463" fg:w="1"/><text x="78.8101%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.86%)</title><rect x="77.7328%" y="405" width="0.8625%" height="15" fill="rgb(209,82,29)" fg:x="4416" fg:w="49"/><text x="77.9828%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="78.5777%" y="389" width="0.0176%" height="15" fill="rgb(244,115,12)" fg:x="4464" fg:w="1"/><text x="78.8277%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="78.5953%" y="405" width="0.0176%" height="15" fill="rgb(222,82,18)" fg:x="4465" fg:w="1"/><text x="78.8453%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="78.5953%" y="389" width="0.0176%" height="15" fill="rgb(249,227,8)" fg:x="4465" fg:w="1"/><text x="78.8453%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (57 samples, 1.00%)</title><rect x="77.6800%" y="437" width="1.0033%" height="15" fill="rgb(253,141,45)" fg:x="4413" fg:w="57"/><text x="77.9300%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (57 samples, 1.00%)</title><rect x="77.6800%" y="421" width="1.0033%" height="15" fill="rgb(234,184,4)" fg:x="4413" fg:w="57"/><text x="77.9300%" y="431.50"></text></g><g><title>core::cmp::max (4 samples, 0.07%)</title><rect x="78.6129%" y="405" width="0.0704%" height="15" fill="rgb(218,194,23)" fg:x="4466" fg:w="4"/><text x="78.8629%" y="415.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.07%)</title><rect x="78.6129%" y="389" width="0.0704%" height="15" fill="rgb(235,66,41)" fg:x="4466" fg:w="4"/><text x="78.8629%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.07%)</title><rect x="78.6129%" y="373" width="0.0704%" height="15" fill="rgb(245,217,1)" fg:x="4466" fg:w="4"/><text x="78.8629%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (59 samples, 1.04%)</title><rect x="77.6800%" y="453" width="1.0385%" height="15" fill="rgb(229,91,1)" fg:x="4413" fg:w="59"/><text x="77.9300%" y="463.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="78.6833%" y="437" width="0.0352%" height="15" fill="rgb(207,101,30)" fg:x="4470" fg:w="2"/><text x="78.9333%" y="447.50"></text></g><g><title>__GI___libc_free (3 samples, 0.05%)</title><rect x="78.7185%" y="373" width="0.0528%" height="15" fill="rgb(223,82,49)" fg:x="4472" fg:w="3"/><text x="78.9685%" y="383.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="78.7185%" y="357" width="0.0528%" height="15" fill="rgb(218,167,17)" fg:x="4472" fg:w="3"/><text x="78.9685%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="78.7185%" y="453" width="0.0704%" height="15" fill="rgb(208,103,14)" fg:x="4472" fg:w="4"/><text x="78.9685%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="78.7185%" y="437" width="0.0704%" height="15" fill="rgb(238,20,8)" fg:x="4472" fg:w="4"/><text x="78.9685%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="78.7185%" y="421" width="0.0704%" height="15" fill="rgb(218,80,54)" fg:x="4472" fg:w="4"/><text x="78.9685%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="78.7185%" y="405" width="0.0704%" height="15" fill="rgb(240,144,17)" fg:x="4472" fg:w="4"/><text x="78.9685%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="78.7185%" y="389" width="0.0704%" height="15" fill="rgb(245,27,50)" fg:x="4472" fg:w="4"/><text x="78.9685%" y="399.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="78.7713%" y="373" width="0.0176%" height="15" fill="rgb(251,51,7)" fg:x="4475" fg:w="1"/><text x="79.0213%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="81.9046%" y="245" width="0.0176%" height="15" fill="rgb(245,217,29)" fg:x="4653" fg:w="1"/><text x="82.1546%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="81.9046%" y="229" width="0.0176%" height="15" fill="rgb(221,176,29)" fg:x="4653" fg:w="1"/><text x="82.1546%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.05%)</title><rect x="81.8870%" y="325" width="0.0528%" height="15" fill="rgb(212,180,24)" fg:x="4652" fg:w="3"/><text x="82.1370%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.05%)</title><rect x="81.8870%" y="309" width="0.0528%" height="15" fill="rgb(254,24,2)" fg:x="4652" fg:w="3"/><text x="82.1370%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.05%)</title><rect x="81.8870%" y="293" width="0.0528%" height="15" fill="rgb(230,100,2)" fg:x="4652" fg:w="3"/><text x="82.1370%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="81.9046%" y="277" width="0.0352%" height="15" fill="rgb(219,142,25)" fg:x="4653" fg:w="2"/><text x="82.1546%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="81.9046%" y="261" width="0.0352%" height="15" fill="rgb(240,73,43)" fg:x="4653" fg:w="2"/><text x="82.1546%" y="271.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="81.9222%" y="245" width="0.0176%" height="15" fill="rgb(214,114,15)" fg:x="4654" fg:w="1"/><text x="82.1722%" y="255.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="81.9222%" y="229" width="0.0176%" height="15" fill="rgb(207,130,4)" fg:x="4654" fg:w="1"/><text x="82.1722%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="81.9222%" y="213" width="0.0176%" height="15" fill="rgb(221,25,40)" fg:x="4654" fg:w="1"/><text x="82.1722%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (4 samples, 0.07%)</title><rect x="81.8870%" y="341" width="0.0704%" height="15" fill="rgb(241,184,7)" fg:x="4652" fg:w="4"/><text x="82.1370%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.02%)</title><rect x="81.9398%" y="325" width="0.0176%" height="15" fill="rgb(235,159,4)" fg:x="4655" fg:w="1"/><text x="82.1898%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="81.9398%" y="309" width="0.0176%" height="15" fill="rgb(214,87,48)" fg:x="4655" fg:w="1"/><text x="82.1898%" y="319.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="81.9574%" y="229" width="0.0176%" height="15" fill="rgb(246,198,24)" fg:x="4656" fg:w="1"/><text x="82.2074%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="81.9574%" y="293" width="0.0352%" height="15" fill="rgb(209,66,40)" fg:x="4656" fg:w="2"/><text x="82.2074%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="81.9574%" y="277" width="0.0352%" height="15" fill="rgb(233,147,39)" fg:x="4656" fg:w="2"/><text x="82.2074%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="81.9574%" y="261" width="0.0352%" height="15" fill="rgb(231,145,52)" fg:x="4656" fg:w="2"/><text x="82.2074%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="81.9574%" y="245" width="0.0352%" height="15" fill="rgb(206,20,26)" fg:x="4656" fg:w="2"/><text x="82.2074%" y="255.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="81.9750%" y="229" width="0.0176%" height="15" fill="rgb(238,220,4)" fg:x="4657" fg:w="1"/><text x="82.2250%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="81.9750%" y="213" width="0.0176%" height="15" fill="rgb(252,195,42)" fg:x="4657" fg:w="1"/><text x="82.2250%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.05%)</title><rect x="81.9574%" y="341" width="0.0528%" height="15" fill="rgb(209,10,6)" fg:x="4656" fg:w="3"/><text x="82.2074%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.05%)</title><rect x="81.9574%" y="325" width="0.0528%" height="15" fill="rgb(229,3,52)" fg:x="4656" fg:w="3"/><text x="82.2074%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.05%)</title><rect x="81.9574%" y="309" width="0.0528%" height="15" fill="rgb(253,49,37)" fg:x="4656" fg:w="3"/><text x="82.2074%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="81.9926%" y="293" width="0.0176%" height="15" fill="rgb(240,103,49)" fg:x="4658" fg:w="1"/><text x="82.2426%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="81.9926%" y="277" width="0.0176%" height="15" fill="rgb(250,182,30)" fg:x="4658" fg:w="1"/><text x="82.2426%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.0102%" y="341" width="0.0176%" height="15" fill="rgb(248,8,30)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="82.0102%" y="325" width="0.0176%" height="15" fill="rgb(237,120,30)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.0102%" y="309" width="0.0176%" height="15" fill="rgb(221,146,34)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="82.0102%" y="293" width="0.0176%" height="15" fill="rgb(242,55,13)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="82.0102%" y="277" width="0.0176%" height="15" fill="rgb(242,112,31)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="82.0102%" y="261" width="0.0176%" height="15" fill="rgb(249,192,27)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="82.0102%" y="245" width="0.0176%" height="15" fill="rgb(208,204,44)" fg:x="4659" fg:w="1"/><text x="82.2602%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (15 samples, 0.26%)</title><rect x="82.0278%" y="277" width="0.2640%" height="15" fill="rgb(208,93,54)" fg:x="4660" fg:w="15"/><text x="82.2778%" y="287.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (8 samples, 0.14%)</title><rect x="82.1510%" y="261" width="0.1408%" height="15" fill="rgb(242,1,31)" fg:x="4667" fg:w="8"/><text x="82.4010%" y="271.50"></text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (8 samples, 0.14%)</title><rect x="82.1510%" y="245" width="0.1408%" height="15" fill="rgb(241,83,25)" fg:x="4667" fg:w="8"/><text x="82.4010%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.35%)</title><rect x="82.0278%" y="293" width="0.3521%" height="15" fill="rgb(205,169,50)" fg:x="4660" fg:w="20"/><text x="82.2778%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (5 samples, 0.09%)</title><rect x="82.2919%" y="277" width="0.0880%" height="15" fill="rgb(239,186,37)" fg:x="4675" fg:w="5"/><text x="82.5419%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.09%)</title><rect x="82.2919%" y="261" width="0.0880%" height="15" fill="rgb(205,221,10)" fg:x="4675" fg:w="5"/><text x="82.5419%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.37%)</title><rect x="82.0278%" y="325" width="0.3697%" height="15" fill="rgb(218,196,15)" fg:x="4660" fg:w="21"/><text x="82.2778%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.37%)</title><rect x="82.0278%" y="309" width="0.3697%" height="15" fill="rgb(218,196,35)" fg:x="4660" fg:w="21"/><text x="82.2778%" y="319.50"></text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="82.3799%" y="293" width="0.0176%" height="15" fill="rgb(233,63,24)" fg:x="4680" fg:w="1"/><text x="82.6299%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (204 samples, 3.59%)</title><rect x="78.8418%" y="389" width="3.5909%" height="15" fill="rgb(225,8,4)" fg:x="4479" fg:w="204"/><text x="79.0918%" y="399.50">&lt;cor..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (91 samples, 1.60%)</title><rect x="80.8308%" y="373" width="1.6018%" height="15" fill="rgb(234,105,35)" fg:x="4592" fg:w="91"/><text x="81.0808%" y="383.50"></text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (91 samples, 1.60%)</title><rect x="80.8308%" y="357" width="1.6018%" height="15" fill="rgb(236,21,32)" fg:x="4592" fg:w="91"/><text x="81.0808%" y="367.50"></text></g><g><title>paranagram::utils::find_sum_inner (23 samples, 0.40%)</title><rect x="82.0278%" y="341" width="0.4049%" height="15" fill="rgb(228,109,6)" fg:x="4660" fg:w="23"/><text x="82.2778%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (2 samples, 0.04%)</title><rect x="82.3975%" y="325" width="0.0352%" height="15" fill="rgb(229,215,31)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (2 samples, 0.04%)</title><rect x="82.3975%" y="309" width="0.0352%" height="15" fill="rgb(221,52,54)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="82.3975%" y="293" width="0.0352%" height="15" fill="rgb(252,129,43)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="82.3975%" y="277" width="0.0352%" height="15" fill="rgb(248,183,27)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="82.3975%" y="261" width="0.0352%" height="15" fill="rgb(250,0,22)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="271.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="82.3975%" y="245" width="0.0352%" height="15" fill="rgb(213,166,10)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="255.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="82.3975%" y="229" width="0.0352%" height="15" fill="rgb(207,163,36)" fg:x="4681" fg:w="2"/><text x="82.6475%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (49 samples, 0.86%)</title><rect x="82.4327%" y="373" width="0.8625%" height="15" fill="rgb(208,122,22)" fg:x="4683" fg:w="49"/><text x="82.6827%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (257 samples, 4.52%)</title><rect x="78.8065%" y="405" width="4.5239%" height="15" fill="rgb(207,104,49)" fg:x="4477" fg:w="257"/><text x="79.0565%" y="415.50">&lt;core..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (51 samples, 0.90%)</title><rect x="82.4327%" y="389" width="0.8977%" height="15" fill="rgb(248,211,50)" fg:x="4683" fg:w="51"/><text x="82.6827%" y="399.50"></text></g><g><title>paranagram::utils::find_sum_inner (2 samples, 0.04%)</title><rect x="83.2952%" y="373" width="0.0352%" height="15" fill="rgb(217,13,45)" fg:x="4732" fg:w="2"/><text x="83.5452%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (258 samples, 4.54%)</title><rect x="78.8065%" y="437" width="4.5415%" height="15" fill="rgb(211,216,49)" fg:x="4477" fg:w="258"/><text x="79.0565%" y="447.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (258 samples, 4.54%)</title><rect x="78.8065%" y="421" width="4.5415%" height="15" fill="rgb(221,58,53)" fg:x="4477" fg:w="258"/><text x="79.0565%" y="431.50">&lt;core..</text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="83.3304%" y="405" width="0.0176%" height="15" fill="rgb(220,112,41)" fg:x="4734" fg:w="1"/><text x="83.5804%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="83.3480%" y="437" width="0.0176%" height="15" fill="rgb(236,38,28)" fg:x="4735" fg:w="1"/><text x="83.5980%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="83.3480%" y="421" width="0.0176%" height="15" fill="rgb(227,195,22)" fg:x="4735" fg:w="1"/><text x="83.5980%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="83.3480%" y="405" width="0.0176%" height="15" fill="rgb(214,55,33)" fg:x="4735" fg:w="1"/><text x="83.5980%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="83.3480%" y="389" width="0.0176%" height="15" fill="rgb(248,80,13)" fg:x="4735" fg:w="1"/><text x="83.5980%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="83.3480%" y="373" width="0.0176%" height="15" fill="rgb(238,52,6)" fg:x="4735" fg:w="1"/><text x="83.5980%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="83.3480%" y="357" width="0.0176%" height="15" fill="rgb(224,198,47)" fg:x="4735" fg:w="1"/><text x="83.5980%" y="367.50"></text></g><g><title>_int_free (15 samples, 0.26%)</title><rect x="83.4184%" y="341" width="0.2640%" height="15" fill="rgb(233,171,20)" fg:x="4739" fg:w="15"/><text x="83.6684%" y="351.50"></text></g><g><title>__GI___libc_free (18 samples, 0.32%)</title><rect x="83.4008%" y="357" width="0.3168%" height="15" fill="rgb(241,30,25)" fg:x="4738" fg:w="18"/><text x="83.6508%" y="367.50"></text></g><g><title>arena_for_chunk (2 samples, 0.04%)</title><rect x="83.6825%" y="341" width="0.0352%" height="15" fill="rgb(207,171,38)" fg:x="4754" fg:w="2"/><text x="83.9325%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.33%)</title><rect x="83.4008%" y="389" width="0.3344%" height="15" fill="rgb(234,70,1)" fg:x="4738" fg:w="19"/><text x="83.6508%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.33%)</title><rect x="83.4008%" y="373" width="0.3344%" height="15" fill="rgb(232,178,18)" fg:x="4738" fg:w="19"/><text x="83.6508%" y="383.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="83.7177%" y="357" width="0.0176%" height="15" fill="rgb(241,78,40)" fg:x="4756" fg:w="1"/><text x="83.9677%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="83.7177%" y="341" width="0.0176%" height="15" fill="rgb(222,35,25)" fg:x="4756" fg:w="1"/><text x="83.9677%" y="351.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (572 samples, 10.07%)</title><rect x="73.6842%" y="485" width="10.0686%" height="15" fill="rgb(207,92,16)" fg:x="4186" fg:w="572"/><text x="73.9342%" y="495.50">core::iter::ada..</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (568 samples, 10.00%)</title><rect x="73.7546%" y="469" width="9.9982%" height="15" fill="rgb(216,59,51)" fg:x="4190" fg:w="568"/><text x="74.0046%" y="479.50">paranagram::ut..</text></g><g><title>paranagram::utils::find_sum_inner (282 samples, 4.96%)</title><rect x="78.7889%" y="453" width="4.9639%" height="15" fill="rgb(213,80,28)" fg:x="4476" fg:w="282"/><text x="79.0389%" y="463.50">parana..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (22 samples, 0.39%)</title><rect x="83.3656%" y="437" width="0.3873%" height="15" fill="rgb(220,93,7)" fg:x="4736" fg:w="22"/><text x="83.6156%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (22 samples, 0.39%)</title><rect x="83.3656%" y="421" width="0.3873%" height="15" fill="rgb(225,24,44)" fg:x="4736" fg:w="22"/><text x="83.6156%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.39%)</title><rect x="83.3656%" y="405" width="0.3873%" height="15" fill="rgb(243,74,40)" fg:x="4736" fg:w="22"/><text x="83.6156%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="83.7353%" y="389" width="0.0176%" height="15" fill="rgb(228,39,7)" fg:x="4757" fg:w="1"/><text x="83.9853%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (884 samples, 15.56%)</title><rect x="68.2098%" y="501" width="15.5606%" height="15" fill="rgb(227,79,8)" fg:x="3875" fg:w="884"/><text x="68.4598%" y="511.50">&lt;core::iter::adapters::e..</text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="83.7529%" y="485" width="0.0176%" height="15" fill="rgb(236,58,11)" fg:x="4758" fg:w="1"/><text x="84.0029%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (170 samples, 2.99%)</title><rect x="83.7705%" y="485" width="2.9924%" height="15" fill="rgb(249,63,35)" fg:x="4759" fg:w="170"/><text x="84.0205%" y="495.50">cor..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (171 samples, 3.01%)</title><rect x="83.7705%" y="501" width="3.0100%" height="15" fill="rgb(252,114,16)" fg:x="4759" fg:w="171"/><text x="84.0205%" y="511.50">cor..</text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="86.7629%" y="485" width="0.0176%" height="15" fill="rgb(254,151,24)" fg:x="4929" fg:w="1"/><text x="87.0129%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,061 samples, 18.68%)</title><rect x="68.1394%" y="549" width="18.6763%" height="15" fill="rgb(253,54,39)" fg:x="3871" fg:w="1061"/><text x="68.3894%" y="559.50">&lt;core::iter::adapters::filter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,061 samples, 18.68%)</title><rect x="68.1394%" y="533" width="18.6763%" height="15" fill="rgb(243,25,45)" fg:x="3871" fg:w="1061"/><text x="68.3894%" y="543.50">&lt;core::iter::adapters::enumer..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,061 samples, 18.68%)</title><rect x="68.1394%" y="517" width="18.6763%" height="15" fill="rgb(234,134,9)" fg:x="3871" fg:w="1061"/><text x="68.3894%" y="527.50">&lt;core::slice::iter::Iter&lt;T&gt; a..</text></g><g><title>paranagram::utils::find_sum_inner (2 samples, 0.04%)</title><rect x="86.7805%" y="501" width="0.0352%" height="15" fill="rgb(227,166,31)" fg:x="4930" fg:w="2"/><text x="87.0305%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.05%)</title><rect x="86.8157%" y="549" width="0.0528%" height="15" fill="rgb(245,143,41)" fg:x="4932" fg:w="3"/><text x="87.0657%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="86.8157%" y="533" width="0.0528%" height="15" fill="rgb(238,181,32)" fg:x="4932" fg:w="3"/><text x="87.0657%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="86.8157%" y="517" width="0.0528%" height="15" fill="rgb(224,113,18)" fg:x="4932" fg:w="3"/><text x="87.0657%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="86.8157%" y="501" width="0.0528%" height="15" fill="rgb(240,229,28)" fg:x="4932" fg:w="3"/><text x="87.0657%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="86.8333%" y="485" width="0.0352%" height="15" fill="rgb(250,185,3)" fg:x="4933" fg:w="2"/><text x="87.0833%" y="495.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="86.8509%" y="469" width="0.0176%" height="15" fill="rgb(212,59,25)" fg:x="4934" fg:w="1"/><text x="87.1009%" y="479.50"></text></g><g><title>_int_free (23 samples, 0.40%)</title><rect x="86.9565%" y="453" width="0.4049%" height="15" fill="rgb(221,87,20)" fg:x="4940" fg:w="23"/><text x="87.2065%" y="463.50"></text></g><g><title>__GI___libc_free (28 samples, 0.49%)</title><rect x="86.8861%" y="469" width="0.4929%" height="15" fill="rgb(213,74,28)" fg:x="4936" fg:w="28"/><text x="87.1361%" y="479.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="87.3614%" y="453" width="0.0176%" height="15" fill="rgb(224,132,34)" fg:x="4963" fg:w="1"/><text x="87.6114%" y="463.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1,647 samples, 28.99%)</title><rect x="58.4052%" y="597" width="28.9914%" height="15" fill="rgb(222,101,24)" fg:x="3318" fg:w="1647"/><text x="58.6552%" y="607.50">core::iter::adapters::filter_map::filter_map_fo..</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (1,633 samples, 28.74%)</title><rect x="58.6516%" y="581" width="28.7449%" height="15" fill="rgb(254,142,4)" fg:x="3332" fg:w="1633"/><text x="58.9016%" y="591.50">paranagram::utils::find_sum_inner::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner (1,095 samples, 19.27%)</title><rect x="68.1218%" y="565" width="19.2748%" height="15" fill="rgb(230,229,49)" fg:x="3870" fg:w="1095"/><text x="68.3718%" y="575.50">paranagram::utils::find_sum_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (30 samples, 0.53%)</title><rect x="86.8685%" y="549" width="0.5281%" height="15" fill="rgb(238,70,47)" fg:x="4935" fg:w="30"/><text x="87.1185%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (30 samples, 0.53%)</title><rect x="86.8685%" y="533" width="0.5281%" height="15" fill="rgb(231,160,17)" fg:x="4935" fg:w="30"/><text x="87.1185%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.53%)</title><rect x="86.8685%" y="517" width="0.5281%" height="15" fill="rgb(218,68,53)" fg:x="4935" fg:w="30"/><text x="87.1185%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.51%)</title><rect x="86.8861%" y="501" width="0.5105%" height="15" fill="rgb(236,111,10)" fg:x="4936" fg:w="29"/><text x="87.1361%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.51%)</title><rect x="86.8861%" y="485" width="0.5105%" height="15" fill="rgb(224,34,41)" fg:x="4936" fg:w="29"/><text x="87.1361%" y="495.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="87.3790%" y="469" width="0.0176%" height="15" fill="rgb(241,118,19)" fg:x="4964" fg:w="1"/><text x="87.6290%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="87.3790%" y="453" width="0.0176%" height="15" fill="rgb(238,129,25)" fg:x="4964" fg:w="1"/><text x="87.6290%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2,102 samples, 37.00%)</title><rect x="50.4665%" y="613" width="37.0005%" height="15" fill="rgb(238,22,31)" fg:x="2867" fg:w="2102"/><text x="50.7165%" y="623.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter..</text></g><g><title>paranagram::utils::find_sum_inner (4 samples, 0.07%)</title><rect x="87.3966%" y="597" width="0.0704%" height="15" fill="rgb(222,174,48)" fg:x="4965" fg:w="4"/><text x="87.6466%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (236 samples, 4.15%)</title><rect x="87.4670%" y="597" width="4.1542%" height="15" fill="rgb(206,152,40)" fg:x="4969" fg:w="236"/><text x="87.7170%" y="607.50">core:..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (241 samples, 4.24%)</title><rect x="87.4670%" y="613" width="4.2422%" height="15" fill="rgb(218,99,54)" fg:x="4969" fg:w="241"/><text x="87.7170%" y="623.50">core:..</text></g><g><title>paranagram::utils::find_sum_inner (5 samples, 0.09%)</title><rect x="91.6212%" y="597" width="0.0880%" height="15" fill="rgb(220,174,26)" fg:x="5205" fg:w="5"/><text x="91.8712%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,351 samples, 41.38%)</title><rect x="50.3961%" y="629" width="41.3836%" height="15" fill="rgb(245,116,9)" fg:x="2863" fg:w="2351"/><text x="50.6461%" y="639.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterato..</text></g><g><title>paranagram::utils::find_sum_inner (4 samples, 0.07%)</title><rect x="91.7092%" y="613" width="0.0704%" height="15" fill="rgb(209,72,35)" fg:x="5210" fg:w="4"/><text x="91.9592%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,356 samples, 41.47%)</title><rect x="50.3961%" y="661" width="41.4716%" height="15" fill="rgb(226,126,21)" fg:x="2863" fg:w="2356"/><text x="50.6461%" y="671.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,356 samples, 41.47%)</title><rect x="50.3961%" y="645" width="41.4716%" height="15" fill="rgb(227,192,1)" fg:x="2863" fg:w="2356"/><text x="50.6461%" y="655.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits..</text></g><g><title>paranagram::utils::find_sum_inner (5 samples, 0.09%)</title><rect x="91.7796%" y="629" width="0.0880%" height="15" fill="rgb(237,180,29)" fg:x="5214" fg:w="5"/><text x="92.0296%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="91.8676%" y="597" width="0.0352%" height="15" fill="rgb(230,197,35)" fg:x="5219" fg:w="2"/><text x="92.1176%" y="607.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="91.8852%" y="581" width="0.0176%" height="15" fill="rgb(246,193,31)" fg:x="5220" fg:w="1"/><text x="92.1352%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.05%)</title><rect x="91.8676%" y="661" width="0.0528%" height="15" fill="rgb(241,36,4)" fg:x="5219" fg:w="3"/><text x="92.1176%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="91.8676%" y="645" width="0.0528%" height="15" fill="rgb(241,130,17)" fg:x="5219" fg:w="3"/><text x="92.1176%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="91.8676%" y="629" width="0.0528%" height="15" fill="rgb(206,137,32)" fg:x="5219" fg:w="3"/><text x="92.1176%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="91.8676%" y="613" width="0.0528%" height="15" fill="rgb(237,228,51)" fg:x="5219" fg:w="3"/><text x="92.1176%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="91.9028%" y="597" width="0.0176%" height="15" fill="rgb(243,6,42)" fg:x="5221" fg:w="1"/><text x="92.1528%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="91.9028%" y="581" width="0.0176%" height="15" fill="rgb(251,74,28)" fg:x="5221" fg:w="1"/><text x="92.1528%" y="591.50"></text></g><g><title>_int_free (29 samples, 0.51%)</title><rect x="91.9908%" y="565" width="0.5105%" height="15" fill="rgb(218,20,49)" fg:x="5226" fg:w="29"/><text x="92.2408%" y="575.50"></text></g><g><title>__GI___libc_free (35 samples, 0.62%)</title><rect x="91.9380%" y="581" width="0.6161%" height="15" fill="rgb(238,28,14)" fg:x="5223" fg:w="35"/><text x="92.1880%" y="591.50"></text></g><g><title>arena_for_chunk (3 samples, 0.05%)</title><rect x="92.5013%" y="565" width="0.0528%" height="15" fill="rgb(229,40,46)" fg:x="5255" fg:w="3"/><text x="92.7513%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.65%)</title><rect x="91.9380%" y="613" width="0.6513%" height="15" fill="rgb(244,195,20)" fg:x="5223" fg:w="37"/><text x="92.1880%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.65%)</title><rect x="91.9380%" y="597" width="0.6513%" height="15" fill="rgb(253,56,35)" fg:x="5223" fg:w="37"/><text x="92.1880%" y="607.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="92.5541%" y="581" width="0.0352%" height="15" fill="rgb(210,149,44)" fg:x="5258" fg:w="2"/><text x="92.8041%" y="591.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2,929 samples, 51.56%)</title><rect x="41.0667%" y="709" width="51.5578%" height="15" fill="rgb(240,135,12)" fg:x="2333" fg:w="2929"/><text x="41.3167%" y="719.50">core::iter::adapters::filter_map::filter_map_fold::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (2,910 samples, 51.22%)</title><rect x="41.4012%" y="693" width="51.2234%" height="15" fill="rgb(251,24,50)" fg:x="2352" fg:w="2910"/><text x="41.6512%" y="703.50">paranagram::utils::find_sum_inner::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner (2,402 samples, 42.28%)</title><rect x="50.3432%" y="677" width="42.2813%" height="15" fill="rgb(243,200,47)" fg:x="2860" fg:w="2402"/><text x="50.5932%" y="687.50">paranagram::utils::find_sum_inner</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (40 samples, 0.70%)</title><rect x="91.9204%" y="661" width="0.7041%" height="15" fill="rgb(224,166,26)" fg:x="5222" fg:w="40"/><text x="92.1704%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (40 samples, 0.70%)</title><rect x="91.9204%" y="645" width="0.7041%" height="15" fill="rgb(233,0,47)" fg:x="5222" fg:w="40"/><text x="92.1704%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.70%)</title><rect x="91.9204%" y="629" width="0.7041%" height="15" fill="rgb(253,80,5)" fg:x="5222" fg:w="40"/><text x="92.1704%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="92.5893%" y="613" width="0.0352%" height="15" fill="rgb(214,133,25)" fg:x="5260" fg:w="2"/><text x="92.8393%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3,230 samples, 56.86%)</title><rect x="35.8212%" y="725" width="56.8562%" height="15" fill="rgb(209,27,14)" fg:x="2035" fg:w="3230"/><text x="36.0712%" y="735.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fol..</text></g><g><title>paranagram::utils::find_sum_inner (3 samples, 0.05%)</title><rect x="92.6245%" y="709" width="0.0528%" height="15" fill="rgb(219,102,51)" fg:x="5262" fg:w="3"/><text x="92.8745%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (170 samples, 2.99%)</title><rect x="92.6773%" y="709" width="2.9924%" height="15" fill="rgb(237,18,16)" fg:x="5265" fg:w="170"/><text x="92.9273%" y="719.50">cor..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (172 samples, 3.03%)</title><rect x="92.6773%" y="725" width="3.0276%" height="15" fill="rgb(241,85,17)" fg:x="5265" fg:w="172"/><text x="92.9273%" y="735.50">cor..</text></g><g><title>paranagram::utils::find_sum_inner (2 samples, 0.04%)</title><rect x="95.6698%" y="709" width="0.0352%" height="15" fill="rgb(236,90,42)" fg:x="5435" fg:w="2"/><text x="95.9198%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409 samples, 60.01%)</title><rect x="35.7860%" y="741" width="60.0070%" height="15" fill="rgb(249,57,21)" fg:x="2033" fg:w="3409"/><text x="36.0360%" y="751.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>paranagram::utils::find_sum_inner (5 samples, 0.09%)</title><rect x="95.7050%" y="725" width="0.0880%" height="15" fill="rgb(243,12,36)" fg:x="5437" fg:w="5"/><text x="95.9550%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,414 samples, 60.10%)</title><rect x="35.7860%" y="773" width="60.0951%" height="15" fill="rgb(253,128,47)" fg:x="2033" fg:w="3414"/><text x="36.0360%" y="783.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,414 samples, 60.10%)</title><rect x="35.7860%" y="757" width="60.0951%" height="15" fill="rgb(207,33,20)" fg:x="2033" fg:w="3414"/><text x="36.0360%" y="767.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>paranagram::utils::find_sum_inner (5 samples, 0.09%)</title><rect x="95.7930%" y="741" width="0.0880%" height="15" fill="rgb(233,215,35)" fg:x="5442" fg:w="5"/><text x="96.0430%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.04%)</title><rect x="95.8810%" y="773" width="0.0352%" height="15" fill="rgb(249,188,52)" fg:x="5447" fg:w="2"/><text x="96.1310%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="95.8810%" y="757" width="0.0352%" height="15" fill="rgb(225,12,32)" fg:x="5447" fg:w="2"/><text x="96.1310%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="95.8810%" y="741" width="0.0352%" height="15" fill="rgb(247,98,14)" fg:x="5447" fg:w="2"/><text x="96.1310%" y="751.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="95.8810%" y="725" width="0.0352%" height="15" fill="rgb(247,219,48)" fg:x="5447" fg:w="2"/><text x="96.1310%" y="735.50"></text></g><g><title>__GI___libc_free (21 samples, 0.37%)</title><rect x="95.9162%" y="693" width="0.3697%" height="15" fill="rgb(253,60,48)" fg:x="5449" fg:w="21"/><text x="96.1662%" y="703.50"></text></g><g><title>_int_free (20 samples, 0.35%)</title><rect x="95.9338%" y="677" width="0.3521%" height="15" fill="rgb(245,15,52)" fg:x="5450" fg:w="20"/><text x="96.1838%" y="687.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.07%)</title><rect x="96.2859%" y="693" width="0.0704%" height="15" fill="rgb(220,133,28)" fg:x="5470" fg:w="4"/><text x="96.5359%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.07%)</title><rect x="96.2859%" y="677" width="0.0704%" height="15" fill="rgb(217,180,4)" fg:x="5470" fg:w="4"/><text x="96.5359%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.48%)</title><rect x="95.9162%" y="725" width="0.4753%" height="15" fill="rgb(251,24,1)" fg:x="5449" fg:w="27"/><text x="96.1662%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.48%)</title><rect x="95.9162%" y="709" width="0.4753%" height="15" fill="rgb(212,185,49)" fg:x="5449" fg:w="27"/><text x="96.1662%" y="719.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="96.3563%" y="693" width="0.0352%" height="15" fill="rgb(215,175,22)" fg:x="5474" fg:w="2"/><text x="96.6063%" y="703.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (3,711 samples, 65.32%)</title><rect x="31.1037%" y="821" width="65.3230%" height="15" fill="rgb(250,205,14)" fg:x="1767" fg:w="3711"/><text x="31.3537%" y="831.50">core::iter::adapters::filter_map::filter_map_fold::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (3,704 samples, 65.20%)</title><rect x="31.2269%" y="805" width="65.1998%" height="15" fill="rgb(225,211,22)" fg:x="1774" fg:w="3704"/><text x="31.4769%" y="815.50">paranagram::utils::find_sum_inner::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner (3,446 samples, 60.66%)</title><rect x="35.7684%" y="789" width="60.6583%" height="15" fill="rgb(251,179,42)" fg:x="2032" fg:w="3446"/><text x="36.0184%" y="799.50">paranagram::utils::find_sum_inner</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (29 samples, 0.51%)</title><rect x="95.9162%" y="773" width="0.5105%" height="15" fill="rgb(208,216,51)" fg:x="5449" fg:w="29"/><text x="96.1662%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (29 samples, 0.51%)</title><rect x="95.9162%" y="757" width="0.5105%" height="15" fill="rgb(235,36,11)" fg:x="5449" fg:w="29"/><text x="96.1662%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.51%)</title><rect x="95.9162%" y="741" width="0.5105%" height="15" fill="rgb(213,189,28)" fg:x="5449" fg:w="29"/><text x="96.1662%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="96.3915%" y="725" width="0.0352%" height="15" fill="rgb(227,203,42)" fg:x="5476" fg:w="2"/><text x="96.6415%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3,810 samples, 67.07%)</title><rect x="29.3786%" y="837" width="67.0657%" height="15" fill="rgb(244,72,36)" fg:x="1669" fg:w="3810"/><text x="29.6286%" y="847.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{c..</text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="96.4267%" y="821" width="0.0176%" height="15" fill="rgb(213,53,17)" fg:x="5478" fg:w="1"/><text x="96.6767%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (38 samples, 0.67%)</title><rect x="96.4443%" y="837" width="0.6689%" height="15" fill="rgb(207,167,3)" fg:x="5479" fg:w="38"/><text x="96.6943%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (38 samples, 0.67%)</title><rect x="96.4443%" y="821" width="0.6689%" height="15" fill="rgb(216,98,30)" fg:x="5479" fg:w="38"/><text x="96.6943%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,849 samples, 67.75%)</title><rect x="29.3786%" y="853" width="67.7522%" height="15" fill="rgb(236,123,15)" fg:x="1669" fg:w="3849"/><text x="29.6286%" y="863.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>paranagram::utils::find_sum_inner (1 samples, 0.02%)</title><rect x="97.1132%" y="837" width="0.0176%" height="15" fill="rgb(248,81,50)" fg:x="5517" fg:w="1"/><text x="97.3632%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,851 samples, 67.79%)</title><rect x="29.3786%" y="885" width="67.7874%" height="15" fill="rgb(214,120,4)" fg:x="1669" fg:w="3851"/><text x="29.6286%" y="895.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,851 samples, 67.79%)</title><rect x="29.3786%" y="869" width="67.7874%" height="15" fill="rgb(208,179,34)" fg:x="1669" fg:w="3851"/><text x="29.6286%" y="879.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>paranagram::utils::find_sum_inner (2 samples, 0.04%)</title><rect x="97.1308%" y="853" width="0.0352%" height="15" fill="rgb(227,140,7)" fg:x="5518" fg:w="2"/><text x="97.3808%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,946 samples, 69.46%)</title><rect x="27.8120%" y="997" width="69.4596%" height="15" fill="rgb(214,22,6)" fg:x="1580" fg:w="3946"/><text x="28.0620%" y="1007.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,946 samples, 69.46%)</title><rect x="27.8120%" y="981" width="69.4596%" height="15" fill="rgb(207,137,27)" fg:x="1580" fg:w="3946"/><text x="28.0620%" y="991.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,946 samples, 69.46%)</title><rect x="27.8120%" y="965" width="69.4596%" height="15" fill="rgb(210,8,46)" fg:x="1580" fg:w="3946"/><text x="28.0620%" y="975.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3,945 samples, 69.44%)</title><rect x="27.8296%" y="949" width="69.4420%" height="15" fill="rgb(240,16,54)" fg:x="1581" fg:w="3945"/><text x="28.0796%" y="959.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closu..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (3,938 samples, 69.32%)</title><rect x="27.9528%" y="933" width="69.3188%" height="15" fill="rgb(211,209,29)" fg:x="1588" fg:w="3938"/><text x="28.2028%" y="943.50">core::iter::adapters::filter_map::filter_map_fold::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (3,936 samples, 69.28%)</title><rect x="27.9880%" y="917" width="69.2836%" height="15" fill="rgb(226,228,24)" fg:x="1590" fg:w="3936"/><text x="28.2380%" y="927.50">paranagram::utils::find_sum_inner::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner (3,857 samples, 67.89%)</title><rect x="29.3786%" y="901" width="67.8930%" height="15" fill="rgb(222,84,9)" fg:x="1669" fg:w="3857"/><text x="29.6286%" y="911.50">paranagram::utils::find_sum_inner</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (6 samples, 0.11%)</title><rect x="97.1660%" y="885" width="0.1056%" height="15" fill="rgb(234,203,30)" fg:x="5520" fg:w="6"/><text x="97.4160%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (6 samples, 0.11%)</title><rect x="97.1660%" y="869" width="0.1056%" height="15" fill="rgb(238,109,14)" fg:x="5520" fg:w="6"/><text x="97.4160%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.11%)</title><rect x="97.1660%" y="853" width="0.1056%" height="15" fill="rgb(233,206,34)" fg:x="5520" fg:w="6"/><text x="97.4160%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.11%)</title><rect x="97.1660%" y="837" width="0.1056%" height="15" fill="rgb(220,167,47)" fg:x="5520" fg:w="6"/><text x="97.4160%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.11%)</title><rect x="97.1660%" y="821" width="0.1056%" height="15" fill="rgb(238,105,10)" fg:x="5520" fg:w="6"/><text x="97.4160%" y="831.50"></text></g><g><title>__GI___libc_free (6 samples, 0.11%)</title><rect x="97.1660%" y="805" width="0.1056%" height="15" fill="rgb(213,227,17)" fg:x="5520" fg:w="6"/><text x="97.4160%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="97.1836%" y="789" width="0.0880%" height="15" fill="rgb(217,132,38)" fg:x="5521" fg:w="5"/><text x="97.4336%" y="799.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams (4,818 samples, 84.81%)</title><rect x="12.4978%" y="1269" width="84.8090%" height="15" fill="rgb(242,146,4)" fg:x="710" fg:w="4818"/><text x="12.7478%" y="1279.50">paranagram::Paranagram::generate_anagrams</text></g><g><title>paranagram::utils::find_sum (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1253" width="70.3045%" height="15" fill="rgb(212,61,9)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1263.50">paranagram::utils::find_sum</text></g><g><title>paranagram::utils::find_sum_inner (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1237" width="70.3045%" height="15" fill="rgb(247,126,22)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1247.50">paranagram::utils::find_sum_inner</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1221" width="70.3045%" height="15" fill="rgb(220,196,2)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1231.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1205" width="70.3045%" height="15" fill="rgb(208,46,4)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1215.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1189" width="70.3045%" height="15" fill="rgb(252,104,46)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1199.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1173" width="70.3045%" height="15" fill="rgb(237,152,48)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1183.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1157" width="70.3045%" height="15" fill="rgb(221,59,37)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1167.50">core::iter::adapters::filter_map::filter_map_fold::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (3,994 samples, 70.30%)</title><rect x="27.0023%" y="1141" width="70.3045%" height="15" fill="rgb(209,202,51)" fg:x="1534" fg:w="3994"/><text x="27.2523%" y="1151.50">paranagram::utils::find_sum_inner::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1125" width="69.9349%" height="15" fill="rgb(228,81,30)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1135.50">paranagram::utils::find_sum_inner</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1109" width="69.9349%" height="15" fill="rgb(227,42,39)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1119.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1093" width="69.9349%" height="15" fill="rgb(221,26,2)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1103.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1077" width="69.9349%" height="15" fill="rgb(254,61,31)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1087.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1061" width="69.9349%" height="15" fill="rgb(222,173,38)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1071.50">&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closur..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1045" width="69.9349%" height="15" fill="rgb(218,50,12)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1055.50">core::iter::adapters::filter_map::filter_map_fold::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner::{{closure}} (3,973 samples, 69.93%)</title><rect x="27.3719%" y="1029" width="69.9349%" height="15" fill="rgb(223,88,40)" fg:x="1555" fg:w="3973"/><text x="27.6219%" y="1039.50">paranagram::utils::find_sum_inner::{{closure}}</text></g><g><title>paranagram::utils::find_sum_inner (3,948 samples, 69.49%)</title><rect x="27.8120%" y="1013" width="69.4948%" height="15" fill="rgb(237,54,19)" fg:x="1580" fg:w="3948"/><text x="28.0620%" y="1023.50">paranagram::utils::find_sum_inner</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (2 samples, 0.04%)</title><rect x="97.2716%" y="997" width="0.0352%" height="15" fill="rgb(251,129,25)" fg:x="5526" fg:w="2"/><text x="97.5216%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::IndexAndWeight&gt;&gt; (2 samples, 0.04%)</title><rect x="97.2716%" y="981" width="0.0352%" height="15" fill="rgb(238,97,19)" fg:x="5526" fg:w="2"/><text x="97.5216%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="97.2716%" y="965" width="0.0352%" height="15" fill="rgb(240,169,18)" fg:x="5526" fg:w="2"/><text x="97.5216%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="97.2716%" y="949" width="0.0352%" height="15" fill="rgb(230,187,49)" fg:x="5526" fg:w="2"/><text x="97.5216%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="97.2716%" y="933" width="0.0352%" height="15" fill="rgb(209,44,26)" fg:x="5526" fg:w="2"/><text x="97.5216%" y="943.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="97.2716%" y="917" width="0.0352%" height="15" fill="rgb(244,0,6)" fg:x="5526" fg:w="2"/><text x="97.5216%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="97.3948%" y="1029" width="0.0176%" height="15" fill="rgb(248,18,21)" fg:x="5533" fg:w="1"/><text x="97.6448%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="97.3948%" y="1013" width="0.0176%" height="15" fill="rgb(245,180,19)" fg:x="5533" fg:w="1"/><text x="97.6448%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="97.3948%" y="997" width="0.0176%" height="15" fill="rgb(252,118,36)" fg:x="5533" fg:w="1"/><text x="97.6448%" y="1007.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.02%)</title><rect x="97.3948%" y="981" width="0.0176%" height="15" fill="rgb(210,224,19)" fg:x="5533" fg:w="1"/><text x="97.6448%" y="991.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.12%)</title><rect x="97.3420%" y="1109" width="0.1232%" height="15" fill="rgb(218,30,24)" fg:x="5530" fg:w="7"/><text x="97.5920%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.12%)</title><rect x="97.3420%" y="1093" width="0.1232%" height="15" fill="rgb(219,75,50)" fg:x="5530" fg:w="7"/><text x="97.5920%" y="1103.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.12%)</title><rect x="97.3420%" y="1077" width="0.1232%" height="15" fill="rgb(234,72,50)" fg:x="5530" fg:w="7"/><text x="97.5920%" y="1087.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (7 samples, 0.12%)</title><rect x="97.3420%" y="1061" width="0.1232%" height="15" fill="rgb(219,100,48)" fg:x="5530" fg:w="7"/><text x="97.5920%" y="1071.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.11%)</title><rect x="97.3596%" y="1045" width="0.1056%" height="15" fill="rgb(253,5,41)" fg:x="5531" fg:w="6"/><text x="97.6096%" y="1055.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.05%)</title><rect x="97.4124%" y="1029" width="0.0528%" height="15" fill="rgb(247,181,11)" fg:x="5534" fg:w="3"/><text x="97.6624%" y="1039.50"></text></g><g><title>core::slice::memchr::memchr_aligned (3 samples, 0.05%)</title><rect x="97.4124%" y="1013" width="0.0528%" height="15" fill="rgb(222,223,25)" fg:x="5534" fg:w="3"/><text x="97.6624%" y="1023.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.04%)</title><rect x="97.4300%" y="997" width="0.0352%" height="15" fill="rgb(214,198,28)" fg:x="5535" fg:w="2"/><text x="97.6800%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="97.4828%" y="965" width="0.0176%" height="15" fill="rgb(230,46,43)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="97.4828%" y="949" width="0.0176%" height="15" fill="rgb(233,65,53)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="97.4828%" y="933" width="0.0176%" height="15" fill="rgb(221,121,27)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="97.4828%" y="917" width="0.0176%" height="15" fill="rgb(247,70,47)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="97.4828%" y="901" width="0.0176%" height="15" fill="rgb(228,85,35)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="97.4828%" y="885" width="0.0176%" height="15" fill="rgb(209,50,18)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.4828%" y="869" width="0.0176%" height="15" fill="rgb(250,19,35)" fg:x="5538" fg:w="1"/><text x="97.7328%" y="879.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.04%)</title><rect x="97.4828%" y="1061" width="0.0352%" height="15" fill="rgb(253,107,29)" fg:x="5538" fg:w="2"/><text x="97.7328%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.04%)</title><rect x="97.4828%" y="1045" width="0.0352%" height="15" fill="rgb(252,179,29)" fg:x="5538" fg:w="2"/><text x="97.7328%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.04%)</title><rect x="97.4828%" y="1029" width="0.0352%" height="15" fill="rgb(238,194,6)" fg:x="5538" fg:w="2"/><text x="97.7328%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="97.4828%" y="1013" width="0.0352%" height="15" fill="rgb(238,164,29)" fg:x="5538" fg:w="2"/><text x="97.7328%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="97.4828%" y="997" width="0.0352%" height="15" fill="rgb(224,25,9)" fg:x="5538" fg:w="2"/><text x="97.7328%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="97.4828%" y="981" width="0.0352%" height="15" fill="rgb(244,153,23)" fg:x="5538" fg:w="2"/><text x="97.7328%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="97.5004%" y="965" width="0.0176%" height="15" fill="rgb(212,203,14)" fg:x="5539" fg:w="1"/><text x="97.7504%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="97.5004%" y="949" width="0.0176%" height="15" fill="rgb(220,164,20)" fg:x="5539" fg:w="1"/><text x="97.7504%" y="959.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.02%)</title><rect x="97.5004%" y="933" width="0.0176%" height="15" fill="rgb(222,203,48)" fg:x="5539" fg:w="1"/><text x="97.7504%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="97.5180%" y="1061" width="0.0176%" height="15" fill="rgb(215,159,22)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5180%" y="1045" width="0.0176%" height="15" fill="rgb(216,183,47)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="97.5180%" y="1029" width="0.0176%" height="15" fill="rgb(229,195,25)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.5180%" y="1013" width="0.0176%" height="15" fill="rgb(224,132,51)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.5180%" y="997" width="0.0176%" height="15" fill="rgb(240,63,7)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.5180%" y="981" width="0.0176%" height="15" fill="rgb(249,182,41)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="991.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.5180%" y="965" width="0.0176%" height="15" fill="rgb(243,47,26)" fg:x="5540" fg:w="1"/><text x="97.7680%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (1 samples, 0.02%)</title><rect x="97.5356%" y="1061" width="0.0176%" height="15" fill="rgb(233,48,2)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.02%)</title><rect x="97.5356%" y="1045" width="0.0176%" height="15" fill="rgb(244,165,34)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="1055.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (1 samples, 0.02%)</title><rect x="97.5356%" y="1029" width="0.0176%" height="15" fill="rgb(207,89,7)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="1039.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.02%)</title><rect x="97.5356%" y="1013" width="0.0176%" height="15" fill="rgb(244,117,36)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="1023.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.02%)</title><rect x="97.5356%" y="997" width="0.0176%" height="15" fill="rgb(226,144,34)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="1007.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="97.5356%" y="981" width="0.0176%" height="15" fill="rgb(213,23,19)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="991.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="97.5356%" y="965" width="0.0176%" height="15" fill="rgb(217,75,12)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.02%)</title><rect x="97.5356%" y="949" width="0.0176%" height="15" fill="rgb(224,159,17)" fg:x="5541" fg:w="1"/><text x="97.7856%" y="959.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="97.5709%" y="997" width="0.0176%" height="15" fill="rgb(217,118,1)" fg:x="5543" fg:w="1"/><text x="97.8209%" y="1007.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (1 samples, 0.02%)</title><rect x="97.5709%" y="981" width="0.0176%" height="15" fill="rgb(232,180,48)" fg:x="5543" fg:w="1"/><text x="97.8209%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (1 samples, 0.02%)</title><rect x="97.6941%" y="869" width="0.0176%" height="15" fill="rgb(230,27,33)" fg:x="5550" fg:w="1"/><text x="97.9441%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="97.6941%" y="853" width="0.0176%" height="15" fill="rgb(205,31,21)" fg:x="5550" fg:w="1"/><text x="97.9441%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="97.6941%" y="837" width="0.0176%" height="15" fill="rgb(253,59,4)" fg:x="5550" fg:w="1"/><text x="97.9441%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.02%)</title><rect x="97.7117%" y="853" width="0.0176%" height="15" fill="rgb(224,201,9)" fg:x="5551" fg:w="1"/><text x="97.9617%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (2 samples, 0.04%)</title><rect x="97.7117%" y="869" width="0.0352%" height="15" fill="rgb(229,206,30)" fg:x="5551" fg:w="2"/><text x="97.9617%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="97.7293%" y="853" width="0.0176%" height="15" fill="rgb(212,67,47)" fg:x="5552" fg:w="1"/><text x="97.9793%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="97.7293%" y="837" width="0.0176%" height="15" fill="rgb(211,96,50)" fg:x="5552" fg:w="1"/><text x="97.9793%" y="847.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (7 samples, 0.12%)</title><rect x="97.6413%" y="965" width="0.1232%" height="15" fill="rgb(252,114,18)" fg:x="5547" fg:w="7"/><text x="97.8913%" y="975.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (7 samples, 0.12%)</title><rect x="97.6413%" y="949" width="0.1232%" height="15" fill="rgb(223,58,37)" fg:x="5547" fg:w="7"/><text x="97.8913%" y="959.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.12%)</title><rect x="97.6413%" y="933" width="0.1232%" height="15" fill="rgb(237,70,4)" fg:x="5547" fg:w="7"/><text x="97.8913%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (7 samples, 0.12%)</title><rect x="97.6413%" y="917" width="0.1232%" height="15" fill="rgb(244,85,46)" fg:x="5547" fg:w="7"/><text x="97.8913%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.07%)</title><rect x="97.6941%" y="901" width="0.0704%" height="15" fill="rgb(223,39,52)" fg:x="5550" fg:w="4"/><text x="97.9441%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.07%)</title><rect x="97.6941%" y="885" width="0.0704%" height="15" fill="rgb(218,200,14)" fg:x="5550" fg:w="4"/><text x="97.9441%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="97.7469%" y="869" width="0.0176%" height="15" fill="rgb(208,171,16)" fg:x="5553" fg:w="1"/><text x="97.9969%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="97.7469%" y="853" width="0.0176%" height="15" fill="rgb(234,200,18)" fg:x="5553" fg:w="1"/><text x="97.9969%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="97.7469%" y="837" width="0.0176%" height="15" fill="rgb(228,45,11)" fg:x="5553" fg:w="1"/><text x="97.9969%" y="847.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="97.8173%" y="853" width="0.0352%" height="15" fill="rgb(237,182,11)" fg:x="5557" fg:w="2"/><text x="98.0673%" y="863.50"></text></g><g><title>core::mem::swap_simple (2 samples, 0.04%)</title><rect x="97.8173%" y="837" width="0.0352%" height="15" fill="rgb(241,175,49)" fg:x="5557" fg:w="2"/><text x="98.0673%" y="847.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="97.8173%" y="821" width="0.0352%" height="15" fill="rgb(247,38,35)" fg:x="5557" fg:w="2"/><text x="98.0673%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="97.8525%" y="853" width="0.0176%" height="15" fill="rgb(228,39,49)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="863.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.8525%" y="837" width="0.0176%" height="15" fill="rgb(226,101,26)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.02%)</title><rect x="97.8525%" y="821" width="0.0176%" height="15" fill="rgb(206,141,19)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="97.8525%" y="805" width="0.0176%" height="15" fill="rgb(211,200,13)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.8525%" y="789" width="0.0176%" height="15" fill="rgb(241,121,6)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.8525%" y="773" width="0.0176%" height="15" fill="rgb(234,221,29)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="97.8525%" y="757" width="0.0176%" height="15" fill="rgb(229,136,5)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="97.8525%" y="741" width="0.0176%" height="15" fill="rgb(238,36,11)" fg:x="5559" fg:w="1"/><text x="98.1025%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.04%)</title><rect x="97.9053%" y="741" width="0.0352%" height="15" fill="rgb(251,55,41)" fg:x="5562" fg:w="2"/><text x="98.1553%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="97.9229%" y="725" width="0.0176%" height="15" fill="rgb(242,34,40)" fg:x="5563" fg:w="1"/><text x="98.1729%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.09%)</title><rect x="97.9405%" y="725" width="0.0880%" height="15" fill="rgb(215,42,17)" fg:x="5564" fg:w="5"/><text x="98.1905%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (10 samples, 0.18%)</title><rect x="97.8701%" y="853" width="0.1760%" height="15" fill="rgb(207,44,46)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="863.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (10 samples, 0.18%)</title><rect x="97.8701%" y="837" width="0.1760%" height="15" fill="rgb(211,206,28)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.18%)</title><rect x="97.8701%" y="821" width="0.1760%" height="15" fill="rgb(237,167,16)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.18%)</title><rect x="97.8701%" y="805" width="0.1760%" height="15" fill="rgb(233,66,6)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.18%)</title><rect x="97.8701%" y="789" width="0.1760%" height="15" fill="rgb(246,123,29)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.18%)</title><rect x="97.8701%" y="773" width="0.1760%" height="15" fill="rgb(209,62,40)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.18%)</title><rect x="97.8701%" y="757" width="0.1760%" height="15" fill="rgb(218,4,25)" fg:x="5560" fg:w="10"/><text x="98.1201%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.11%)</title><rect x="97.9405%" y="741" width="0.1056%" height="15" fill="rgb(253,91,49)" fg:x="5564" fg:w="6"/><text x="98.1905%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="98.0285%" y="725" width="0.0176%" height="15" fill="rgb(228,155,29)" fg:x="5569" fg:w="1"/><text x="98.2785%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.05%)</title><rect x="98.0461%" y="805" width="0.0528%" height="15" fill="rgb(243,57,37)" fg:x="5570" fg:w="3"/><text x="98.2961%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="98.0813%" y="789" width="0.0176%" height="15" fill="rgb(244,167,17)" fg:x="5572" fg:w="1"/><text x="98.3313%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (6 samples, 0.11%)</title><rect x="98.0461%" y="821" width="0.1056%" height="15" fill="rgb(207,181,38)" fg:x="5570" fg:w="6"/><text x="98.2961%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.05%)</title><rect x="98.0989%" y="805" width="0.0528%" height="15" fill="rgb(211,8,23)" fg:x="5573" fg:w="3"/><text x="98.3489%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.05%)</title><rect x="98.0989%" y="789" width="0.0528%" height="15" fill="rgb(235,11,44)" fg:x="5573" fg:w="3"/><text x="98.3489%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="805" width="0.0880%" height="15" fill="rgb(248,18,52)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="789" width="0.0880%" height="15" fill="rgb(208,4,7)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="773" width="0.0880%" height="15" fill="rgb(240,17,39)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="757" width="0.0880%" height="15" fill="rgb(207,170,3)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="741" width="0.0880%" height="15" fill="rgb(236,100,52)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="725" width="0.0880%" height="15" fill="rgb(246,78,51)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="709" width="0.0880%" height="15" fill="rgb(211,17,15)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="693" width="0.0880%" height="15" fill="rgb(209,59,46)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="677" width="0.0880%" height="15" fill="rgb(210,92,25)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="661" width="0.0880%" height="15" fill="rgb(238,174,52)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="645" width="0.0880%" height="15" fill="rgb(230,73,7)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="629" width="0.0880%" height="15" fill="rgb(243,124,40)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="613" width="0.0880%" height="15" fill="rgb(244,170,11)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.1693%" y="597" width="0.0880%" height="15" fill="rgb(207,114,54)" fg:x="5577" fg:w="5"/><text x="98.4193%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (13 samples, 0.23%)</title><rect x="98.0461%" y="853" width="0.2288%" height="15" fill="rgb(205,42,20)" fg:x="5570" fg:w="13"/><text x="98.2961%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (13 samples, 0.23%)</title><rect x="98.0461%" y="837" width="0.2288%" height="15" fill="rgb(230,30,28)" fg:x="5570" fg:w="13"/><text x="98.2961%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (7 samples, 0.12%)</title><rect x="98.1517%" y="821" width="0.1232%" height="15" fill="rgb(205,73,54)" fg:x="5576" fg:w="7"/><text x="98.4017%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.02%)</title><rect x="98.2573%" y="805" width="0.0176%" height="15" fill="rgb(254,227,23)" fg:x="5582" fg:w="1"/><text x="98.5073%" y="815.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="98.2573%" y="789" width="0.0176%" height="15" fill="rgb(228,202,34)" fg:x="5582" fg:w="1"/><text x="98.5073%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="98.2750%" y="805" width="0.0176%" height="15" fill="rgb(222,225,37)" fg:x="5583" fg:w="1"/><text x="98.5250%" y="815.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.02%)</title><rect x="98.2926%" y="805" width="0.0176%" height="15" fill="rgb(221,14,54)" fg:x="5584" fg:w="1"/><text x="98.5426%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="98.2926%" y="789" width="0.0176%" height="15" fill="rgb(254,102,2)" fg:x="5584" fg:w="1"/><text x="98.5426%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="98.2926%" y="773" width="0.0176%" height="15" fill="rgb(232,104,17)" fg:x="5584" fg:w="1"/><text x="98.5426%" y="783.50"></text></g><g><title>_int_malloc (15 samples, 0.26%)</title><rect x="98.3630%" y="725" width="0.2640%" height="15" fill="rgb(250,220,14)" fg:x="5588" fg:w="15"/><text x="98.6130%" y="735.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="709" width="0.1936%" height="15" fill="rgb(241,158,9)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="719.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="693" width="0.1936%" height="15" fill="rgb(246,9,43)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="703.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="677" width="0.1936%" height="15" fill="rgb(206,73,33)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="687.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="661" width="0.1936%" height="15" fill="rgb(222,79,8)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="671.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="645" width="0.1936%" height="15" fill="rgb(234,8,54)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="655.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="629" width="0.1936%" height="15" fill="rgb(209,134,38)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="639.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="613" width="0.1936%" height="15" fill="rgb(230,127,29)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="623.50"></text></g><g><title>[unknown] (11 samples, 0.19%)</title><rect x="98.4334%" y="597" width="0.1936%" height="15" fill="rgb(242,44,41)" fg:x="5592" fg:w="11"/><text x="98.6834%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.16%)</title><rect x="98.4686%" y="581" width="0.1584%" height="15" fill="rgb(222,56,43)" fg:x="5594" fg:w="9"/><text x="98.7186%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="98.5390%" y="565" width="0.0880%" height="15" fill="rgb(238,39,47)" fg:x="5598" fg:w="5"/><text x="98.7890%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="98.5742%" y="549" width="0.0528%" height="15" fill="rgb(226,79,43)" fg:x="5600" fg:w="3"/><text x="98.8242%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="98.5918%" y="533" width="0.0352%" height="15" fill="rgb(242,105,53)" fg:x="5601" fg:w="2"/><text x="98.8418%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="98.5918%" y="517" width="0.0352%" height="15" fill="rgb(251,132,46)" fg:x="5601" fg:w="2"/><text x="98.8418%" y="527.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.32%)</title><rect x="98.3278%" y="741" width="0.3168%" height="15" fill="rgb(231,77,14)" fg:x="5586" fg:w="18"/><text x="98.5778%" y="751.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="98.6270%" y="725" width="0.0176%" height="15" fill="rgb(240,135,9)" fg:x="5603" fg:w="1"/><text x="98.8770%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (22 samples, 0.39%)</title><rect x="98.2750%" y="821" width="0.3873%" height="15" fill="rgb(248,109,14)" fg:x="5583" fg:w="22"/><text x="98.5250%" y="831.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (20 samples, 0.35%)</title><rect x="98.3102%" y="805" width="0.3521%" height="15" fill="rgb(227,146,52)" fg:x="5585" fg:w="20"/><text x="98.5602%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.35%)</title><rect x="98.3102%" y="789" width="0.3521%" height="15" fill="rgb(232,54,3)" fg:x="5585" fg:w="20"/><text x="98.5602%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.35%)</title><rect x="98.3102%" y="773" width="0.3521%" height="15" fill="rgb(229,201,43)" fg:x="5585" fg:w="20"/><text x="98.5602%" y="783.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.33%)</title><rect x="98.3278%" y="757" width="0.3344%" height="15" fill="rgb(252,161,33)" fg:x="5586" fg:w="19"/><text x="98.5778%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="98.6446%" y="741" width="0.0176%" height="15" fill="rgb(226,146,40)" fg:x="5604" fg:w="1"/><text x="98.8946%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="98.6446%" y="725" width="0.0176%" height="15" fill="rgb(219,47,25)" fg:x="5604" fg:w="1"/><text x="98.8946%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (52 samples, 0.92%)</title><rect x="97.7821%" y="933" width="0.9153%" height="15" fill="rgb(250,135,13)" fg:x="5555" fg:w="52"/><text x="98.0321%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (52 samples, 0.92%)</title><rect x="97.7821%" y="917" width="0.9153%" height="15" fill="rgb(219,229,18)" fg:x="5555" fg:w="52"/><text x="98.0321%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (51 samples, 0.90%)</title><rect x="97.7997%" y="901" width="0.8977%" height="15" fill="rgb(217,152,27)" fg:x="5556" fg:w="51"/><text x="98.0497%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (51 samples, 0.90%)</title><rect x="97.7997%" y="885" width="0.8977%" height="15" fill="rgb(225,71,47)" fg:x="5556" fg:w="51"/><text x="98.0497%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (50 samples, 0.88%)</title><rect x="97.8173%" y="869" width="0.8801%" height="15" fill="rgb(220,139,14)" fg:x="5557" fg:w="50"/><text x="98.0673%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (24 samples, 0.42%)</title><rect x="98.2750%" y="853" width="0.4225%" height="15" fill="rgb(247,54,32)" fg:x="5583" fg:w="24"/><text x="98.5250%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (24 samples, 0.42%)</title><rect x="98.2750%" y="837" width="0.4225%" height="15" fill="rgb(252,131,39)" fg:x="5583" fg:w="24"/><text x="98.5250%" y="847.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2 samples, 0.04%)</title><rect x="98.6622%" y="821" width="0.0352%" height="15" fill="rgb(210,108,39)" fg:x="5605" fg:w="2"/><text x="98.9122%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="98.7678%" y="837" width="0.0528%" height="15" fill="rgb(205,23,29)" fg:x="5611" fg:w="3"/><text x="99.0178%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.07%)</title><rect x="98.7678%" y="853" width="0.0704%" height="15" fill="rgb(246,139,46)" fg:x="5611" fg:w="4"/><text x="99.0178%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="98.8206%" y="837" width="0.0176%" height="15" fill="rgb(250,81,26)" fg:x="5614" fg:w="1"/><text x="99.0706%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.19%)</title><rect x="98.6974%" y="933" width="0.1936%" height="15" fill="rgb(214,104,7)" fg:x="5607" fg:w="11"/><text x="98.9474%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.19%)</title><rect x="98.6974%" y="917" width="0.1936%" height="15" fill="rgb(233,189,8)" fg:x="5607" fg:w="11"/><text x="98.9474%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.18%)</title><rect x="98.7150%" y="901" width="0.1760%" height="15" fill="rgb(228,141,17)" fg:x="5608" fg:w="10"/><text x="98.9650%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.18%)</title><rect x="98.7150%" y="885" width="0.1760%" height="15" fill="rgb(247,157,1)" fg:x="5608" fg:w="10"/><text x="98.9650%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.18%)</title><rect x="98.7150%" y="869" width="0.1760%" height="15" fill="rgb(249,225,5)" fg:x="5608" fg:w="10"/><text x="98.9650%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.05%)</title><rect x="98.8382%" y="853" width="0.0528%" height="15" fill="rgb(242,55,13)" fg:x="5615" fg:w="3"/><text x="99.0882%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.05%)</title><rect x="98.8382%" y="837" width="0.0528%" height="15" fill="rgb(230,49,50)" fg:x="5615" fg:w="3"/><text x="99.0882%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="98.8910%" y="901" width="0.0352%" height="15" fill="rgb(241,111,38)" fg:x="5618" fg:w="2"/><text x="99.1410%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="98.9086%" y="885" width="0.0176%" height="15" fill="rgb(252,155,4)" fg:x="5619" fg:w="1"/><text x="99.1586%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.05%)</title><rect x="98.9262%" y="901" width="0.0528%" height="15" fill="rgb(212,69,32)" fg:x="5620" fg:w="3"/><text x="99.1762%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3 samples, 0.05%)</title><rect x="98.9262%" y="885" width="0.0528%" height="15" fill="rgb(243,107,47)" fg:x="5620" fg:w="3"/><text x="99.1762%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (3 samples, 0.05%)</title><rect x="98.9262%" y="869" width="0.0528%" height="15" fill="rgb(247,130,12)" fg:x="5620" fg:w="3"/><text x="99.1762%" y="879.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="98.9791%" y="901" width="0.0176%" height="15" fill="rgb(233,74,16)" fg:x="5623" fg:w="1"/><text x="99.2291%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (71 samples, 1.25%)</title><rect x="97.7645%" y="949" width="1.2498%" height="15" fill="rgb(208,58,18)" fg:x="5554" fg:w="71"/><text x="98.0145%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.12%)</title><rect x="98.8910%" y="933" width="0.1232%" height="15" fill="rgb(242,225,1)" fg:x="5618" fg:w="7"/><text x="99.1410%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.12%)</title><rect x="98.8910%" y="917" width="0.1232%" height="15" fill="rgb(249,39,40)" fg:x="5618" fg:w="7"/><text x="99.1410%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="98.9967%" y="901" width="0.0176%" height="15" fill="rgb(207,72,44)" fg:x="5624" fg:w="1"/><text x="99.2467%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="98.9967%" y="885" width="0.0176%" height="15" fill="rgb(215,193,12)" fg:x="5624" fg:w="1"/><text x="99.2467%" y="895.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (85 samples, 1.50%)</title><rect x="97.5532%" y="1045" width="1.4962%" height="15" fill="rgb(248,41,39)" fg:x="5542" fg:w="85"/><text x="97.8032%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (84 samples, 1.48%)</title><rect x="97.5709%" y="1029" width="1.4786%" height="15" fill="rgb(253,85,4)" fg:x="5543" fg:w="84"/><text x="97.8209%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (84 samples, 1.48%)</title><rect x="97.5709%" y="1013" width="1.4786%" height="15" fill="rgb(243,70,31)" fg:x="5543" fg:w="84"/><text x="97.8209%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (83 samples, 1.46%)</title><rect x="97.5885%" y="997" width="1.4610%" height="15" fill="rgb(253,195,26)" fg:x="5544" fg:w="83"/><text x="97.8385%" y="1007.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (83 samples, 1.46%)</title><rect x="97.5885%" y="981" width="1.4610%" height="15" fill="rgb(243,42,11)" fg:x="5544" fg:w="83"/><text x="97.8385%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (73 samples, 1.28%)</title><rect x="97.7645%" y="965" width="1.2850%" height="15" fill="rgb(239,66,17)" fg:x="5554" fg:w="73"/><text x="98.0145%" y="975.50"></text></g><g><title>std::collections::hash::map::map_entry (2 samples, 0.04%)</title><rect x="99.0143%" y="949" width="0.0352%" height="15" fill="rgb(217,132,21)" fg:x="5625" fg:w="2"/><text x="99.2643%" y="959.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.04%)</title><rect x="99.0495%" y="933" width="0.0352%" height="15" fill="rgb(252,202,21)" fg:x="5627" fg:w="2"/><text x="99.2995%" y="943.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="99.0495%" y="949" width="0.0528%" height="15" fill="rgb(233,98,36)" fg:x="5627" fg:w="3"/><text x="99.2995%" y="959.50"></text></g><g><title>paranagram::word::Word::new (1 samples, 0.02%)</title><rect x="99.0847%" y="933" width="0.0176%" height="15" fill="rgb(216,153,54)" fg:x="5629" fg:w="1"/><text x="99.3347%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.1375%" y="821" width="0.0176%" height="15" fill="rgb(250,99,7)" fg:x="5632" fg:w="1"/><text x="99.3875%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="99.1375%" y="805" width="0.0176%" height="15" fill="rgb(207,56,50)" fg:x="5632" fg:w="1"/><text x="99.3875%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.1375%" y="789" width="0.0176%" height="15" fill="rgb(244,61,34)" fg:x="5632" fg:w="1"/><text x="99.3875%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="99.1375%" y="773" width="0.0176%" height="15" fill="rgb(241,50,38)" fg:x="5632" fg:w="1"/><text x="99.3875%" y="783.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="99.1375%" y="757" width="0.0176%" height="15" fill="rgb(212,166,30)" fg:x="5632" fg:w="1"/><text x="99.3875%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.07%)</title><rect x="99.1023%" y="933" width="0.0704%" height="15" fill="rgb(249,127,32)" fg:x="5630" fg:w="4"/><text x="99.3523%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (4 samples, 0.07%)</title><rect x="99.1023%" y="917" width="0.0704%" height="15" fill="rgb(209,103,0)" fg:x="5630" fg:w="4"/><text x="99.3523%" y="927.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.07%)</title><rect x="99.1023%" y="901" width="0.0704%" height="15" fill="rgb(238,209,51)" fg:x="5630" fg:w="4"/><text x="99.3523%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.07%)</title><rect x="99.1023%" y="885" width="0.0704%" height="15" fill="rgb(237,56,23)" fg:x="5630" fg:w="4"/><text x="99.3523%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.07%)</title><rect x="99.1023%" y="869" width="0.0704%" height="15" fill="rgb(215,153,46)" fg:x="5630" fg:w="4"/><text x="99.3523%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.07%)</title><rect x="99.1023%" y="853" width="0.0704%" height="15" fill="rgb(224,49,31)" fg:x="5630" fg:w="4"/><text x="99.3523%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="99.1199%" y="837" width="0.0528%" height="15" fill="rgb(250,18,42)" fg:x="5631" fg:w="3"/><text x="99.3699%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.1551%" y="821" width="0.0176%" height="15" fill="rgb(215,176,39)" fg:x="5633" fg:w="1"/><text x="99.4051%" y="831.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="99.1551%" y="805" width="0.0176%" height="15" fill="rgb(223,77,29)" fg:x="5633" fg:w="1"/><text x="99.4051%" y="815.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="99.2079%" y="869" width="0.0176%" height="15" fill="rgb(234,94,52)" fg:x="5636" fg:w="1"/><text x="99.4579%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="99.2079%" y="853" width="0.0176%" height="15" fill="rgb(220,154,50)" fg:x="5636" fg:w="1"/><text x="99.4579%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.19%)</title><rect x="99.0495%" y="981" width="0.1936%" height="15" fill="rgb(212,11,10)" fg:x="5627" fg:w="11"/><text x="99.2995%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.19%)</title><rect x="99.0495%" y="965" width="0.1936%" height="15" fill="rgb(205,166,19)" fg:x="5627" fg:w="11"/><text x="99.2995%" y="975.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (8 samples, 0.14%)</title><rect x="99.1023%" y="949" width="0.1408%" height="15" fill="rgb(244,198,16)" fg:x="5630" fg:w="8"/><text x="99.3523%" y="959.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (4 samples, 0.07%)</title><rect x="99.1727%" y="933" width="0.0704%" height="15" fill="rgb(219,69,12)" fg:x="5634" fg:w="4"/><text x="99.4227%" y="943.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_alphabetic (3 samples, 0.05%)</title><rect x="99.1903%" y="917" width="0.0528%" height="15" fill="rgb(245,30,7)" fg:x="5635" fg:w="3"/><text x="99.4403%" y="927.50"></text></g><g><title>core::unicode::unicode_data::alphabetic::lookup (2 samples, 0.04%)</title><rect x="99.2079%" y="901" width="0.0352%" height="15" fill="rgb(218,221,48)" fg:x="5636" fg:w="2"/><text x="99.4579%" y="911.50"></text></g><g><title>core::unicode::unicode_data::skip_search (2 samples, 0.04%)</title><rect x="99.2079%" y="885" width="0.0352%" height="15" fill="rgb(216,66,15)" fg:x="5636" fg:w="2"/><text x="99.4579%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.02%)</title><rect x="99.2255%" y="869" width="0.0176%" height="15" fill="rgb(226,122,50)" fg:x="5637" fg:w="1"/><text x="99.4755%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.02%)</title><rect x="99.2255%" y="853" width="0.0176%" height="15" fill="rgb(239,156,16)" fg:x="5637" fg:w="1"/><text x="99.4755%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.02%)</title><rect x="99.2255%" y="837" width="0.0176%" height="15" fill="rgb(224,27,38)" fg:x="5637" fg:w="1"/><text x="99.4755%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.02%)</title><rect x="99.2255%" y="821" width="0.0176%" height="15" fill="rgb(224,39,27)" fg:x="5637" fg:w="1"/><text x="99.4755%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.2783%" y="789" width="0.0176%" height="15" fill="rgb(215,92,29)" fg:x="5640" fg:w="1"/><text x="99.5283%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="99.2783%" y="773" width="0.0176%" height="15" fill="rgb(207,159,16)" fg:x="5640" fg:w="1"/><text x="99.5283%" y="783.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.2783%" y="757" width="0.0176%" height="15" fill="rgb(238,163,47)" fg:x="5640" fg:w="1"/><text x="99.5283%" y="767.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="99.2783%" y="741" width="0.0176%" height="15" fill="rgb(219,91,49)" fg:x="5640" fg:w="1"/><text x="99.5283%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.2959%" y="789" width="0.0176%" height="15" fill="rgb(227,167,31)" fg:x="5641" fg:w="1"/><text x="99.5459%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.2959%" y="773" width="0.0176%" height="15" fill="rgb(234,80,54)" fg:x="5641" fg:w="1"/><text x="99.5459%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2959%" y="757" width="0.0176%" height="15" fill="rgb(212,114,2)" fg:x="5641" fg:w="1"/><text x="99.5459%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2959%" y="741" width="0.0176%" height="15" fill="rgb(234,50,24)" fg:x="5641" fg:w="1"/><text x="99.5459%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2959%" y="725" width="0.0176%" height="15" fill="rgb(221,68,8)" fg:x="5641" fg:w="1"/><text x="99.5459%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2959%" y="709" width="0.0176%" height="15" fill="rgb(254,180,31)" fg:x="5641" fg:w="1"/><text x="99.5459%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.07%)</title><rect x="99.2607%" y="901" width="0.0704%" height="15" fill="rgb(247,130,50)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (4 samples, 0.07%)</title><rect x="99.2607%" y="885" width="0.0704%" height="15" fill="rgb(211,109,4)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="895.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.07%)</title><rect x="99.2607%" y="869" width="0.0704%" height="15" fill="rgb(238,50,21)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.07%)</title><rect x="99.2607%" y="853" width="0.0704%" height="15" fill="rgb(225,57,45)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.07%)</title><rect x="99.2607%" y="837" width="0.0704%" height="15" fill="rgb(209,196,50)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.07%)</title><rect x="99.2607%" y="821" width="0.0704%" height="15" fill="rgb(242,140,13)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.07%)</title><rect x="99.2607%" y="805" width="0.0704%" height="15" fill="rgb(217,111,7)" fg:x="5639" fg:w="4"/><text x="99.5107%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.3135%" y="789" width="0.0176%" height="15" fill="rgb(253,193,51)" fg:x="5642" fg:w="1"/><text x="99.5635%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.30%)</title><rect x="99.0495%" y="1045" width="0.2992%" height="15" fill="rgb(252,70,29)" fg:x="5627" fg:w="17"/><text x="99.2995%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (17 samples, 0.30%)</title><rect x="99.0495%" y="1029" width="0.2992%" height="15" fill="rgb(232,127,12)" fg:x="5627" fg:w="17"/><text x="99.2995%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (17 samples, 0.30%)</title><rect x="99.0495%" y="1013" width="0.2992%" height="15" fill="rgb(211,180,21)" fg:x="5627" fg:w="17"/><text x="99.2995%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.30%)</title><rect x="99.0495%" y="997" width="0.2992%" height="15" fill="rgb(229,72,13)" fg:x="5627" fg:w="17"/><text x="99.2995%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.11%)</title><rect x="99.2431%" y="981" width="0.1056%" height="15" fill="rgb(240,211,49)" fg:x="5638" fg:w="6"/><text x="99.4931%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.11%)</title><rect x="99.2431%" y="965" width="0.1056%" height="15" fill="rgb(219,149,40)" fg:x="5638" fg:w="6"/><text x="99.4931%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.11%)</title><rect x="99.2431%" y="949" width="0.1056%" height="15" fill="rgb(210,127,46)" fg:x="5638" fg:w="6"/><text x="99.4931%" y="959.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (6 samples, 0.11%)</title><rect x="99.2431%" y="933" width="0.1056%" height="15" fill="rgb(220,106,7)" fg:x="5638" fg:w="6"/><text x="99.4931%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.09%)</title><rect x="99.2607%" y="917" width="0.0880%" height="15" fill="rgb(249,31,22)" fg:x="5639" fg:w="5"/><text x="99.5107%" y="927.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.02%)</title><rect x="99.3311%" y="901" width="0.0176%" height="15" fill="rgb(253,1,49)" fg:x="5643" fg:w="1"/><text x="99.5811%" y="911.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_ascii_lowercase (1 samples, 0.02%)</title><rect x="99.3311%" y="885" width="0.0176%" height="15" fill="rgb(227,144,33)" fg:x="5643" fg:w="1"/><text x="99.5811%" y="895.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_uppercase (1 samples, 0.02%)</title><rect x="99.3311%" y="869" width="0.0176%" height="15" fill="rgb(249,163,44)" fg:x="5643" fg:w="1"/><text x="99.5811%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="99.3487%" y="1045" width="0.0176%" height="15" fill="rgb(234,15,39)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="1055.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="99.3487%" y="1029" width="0.0176%" height="15" fill="rgb(207,66,16)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="99.3487%" y="1013" width="0.0176%" height="15" fill="rgb(233,112,24)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="99.3487%" y="997" width="0.0176%" height="15" fill="rgb(230,90,22)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3487%" y="981" width="0.0176%" height="15" fill="rgb(229,61,13)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="991.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3487%" y="965" width="0.0176%" height="15" fill="rgb(225,57,24)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3487%" y="949" width="0.0176%" height="15" fill="rgb(208,169,48)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="99.3487%" y="933" width="0.0176%" height="15" fill="rgb(244,218,51)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3487%" y="917" width="0.0176%" height="15" fill="rgb(214,148,10)" fg:x="5644" fg:w="1"/><text x="99.5987%" y="927.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.4015%" y="949" width="0.0176%" height="15" fill="rgb(225,174,27)" fg:x="5647" fg:w="1"/><text x="99.6515%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.09%)</title><rect x="99.3663%" y="1045" width="0.0880%" height="15" fill="rgb(230,96,26)" fg:x="5645" fg:w="5"/><text x="99.6163%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.09%)</title><rect x="99.3663%" y="1029" width="0.0880%" height="15" fill="rgb(232,10,30)" fg:x="5645" fg:w="5"/><text x="99.6163%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.09%)</title><rect x="99.3663%" y="1013" width="0.0880%" height="15" fill="rgb(222,8,50)" fg:x="5645" fg:w="5"/><text x="99.6163%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.09%)</title><rect x="99.3663%" y="997" width="0.0880%" height="15" fill="rgb(213,81,27)" fg:x="5645" fg:w="5"/><text x="99.6163%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="99.3839%" y="981" width="0.0704%" height="15" fill="rgb(245,50,10)" fg:x="5646" fg:w="4"/><text x="99.6339%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="99.3839%" y="965" width="0.0704%" height="15" fill="rgb(216,100,18)" fg:x="5646" fg:w="4"/><text x="99.6339%" y="975.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="99.4191%" y="949" width="0.0352%" height="15" fill="rgb(236,147,54)" fg:x="5648" fg:w="2"/><text x="99.6691%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.02%)</title><rect x="99.4543%" y="1045" width="0.0176%" height="15" fill="rgb(205,143,26)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.02%)</title><rect x="99.4543%" y="1029" width="0.0176%" height="15" fill="rgb(236,26,9)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.02%)</title><rect x="99.4543%" y="1013" width="0.0176%" height="15" fill="rgb(221,165,53)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.4543%" y="997" width="0.0176%" height="15" fill="rgb(214,110,17)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.02%)</title><rect x="99.4543%" y="981" width="0.0176%" height="15" fill="rgb(237,197,12)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="99.4543%" y="965" width="0.0176%" height="15" fill="rgb(205,84,17)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="99.4543%" y="949" width="0.0176%" height="15" fill="rgb(237,18,45)" fg:x="5650" fg:w="1"/><text x="99.7043%" y="959.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="99.4895%" y="917" width="0.0176%" height="15" fill="rgb(221,87,14)" fg:x="5652" fg:w="1"/><text x="99.7395%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.4895%" y="901" width="0.0176%" height="15" fill="rgb(238,186,15)" fg:x="5652" fg:w="1"/><text x="99.7395%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.4895%" y="885" width="0.0176%" height="15" fill="rgb(208,115,11)" fg:x="5652" fg:w="1"/><text x="99.7395%" y="895.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="99.4895%" y="933" width="0.0528%" height="15" fill="rgb(254,175,0)" fg:x="5652" fg:w="3"/><text x="99.7395%" y="943.50"></text></g><g><title>unidecode::unidecode (2 samples, 0.04%)</title><rect x="99.5071%" y="917" width="0.0352%" height="15" fill="rgb(227,24,42)" fg:x="5653" fg:w="2"/><text x="99.7571%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="99.5951%" y="741" width="0.0352%" height="15" fill="rgb(223,211,37)" fg:x="5658" fg:w="2"/><text x="99.8451%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="99.5951%" y="725" width="0.0352%" height="15" fill="rgb(235,49,27)" fg:x="5658" fg:w="2"/><text x="99.8451%" y="735.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="99.5951%" y="709" width="0.0352%" height="15" fill="rgb(254,97,51)" fg:x="5658" fg:w="2"/><text x="99.8451%" y="719.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="99.6127%" y="693" width="0.0176%" height="15" fill="rgb(249,51,40)" fg:x="5659" fg:w="1"/><text x="99.8627%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.6303%" y="741" width="0.0176%" height="15" fill="rgb(210,128,45)" fg:x="5660" fg:w="1"/><text x="99.8803%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.12%)</title><rect x="99.5423%" y="821" width="0.1232%" height="15" fill="rgb(224,137,50)" fg:x="5655" fg:w="7"/><text x="99.7923%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.12%)</title><rect x="99.5423%" y="805" width="0.1232%" height="15" fill="rgb(242,15,9)" fg:x="5655" fg:w="7"/><text x="99.7923%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.09%)</title><rect x="99.5775%" y="789" width="0.0880%" height="15" fill="rgb(233,187,41)" fg:x="5657" fg:w="5"/><text x="99.8275%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.09%)</title><rect x="99.5775%" y="773" width="0.0880%" height="15" fill="rgb(227,2,29)" fg:x="5657" fg:w="5"/><text x="99.8275%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.09%)</title><rect x="99.5775%" y="757" width="0.0880%" height="15" fill="rgb(222,70,3)" fg:x="5657" fg:w="5"/><text x="99.8275%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="99.6479%" y="741" width="0.0176%" height="15" fill="rgb(213,11,42)" fg:x="5661" fg:w="1"/><text x="99.8979%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="99.6479%" y="725" width="0.0176%" height="15" fill="rgb(225,150,9)" fg:x="5661" fg:w="1"/><text x="99.8979%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.28%)</title><rect x="99.4895%" y="949" width="0.2816%" height="15" fill="rgb(230,162,45)" fg:x="5652" fg:w="16"/><text x="99.7395%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.23%)</title><rect x="99.5423%" y="933" width="0.2288%" height="15" fill="rgb(222,14,52)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.23%)</title><rect x="99.5423%" y="917" width="0.2288%" height="15" fill="rgb(254,198,14)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (13 samples, 0.23%)</title><rect x="99.5423%" y="901" width="0.2288%" height="15" fill="rgb(220,217,30)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="911.50"></text></g><g><title>alloc::string::String::push_str (13 samples, 0.23%)</title><rect x="99.5423%" y="885" width="0.2288%" height="15" fill="rgb(215,146,41)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.23%)</title><rect x="99.5423%" y="869" width="0.2288%" height="15" fill="rgb(217,27,36)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.23%)</title><rect x="99.5423%" y="853" width="0.2288%" height="15" fill="rgb(219,218,39)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.23%)</title><rect x="99.5423%" y="837" width="0.2288%" height="15" fill="rgb(219,4,42)" fg:x="5655" fg:w="13"/><text x="99.7923%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.11%)</title><rect x="99.6656%" y="821" width="0.1056%" height="15" fill="rgb(249,119,36)" fg:x="5662" fg:w="6"/><text x="99.9156%" y="831.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6 samples, 0.11%)</title><rect x="99.6656%" y="805" width="0.1056%" height="15" fill="rgb(209,23,33)" fg:x="5662" fg:w="6"/><text x="99.9156%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (17 samples, 0.30%)</title><rect x="99.4895%" y="997" width="0.2992%" height="15" fill="rgb(211,10,0)" fg:x="5652" fg:w="17"/><text x="99.7395%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.30%)</title><rect x="99.4895%" y="981" width="0.2992%" height="15" fill="rgb(208,99,37)" fg:x="5652" fg:w="17"/><text x="99.7395%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.30%)</title><rect x="99.4895%" y="965" width="0.2992%" height="15" fill="rgb(213,132,31)" fg:x="5652" fg:w="17"/><text x="99.7395%" y="975.50"></text></g><g><title>unidecode::unidecode (1 samples, 0.02%)</title><rect x="99.7712%" y="949" width="0.0176%" height="15" fill="rgb(243,129,40)" fg:x="5668" fg:w="1"/><text x="100.0212%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (140 samples, 2.46%)</title><rect x="97.3420%" y="1157" width="2.4644%" height="15" fill="rgb(210,66,33)" fg:x="5530" fg:w="140"/><text x="97.5920%" y="1167.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (140 samples, 2.46%)</title><rect x="97.3420%" y="1141" width="2.4644%" height="15" fill="rgb(209,189,4)" fg:x="5530" fg:w="140"/><text x="97.5920%" y="1151.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (140 samples, 2.46%)</title><rect x="97.3420%" y="1125" width="2.4644%" height="15" fill="rgb(214,107,37)" fg:x="5530" fg:w="140"/><text x="97.5920%" y="1135.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (133 samples, 2.34%)</title><rect x="97.4652%" y="1109" width="2.3411%" height="15" fill="rgb(245,88,54)" fg:x="5537" fg:w="133"/><text x="97.7152%" y="1119.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (133 samples, 2.34%)</title><rect x="97.4652%" y="1093" width="2.3411%" height="15" fill="rgb(205,146,20)" fg:x="5537" fg:w="133"/><text x="97.7152%" y="1103.50">c..</text></g><g><title>paranagram::Paranagram::new::{{closure}} (133 samples, 2.34%)</title><rect x="97.4652%" y="1077" width="2.3411%" height="15" fill="rgb(220,161,25)" fg:x="5537" fg:w="133"/><text x="97.7152%" y="1087.50">p..</text></g><g><title>paranagram::word::Word::new (128 samples, 2.25%)</title><rect x="97.5532%" y="1061" width="2.2531%" height="15" fill="rgb(215,152,15)" fg:x="5542" fg:w="128"/><text x="97.8032%" y="1071.50">p..</text></g><g><title>unidecode::unidecode (19 samples, 0.33%)</title><rect x="99.4719%" y="1045" width="0.3344%" height="15" fill="rgb(233,192,44)" fg:x="5651" fg:w="19"/><text x="99.7219%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.33%)</title><rect x="99.4719%" y="1029" width="0.3344%" height="15" fill="rgb(240,170,46)" fg:x="5651" fg:w="19"/><text x="99.7219%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (19 samples, 0.33%)</title><rect x="99.4719%" y="1013" width="0.3344%" height="15" fill="rgb(207,104,33)" fg:x="5651" fg:w="19"/><text x="99.7219%" y="1023.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.02%)</title><rect x="99.7888%" y="997" width="0.0176%" height="15" fill="rgb(219,21,39)" fg:x="5669" fg:w="1"/><text x="100.0388%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (144 samples, 2.53%)</title><rect x="97.3068%" y="1253" width="2.5348%" height="15" fill="rgb(214,133,29)" fg:x="5528" fg:w="144"/><text x="97.5568%" y="1263.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (144 samples, 2.53%)</title><rect x="97.3068%" y="1237" width="2.5348%" height="15" fill="rgb(226,93,6)" fg:x="5528" fg:w="144"/><text x="97.5568%" y="1247.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (144 samples, 2.53%)</title><rect x="97.3068%" y="1221" width="2.5348%" height="15" fill="rgb(252,222,34)" fg:x="5528" fg:w="144"/><text x="97.5568%" y="1231.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (144 samples, 2.53%)</title><rect x="97.3068%" y="1205" width="2.5348%" height="15" fill="rgb(252,92,48)" fg:x="5528" fg:w="144"/><text x="97.5568%" y="1215.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (144 samples, 2.53%)</title><rect x="97.3068%" y="1189" width="2.5348%" height="15" fill="rgb(245,223,24)" fg:x="5528" fg:w="144"/><text x="97.5568%" y="1199.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (144 samples, 2.53%)</title><rect x="97.3068%" y="1173" width="2.5348%" height="15" fill="rgb(205,176,3)" fg:x="5528" fg:w="144"/><text x="97.5568%" y="1183.50">al..</text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="99.8064%" y="1157" width="0.0352%" height="15" fill="rgb(235,151,15)" fg:x="5670" fg:w="2"/><text x="100.0564%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1141" width="0.0176%" height="15" fill="rgb(237,209,11)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1125" width="0.0176%" height="15" fill="rgb(243,227,24)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1109" width="0.0176%" height="15" fill="rgb(239,193,16)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1093" width="0.0176%" height="15" fill="rgb(231,27,9)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1077" width="0.0176%" height="15" fill="rgb(219,169,10)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1061" width="0.0176%" height="15" fill="rgb(244,229,43)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1045" width="0.0176%" height="15" fill="rgb(254,38,20)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1029" width="0.0176%" height="15" fill="rgb(250,47,30)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8240%" y="1013" width="0.0176%" height="15" fill="rgb(224,124,36)" fg:x="5671" fg:w="1"/><text x="100.0740%" y="1023.50"></text></g><g><title>_start (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1557" width="89.6145%" height="15" fill="rgb(246,68,51)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1567.50">_start</text></g><g><title>__libc_start_main_impl (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1541" width="89.6145%" height="15" fill="rgb(253,43,49)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1551.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1525" width="89.6145%" height="15" fill="rgb(219,54,36)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1535.50">__libc_start_call_main</text></g><g><title>main (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1509" width="89.6145%" height="15" fill="rgb(227,133,34)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1519.50">main</text></g><g><title>std::rt::lang_start_internal (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1493" width="89.6145%" height="15" fill="rgb(247,227,15)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1503.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1477" width="89.6145%" height="15" fill="rgb(229,96,14)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1461" width="89.6145%" height="15" fill="rgb(220,79,17)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1471.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1445" width="89.6145%" height="15" fill="rgb(205,131,53)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1455.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1429" width="89.6145%" height="15" fill="rgb(209,50,29)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1439.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1413" width="89.6145%" height="15" fill="rgb(245,86,46)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1423.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1397" width="89.6145%" height="15" fill="rgb(235,66,46)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1407.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1381" width="89.6145%" height="15" fill="rgb(232,148,31)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1391.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1365" width="89.6145%" height="15" fill="rgb(217,149,8)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1375.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1349" width="89.6145%" height="15" fill="rgb(209,183,11)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1359.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1333" width="89.6145%" height="15" fill="rgb(208,55,20)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1343.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1317" width="89.6145%" height="15" fill="rgb(218,39,14)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1327.50">core::ops::function::FnOnce::call_once</text></g><g><title>para::main (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1301" width="89.6145%" height="15" fill="rgb(216,169,33)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1311.50">para::main</text></g><g><title>para::dbg_main (5,091 samples, 89.61%)</title><rect x="10.2447%" y="1285" width="89.6145%" height="15" fill="rgb(233,80,24)" fg:x="582" fg:w="5091"/><text x="10.4947%" y="1295.50">para::dbg_main</text></g><g><title>paranagram::Paranagram::new (145 samples, 2.55%)</title><rect x="97.3068%" y="1269" width="2.5524%" height="15" fill="rgb(213,179,31)" fg:x="5528" fg:w="145"/><text x="97.5568%" y="1279.50">pa..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="99.8416%" y="1253" width="0.0176%" height="15" fill="rgb(209,19,5)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="99.8416%" y="1237" width="0.0176%" height="15" fill="rgb(219,18,35)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="99.8416%" y="1221" width="0.0176%" height="15" fill="rgb(209,169,16)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.8416%" y="1205" width="0.0176%" height="15" fill="rgb(245,90,51)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="99.8416%" y="1189" width="0.0176%" height="15" fill="rgb(220,99,45)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="99.8416%" y="1173" width="0.0176%" height="15" fill="rgb(249,89,25)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1183.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.8416%" y="1157" width="0.0176%" height="15" fill="rgb(239,193,0)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1167.50"></text></g><g><title>__GI___munmap (1 samples, 0.02%)</title><rect x="99.8416%" y="1141" width="0.0176%" height="15" fill="rgb(231,126,1)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1125" width="0.0176%" height="15" fill="rgb(243,166,3)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1109" width="0.0176%" height="15" fill="rgb(223,22,34)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1093" width="0.0176%" height="15" fill="rgb(251,52,51)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1077" width="0.0176%" height="15" fill="rgb(221,165,28)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1061" width="0.0176%" height="15" fill="rgb(218,121,47)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1045" width="0.0176%" height="15" fill="rgb(209,120,9)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1029" width="0.0176%" height="15" fill="rgb(236,68,12)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="1013" width="0.0176%" height="15" fill="rgb(225,194,26)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="997" width="0.0176%" height="15" fill="rgb(231,84,39)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="981" width="0.0176%" height="15" fill="rgb(210,11,45)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="965" width="0.0176%" height="15" fill="rgb(224,54,52)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="949" width="0.0176%" height="15" fill="rgb(238,102,14)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8416%" y="933" width="0.0176%" height="15" fill="rgb(243,160,52)" fg:x="5672" fg:w="1"/><text x="100.0916%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="99.8592%" y="1557" width="0.0176%" height="15" fill="rgb(216,114,19)" fg:x="5673" fg:w="1"/><text x="100.1092%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="99.8592%" y="1541" width="0.0176%" height="15" fill="rgb(244,166,37)" fg:x="5673" fg:w="1"/><text x="100.1092%" y="1551.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="99.8592%" y="1525" width="0.0176%" height="15" fill="rgb(246,29,44)" fg:x="5673" fg:w="1"/><text x="100.1092%" y="1535.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="99.8592%" y="1509" width="0.0176%" height="15" fill="rgb(215,56,53)" fg:x="5673" fg:w="1"/><text x="100.1092%" y="1519.50"></text></g><g><title>para (5,676 samples, 99.91%)</title><rect x="0.0000%" y="1573" width="99.9120%" height="15" fill="rgb(217,60,2)" fg:x="0" fg:w="5676"/><text x="0.2500%" y="1583.50">para</text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="99.8768%" y="1557" width="0.0352%" height="15" fill="rgb(207,26,24)" fg:x="5674" fg:w="2"/><text x="100.1268%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="99.8768%" y="1541" width="0.0352%" height="15" fill="rgb(252,210,15)" fg:x="5674" fg:w="2"/><text x="100.1268%" y="1551.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="99.8768%" y="1525" width="0.0352%" height="15" fill="rgb(253,209,26)" fg:x="5674" fg:w="2"/><text x="100.1268%" y="1535.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="99.8768%" y="1509" width="0.0352%" height="15" fill="rgb(238,170,14)" fg:x="5674" fg:w="2"/><text x="100.1268%" y="1519.50"></text></g><g><title>all (5,681 samples, 100%)</title><rect x="0.0000%" y="1589" width="100.0000%" height="15" fill="rgb(216,178,15)" fg:x="0" fg:w="5681"/><text x="0.2500%" y="1599.50"></text></g><g><title>perf-exec (5 samples, 0.09%)</title><rect x="99.9120%" y="1573" width="0.0880%" height="15" fill="rgb(250,197,2)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1583.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1557" width="0.0880%" height="15" fill="rgb(212,70,42)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1567.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1541" width="0.0880%" height="15" fill="rgb(227,213,9)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1551.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1525" width="0.0880%" height="15" fill="rgb(245,99,25)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1535.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1509" width="0.0880%" height="15" fill="rgb(250,82,29)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1519.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1493" width="0.0880%" height="15" fill="rgb(241,226,54)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1503.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1477" width="0.0880%" height="15" fill="rgb(221,99,41)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1487.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1461" width="0.0880%" height="15" fill="rgb(213,90,21)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1471.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1445" width="0.0880%" height="15" fill="rgb(205,208,24)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1455.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1429" width="0.0880%" height="15" fill="rgb(246,31,12)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1439.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1413" width="0.0880%" height="15" fill="rgb(213,154,6)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1423.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1397" width="0.0880%" height="15" fill="rgb(222,163,29)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1407.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1381" width="0.0880%" height="15" fill="rgb(227,201,8)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1391.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1365" width="0.0880%" height="15" fill="rgb(233,9,32)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1375.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1349" width="0.0880%" height="15" fill="rgb(217,54,24)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1359.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1333" width="0.0880%" height="15" fill="rgb(235,192,0)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1317" width="0.0880%" height="15" fill="rgb(235,45,9)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.09%)</title><rect x="99.9120%" y="1301" width="0.0880%" height="15" fill="rgb(246,42,40)" fg:x="5676" fg:w="5"/><text x="100.1620%" y="1311.50"></text></g></svg></svg>