<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1606" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1589.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1589.00"> </text><svg id="frames" x="10" width="1180" total_samples="221"><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (1 samples, 0.45%)</title><rect x="0.0000%" y="1509" width="0.4525%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.45%)</title><rect x="0.0000%" y="1493" width="0.4525%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.45%)</title><rect x="0.0000%" y="1477" width="0.4525%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.45%)</title><rect x="0.0000%" y="1461" width="0.4525%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (1 samples, 0.45%)</title><rect x="0.0000%" y="1445" width="0.4525%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.45%)</title><rect x="0.0000%" y="1429" width="0.4525%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>__GI___libc_free (1 samples, 0.45%)</title><rect x="0.4525%" y="1509" width="0.4525%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.7025%" y="1519.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.45%)</title><rect x="0.9050%" y="1509" width="0.4525%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="1.1550%" y="1519.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.90%)</title><rect x="1.3575%" y="1509" width="0.9050%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="2"/><text x="1.6075%" y="1519.50"></text></g><g><title>__rdl_realloc (1 samples, 0.45%)</title><rect x="2.2624%" y="1509" width="0.4525%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="1"/><text x="2.5124%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.45%)</title><rect x="2.7149%" y="1509" width="0.4525%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="2.9649%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="2.7149%" y="1493" width="0.4525%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="2.9649%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.45%)</title><rect x="3.1674%" y="1509" width="0.4525%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="3.4174%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="3.1674%" y="1493" width="0.4525%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="3.4174%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.90%)</title><rect x="3.6199%" y="1509" width="0.9050%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="3.8699%" y="1519.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.45%)</title><rect x="4.5249%" y="1509" width="0.4525%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="1"/><text x="4.7749%" y="1519.50"></text></g><g><title>[[heap]] (12 samples, 5.43%)</title><rect x="0.0000%" y="1525" width="5.4299%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1535.50">[[heap]]</text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.45%)</title><rect x="4.9774%" y="1509" width="0.4525%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="1"/><text x="5.2274%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="5.4299%" y="1509" width="0.4525%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.45%)</title><rect x="5.4299%" y="1493" width="0.4525%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.45%)</title><rect x="5.4299%" y="1477" width="0.4525%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1487.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="5.4299%" y="1461" width="0.4525%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="5.4299%" y="1445" width="0.4525%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1455.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="5.4299%" y="1429" width="0.4525%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1439.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.45%)</title><rect x="5.4299%" y="1413" width="0.4525%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1423.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.45%)</title><rect x="5.4299%" y="1397" width="0.4525%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.45%)</title><rect x="5.4299%" y="1381" width="0.4525%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.45%)</title><rect x="5.4299%" y="1365" width="0.4525%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1375.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.45%)</title><rect x="5.4299%" y="1349" width="0.4525%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="1"/><text x="5.6799%" y="1359.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.45%)</title><rect x="5.8824%" y="1509" width="0.4525%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="1"/><text x="6.1324%" y="1519.50"></text></g><g><title>[[stack]] (3 samples, 1.36%)</title><rect x="5.4299%" y="1525" width="1.3575%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="3"/><text x="5.6799%" y="1535.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.45%)</title><rect x="6.3348%" y="1509" width="0.4525%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="6.5848%" y="1519.50"></text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1509" width="9.9548%" height="15" fill="rgb(213,181,19)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1519.50">[unknown]</text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1493" width="9.9548%" height="15" fill="rgb(254,191,54)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1503.50">[unknown]</text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1477" width="9.9548%" height="15" fill="rgb(241,83,37)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1487.50">[unknown]</text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1461" width="9.9548%" height="15" fill="rgb(233,36,39)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1471.50">[unknown]</text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1445" width="9.9548%" height="15" fill="rgb(226,3,54)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1455.50">[unknown]</text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1429" width="9.9548%" height="15" fill="rgb(245,192,40)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1439.50">[unknown]</text></g><g><title>[unknown] (22 samples, 9.95%)</title><rect x="8.5973%" y="1413" width="9.9548%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="22"/><text x="8.8473%" y="1423.50">[unknown]</text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="17.6471%" y="1397" width="0.9050%" height="15" fill="rgb(232,182,51)" fg:x="39" fg:w="2"/><text x="17.8971%" y="1407.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="17.6471%" y="1381" width="0.9050%" height="15" fill="rgb(231,60,39)" fg:x="39" fg:w="2"/><text x="17.8971%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="17.6471%" y="1365" width="0.9050%" height="15" fill="rgb(208,69,12)" fg:x="39" fg:w="2"/><text x="17.8971%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="17.6471%" y="1349" width="0.9050%" height="15" fill="rgb(235,93,37)" fg:x="39" fg:w="2"/><text x="17.8971%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="17.6471%" y="1333" width="0.9050%" height="15" fill="rgb(213,116,39)" fg:x="39" fg:w="2"/><text x="17.8971%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1317" width="0.4525%" height="15" fill="rgb(222,207,29)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1301" width="0.4525%" height="15" fill="rgb(206,96,30)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1285" width="0.4525%" height="15" fill="rgb(218,138,4)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1269" width="0.4525%" height="15" fill="rgb(250,191,14)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1253" width="0.4525%" height="15" fill="rgb(239,60,40)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1237" width="0.4525%" height="15" fill="rgb(206,27,48)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1221" width="0.4525%" height="15" fill="rgb(225,35,8)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1205" width="0.4525%" height="15" fill="rgb(250,213,24)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1189" width="0.4525%" height="15" fill="rgb(247,123,22)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="18.0995%" y="1173" width="0.4525%" height="15" fill="rgb(231,138,38)" fg:x="40" fg:w="1"/><text x="18.3495%" y="1183.50"></text></g><g><title>__GI___libc_free (2 samples, 0.90%)</title><rect x="18.5520%" y="1509" width="0.9050%" height="15" fill="rgb(231,145,46)" fg:x="41" fg:w="2"/><text x="18.8020%" y="1519.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.45%)</title><rect x="19.4570%" y="1509" width="0.4525%" height="15" fill="rgb(251,118,11)" fg:x="43" fg:w="1"/><text x="19.7070%" y="1519.50"></text></g><g><title>__memset_evex_unaligned_erms (1 samples, 0.45%)</title><rect x="19.9095%" y="1509" width="0.4525%" height="15" fill="rgb(217,147,25)" fg:x="44" fg:w="1"/><text x="20.1595%" y="1519.50"></text></g><g><title>_int_realloc (1 samples, 0.45%)</title><rect x="20.3620%" y="1509" width="0.4525%" height="15" fill="rgb(247,81,37)" fg:x="45" fg:w="1"/><text x="20.6120%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.45%)</title><rect x="20.8145%" y="1509" width="0.4525%" height="15" fill="rgb(209,12,38)" fg:x="46" fg:w="1"/><text x="21.0645%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="20.8145%" y="1493" width="0.4525%" height="15" fill="rgb(227,1,9)" fg:x="46" fg:w="1"/><text x="21.0645%" y="1503.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.45%)</title><rect x="20.8145%" y="1477" width="0.4525%" height="15" fill="rgb(248,47,43)" fg:x="46" fg:w="1"/><text x="21.0645%" y="1487.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.45%)</title><rect x="20.8145%" y="1461" width="0.4525%" height="15" fill="rgb(221,10,30)" fg:x="46" fg:w="1"/><text x="21.0645%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.45%)</title><rect x="21.2670%" y="1509" width="0.4525%" height="15" fill="rgb(210,229,1)" fg:x="47" fg:w="1"/><text x="21.5170%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.45%)</title><rect x="21.7195%" y="1461" width="0.4525%" height="15" fill="rgb(222,148,37)" fg:x="48" fg:w="1"/><text x="21.9695%" y="1471.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="21.7195%" y="1445" width="0.4525%" height="15" fill="rgb(234,67,33)" fg:x="48" fg:w="1"/><text x="21.9695%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.45%)</title><rect x="21.7195%" y="1429" width="0.4525%" height="15" fill="rgb(247,98,35)" fg:x="48" fg:w="1"/><text x="21.9695%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.45%)</title><rect x="21.7195%" y="1413" width="0.4525%" height="15" fill="rgb(247,138,52)" fg:x="48" fg:w="1"/><text x="21.9695%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.45%)</title><rect x="21.7195%" y="1397" width="0.4525%" height="15" fill="rgb(213,79,30)" fg:x="48" fg:w="1"/><text x="21.9695%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.45%)</title><rect x="21.7195%" y="1381" width="0.4525%" height="15" fill="rgb(246,177,23)" fg:x="48" fg:w="1"/><text x="21.9695%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.90%)</title><rect x="21.7195%" y="1509" width="0.9050%" height="15" fill="rgb(230,62,27)" fg:x="48" fg:w="2"/><text x="21.9695%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.90%)</title><rect x="21.7195%" y="1493" width="0.9050%" height="15" fill="rgb(216,154,8)" fg:x="48" fg:w="2"/><text x="21.9695%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.90%)</title><rect x="21.7195%" y="1477" width="0.9050%" height="15" fill="rgb(244,35,45)" fg:x="48" fg:w="2"/><text x="21.9695%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.45%)</title><rect x="22.1719%" y="1461" width="0.4525%" height="15" fill="rgb(251,115,12)" fg:x="49" fg:w="1"/><text x="22.4219%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.45%)</title><rect x="22.1719%" y="1445" width="0.4525%" height="15" fill="rgb(240,54,50)" fg:x="49" fg:w="1"/><text x="22.4219%" y="1455.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.45%)</title><rect x="22.1719%" y="1429" width="0.4525%" height="15" fill="rgb(233,84,52)" fg:x="49" fg:w="1"/><text x="22.4219%" y="1439.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.45%)</title><rect x="22.1719%" y="1413" width="0.4525%" height="15" fill="rgb(207,117,47)" fg:x="49" fg:w="1"/><text x="22.4219%" y="1423.50"></text></g><g><title>[unknown] (38 samples, 17.19%)</title><rect x="6.7873%" y="1525" width="17.1946%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="38"/><text x="7.0373%" y="1535.50">[unknown]</text></g><g><title>unidecode::unidecode (3 samples, 1.36%)</title><rect x="22.6244%" y="1509" width="1.3575%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="3"/><text x="22.8744%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.90%)</title><rect x="23.0769%" y="1493" width="0.9050%" height="15" fill="rgb(236,212,23)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (2 samples, 0.90%)</title><rect x="23.0769%" y="1477" width="0.9050%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1487.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (2 samples, 0.90%)</title><rect x="23.0769%" y="1461" width="0.9050%" height="15" fill="rgb(211,96,35)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.90%)</title><rect x="23.0769%" y="1445" width="0.9050%" height="15" fill="rgb(253,215,40)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.90%)</title><rect x="23.0769%" y="1429" width="0.9050%" height="15" fill="rgb(211,81,21)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.90%)</title><rect x="23.0769%" y="1413" width="0.9050%" height="15" fill="rgb(208,190,38)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1423.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.90%)</title><rect x="23.0769%" y="1397" width="0.9050%" height="15" fill="rgb(235,213,38)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.90%)</title><rect x="23.0769%" y="1381" width="0.9050%" height="15" fill="rgb(237,122,38)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (2 samples, 0.90%)</title><rect x="23.0769%" y="1365" width="0.9050%" height="15" fill="rgb(244,218,35)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1375.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.90%)</title><rect x="23.0769%" y="1349" width="0.9050%" height="15" fill="rgb(240,68,47)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.90%)</title><rect x="23.0769%" y="1333" width="0.9050%" height="15" fill="rgb(210,16,53)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.90%)</title><rect x="23.0769%" y="1317" width="0.9050%" height="15" fill="rgb(235,124,12)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.90%)</title><rect x="23.0769%" y="1301" width="0.9050%" height="15" fill="rgb(224,169,11)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.90%)</title><rect x="23.0769%" y="1285" width="0.9050%" height="15" fill="rgb(250,166,2)" fg:x="51" fg:w="2"/><text x="23.3269%" y="1295.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="23.9819%" y="997" width="0.4525%" height="15" fill="rgb(242,216,29)" fg:x="53" fg:w="1"/><text x="24.2319%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="981" width="0.4525%" height="15" fill="rgb(230,116,27)" fg:x="53" fg:w="1"/><text x="24.2319%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="965" width="0.4525%" height="15" fill="rgb(228,99,48)" fg:x="53" fg:w="1"/><text x="24.2319%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="23.9819%" y="949" width="0.4525%" height="15" fill="rgb(253,11,6)" fg:x="53" fg:w="1"/><text x="24.2319%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="23.9819%" y="933" width="0.4525%" height="15" fill="rgb(247,143,39)" fg:x="53" fg:w="1"/><text x="24.2319%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="23.9819%" y="917" width="0.4525%" height="15" fill="rgb(236,97,10)" fg:x="53" fg:w="1"/><text x="24.2319%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="901" width="0.4525%" height="15" fill="rgb(233,208,19)" fg:x="53" fg:w="1"/><text x="24.2319%" y="911.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="23.9819%" y="885" width="0.4525%" height="15" fill="rgb(216,164,2)" fg:x="53" fg:w="1"/><text x="24.2319%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="869" width="0.4525%" height="15" fill="rgb(220,129,5)" fg:x="53" fg:w="1"/><text x="24.2319%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="853" width="0.4525%" height="15" fill="rgb(242,17,10)" fg:x="53" fg:w="1"/><text x="24.2319%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="23.9819%" y="837" width="0.4525%" height="15" fill="rgb(242,107,0)" fg:x="53" fg:w="1"/><text x="24.2319%" y="847.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="23.9819%" y="821" width="0.4525%" height="15" fill="rgb(251,28,31)" fg:x="53" fg:w="1"/><text x="24.2319%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="23.9819%" y="805" width="0.4525%" height="15" fill="rgb(233,223,10)" fg:x="53" fg:w="1"/><text x="24.2319%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="789" width="0.4525%" height="15" fill="rgb(215,21,27)" fg:x="53" fg:w="1"/><text x="24.2319%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="23.9819%" y="773" width="0.4525%" height="15" fill="rgb(232,23,21)" fg:x="53" fg:w="1"/><text x="24.2319%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="757" width="0.4525%" height="15" fill="rgb(244,5,23)" fg:x="53" fg:w="1"/><text x="24.2319%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="741" width="0.4525%" height="15" fill="rgb(226,81,46)" fg:x="53" fg:w="1"/><text x="24.2319%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="23.9819%" y="725" width="0.4525%" height="15" fill="rgb(247,70,30)" fg:x="53" fg:w="1"/><text x="24.2319%" y="735.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="23.9819%" y="709" width="0.4525%" height="15" fill="rgb(212,68,19)" fg:x="53" fg:w="1"/><text x="24.2319%" y="719.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="23.9819%" y="693" width="0.4525%" height="15" fill="rgb(240,187,13)" fg:x="53" fg:w="1"/><text x="24.2319%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="677" width="0.4525%" height="15" fill="rgb(223,113,26)" fg:x="53" fg:w="1"/><text x="24.2319%" y="687.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="23.9819%" y="661" width="0.4525%" height="15" fill="rgb(206,192,2)" fg:x="53" fg:w="1"/><text x="24.2319%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="645" width="0.4525%" height="15" fill="rgb(241,108,4)" fg:x="53" fg:w="1"/><text x="24.2319%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="629" width="0.4525%" height="15" fill="rgb(247,173,49)" fg:x="53" fg:w="1"/><text x="24.2319%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="23.9819%" y="613" width="0.4525%" height="15" fill="rgb(224,114,35)" fg:x="53" fg:w="1"/><text x="24.2319%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.45%)</title><rect x="23.9819%" y="597" width="0.4525%" height="15" fill="rgb(245,159,27)" fg:x="53" fg:w="1"/><text x="24.2319%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.45%)</title><rect x="23.9819%" y="581" width="0.4525%" height="15" fill="rgb(245,172,44)" fg:x="53" fg:w="1"/><text x="24.2319%" y="591.50"></text></g><g><title>&lt;rayon::iter::filter_map::FilterMapFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.45%)</title><rect x="23.9819%" y="565" width="0.4525%" height="15" fill="rgb(236,23,11)" fg:x="53" fg:w="1"/><text x="24.2319%" y="575.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (1 samples, 0.45%)</title><rect x="23.9819%" y="549" width="0.4525%" height="15" fill="rgb(205,117,38)" fg:x="53" fg:w="1"/><text x="24.2319%" y="559.50"></text></g><g><title>paranagram::word::Word::contains (1 samples, 0.45%)</title><rect x="23.9819%" y="533" width="0.4525%" height="15" fill="rgb(237,72,25)" fg:x="53" fg:w="1"/><text x="24.2319%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::contains (1 samples, 0.45%)</title><rect x="23.9819%" y="517" width="0.4525%" height="15" fill="rgb(244,70,9)" fg:x="53" fg:w="1"/><text x="24.2319%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.45%)</title><rect x="23.9819%" y="501" width="0.4525%" height="15" fill="rgb(217,125,39)" fg:x="53" fg:w="1"/><text x="24.2319%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.45%)</title><rect x="23.9819%" y="485" width="0.4525%" height="15" fill="rgb(235,36,10)" fg:x="53" fg:w="1"/><text x="24.2319%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.45%)</title><rect x="23.9819%" y="469" width="0.4525%" height="15" fill="rgb(251,123,47)" fg:x="53" fg:w="1"/><text x="24.2319%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.45%)</title><rect x="23.9819%" y="453" width="0.4525%" height="15" fill="rgb(221,13,13)" fg:x="53" fg:w="1"/><text x="24.2319%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.45%)</title><rect x="23.9819%" y="437" width="0.4525%" height="15" fill="rgb(238,131,9)" fg:x="53" fg:w="1"/><text x="24.2319%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.45%)</title><rect x="23.9819%" y="421" width="0.4525%" height="15" fill="rgb(211,50,8)" fg:x="53" fg:w="1"/><text x="24.2319%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.45%)</title><rect x="24.4344%" y="997" width="0.4525%" height="15" fill="rgb(245,182,24)" fg:x="54" fg:w="1"/><text x="24.6844%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.45%)</title><rect x="24.4344%" y="981" width="0.4525%" height="15" fill="rgb(242,14,37)" fg:x="54" fg:w="1"/><text x="24.6844%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.45%)</title><rect x="24.4344%" y="965" width="0.4525%" height="15" fill="rgb(246,228,12)" fg:x="54" fg:w="1"/><text x="24.6844%" y="975.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.45%)</title><rect x="24.4344%" y="949" width="0.4525%" height="15" fill="rgb(213,55,15)" fg:x="54" fg:w="1"/><text x="24.6844%" y="959.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.45%)</title><rect x="24.4344%" y="933" width="0.4525%" height="15" fill="rgb(209,9,3)" fg:x="54" fg:w="1"/><text x="24.6844%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="24.4344%" y="917" width="0.4525%" height="15" fill="rgb(230,59,30)" fg:x="54" fg:w="1"/><text x="24.6844%" y="927.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="24.4344%" y="901" width="0.4525%" height="15" fill="rgb(209,121,21)" fg:x="54" fg:w="1"/><text x="24.6844%" y="911.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="24.4344%" y="885" width="0.4525%" height="15" fill="rgb(220,109,13)" fg:x="54" fg:w="1"/><text x="24.6844%" y="895.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="24.4344%" y="869" width="0.4525%" height="15" fill="rgb(232,18,1)" fg:x="54" fg:w="1"/><text x="24.6844%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="24.4344%" y="853" width="0.4525%" height="15" fill="rgb(215,41,42)" fg:x="54" fg:w="1"/><text x="24.6844%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="837" width="0.4525%" height="15" fill="rgb(224,123,36)" fg:x="54" fg:w="1"/><text x="24.6844%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="821" width="0.4525%" height="15" fill="rgb(240,125,3)" fg:x="54" fg:w="1"/><text x="24.6844%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="805" width="0.4525%" height="15" fill="rgb(205,98,50)" fg:x="54" fg:w="1"/><text x="24.6844%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.4344%" y="789" width="0.4525%" height="15" fill="rgb(205,185,37)" fg:x="54" fg:w="1"/><text x="24.6844%" y="799.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="24.4344%" y="773" width="0.4525%" height="15" fill="rgb(238,207,15)" fg:x="54" fg:w="1"/><text x="24.6844%" y="783.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="24.4344%" y="757" width="0.4525%" height="15" fill="rgb(213,199,42)" fg:x="54" fg:w="1"/><text x="24.6844%" y="767.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="741" width="0.4525%" height="15" fill="rgb(235,201,11)" fg:x="54" fg:w="1"/><text x="24.6844%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="24.4344%" y="725" width="0.4525%" height="15" fill="rgb(207,46,11)" fg:x="54" fg:w="1"/><text x="24.6844%" y="735.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="24.4344%" y="709" width="0.4525%" height="15" fill="rgb(241,35,35)" fg:x="54" fg:w="1"/><text x="24.6844%" y="719.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="24.4344%" y="693" width="0.4525%" height="15" fill="rgb(243,32,47)" fg:x="54" fg:w="1"/><text x="24.6844%" y="703.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="24.4344%" y="677" width="0.4525%" height="15" fill="rgb(247,202,23)" fg:x="54" fg:w="1"/><text x="24.6844%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="24.4344%" y="661" width="0.4525%" height="15" fill="rgb(219,102,11)" fg:x="54" fg:w="1"/><text x="24.6844%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="645" width="0.4525%" height="15" fill="rgb(243,110,44)" fg:x="54" fg:w="1"/><text x="24.6844%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="629" width="0.4525%" height="15" fill="rgb(222,74,54)" fg:x="54" fg:w="1"/><text x="24.6844%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.4344%" y="613" width="0.4525%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="1"/><text x="24.6844%" y="623.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="24.4344%" y="597" width="0.4525%" height="15" fill="rgb(226,22,26)" fg:x="54" fg:w="1"/><text x="24.6844%" y="607.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="24.4344%" y="581" width="0.4525%" height="15" fill="rgb(217,163,10)" fg:x="54" fg:w="1"/><text x="24.6844%" y="591.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="565" width="0.4525%" height="15" fill="rgb(213,25,53)" fg:x="54" fg:w="1"/><text x="24.6844%" y="575.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="24.4344%" y="549" width="0.4525%" height="15" fill="rgb(252,105,26)" fg:x="54" fg:w="1"/><text x="24.6844%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="24.4344%" y="533" width="0.4525%" height="15" fill="rgb(220,39,43)" fg:x="54" fg:w="1"/><text x="24.6844%" y="543.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="24.4344%" y="517" width="0.4525%" height="15" fill="rgb(229,68,48)" fg:x="54" fg:w="1"/><text x="24.6844%" y="527.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="24.4344%" y="501" width="0.4525%" height="15" fill="rgb(252,8,32)" fg:x="54" fg:w="1"/><text x="24.6844%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="24.4344%" y="485" width="0.4525%" height="15" fill="rgb(223,20,43)" fg:x="54" fg:w="1"/><text x="24.6844%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="469" width="0.4525%" height="15" fill="rgb(229,81,49)" fg:x="54" fg:w="1"/><text x="24.6844%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="453" width="0.4525%" height="15" fill="rgb(236,28,36)" fg:x="54" fg:w="1"/><text x="24.6844%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.4344%" y="437" width="0.4525%" height="15" fill="rgb(249,185,26)" fg:x="54" fg:w="1"/><text x="24.6844%" y="447.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="24.4344%" y="421" width="0.4525%" height="15" fill="rgb(249,174,33)" fg:x="54" fg:w="1"/><text x="24.6844%" y="431.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="24.4344%" y="405" width="0.4525%" height="15" fill="rgb(233,201,37)" fg:x="54" fg:w="1"/><text x="24.6844%" y="415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="389" width="0.4525%" height="15" fill="rgb(221,78,26)" fg:x="54" fg:w="1"/><text x="24.6844%" y="399.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="24.4344%" y="373" width="0.4525%" height="15" fill="rgb(250,127,30)" fg:x="54" fg:w="1"/><text x="24.6844%" y="383.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="24.4344%" y="357" width="0.4525%" height="15" fill="rgb(230,49,44)" fg:x="54" fg:w="1"/><text x="24.6844%" y="367.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="24.4344%" y="341" width="0.4525%" height="15" fill="rgb(229,67,23)" fg:x="54" fg:w="1"/><text x="24.6844%" y="351.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="24.4344%" y="325" width="0.4525%" height="15" fill="rgb(249,83,47)" fg:x="54" fg:w="1"/><text x="24.6844%" y="335.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="24.4344%" y="309" width="0.4525%" height="15" fill="rgb(215,43,3)" fg:x="54" fg:w="1"/><text x="24.6844%" y="319.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="293" width="0.4525%" height="15" fill="rgb(238,154,13)" fg:x="54" fg:w="1"/><text x="24.6844%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="277" width="0.4525%" height="15" fill="rgb(219,56,2)" fg:x="54" fg:w="1"/><text x="24.6844%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.4344%" y="261" width="0.4525%" height="15" fill="rgb(233,0,4)" fg:x="54" fg:w="1"/><text x="24.6844%" y="271.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="24.4344%" y="245" width="0.4525%" height="15" fill="rgb(235,30,7)" fg:x="54" fg:w="1"/><text x="24.6844%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="24.4344%" y="229" width="0.4525%" height="15" fill="rgb(250,79,13)" fg:x="54" fg:w="1"/><text x="24.6844%" y="239.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="213" width="0.4525%" height="15" fill="rgb(211,146,34)" fg:x="54" fg:w="1"/><text x="24.6844%" y="223.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="24.4344%" y="197" width="0.4525%" height="15" fill="rgb(228,22,38)" fg:x="54" fg:w="1"/><text x="24.6844%" y="207.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="24.4344%" y="181" width="0.4525%" height="15" fill="rgb(235,168,5)" fg:x="54" fg:w="1"/><text x="24.6844%" y="191.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="24.4344%" y="165" width="0.4525%" height="15" fill="rgb(221,155,16)" fg:x="54" fg:w="1"/><text x="24.6844%" y="175.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="24.4344%" y="149" width="0.4525%" height="15" fill="rgb(215,215,53)" fg:x="54" fg:w="1"/><text x="24.6844%" y="159.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="24.4344%" y="133" width="0.4525%" height="15" fill="rgb(223,4,10)" fg:x="54" fg:w="1"/><text x="24.6844%" y="143.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="117" width="0.4525%" height="15" fill="rgb(234,103,6)" fg:x="54" fg:w="1"/><text x="24.6844%" y="127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.4344%" y="101" width="0.4525%" height="15" fill="rgb(227,97,0)" fg:x="54" fg:w="1"/><text x="24.6844%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.4344%" y="85" width="0.4525%" height="15" fill="rgb(234,150,53)" fg:x="54" fg:w="1"/><text x="24.6844%" y="95.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.45%)</title><rect x="24.4344%" y="69" width="0.4525%" height="15" fill="rgb(228,201,54)" fg:x="54" fg:w="1"/><text x="24.6844%" y="79.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.45%)</title><rect x="24.4344%" y="53" width="0.4525%" height="15" fill="rgb(222,22,37)" fg:x="54" fg:w="1"/><text x="24.6844%" y="63.50"></text></g><g><title>&lt;rayon::iter::filter_map::FilterMapFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.45%)</title><rect x="24.4344%" y="37" width="0.4525%" height="15" fill="rgb(237,53,32)" fg:x="54" fg:w="1"/><text x="24.6844%" y="47.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="24.8869%" y="821" width="0.4525%" height="15" fill="rgb(233,25,53)" fg:x="55" fg:w="1"/><text x="25.1369%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="805" width="0.4525%" height="15" fill="rgb(210,40,34)" fg:x="55" fg:w="1"/><text x="25.1369%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="789" width="0.4525%" height="15" fill="rgb(241,220,44)" fg:x="55" fg:w="1"/><text x="25.1369%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.8869%" y="773" width="0.4525%" height="15" fill="rgb(235,28,35)" fg:x="55" fg:w="1"/><text x="25.1369%" y="783.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="24.8869%" y="757" width="0.4525%" height="15" fill="rgb(210,56,17)" fg:x="55" fg:w="1"/><text x="25.1369%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="24.8869%" y="741" width="0.4525%" height="15" fill="rgb(224,130,29)" fg:x="55" fg:w="1"/><text x="25.1369%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="725" width="0.4525%" height="15" fill="rgb(235,212,8)" fg:x="55" fg:w="1"/><text x="25.1369%" y="735.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="24.8869%" y="709" width="0.4525%" height="15" fill="rgb(223,33,50)" fg:x="55" fg:w="1"/><text x="25.1369%" y="719.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="24.8869%" y="693" width="0.4525%" height="15" fill="rgb(219,149,13)" fg:x="55" fg:w="1"/><text x="25.1369%" y="703.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="24.8869%" y="677" width="0.4525%" height="15" fill="rgb(250,156,29)" fg:x="55" fg:w="1"/><text x="25.1369%" y="687.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="24.8869%" y="661" width="0.4525%" height="15" fill="rgb(216,193,19)" fg:x="55" fg:w="1"/><text x="25.1369%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="24.8869%" y="645" width="0.4525%" height="15" fill="rgb(216,135,14)" fg:x="55" fg:w="1"/><text x="25.1369%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="629" width="0.4525%" height="15" fill="rgb(241,47,5)" fg:x="55" fg:w="1"/><text x="25.1369%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="613" width="0.4525%" height="15" fill="rgb(233,42,35)" fg:x="55" fg:w="1"/><text x="25.1369%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.8869%" y="597" width="0.4525%" height="15" fill="rgb(231,13,6)" fg:x="55" fg:w="1"/><text x="25.1369%" y="607.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="24.8869%" y="581" width="0.4525%" height="15" fill="rgb(207,181,40)" fg:x="55" fg:w="1"/><text x="25.1369%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="24.8869%" y="565" width="0.4525%" height="15" fill="rgb(254,173,49)" fg:x="55" fg:w="1"/><text x="25.1369%" y="575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="549" width="0.4525%" height="15" fill="rgb(221,1,38)" fg:x="55" fg:w="1"/><text x="25.1369%" y="559.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="24.8869%" y="533" width="0.4525%" height="15" fill="rgb(206,124,46)" fg:x="55" fg:w="1"/><text x="25.1369%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="517" width="0.4525%" height="15" fill="rgb(249,21,11)" fg:x="55" fg:w="1"/><text x="25.1369%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="501" width="0.4525%" height="15" fill="rgb(222,201,40)" fg:x="55" fg:w="1"/><text x="25.1369%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="24.8869%" y="485" width="0.4525%" height="15" fill="rgb(235,61,29)" fg:x="55" fg:w="1"/><text x="25.1369%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.45%)</title><rect x="24.8869%" y="469" width="0.4525%" height="15" fill="rgb(219,207,3)" fg:x="55" fg:w="1"/><text x="25.1369%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.45%)</title><rect x="24.8869%" y="453" width="0.4525%" height="15" fill="rgb(222,56,46)" fg:x="55" fg:w="1"/><text x="25.1369%" y="463.50"></text></g><g><title>&lt;rayon::iter::filter_map::FilterMapFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.45%)</title><rect x="24.8869%" y="437" width="0.4525%" height="15" fill="rgb(239,76,54)" fg:x="55" fg:w="1"/><text x="25.1369%" y="447.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (1 samples, 0.45%)</title><rect x="24.8869%" y="421" width="0.4525%" height="15" fill="rgb(231,124,27)" fg:x="55" fg:w="1"/><text x="25.1369%" y="431.50"></text></g><g><title>paranagram::word::Word::len (1 samples, 0.45%)</title><rect x="24.8869%" y="405" width="0.4525%" height="15" fill="rgb(249,195,6)" fg:x="55" fg:w="1"/><text x="25.1369%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 1.81%)</title><rect x="23.9819%" y="1093" width="1.8100%" height="15" fill="rgb(237,174,47)" fg:x="53" fg:w="4"/><text x="24.2319%" y="1103.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 1.81%)</title><rect x="23.9819%" y="1077" width="1.8100%" height="15" fill="rgb(206,201,31)" fg:x="53" fg:w="4"/><text x="24.2319%" y="1087.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 1.81%)</title><rect x="23.9819%" y="1061" width="1.8100%" height="15" fill="rgb(231,57,52)" fg:x="53" fg:w="4"/><text x="24.2319%" y="1071.50">r..</text></g><g><title>rayon_core::join::join_context (4 samples, 1.81%)</title><rect x="23.9819%" y="1045" width="1.8100%" height="15" fill="rgb(248,177,22)" fg:x="53" fg:w="4"/><text x="24.2319%" y="1055.50">r..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 1.81%)</title><rect x="23.9819%" y="1029" width="1.8100%" height="15" fill="rgb(215,211,37)" fg:x="53" fg:w="4"/><text x="24.2319%" y="1039.50">r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 1.81%)</title><rect x="23.9819%" y="1013" width="1.8100%" height="15" fill="rgb(241,128,51)" fg:x="53" fg:w="4"/><text x="24.2319%" y="1023.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.90%)</title><rect x="24.8869%" y="997" width="0.9050%" height="15" fill="rgb(227,165,31)" fg:x="55" fg:w="2"/><text x="25.1369%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.90%)</title><rect x="24.8869%" y="981" width="0.9050%" height="15" fill="rgb(228,167,24)" fg:x="55" fg:w="2"/><text x="25.1369%" y="991.50"></text></g><g><title>std::panicking::try (2 samples, 0.90%)</title><rect x="24.8869%" y="965" width="0.9050%" height="15" fill="rgb(228,143,12)" fg:x="55" fg:w="2"/><text x="25.1369%" y="975.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.90%)</title><rect x="24.8869%" y="949" width="0.9050%" height="15" fill="rgb(249,149,8)" fg:x="55" fg:w="2"/><text x="25.1369%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.90%)</title><rect x="24.8869%" y="933" width="0.9050%" height="15" fill="rgb(243,35,44)" fg:x="55" fg:w="2"/><text x="25.1369%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.90%)</title><rect x="24.8869%" y="917" width="0.9050%" height="15" fill="rgb(246,89,9)" fg:x="55" fg:w="2"/><text x="25.1369%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.90%)</title><rect x="24.8869%" y="901" width="0.9050%" height="15" fill="rgb(233,213,13)" fg:x="55" fg:w="2"/><text x="25.1369%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.90%)</title><rect x="24.8869%" y="885" width="0.9050%" height="15" fill="rgb(233,141,41)" fg:x="55" fg:w="2"/><text x="25.1369%" y="895.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.90%)</title><rect x="24.8869%" y="869" width="0.9050%" height="15" fill="rgb(239,167,4)" fg:x="55" fg:w="2"/><text x="25.1369%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.90%)</title><rect x="24.8869%" y="853" width="0.9050%" height="15" fill="rgb(209,217,16)" fg:x="55" fg:w="2"/><text x="25.1369%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.90%)</title><rect x="24.8869%" y="837" width="0.9050%" height="15" fill="rgb(219,88,35)" fg:x="55" fg:w="2"/><text x="25.1369%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="25.3394%" y="821" width="0.4525%" height="15" fill="rgb(220,193,23)" fg:x="56" fg:w="1"/><text x="25.5894%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="25.3394%" y="805" width="0.4525%" height="15" fill="rgb(230,90,52)" fg:x="56" fg:w="1"/><text x="25.5894%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="25.3394%" y="789" width="0.4525%" height="15" fill="rgb(252,106,19)" fg:x="56" fg:w="1"/><text x="25.5894%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="25.3394%" y="773" width="0.4525%" height="15" fill="rgb(206,74,20)" fg:x="56" fg:w="1"/><text x="25.5894%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="25.3394%" y="757" width="0.4525%" height="15" fill="rgb(230,138,44)" fg:x="56" fg:w="1"/><text x="25.5894%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="741" width="0.4525%" height="15" fill="rgb(235,182,43)" fg:x="56" fg:w="1"/><text x="25.5894%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="725" width="0.4525%" height="15" fill="rgb(242,16,51)" fg:x="56" fg:w="1"/><text x="25.5894%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.3394%" y="709" width="0.4525%" height="15" fill="rgb(248,9,4)" fg:x="56" fg:w="1"/><text x="25.5894%" y="719.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="25.3394%" y="693" width="0.4525%" height="15" fill="rgb(210,31,22)" fg:x="56" fg:w="1"/><text x="25.5894%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="25.3394%" y="677" width="0.4525%" height="15" fill="rgb(239,54,39)" fg:x="56" fg:w="1"/><text x="25.5894%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="661" width="0.4525%" height="15" fill="rgb(230,99,41)" fg:x="56" fg:w="1"/><text x="25.5894%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="25.3394%" y="645" width="0.4525%" height="15" fill="rgb(253,106,12)" fg:x="56" fg:w="1"/><text x="25.5894%" y="655.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="25.3394%" y="629" width="0.4525%" height="15" fill="rgb(213,46,41)" fg:x="56" fg:w="1"/><text x="25.5894%" y="639.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="25.3394%" y="613" width="0.4525%" height="15" fill="rgb(215,133,35)" fg:x="56" fg:w="1"/><text x="25.5894%" y="623.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="25.3394%" y="597" width="0.4525%" height="15" fill="rgb(213,28,5)" fg:x="56" fg:w="1"/><text x="25.5894%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="25.3394%" y="581" width="0.4525%" height="15" fill="rgb(215,77,49)" fg:x="56" fg:w="1"/><text x="25.5894%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="565" width="0.4525%" height="15" fill="rgb(248,100,22)" fg:x="56" fg:w="1"/><text x="25.5894%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="549" width="0.4525%" height="15" fill="rgb(208,67,9)" fg:x="56" fg:w="1"/><text x="25.5894%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.3394%" y="533" width="0.4525%" height="15" fill="rgb(219,133,21)" fg:x="56" fg:w="1"/><text x="25.5894%" y="543.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="25.3394%" y="517" width="0.4525%" height="15" fill="rgb(246,46,29)" fg:x="56" fg:w="1"/><text x="25.5894%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="25.3394%" y="501" width="0.4525%" height="15" fill="rgb(246,185,52)" fg:x="56" fg:w="1"/><text x="25.5894%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="485" width="0.4525%" height="15" fill="rgb(252,136,11)" fg:x="56" fg:w="1"/><text x="25.5894%" y="495.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="25.3394%" y="469" width="0.4525%" height="15" fill="rgb(219,138,53)" fg:x="56" fg:w="1"/><text x="25.5894%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="453" width="0.4525%" height="15" fill="rgb(211,51,23)" fg:x="56" fg:w="1"/><text x="25.5894%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="437" width="0.4525%" height="15" fill="rgb(247,221,28)" fg:x="56" fg:w="1"/><text x="25.5894%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.3394%" y="421" width="0.4525%" height="15" fill="rgb(251,222,45)" fg:x="56" fg:w="1"/><text x="25.5894%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.45%)</title><rect x="25.3394%" y="405" width="0.4525%" height="15" fill="rgb(217,162,53)" fg:x="56" fg:w="1"/><text x="25.5894%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.45%)</title><rect x="25.3394%" y="389" width="0.4525%" height="15" fill="rgb(229,93,14)" fg:x="56" fg:w="1"/><text x="25.5894%" y="399.50"></text></g><g><title>&lt;rayon::iter::filter_map::FilterMapFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.45%)</title><rect x="25.3394%" y="373" width="0.4525%" height="15" fill="rgb(209,67,49)" fg:x="56" fg:w="1"/><text x="25.5894%" y="383.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (1 samples, 0.45%)</title><rect x="25.3394%" y="357" width="0.4525%" height="15" fill="rgb(213,87,29)" fg:x="56" fg:w="1"/><text x="25.5894%" y="367.50"></text></g><g><title>paranagram::word::Word::len (1 samples, 0.45%)</title><rect x="25.3394%" y="341" width="0.4525%" height="15" fill="rgb(205,151,52)" fg:x="56" fg:w="1"/><text x="25.5894%" y="351.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 2.26%)</title><rect x="23.9819%" y="1413" width="2.2624%" height="15" fill="rgb(253,215,39)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1423.50">s..</text></g><g><title>std::panicking::try (5 samples, 2.26%)</title><rect x="23.9819%" y="1397" width="2.2624%" height="15" fill="rgb(221,220,41)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1407.50">s..</text></g><g><title>std::panicking::try::do_call (5 samples, 2.26%)</title><rect x="23.9819%" y="1381" width="2.2624%" height="15" fill="rgb(218,133,21)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1391.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 2.26%)</title><rect x="23.9819%" y="1365" width="2.2624%" height="15" fill="rgb(221,193,43)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1375.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5 samples, 2.26%)</title><rect x="23.9819%" y="1349" width="2.2624%" height="15" fill="rgb(240,128,52)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1359.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 2.26%)</title><rect x="23.9819%" y="1333" width="2.2624%" height="15" fill="rgb(253,114,12)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1343.50">s..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (5 samples, 2.26%)</title><rect x="23.9819%" y="1317" width="2.2624%" height="15" fill="rgb(215,223,47)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1327.50">&lt;..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (5 samples, 2.26%)</title><rect x="23.9819%" y="1301" width="2.2624%" height="15" fill="rgb(248,225,23)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1311.50">r..</text></g><g><title>rayon_core::registry::main_loop (5 samples, 2.26%)</title><rect x="23.9819%" y="1285" width="2.2624%" height="15" fill="rgb(250,108,0)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1295.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 2.26%)</title><rect x="23.9819%" y="1269" width="2.2624%" height="15" fill="rgb(228,208,7)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1279.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 2.26%)</title><rect x="23.9819%" y="1253" width="2.2624%" height="15" fill="rgb(244,45,10)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1263.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 2.26%)</title><rect x="23.9819%" y="1237" width="2.2624%" height="15" fill="rgb(207,125,25)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1247.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 2.26%)</title><rect x="23.9819%" y="1221" width="2.2624%" height="15" fill="rgb(210,195,18)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1231.50">r..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 2.26%)</title><rect x="23.9819%" y="1205" width="2.2624%" height="15" fill="rgb(249,80,12)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1215.50">&lt;..</text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 2.26%)</title><rect x="23.9819%" y="1189" width="2.2624%" height="15" fill="rgb(221,65,9)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1199.50">r..</text></g><g><title>std::panic::catch_unwind (5 samples, 2.26%)</title><rect x="23.9819%" y="1173" width="2.2624%" height="15" fill="rgb(235,49,36)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1183.50">s..</text></g><g><title>std::panicking::try (5 samples, 2.26%)</title><rect x="23.9819%" y="1157" width="2.2624%" height="15" fill="rgb(225,32,20)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1167.50">s..</text></g><g><title>std::panicking::try::do_call (5 samples, 2.26%)</title><rect x="23.9819%" y="1141" width="2.2624%" height="15" fill="rgb(215,141,46)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1151.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 2.26%)</title><rect x="23.9819%" y="1125" width="2.2624%" height="15" fill="rgb(250,160,47)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1135.50">&lt;..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 2.26%)</title><rect x="23.9819%" y="1109" width="2.2624%" height="15" fill="rgb(216,222,40)" fg:x="53" fg:w="5"/><text x="24.2319%" y="1119.50">&lt;..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="1093" width="0.4525%" height="15" fill="rgb(234,217,39)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="1077" width="0.4525%" height="15" fill="rgb(207,178,40)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="25.7919%" y="1061" width="0.4525%" height="15" fill="rgb(221,136,13)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="25.7919%" y="1045" width="0.4525%" height="15" fill="rgb(249,199,10)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1055.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="25.7919%" y="1029" width="0.4525%" height="15" fill="rgb(249,222,13)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="25.7919%" y="1013" width="0.4525%" height="15" fill="rgb(244,185,38)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="25.7919%" y="997" width="0.4525%" height="15" fill="rgb(236,202,9)" fg:x="57" fg:w="1"/><text x="26.0419%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="981" width="0.4525%" height="15" fill="rgb(250,229,37)" fg:x="57" fg:w="1"/><text x="26.0419%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="965" width="0.4525%" height="15" fill="rgb(206,174,23)" fg:x="57" fg:w="1"/><text x="26.0419%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.7919%" y="949" width="0.4525%" height="15" fill="rgb(211,33,43)" fg:x="57" fg:w="1"/><text x="26.0419%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="25.7919%" y="933" width="0.4525%" height="15" fill="rgb(245,58,50)" fg:x="57" fg:w="1"/><text x="26.0419%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="25.7919%" y="917" width="0.4525%" height="15" fill="rgb(244,68,36)" fg:x="57" fg:w="1"/><text x="26.0419%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="901" width="0.4525%" height="15" fill="rgb(232,229,15)" fg:x="57" fg:w="1"/><text x="26.0419%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="25.7919%" y="885" width="0.4525%" height="15" fill="rgb(254,30,23)" fg:x="57" fg:w="1"/><text x="26.0419%" y="895.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="25.7919%" y="869" width="0.4525%" height="15" fill="rgb(235,160,14)" fg:x="57" fg:w="1"/><text x="26.0419%" y="879.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="25.7919%" y="853" width="0.4525%" height="15" fill="rgb(212,155,44)" fg:x="57" fg:w="1"/><text x="26.0419%" y="863.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="25.7919%" y="837" width="0.4525%" height="15" fill="rgb(226,2,50)" fg:x="57" fg:w="1"/><text x="26.0419%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="25.7919%" y="821" width="0.4525%" height="15" fill="rgb(234,177,6)" fg:x="57" fg:w="1"/><text x="26.0419%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="805" width="0.4525%" height="15" fill="rgb(217,24,9)" fg:x="57" fg:w="1"/><text x="26.0419%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="789" width="0.4525%" height="15" fill="rgb(220,13,46)" fg:x="57" fg:w="1"/><text x="26.0419%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.7919%" y="773" width="0.4525%" height="15" fill="rgb(239,221,27)" fg:x="57" fg:w="1"/><text x="26.0419%" y="783.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="25.7919%" y="757" width="0.4525%" height="15" fill="rgb(222,198,25)" fg:x="57" fg:w="1"/><text x="26.0419%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="25.7919%" y="741" width="0.4525%" height="15" fill="rgb(211,99,13)" fg:x="57" fg:w="1"/><text x="26.0419%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="725" width="0.4525%" height="15" fill="rgb(232,111,31)" fg:x="57" fg:w="1"/><text x="26.0419%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.45%)</title><rect x="25.7919%" y="709" width="0.4525%" height="15" fill="rgb(245,82,37)" fg:x="57" fg:w="1"/><text x="26.0419%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="693" width="0.4525%" height="15" fill="rgb(227,149,46)" fg:x="57" fg:w="1"/><text x="26.0419%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="677" width="0.4525%" height="15" fill="rgb(218,36,50)" fg:x="57" fg:w="1"/><text x="26.0419%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.7919%" y="661" width="0.4525%" height="15" fill="rgb(226,80,48)" fg:x="57" fg:w="1"/><text x="26.0419%" y="671.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="25.7919%" y="645" width="0.4525%" height="15" fill="rgb(238,224,15)" fg:x="57" fg:w="1"/><text x="26.0419%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="25.7919%" y="629" width="0.4525%" height="15" fill="rgb(241,136,10)" fg:x="57" fg:w="1"/><text x="26.0419%" y="639.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="613" width="0.4525%" height="15" fill="rgb(208,32,45)" fg:x="57" fg:w="1"/><text x="26.0419%" y="623.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="25.7919%" y="597" width="0.4525%" height="15" fill="rgb(207,135,9)" fg:x="57" fg:w="1"/><text x="26.0419%" y="607.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="25.7919%" y="581" width="0.4525%" height="15" fill="rgb(206,86,44)" fg:x="57" fg:w="1"/><text x="26.0419%" y="591.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="25.7919%" y="565" width="0.4525%" height="15" fill="rgb(245,177,15)" fg:x="57" fg:w="1"/><text x="26.0419%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="25.7919%" y="549" width="0.4525%" height="15" fill="rgb(206,64,50)" fg:x="57" fg:w="1"/><text x="26.0419%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="25.7919%" y="533" width="0.4525%" height="15" fill="rgb(234,36,40)" fg:x="57" fg:w="1"/><text x="26.0419%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="517" width="0.4525%" height="15" fill="rgb(213,64,8)" fg:x="57" fg:w="1"/><text x="26.0419%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="501" width="0.4525%" height="15" fill="rgb(210,75,36)" fg:x="57" fg:w="1"/><text x="26.0419%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.7919%" y="485" width="0.4525%" height="15" fill="rgb(229,88,21)" fg:x="57" fg:w="1"/><text x="26.0419%" y="495.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.45%)</title><rect x="25.7919%" y="469" width="0.4525%" height="15" fill="rgb(252,204,47)" fg:x="57" fg:w="1"/><text x="26.0419%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.45%)</title><rect x="25.7919%" y="453" width="0.4525%" height="15" fill="rgb(208,77,27)" fg:x="57" fg:w="1"/><text x="26.0419%" y="463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="437" width="0.4525%" height="15" fill="rgb(221,76,26)" fg:x="57" fg:w="1"/><text x="26.0419%" y="447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.45%)</title><rect x="25.7919%" y="421" width="0.4525%" height="15" fill="rgb(225,139,18)" fg:x="57" fg:w="1"/><text x="26.0419%" y="431.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.45%)</title><rect x="25.7919%" y="405" width="0.4525%" height="15" fill="rgb(230,137,11)" fg:x="57" fg:w="1"/><text x="26.0419%" y="415.50"></text></g><g><title>std::panicking::try (1 samples, 0.45%)</title><rect x="25.7919%" y="389" width="0.4525%" height="15" fill="rgb(212,28,1)" fg:x="57" fg:w="1"/><text x="26.0419%" y="399.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.45%)</title><rect x="25.7919%" y="373" width="0.4525%" height="15" fill="rgb(248,164,17)" fg:x="57" fg:w="1"/><text x="26.0419%" y="383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.45%)</title><rect x="25.7919%" y="357" width="0.4525%" height="15" fill="rgb(222,171,42)" fg:x="57" fg:w="1"/><text x="26.0419%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="341" width="0.4525%" height="15" fill="rgb(243,84,45)" fg:x="57" fg:w="1"/><text x="26.0419%" y="351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="325" width="0.4525%" height="15" fill="rgb(252,49,23)" fg:x="57" fg:w="1"/><text x="26.0419%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.45%)</title><rect x="25.7919%" y="309" width="0.4525%" height="15" fill="rgb(215,19,7)" fg:x="57" fg:w="1"/><text x="26.0419%" y="319.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.45%)</title><rect x="25.7919%" y="293" width="0.4525%" height="15" fill="rgb(238,81,41)" fg:x="57" fg:w="1"/><text x="26.0419%" y="303.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.45%)</title><rect x="25.7919%" y="277" width="0.4525%" height="15" fill="rgb(210,199,37)" fg:x="57" fg:w="1"/><text x="26.0419%" y="287.50"></text></g><g><title>&lt;rayon::iter::filter_map::FilterMapFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.45%)</title><rect x="25.7919%" y="261" width="0.4525%" height="15" fill="rgb(244,192,49)" fg:x="57" fg:w="1"/><text x="26.0419%" y="271.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (1 samples, 0.45%)</title><rect x="25.7919%" y="245" width="0.4525%" height="15" fill="rgb(226,211,11)" fg:x="57" fg:w="1"/><text x="26.0419%" y="255.50"></text></g><g><title>paranagram::word::Word::contains (1 samples, 0.45%)</title><rect x="25.7919%" y="229" width="0.4525%" height="15" fill="rgb(236,162,54)" fg:x="57" fg:w="1"/><text x="26.0419%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::contains (1 samples, 0.45%)</title><rect x="25.7919%" y="213" width="0.4525%" height="15" fill="rgb(220,229,9)" fg:x="57" fg:w="1"/><text x="26.0419%" y="223.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.45%)</title><rect x="25.7919%" y="197" width="0.4525%" height="15" fill="rgb(250,87,22)" fg:x="57" fg:w="1"/><text x="26.0419%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.45%)</title><rect x="25.7919%" y="181" width="0.4525%" height="15" fill="rgb(239,43,17)" fg:x="57" fg:w="1"/><text x="26.0419%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.45%)</title><rect x="25.7919%" y="165" width="0.4525%" height="15" fill="rgb(231,177,25)" fg:x="57" fg:w="1"/><text x="26.0419%" y="175.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.45%)</title><rect x="25.7919%" y="149" width="0.4525%" height="15" fill="rgb(219,179,1)" fg:x="57" fg:w="1"/><text x="26.0419%" y="159.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.45%)</title><rect x="25.7919%" y="133" width="0.4525%" height="15" fill="rgb(238,219,53)" fg:x="57" fg:w="1"/><text x="26.0419%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.45%)</title><rect x="25.7919%" y="117" width="0.4525%" height="15" fill="rgb(232,167,36)" fg:x="57" fg:w="1"/><text x="26.0419%" y="127.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 2.71%)</title><rect x="23.9819%" y="1477" width="2.7149%" height="15" fill="rgb(244,19,51)" fg:x="53" fg:w="6"/><text x="24.2319%" y="1487.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 2.71%)</title><rect x="23.9819%" y="1461" width="2.7149%" height="15" fill="rgb(224,6,22)" fg:x="53" fg:w="6"/><text x="24.2319%" y="1471.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 2.71%)</title><rect x="23.9819%" y="1445" width="2.7149%" height="15" fill="rgb(224,145,5)" fg:x="53" fg:w="6"/><text x="24.2319%" y="1455.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6 samples, 2.71%)</title><rect x="23.9819%" y="1429" width="2.7149%" height="15" fill="rgb(234,130,49)" fg:x="53" fg:w="6"/><text x="24.2319%" y="1439.50">st..</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.45%)</title><rect x="26.2443%" y="1413" width="0.4525%" height="15" fill="rgb(254,6,2)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1423.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.45%)</title><rect x="26.2443%" y="1397" width="0.4525%" height="15" fill="rgb(208,96,46)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1407.50"></text></g><g><title>__GI___pthread_getaffinity_np (1 samples, 0.45%)</title><rect x="26.2443%" y="1381" width="0.4525%" height="15" fill="rgb(239,3,39)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.2443%" y="1365" width="0.4525%" height="15" fill="rgb(233,210,1)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.2443%" y="1349" width="0.4525%" height="15" fill="rgb(244,137,37)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.2443%" y="1333" width="0.4525%" height="15" fill="rgb(240,136,2)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.2443%" y="1317" width="0.4525%" height="15" fill="rgb(239,18,37)" fg:x="58" fg:w="1"/><text x="26.4943%" y="1327.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.45%)</title><rect x="26.6968%" y="1413" width="0.4525%" height="15" fill="rgb(218,185,22)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1423.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.45%)</title><rect x="26.6968%" y="1397" width="0.4525%" height="15" fill="rgb(225,218,4)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1381" width="0.4525%" height="15" fill="rgb(230,182,32)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1365" width="0.4525%" height="15" fill="rgb(242,56,43)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1349" width="0.4525%" height="15" fill="rgb(233,99,24)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1333" width="0.4525%" height="15" fill="rgb(234,209,42)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1317" width="0.4525%" height="15" fill="rgb(227,7,12)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1301" width="0.4525%" height="15" fill="rgb(245,203,43)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1285" width="0.4525%" height="15" fill="rgb(238,205,33)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1269" width="0.4525%" height="15" fill="rgb(231,56,7)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="26.6968%" y="1253" width="0.4525%" height="15" fill="rgb(244,186,29)" fg:x="59" fg:w="1"/><text x="26.9468%" y="1263.50"></text></g><g><title>__clone3 (8 samples, 3.62%)</title><rect x="23.9819%" y="1525" width="3.6199%" height="15" fill="rgb(234,111,31)" fg:x="53" fg:w="8"/><text x="24.2319%" y="1535.50">__cl..</text></g><g><title>start_thread (8 samples, 3.62%)</title><rect x="23.9819%" y="1509" width="3.6199%" height="15" fill="rgb(241,149,10)" fg:x="53" fg:w="8"/><text x="24.2319%" y="1519.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 3.62%)</title><rect x="23.9819%" y="1493" width="3.6199%" height="15" fill="rgb(249,206,44)" fg:x="53" fg:w="8"/><text x="24.2319%" y="1503.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.90%)</title><rect x="26.6968%" y="1477" width="0.9050%" height="15" fill="rgb(251,153,30)" fg:x="59" fg:w="2"/><text x="26.9468%" y="1487.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.90%)</title><rect x="26.6968%" y="1461" width="0.9050%" height="15" fill="rgb(239,152,38)" fg:x="59" fg:w="2"/><text x="26.9468%" y="1471.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.90%)</title><rect x="26.6968%" y="1445" width="0.9050%" height="15" fill="rgb(249,139,47)" fg:x="59" fg:w="2"/><text x="26.9468%" y="1455.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.90%)</title><rect x="26.6968%" y="1429" width="0.9050%" height="15" fill="rgb(244,64,35)" fg:x="59" fg:w="2"/><text x="26.9468%" y="1439.50"></text></g><g><title>__GI___mprotect (1 samples, 0.45%)</title><rect x="27.1493%" y="1413" width="0.4525%" height="15" fill="rgb(216,46,15)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1397" width="0.4525%" height="15" fill="rgb(250,74,19)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1381" width="0.4525%" height="15" fill="rgb(249,42,33)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1365" width="0.4525%" height="15" fill="rgb(242,149,17)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1349" width="0.4525%" height="15" fill="rgb(244,29,21)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1333" width="0.4525%" height="15" fill="rgb(220,130,37)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1317" width="0.4525%" height="15" fill="rgb(211,67,2)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.1493%" y="1301" width="0.4525%" height="15" fill="rgb(235,68,52)" fg:x="60" fg:w="1"/><text x="27.3993%" y="1311.50"></text></g><g><title>__GI___libc_free (1 samples, 0.45%)</title><rect x="27.6018%" y="1237" width="0.4525%" height="15" fill="rgb(246,142,3)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1247.50"></text></g><g><title>__GI___munmap (1 samples, 0.45%)</title><rect x="27.6018%" y="1221" width="0.4525%" height="15" fill="rgb(241,25,7)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1205" width="0.4525%" height="15" fill="rgb(242,119,39)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1189" width="0.4525%" height="15" fill="rgb(241,98,45)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1173" width="0.4525%" height="15" fill="rgb(254,28,30)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1157" width="0.4525%" height="15" fill="rgb(241,142,54)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1141" width="0.4525%" height="15" fill="rgb(222,85,15)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1125" width="0.4525%" height="15" fill="rgb(210,85,47)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1109" width="0.4525%" height="15" fill="rgb(224,206,25)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1093" width="0.4525%" height="15" fill="rgb(243,201,19)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1077" width="0.4525%" height="15" fill="rgb(236,59,4)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1061" width="0.4525%" height="15" fill="rgb(254,179,45)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1045" width="0.4525%" height="15" fill="rgb(226,14,10)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="27.6018%" y="1029" width="0.4525%" height="15" fill="rgb(244,27,41)" fg:x="61" fg:w="1"/><text x="27.8518%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.90%)</title><rect x="28.0543%" y="1093" width="0.9050%" height="15" fill="rgb(235,35,32)" fg:x="62" fg:w="2"/><text x="28.3043%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.90%)</title><rect x="28.0543%" y="1077" width="0.9050%" height="15" fill="rgb(218,68,31)" fg:x="62" fg:w="2"/><text x="28.3043%" y="1087.50"></text></g><g><title>__GI___libc_free (2 samples, 0.90%)</title><rect x="28.0543%" y="1061" width="0.9050%" height="15" fill="rgb(207,120,37)" fg:x="62" fg:w="2"/><text x="28.3043%" y="1071.50"></text></g><g><title>_int_free (2 samples, 0.90%)</title><rect x="28.0543%" y="1045" width="0.9050%" height="15" fill="rgb(227,98,0)" fg:x="62" fg:w="2"/><text x="28.3043%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 1.36%)</title><rect x="28.0543%" y="1157" width="1.3575%" height="15" fill="rgb(207,7,3)" fg:x="62" fg:w="3"/><text x="28.3043%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 1.36%)</title><rect x="28.0543%" y="1141" width="1.3575%" height="15" fill="rgb(206,98,19)" fg:x="62" fg:w="3"/><text x="28.3043%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 1.36%)</title><rect x="28.0543%" y="1125" width="1.3575%" height="15" fill="rgb(217,5,26)" fg:x="62" fg:w="3"/><text x="28.3043%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.36%)</title><rect x="28.0543%" y="1109" width="1.3575%" height="15" fill="rgb(235,190,38)" fg:x="62" fg:w="3"/><text x="28.3043%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.45%)</title><rect x="28.9593%" y="1093" width="0.4525%" height="15" fill="rgb(247,86,24)" fg:x="64" fg:w="1"/><text x="29.2093%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::Paranagram&gt; (7 samples, 3.17%)</title><rect x="28.0543%" y="1237" width="3.1674%" height="15" fill="rgb(205,101,16)" fg:x="62" fg:w="7"/><text x="28.3043%" y="1247.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;paranagram::word::Word&gt;&gt; (7 samples, 3.17%)</title><rect x="28.0543%" y="1221" width="3.1674%" height="15" fill="rgb(246,168,33)" fg:x="62" fg:w="7"/><text x="28.3043%" y="1231.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 3.17%)</title><rect x="28.0543%" y="1205" width="3.1674%" height="15" fill="rgb(231,114,1)" fg:x="62" fg:w="7"/><text x="28.3043%" y="1215.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[paranagram::word::Word]&gt; (7 samples, 3.17%)</title><rect x="28.0543%" y="1189" width="3.1674%" height="15" fill="rgb(207,184,53)" fg:x="62" fg:w="7"/><text x="28.3043%" y="1199.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;paranagram::word::Word&gt; (7 samples, 3.17%)</title><rect x="28.0543%" y="1173" width="3.1674%" height="15" fill="rgb(224,95,51)" fg:x="62" fg:w="7"/><text x="28.3043%" y="1183.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (4 samples, 1.81%)</title><rect x="29.4118%" y="1157" width="1.8100%" height="15" fill="rgb(212,188,45)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1167.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 1.81%)</title><rect x="29.4118%" y="1141" width="1.8100%" height="15" fill="rgb(223,154,38)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (4 samples, 1.81%)</title><rect x="29.4118%" y="1125" width="1.8100%" height="15" fill="rgb(251,22,52)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1135.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.81%)</title><rect x="29.4118%" y="1109" width="1.8100%" height="15" fill="rgb(229,209,22)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1119.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 1.81%)</title><rect x="29.4118%" y="1093" width="1.8100%" height="15" fill="rgb(234,138,34)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1103.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 1.81%)</title><rect x="29.4118%" y="1077" width="1.8100%" height="15" fill="rgb(212,95,11)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1087.50">h..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 1.81%)</title><rect x="29.4118%" y="1061" width="1.8100%" height="15" fill="rgb(240,179,47)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1071.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4 samples, 1.81%)</title><rect x="29.4118%" y="1045" width="1.8100%" height="15" fill="rgb(240,163,11)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1055.50">a..</text></g><g><title>__GI___libc_free (4 samples, 1.81%)</title><rect x="29.4118%" y="1029" width="1.8100%" height="15" fill="rgb(236,37,12)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1039.50">_..</text></g><g><title>_int_free (4 samples, 1.81%)</title><rect x="29.4118%" y="1013" width="1.8100%" height="15" fill="rgb(232,164,16)" fg:x="65" fg:w="4"/><text x="29.6618%" y="1023.50">_..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="31.2217%" y="1077" width="0.4525%" height="15" fill="rgb(244,205,15)" fg:x="69" fg:w="1"/><text x="31.4717%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="31.2217%" y="1061" width="0.4525%" height="15" fill="rgb(223,117,47)" fg:x="69" fg:w="1"/><text x="31.4717%" y="1071.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="31.2217%" y="1045" width="0.4525%" height="15" fill="rgb(244,107,35)" fg:x="69" fg:w="1"/><text x="31.4717%" y="1055.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.45%)</title><rect x="31.2217%" y="1029" width="0.4525%" height="15" fill="rgb(205,140,8)" fg:x="69" fg:w="1"/><text x="31.4717%" y="1039.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.45%)</title><rect x="31.2217%" y="1013" width="0.4525%" height="15" fill="rgb(228,84,46)" fg:x="69" fg:w="1"/><text x="31.4717%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.45%)</title><rect x="31.6742%" y="1029" width="0.4525%" height="15" fill="rgb(254,188,9)" fg:x="70" fg:w="1"/><text x="31.9242%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.45%)</title><rect x="31.6742%" y="1013" width="0.4525%" height="15" fill="rgb(206,112,54)" fg:x="70" fg:w="1"/><text x="31.9242%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.45%)</title><rect x="31.6742%" y="997" width="0.4525%" height="15" fill="rgb(216,84,49)" fg:x="70" fg:w="1"/><text x="31.9242%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.45%)</title><rect x="31.6742%" y="981" width="0.4525%" height="15" fill="rgb(214,194,35)" fg:x="70" fg:w="1"/><text x="31.9242%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.45%)</title><rect x="31.6742%" y="965" width="0.4525%" height="15" fill="rgb(249,28,3)" fg:x="70" fg:w="1"/><text x="31.9242%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.45%)</title><rect x="31.6742%" y="949" width="0.4525%" height="15" fill="rgb(222,56,52)" fg:x="70" fg:w="1"/><text x="31.9242%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.45%)</title><rect x="31.6742%" y="933" width="0.4525%" height="15" fill="rgb(245,217,50)" fg:x="70" fg:w="1"/><text x="31.9242%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.45%)</title><rect x="31.6742%" y="917" width="0.4525%" height="15" fill="rgb(213,201,24)" fg:x="70" fg:w="1"/><text x="31.9242%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="31.6742%" y="901" width="0.4525%" height="15" fill="rgb(248,116,28)" fg:x="70" fg:w="1"/><text x="31.9242%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.45%)</title><rect x="31.6742%" y="885" width="0.4525%" height="15" fill="rgb(219,72,43)" fg:x="70" fg:w="1"/><text x="31.9242%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.45%)</title><rect x="31.6742%" y="869" width="0.4525%" height="15" fill="rgb(209,138,14)" fg:x="70" fg:w="1"/><text x="31.9242%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.45%)</title><rect x="31.6742%" y="853" width="0.4525%" height="15" fill="rgb(222,18,33)" fg:x="70" fg:w="1"/><text x="31.9242%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.45%)</title><rect x="31.6742%" y="837" width="0.4525%" height="15" fill="rgb(213,199,7)" fg:x="70" fg:w="1"/><text x="31.9242%" y="847.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.45%)</title><rect x="32.1267%" y="933" width="0.4525%" height="15" fill="rgb(250,110,10)" fg:x="71" fg:w="1"/><text x="32.3767%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.45%)</title><rect x="32.1267%" y="917" width="0.4525%" height="15" fill="rgb(248,123,6)" fg:x="71" fg:w="1"/><text x="32.3767%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.90%)</title><rect x="32.1267%" y="1029" width="0.9050%" height="15" fill="rgb(206,91,31)" fg:x="71" fg:w="2"/><text x="32.3767%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.90%)</title><rect x="32.1267%" y="1013" width="0.9050%" height="15" fill="rgb(211,154,13)" fg:x="71" fg:w="2"/><text x="32.3767%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.90%)</title><rect x="32.1267%" y="997" width="0.9050%" height="15" fill="rgb(225,148,7)" fg:x="71" fg:w="2"/><text x="32.3767%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.90%)</title><rect x="32.1267%" y="981" width="0.9050%" height="15" fill="rgb(220,160,43)" fg:x="71" fg:w="2"/><text x="32.3767%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.90%)</title><rect x="32.1267%" y="965" width="0.9050%" height="15" fill="rgb(213,52,39)" fg:x="71" fg:w="2"/><text x="32.3767%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.90%)</title><rect x="32.1267%" y="949" width="0.9050%" height="15" fill="rgb(243,137,7)" fg:x="71" fg:w="2"/><text x="32.3767%" y="959.50"></text></g><g><title>__rust_dealloc (1 samples, 0.45%)</title><rect x="32.5792%" y="933" width="0.4525%" height="15" fill="rgb(230,79,13)" fg:x="72" fg:w="1"/><text x="32.8292%" y="943.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="33.4842%" y="965" width="0.4525%" height="15" fill="rgb(247,105,23)" fg:x="74" fg:w="1"/><text x="33.7342%" y="975.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (1 samples, 0.45%)</title><rect x="33.4842%" y="949" width="0.4525%" height="15" fill="rgb(223,179,41)" fg:x="74" fg:w="1"/><text x="33.7342%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (2 samples, 0.90%)</title><rect x="34.8416%" y="837" width="0.9050%" height="15" fill="rgb(218,9,34)" fg:x="77" fg:w="2"/><text x="35.0916%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.45%)</title><rect x="35.2941%" y="821" width="0.4525%" height="15" fill="rgb(222,106,8)" fg:x="78" fg:w="1"/><text x="35.5441%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.45%)</title><rect x="36.6516%" y="821" width="0.4525%" height="15" fill="rgb(211,220,0)" fg:x="81" fg:w="1"/><text x="36.9016%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (5 samples, 2.26%)</title><rect x="35.7466%" y="837" width="2.2624%" height="15" fill="rgb(229,52,16)" fg:x="79" fg:w="5"/><text x="35.9966%" y="847.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.90%)</title><rect x="37.1041%" y="821" width="0.9050%" height="15" fill="rgb(212,155,18)" fg:x="82" fg:w="2"/><text x="37.3541%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.90%)</title><rect x="37.1041%" y="805" width="0.9050%" height="15" fill="rgb(242,21,14)" fg:x="82" fg:w="2"/><text x="37.3541%" y="815.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (8 samples, 3.62%)</title><rect x="34.8416%" y="933" width="3.6199%" height="15" fill="rgb(222,19,48)" fg:x="77" fg:w="8"/><text x="35.0916%" y="943.50">std:..</text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (8 samples, 3.62%)</title><rect x="34.8416%" y="917" width="3.6199%" height="15" fill="rgb(232,45,27)" fg:x="77" fg:w="8"/><text x="35.0916%" y="927.50">std:..</text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (8 samples, 3.62%)</title><rect x="34.8416%" y="901" width="3.6199%" height="15" fill="rgb(249,103,42)" fg:x="77" fg:w="8"/><text x="35.0916%" y="911.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (8 samples, 3.62%)</title><rect x="34.8416%" y="885" width="3.6199%" height="15" fill="rgb(246,81,33)" fg:x="77" fg:w="8"/><text x="35.0916%" y="895.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (8 samples, 3.62%)</title><rect x="34.8416%" y="869" width="3.6199%" height="15" fill="rgb(252,33,42)" fg:x="77" fg:w="8"/><text x="35.0916%" y="879.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 3.62%)</title><rect x="34.8416%" y="853" width="3.6199%" height="15" fill="rgb(209,212,41)" fg:x="77" fg:w="8"/><text x="35.0916%" y="863.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.45%)</title><rect x="38.0090%" y="837" width="0.4525%" height="15" fill="rgb(207,154,6)" fg:x="84" fg:w="1"/><text x="38.2590%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.45%)</title><rect x="38.0090%" y="821" width="0.4525%" height="15" fill="rgb(223,64,47)" fg:x="84" fg:w="1"/><text x="38.2590%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.45%)</title><rect x="38.0090%" y="805" width="0.4525%" height="15" fill="rgb(211,161,38)" fg:x="84" fg:w="1"/><text x="38.2590%" y="815.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.90%)</title><rect x="38.4615%" y="837" width="0.9050%" height="15" fill="rgb(219,138,40)" fg:x="85" fg:w="2"/><text x="38.7115%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.90%)</title><rect x="38.4615%" y="821" width="0.9050%" height="15" fill="rgb(241,228,46)" fg:x="85" fg:w="2"/><text x="38.7115%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 1.36%)</title><rect x="39.3665%" y="837" width="1.3575%" height="15" fill="rgb(223,209,38)" fg:x="87" fg:w="3"/><text x="39.6165%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.45%)</title><rect x="41.1765%" y="821" width="0.4525%" height="15" fill="rgb(236,164,45)" fg:x="91" fg:w="1"/><text x="41.4265%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.45%)</title><rect x="41.1765%" y="805" width="0.4525%" height="15" fill="rgb(231,15,5)" fg:x="91" fg:w="1"/><text x="41.4265%" y="815.50"></text></g><g><title>core::mem::swap (1 samples, 0.45%)</title><rect x="41.6290%" y="821" width="0.4525%" height="15" fill="rgb(252,35,15)" fg:x="92" fg:w="1"/><text x="41.8790%" y="831.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.45%)</title><rect x="41.6290%" y="805" width="0.4525%" height="15" fill="rgb(248,181,18)" fg:x="92" fg:w="1"/><text x="41.8790%" y="815.50"></text></g><g><title>core::ptr::read (1 samples, 0.45%)</title><rect x="41.6290%" y="789" width="0.4525%" height="15" fill="rgb(233,39,42)" fg:x="92" fg:w="1"/><text x="41.8790%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.45%)</title><rect x="42.0814%" y="821" width="0.4525%" height="15" fill="rgb(238,110,33)" fg:x="93" fg:w="1"/><text x="42.3314%" y="831.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="42.0814%" y="805" width="0.4525%" height="15" fill="rgb(233,195,10)" fg:x="93" fg:w="1"/><text x="42.3314%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.45%)</title><rect x="42.0814%" y="789" width="0.4525%" height="15" fill="rgb(254,105,3)" fg:x="93" fg:w="1"/><text x="42.3314%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.45%)</title><rect x="42.0814%" y="773" width="0.4525%" height="15" fill="rgb(221,225,9)" fg:x="93" fg:w="1"/><text x="42.3314%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.45%)</title><rect x="42.0814%" y="757" width="0.4525%" height="15" fill="rgb(224,227,45)" fg:x="93" fg:w="1"/><text x="42.3314%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.45%)</title><rect x="42.0814%" y="741" width="0.4525%" height="15" fill="rgb(229,198,43)" fg:x="93" fg:w="1"/><text x="42.3314%" y="751.50"></text></g><g><title>__GI___libc_free (1 samples, 0.45%)</title><rect x="42.0814%" y="725" width="0.4525%" height="15" fill="rgb(206,209,35)" fg:x="93" fg:w="1"/><text x="42.3314%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.45%)</title><rect x="42.0814%" y="709" width="0.4525%" height="15" fill="rgb(245,195,53)" fg:x="93" fg:w="1"/><text x="42.3314%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.90%)</title><rect x="43.4389%" y="709" width="0.9050%" height="15" fill="rgb(240,92,26)" fg:x="96" fg:w="2"/><text x="43.6889%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.45%)</title><rect x="43.8914%" y="693" width="0.4525%" height="15" fill="rgb(207,40,23)" fg:x="97" fg:w="1"/><text x="44.1414%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.90%)</title><rect x="44.3439%" y="693" width="0.9050%" height="15" fill="rgb(223,111,35)" fg:x="98" fg:w="2"/><text x="44.5939%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (7 samples, 3.17%)</title><rect x="42.5339%" y="821" width="3.1674%" height="15" fill="rgb(229,147,28)" fg:x="94" fg:w="7"/><text x="42.7839%" y="831.50">has..</text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7 samples, 3.17%)</title><rect x="42.5339%" y="805" width="3.1674%" height="15" fill="rgb(211,29,28)" fg:x="94" fg:w="7"/><text x="42.7839%" y="815.50">has..</text></g><g><title>hashbrown::map::make_hash (7 samples, 3.17%)</title><rect x="42.5339%" y="789" width="3.1674%" height="15" fill="rgb(228,72,33)" fg:x="94" fg:w="7"/><text x="42.7839%" y="799.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 3.17%)</title><rect x="42.5339%" y="773" width="3.1674%" height="15" fill="rgb(205,214,31)" fg:x="94" fg:w="7"/><text x="42.7839%" y="783.50">cor..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 3.17%)</title><rect x="42.5339%" y="757" width="3.1674%" height="15" fill="rgb(224,111,15)" fg:x="94" fg:w="7"/><text x="42.7839%" y="767.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 3.17%)</title><rect x="42.5339%" y="741" width="3.1674%" height="15" fill="rgb(253,21,26)" fg:x="94" fg:w="7"/><text x="42.7839%" y="751.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 3.17%)</title><rect x="42.5339%" y="725" width="3.1674%" height="15" fill="rgb(245,139,43)" fg:x="94" fg:w="7"/><text x="42.7839%" y="735.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 1.36%)</title><rect x="44.3439%" y="709" width="1.3575%" height="15" fill="rgb(252,170,7)" fg:x="98" fg:w="3"/><text x="44.5939%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.45%)</title><rect x="45.2489%" y="693" width="0.4525%" height="15" fill="rgb(231,118,14)" fg:x="100" fg:w="1"/><text x="45.4989%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.45%)</title><rect x="46.1538%" y="773" width="0.4525%" height="15" fill="rgb(238,83,0)" fg:x="102" fg:w="1"/><text x="46.4038%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (4 samples, 1.81%)</title><rect x="45.7014%" y="789" width="1.8100%" height="15" fill="rgb(221,39,39)" fg:x="101" fg:w="4"/><text x="45.9514%" y="799.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.90%)</title><rect x="46.6063%" y="773" width="0.9050%" height="15" fill="rgb(222,119,46)" fg:x="103" fg:w="2"/><text x="46.8563%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.90%)</title><rect x="46.6063%" y="757" width="0.9050%" height="15" fill="rgb(222,165,49)" fg:x="103" fg:w="2"/><text x="46.8563%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (4 samples, 1.81%)</title><rect x="47.5113%" y="789" width="1.8100%" height="15" fill="rgb(219,113,52)" fg:x="105" fg:w="4"/><text x="47.7613%" y="799.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (4 samples, 1.81%)</title><rect x="47.5113%" y="773" width="1.8100%" height="15" fill="rgb(214,7,15)" fg:x="105" fg:w="4"/><text x="47.7613%" y="783.50">h..</text></g><g><title>hashbrown::raw::is_full (4 samples, 1.81%)</title><rect x="47.5113%" y="757" width="1.8100%" height="15" fill="rgb(235,32,4)" fg:x="105" fg:w="4"/><text x="47.7613%" y="767.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 4.52%)</title><rect x="45.7014%" y="805" width="4.5249%" height="15" fill="rgb(238,90,54)" fg:x="101" fg:w="10"/><text x="45.9514%" y="815.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.90%)</title><rect x="49.3213%" y="789" width="0.9050%" height="15" fill="rgb(213,208,19)" fg:x="109" fg:w="2"/><text x="49.5713%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (12 samples, 5.43%)</title><rect x="45.7014%" y="821" width="5.4299%" height="15" fill="rgb(233,156,4)" fg:x="101" fg:w="12"/><text x="45.9514%" y="831.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.90%)</title><rect x="50.2262%" y="805" width="0.9050%" height="15" fill="rgb(207,194,5)" fg:x="111" fg:w="2"/><text x="50.4762%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (2 samples, 0.90%)</title><rect x="50.2262%" y="789" width="0.9050%" height="15" fill="rgb(206,111,30)" fg:x="111" fg:w="2"/><text x="50.4762%" y="799.50"></text></g><g><title>[unknown] (7 samples, 3.17%)</title><rect x="53.8462%" y="677" width="3.1674%" height="15" fill="rgb(243,70,54)" fg:x="119" fg:w="7"/><text x="54.0962%" y="687.50">[un..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="54.2986%" y="661" width="2.7149%" height="15" fill="rgb(242,28,8)" fg:x="120" fg:w="6"/><text x="54.5486%" y="671.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="54.2986%" y="645" width="2.7149%" height="15" fill="rgb(219,106,18)" fg:x="120" fg:w="6"/><text x="54.5486%" y="655.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="54.2986%" y="629" width="2.7149%" height="15" fill="rgb(244,222,10)" fg:x="120" fg:w="6"/><text x="54.5486%" y="639.50">[u..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="54.7511%" y="613" width="2.2624%" height="15" fill="rgb(236,179,52)" fg:x="121" fg:w="5"/><text x="55.0011%" y="623.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="54.7511%" y="597" width="2.2624%" height="15" fill="rgb(213,23,39)" fg:x="121" fg:w="5"/><text x="55.0011%" y="607.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="54.7511%" y="581" width="2.2624%" height="15" fill="rgb(238,48,10)" fg:x="121" fg:w="5"/><text x="55.0011%" y="591.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="54.7511%" y="565" width="2.2624%" height="15" fill="rgb(251,196,23)" fg:x="121" fg:w="5"/><text x="55.0011%" y="575.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="54.7511%" y="549" width="2.2624%" height="15" fill="rgb(250,152,24)" fg:x="121" fg:w="5"/><text x="55.0011%" y="559.50">[..</text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="55.6561%" y="533" width="1.3575%" height="15" fill="rgb(209,150,17)" fg:x="123" fg:w="3"/><text x="55.9061%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="56.5611%" y="517" width="0.4525%" height="15" fill="rgb(234,202,34)" fg:x="125" fg:w="1"/><text x="56.8111%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="56.5611%" y="501" width="0.4525%" height="15" fill="rgb(253,148,53)" fg:x="125" fg:w="1"/><text x="56.8111%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="56.5611%" y="485" width="0.4525%" height="15" fill="rgb(218,129,16)" fg:x="125" fg:w="1"/><text x="56.8111%" y="495.50"></text></g><g><title>_int_malloc (13 samples, 5.88%)</title><rect x="51.5837%" y="693" width="5.8824%" height="15" fill="rgb(216,85,19)" fg:x="114" fg:w="13"/><text x="51.8337%" y="703.50">_int_ma..</text></g><g><title>sysmalloc (1 samples, 0.45%)</title><rect x="57.0136%" y="677" width="0.4525%" height="15" fill="rgb(235,228,7)" fg:x="126" fg:w="1"/><text x="57.2636%" y="687.50"></text></g><g><title>__glibc_morecore (1 samples, 0.45%)</title><rect x="57.0136%" y="661" width="0.4525%" height="15" fill="rgb(245,175,0)" fg:x="126" fg:w="1"/><text x="57.2636%" y="671.50"></text></g><g><title>__GI___sbrk (1 samples, 0.45%)</title><rect x="57.0136%" y="645" width="0.4525%" height="15" fill="rgb(208,168,36)" fg:x="126" fg:w="1"/><text x="57.2636%" y="655.50"></text></g><g><title>__GI___sbrk (1 samples, 0.45%)</title><rect x="57.0136%" y="629" width="0.4525%" height="15" fill="rgb(246,171,24)" fg:x="126" fg:w="1"/><text x="57.2636%" y="639.50"></text></g><g><title>__brk (1 samples, 0.45%)</title><rect x="57.0136%" y="613" width="0.4525%" height="15" fill="rgb(215,142,24)" fg:x="126" fg:w="1"/><text x="57.2636%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="597" width="0.4525%" height="15" fill="rgb(250,187,7)" fg:x="126" fg:w="1"/><text x="57.2636%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="581" width="0.4525%" height="15" fill="rgb(228,66,33)" fg:x="126" fg:w="1"/><text x="57.2636%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="565" width="0.4525%" height="15" fill="rgb(234,215,21)" fg:x="126" fg:w="1"/><text x="57.2636%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="549" width="0.4525%" height="15" fill="rgb(222,191,20)" fg:x="126" fg:w="1"/><text x="57.2636%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="533" width="0.4525%" height="15" fill="rgb(245,79,54)" fg:x="126" fg:w="1"/><text x="57.2636%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="517" width="0.4525%" height="15" fill="rgb(240,10,37)" fg:x="126" fg:w="1"/><text x="57.2636%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="57.0136%" y="501" width="0.4525%" height="15" fill="rgb(214,192,32)" fg:x="126" fg:w="1"/><text x="57.2636%" y="511.50"></text></g><g><title>arena_for_chunk (1 samples, 0.45%)</title><rect x="57.4661%" y="693" width="0.4525%" height="15" fill="rgb(209,36,54)" fg:x="127" fg:w="1"/><text x="57.7161%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (41 samples, 18.55%)</title><rect x="40.7240%" y="837" width="18.5520%" height="15" fill="rgb(220,10,11)" fg:x="90" fg:w="41"/><text x="40.9740%" y="847.50">hashbrown::raw::RawTableInner..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (18 samples, 8.14%)</title><rect x="51.1312%" y="821" width="8.1448%" height="15" fill="rgb(221,106,17)" fg:x="113" fg:w="18"/><text x="51.3812%" y="831.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (18 samples, 8.14%)</title><rect x="51.1312%" y="805" width="8.1448%" height="15" fill="rgb(251,142,44)" fg:x="113" fg:w="18"/><text x="51.3812%" y="815.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (18 samples, 8.14%)</title><rect x="51.1312%" y="789" width="8.1448%" height="15" fill="rgb(238,13,15)" fg:x="113" fg:w="18"/><text x="51.3812%" y="799.50">hashbrown::..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 8.14%)</title><rect x="51.1312%" y="773" width="8.1448%" height="15" fill="rgb(208,107,27)" fg:x="113" fg:w="18"/><text x="51.3812%" y="783.50">hashbrown::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 8.14%)</title><rect x="51.1312%" y="757" width="8.1448%" height="15" fill="rgb(205,136,37)" fg:x="113" fg:w="18"/><text x="51.3812%" y="767.50">&lt;alloc::all..</text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 8.14%)</title><rect x="51.1312%" y="741" width="8.1448%" height="15" fill="rgb(250,205,27)" fg:x="113" fg:w="18"/><text x="51.3812%" y="751.50">alloc::allo..</text></g><g><title>alloc::alloc::alloc (18 samples, 8.14%)</title><rect x="51.1312%" y="725" width="8.1448%" height="15" fill="rgb(210,80,43)" fg:x="113" fg:w="18"/><text x="51.3812%" y="735.50">alloc::allo..</text></g><g><title>__GI___libc_malloc (18 samples, 8.14%)</title><rect x="51.1312%" y="709" width="8.1448%" height="15" fill="rgb(247,160,36)" fg:x="113" fg:w="18"/><text x="51.3812%" y="719.50">__GI___libc..</text></g><g><title>tcache_get (3 samples, 1.36%)</title><rect x="57.9186%" y="693" width="1.3575%" height="15" fill="rgb(234,13,49)" fg:x="128" fg:w="3"/><text x="58.1686%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (48 samples, 21.72%)</title><rect x="38.4615%" y="901" width="21.7195%" height="15" fill="rgb(234,122,0)" fg:x="85" fg:w="48"/><text x="38.7115%" y="911.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (48 samples, 21.72%)</title><rect x="38.4615%" y="885" width="21.7195%" height="15" fill="rgb(207,146,38)" fg:x="85" fg:w="48"/><text x="38.7115%" y="895.50">hashbrown::raw::RawTable&lt;T,A&gt;::res..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (48 samples, 21.72%)</title><rect x="38.4615%" y="869" width="21.7195%" height="15" fill="rgb(207,177,25)" fg:x="85" fg:w="48"/><text x="38.7115%" y="879.50">hashbrown::raw::RawTable&lt;T,A&gt;::res..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (48 samples, 21.72%)</title><rect x="38.4615%" y="853" width="21.7195%" height="15" fill="rgb(211,178,42)" fg:x="85" fg:w="48"/><text x="38.7115%" y="863.50">hashbrown::raw::RawTableInner&lt;A&gt;::..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (2 samples, 0.90%)</title><rect x="59.2760%" y="837" width="0.9050%" height="15" fill="rgb(230,69,54)" fg:x="131" fg:w="2"/><text x="59.5260%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 1.36%)</title><rect x="61.0860%" y="805" width="1.3575%" height="15" fill="rgb(214,135,41)" fg:x="135" fg:w="3"/><text x="61.3360%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 1.81%)</title><rect x="61.0860%" y="821" width="1.8100%" height="15" fill="rgb(237,67,25)" fg:x="135" fg:w="4"/><text x="61.3360%" y="831.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.45%)</title><rect x="62.4434%" y="805" width="0.4525%" height="15" fill="rgb(222,189,50)" fg:x="138" fg:w="1"/><text x="62.6934%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 4.98%)</title><rect x="60.1810%" y="901" width="4.9774%" height="15" fill="rgb(245,148,34)" fg:x="133" fg:w="11"/><text x="60.4310%" y="911.50">hashbr..</text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 4.98%)</title><rect x="60.1810%" y="885" width="4.9774%" height="15" fill="rgb(222,29,6)" fg:x="133" fg:w="11"/><text x="60.4310%" y="895.50">core::..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 4.98%)</title><rect x="60.1810%" y="869" width="4.9774%" height="15" fill="rgb(221,189,43)" fg:x="133" fg:w="11"/><text x="60.4310%" y="879.50">&lt;std::..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 4.98%)</title><rect x="60.1810%" y="853" width="4.9774%" height="15" fill="rgb(207,36,27)" fg:x="133" fg:w="11"/><text x="60.4310%" y="863.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 4.98%)</title><rect x="60.1810%" y="837" width="4.9774%" height="15" fill="rgb(217,90,24)" fg:x="133" fg:w="11"/><text x="60.4310%" y="847.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 2.26%)</title><rect x="62.8959%" y="821" width="2.2624%" height="15" fill="rgb(224,66,35)" fg:x="139" fg:w="5"/><text x="63.1459%" y="831.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 1.81%)</title><rect x="63.3484%" y="805" width="1.8100%" height="15" fill="rgb(221,13,50)" fg:x="140" fg:w="4"/><text x="63.5984%" y="815.50">c..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="65.6109%" y="869" width="0.9050%" height="15" fill="rgb(236,68,49)" fg:x="145" fg:w="2"/><text x="65.8609%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.90%)</title><rect x="65.6109%" y="853" width="0.9050%" height="15" fill="rgb(229,146,28)" fg:x="145" fg:w="2"/><text x="65.8609%" y="863.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.90%)</title><rect x="66.5158%" y="869" width="0.9050%" height="15" fill="rgb(225,31,38)" fg:x="147" fg:w="2"/><text x="66.7658%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.90%)</title><rect x="67.4208%" y="869" width="0.9050%" height="15" fill="rgb(250,208,3)" fg:x="149" fg:w="2"/><text x="67.6708%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.90%)</title><rect x="67.4208%" y="853" width="0.9050%" height="15" fill="rgb(246,54,23)" fg:x="149" fg:w="2"/><text x="67.6708%" y="863.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (79 samples, 35.75%)</title><rect x="33.4842%" y="1013" width="35.7466%" height="15" fill="rgb(243,76,11)" fg:x="74" fg:w="79"/><text x="33.7342%" y="1023.50">&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_has..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (79 samples, 35.75%)</title><rect x="33.4842%" y="997" width="35.7466%" height="15" fill="rgb(245,21,50)" fg:x="74" fg:w="79"/><text x="33.7342%" y="1007.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (79 samples, 35.75%)</title><rect x="33.4842%" y="981" width="35.7466%" height="15" fill="rgb(228,9,43)" fg:x="74" fg:w="79"/><text x="33.7342%" y="991.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (78 samples, 35.29%)</title><rect x="33.9367%" y="965" width="35.2941%" height="15" fill="rgb(208,100,47)" fg:x="75" fg:w="78"/><text x="34.1867%" y="975.50">core::iter::traits::iterator::Iterator::for_each::call::{..</text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (78 samples, 35.29%)</title><rect x="33.9367%" y="949" width="35.2941%" height="15" fill="rgb(232,26,8)" fg:x="75" fg:w="78"/><text x="34.1867%" y="959.50">&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_ha..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (68 samples, 30.77%)</title><rect x="38.4615%" y="933" width="30.7692%" height="15" fill="rgb(216,166,38)" fg:x="85" fg:w="68"/><text x="38.7115%" y="943.50">std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (68 samples, 30.77%)</title><rect x="38.4615%" y="917" width="30.7692%" height="15" fill="rgb(251,202,51)" fg:x="85" fg:w="68"/><text x="38.7115%" y="927.50">hashbrown::rustc_entry::&lt;impl hashbrown::map::Hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 4.07%)</title><rect x="65.1584%" y="901" width="4.0724%" height="15" fill="rgb(254,216,34)" fg:x="144" fg:w="9"/><text x="65.4084%" y="911.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 4.07%)</title><rect x="65.1584%" y="885" width="4.0724%" height="15" fill="rgb(251,32,27)" fg:x="144" fg:w="9"/><text x="65.4084%" y="895.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.90%)</title><rect x="68.3258%" y="869" width="0.9050%" height="15" fill="rgb(208,127,28)" fg:x="151" fg:w="2"/><text x="68.5758%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.90%)</title><rect x="68.3258%" y="853" width="0.9050%" height="15" fill="rgb(224,137,22)" fg:x="151" fg:w="2"/><text x="68.5758%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.90%)</title><rect x="68.3258%" y="837" width="0.9050%" height="15" fill="rgb(254,70,32)" fg:x="151" fg:w="2"/><text x="68.5758%" y="847.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="69.2308%" y="917" width="0.9050%" height="15" fill="rgb(229,75,37)" fg:x="153" fg:w="2"/><text x="69.4808%" y="927.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.90%)</title><rect x="69.2308%" y="901" width="0.9050%" height="15" fill="rgb(252,64,23)" fg:x="153" fg:w="2"/><text x="69.4808%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.90%)</title><rect x="70.1357%" y="853" width="0.9050%" height="15" fill="rgb(232,162,48)" fg:x="155" fg:w="2"/><text x="70.3857%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.90%)</title><rect x="70.1357%" y="837" width="0.9050%" height="15" fill="rgb(246,160,12)" fg:x="155" fg:w="2"/><text x="70.3857%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.90%)</title><rect x="70.1357%" y="821" width="0.9050%" height="15" fill="rgb(247,166,0)" fg:x="155" fg:w="2"/><text x="70.3857%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.45%)</title><rect x="70.5882%" y="805" width="0.4525%" height="15" fill="rgb(249,219,21)" fg:x="156" fg:w="1"/><text x="70.8382%" y="815.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.45%)</title><rect x="70.5882%" y="789" width="0.4525%" height="15" fill="rgb(205,209,3)" fg:x="156" fg:w="1"/><text x="70.8382%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.90%)</title><rect x="71.9457%" y="805" width="0.9050%" height="15" fill="rgb(243,44,1)" fg:x="159" fg:w="2"/><text x="72.1957%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.45%)</title><rect x="72.3982%" y="789" width="0.4525%" height="15" fill="rgb(206,159,16)" fg:x="160" fg:w="1"/><text x="72.6482%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 1.81%)</title><rect x="71.4932%" y="837" width="1.8100%" height="15" fill="rgb(244,77,30)" fg:x="158" fg:w="4"/><text x="71.7432%" y="847.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 1.81%)</title><rect x="71.4932%" y="821" width="1.8100%" height="15" fill="rgb(218,69,12)" fg:x="158" fg:w="4"/><text x="71.7432%" y="831.50">a..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.45%)</title><rect x="72.8507%" y="805" width="0.4525%" height="15" fill="rgb(212,87,7)" fg:x="161" fg:w="1"/><text x="73.1007%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.45%)</title><rect x="72.8507%" y="789" width="0.4525%" height="15" fill="rgb(245,114,25)" fg:x="161" fg:w="1"/><text x="73.1007%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 3.62%)</title><rect x="70.1357%" y="901" width="3.6199%" height="15" fill="rgb(210,61,42)" fg:x="155" fg:w="8"/><text x="70.3857%" y="911.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (8 samples, 3.62%)</title><rect x="70.1357%" y="885" width="3.6199%" height="15" fill="rgb(211,52,33)" fg:x="155" fg:w="8"/><text x="70.3857%" y="895.50">&lt;all..</text></g><g><title>alloc::string::String::push (8 samples, 3.62%)</title><rect x="70.1357%" y="869" width="3.6199%" height="15" fill="rgb(234,58,33)" fg:x="155" fg:w="8"/><text x="70.3857%" y="879.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 2.71%)</title><rect x="71.0407%" y="853" width="2.7149%" height="15" fill="rgb(220,115,36)" fg:x="157" fg:w="6"/><text x="71.2907%" y="863.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.45%)</title><rect x="73.3032%" y="837" width="0.4525%" height="15" fill="rgb(243,153,54)" fg:x="162" fg:w="1"/><text x="73.5532%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.45%)</title><rect x="73.3032%" y="821" width="0.4525%" height="15" fill="rgb(251,47,18)" fg:x="162" fg:w="1"/><text x="73.5532%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.45%)</title><rect x="74.6606%" y="837" width="0.4525%" height="15" fill="rgb(242,102,42)" fg:x="165" fg:w="1"/><text x="74.9106%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.45%)</title><rect x="74.6606%" y="821" width="0.4525%" height="15" fill="rgb(234,31,38)" fg:x="165" fg:w="1"/><text x="74.9106%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 6.33%)</title><rect x="69.2308%" y="949" width="6.3348%" height="15" fill="rgb(221,117,51)" fg:x="153" fg:w="14"/><text x="69.4808%" y="959.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 6.33%)</title><rect x="69.2308%" y="933" width="6.3348%" height="15" fill="rgb(212,20,18)" fg:x="153" fg:w="14"/><text x="69.4808%" y="943.50">core::it..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (12 samples, 5.43%)</title><rect x="70.1357%" y="917" width="5.4299%" height="15" fill="rgb(245,133,36)" fg:x="155" fg:w="12"/><text x="70.3857%" y="927.50">core::i..</text></g><g><title>paranagram::word::Word::new::{{closure}} (4 samples, 1.81%)</title><rect x="73.7557%" y="901" width="1.8100%" height="15" fill="rgb(212,6,19)" fg:x="163" fg:w="4"/><text x="74.0057%" y="911.50">p..</text></g><g><title>core::char::methods::&lt;impl char&gt;::is_alphabetic (4 samples, 1.81%)</title><rect x="73.7557%" y="885" width="1.8100%" height="15" fill="rgb(218,1,36)" fg:x="163" fg:w="4"/><text x="74.0057%" y="895.50">c..</text></g><g><title>core::unicode::unicode_data::alphabetic::lookup (3 samples, 1.36%)</title><rect x="74.2081%" y="869" width="1.3575%" height="15" fill="rgb(246,84,54)" fg:x="164" fg:w="3"/><text x="74.4581%" y="879.50"></text></g><g><title>core::unicode::unicode_data::skip_search (3 samples, 1.36%)</title><rect x="74.2081%" y="853" width="1.3575%" height="15" fill="rgb(242,110,6)" fg:x="164" fg:w="3"/><text x="74.4581%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.45%)</title><rect x="75.1131%" y="837" width="0.4525%" height="15" fill="rgb(214,47,5)" fg:x="166" fg:w="1"/><text x="75.3631%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.45%)</title><rect x="75.1131%" y="821" width="0.4525%" height="15" fill="rgb(218,159,25)" fg:x="166" fg:w="1"/><text x="75.3631%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.45%)</title><rect x="75.1131%" y="805" width="0.4525%" height="15" fill="rgb(215,211,28)" fg:x="166" fg:w="1"/><text x="75.3631%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.45%)</title><rect x="75.1131%" y="789" width="0.4525%" height="15" fill="rgb(238,59,32)" fg:x="166" fg:w="1"/><text x="75.3631%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.45%)</title><rect x="76.0181%" y="757" width="0.4525%" height="15" fill="rgb(226,82,3)" fg:x="168" fg:w="1"/><text x="76.2681%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.45%)</title><rect x="76.0181%" y="741" width="0.4525%" height="15" fill="rgb(240,164,32)" fg:x="168" fg:w="1"/><text x="76.2681%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.45%)</title><rect x="76.0181%" y="725" width="0.4525%" height="15" fill="rgb(232,46,7)" fg:x="168" fg:w="1"/><text x="76.2681%" y="735.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.45%)</title><rect x="76.0181%" y="709" width="0.4525%" height="15" fill="rgb(229,129,53)" fg:x="168" fg:w="1"/><text x="76.2681%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 1.81%)</title><rect x="76.0181%" y="773" width="1.8100%" height="15" fill="rgb(234,188,29)" fg:x="168" fg:w="4"/><text x="76.2681%" y="783.50">a..</text></g><g><title>__GI___libc_malloc (3 samples, 1.36%)</title><rect x="76.4706%" y="757" width="1.3575%" height="15" fill="rgb(246,141,4)" fg:x="169" fg:w="3"/><text x="76.7206%" y="767.50"></text></g><g><title>_int_malloc (3 samples, 1.36%)</title><rect x="76.4706%" y="741" width="1.3575%" height="15" fill="rgb(229,23,39)" fg:x="169" fg:w="3"/><text x="76.7206%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="725" width="0.9050%" height="15" fill="rgb(206,12,3)" fg:x="170" fg:w="2"/><text x="77.1731%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="709" width="0.9050%" height="15" fill="rgb(252,226,20)" fg:x="170" fg:w="2"/><text x="77.1731%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="693" width="0.9050%" height="15" fill="rgb(216,123,35)" fg:x="170" fg:w="2"/><text x="77.1731%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="677" width="0.9050%" height="15" fill="rgb(212,68,40)" fg:x="170" fg:w="2"/><text x="77.1731%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="661" width="0.9050%" height="15" fill="rgb(254,125,32)" fg:x="170" fg:w="2"/><text x="77.1731%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="645" width="0.9050%" height="15" fill="rgb(253,97,22)" fg:x="170" fg:w="2"/><text x="77.1731%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="629" width="0.9050%" height="15" fill="rgb(241,101,14)" fg:x="170" fg:w="2"/><text x="77.1731%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="613" width="0.9050%" height="15" fill="rgb(238,103,29)" fg:x="170" fg:w="2"/><text x="77.1731%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.90%)</title><rect x="76.9231%" y="597" width="0.9050%" height="15" fill="rgb(233,195,47)" fg:x="170" fg:w="2"/><text x="77.1731%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="77.3756%" y="581" width="0.4525%" height="15" fill="rgb(246,218,30)" fg:x="171" fg:w="1"/><text x="77.6256%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="77.3756%" y="565" width="0.4525%" height="15" fill="rgb(219,145,47)" fg:x="171" fg:w="1"/><text x="77.6256%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.45%)</title><rect x="77.8281%" y="773" width="0.4525%" height="15" fill="rgb(243,12,26)" fg:x="172" fg:w="1"/><text x="78.0781%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.45%)</title><rect x="77.8281%" y="757" width="0.4525%" height="15" fill="rgb(214,87,16)" fg:x="172" fg:w="1"/><text x="78.0781%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 3.17%)</title><rect x="75.5656%" y="869" width="3.1674%" height="15" fill="rgb(208,99,42)" fg:x="167" fg:w="7"/><text x="75.8156%" y="879.50">cor..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (7 samples, 3.17%)</title><rect x="75.5656%" y="853" width="3.1674%" height="15" fill="rgb(253,99,2)" fg:x="167" fg:w="7"/><text x="75.8156%" y="863.50">&lt;al..</text></g><g><title>alloc::string::String::push (7 samples, 3.17%)</title><rect x="75.5656%" y="837" width="3.1674%" height="15" fill="rgb(220,168,23)" fg:x="167" fg:w="7"/><text x="75.8156%" y="847.50">all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 3.17%)</title><rect x="75.5656%" y="821" width="3.1674%" height="15" fill="rgb(242,38,24)" fg:x="167" fg:w="7"/><text x="75.8156%" y="831.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 2.71%)</title><rect x="76.0181%" y="805" width="2.7149%" height="15" fill="rgb(225,182,9)" fg:x="168" fg:w="6"/><text x="76.2681%" y="815.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 2.71%)</title><rect x="76.0181%" y="789" width="2.7149%" height="15" fill="rgb(243,178,37)" fg:x="168" fg:w="6"/><text x="76.2681%" y="799.50">al..</text></g><g><title>core::cmp::max (1 samples, 0.45%)</title><rect x="78.2805%" y="773" width="0.4525%" height="15" fill="rgb(232,139,19)" fg:x="173" fg:w="1"/><text x="78.5305%" y="783.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.45%)</title><rect x="78.2805%" y="757" width="0.4525%" height="15" fill="rgb(225,201,24)" fg:x="173" fg:w="1"/><text x="78.5305%" y="767.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.45%)</title><rect x="78.2805%" y="741" width="0.4525%" height="15" fill="rgb(221,47,46)" fg:x="173" fg:w="1"/><text x="78.5305%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 9.95%)</title><rect x="69.2308%" y="1013" width="9.9548%" height="15" fill="rgb(249,23,13)" fg:x="153" fg:w="22"/><text x="69.4808%" y="1023.50">core::iter::tr..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (22 samples, 9.95%)</title><rect x="69.2308%" y="997" width="9.9548%" height="15" fill="rgb(219,9,5)" fg:x="153" fg:w="22"/><text x="69.4808%" y="1007.50">&lt;alloc::string..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (22 samples, 9.95%)</title><rect x="69.2308%" y="981" width="9.9548%" height="15" fill="rgb(254,171,16)" fg:x="153" fg:w="22"/><text x="69.4808%" y="991.50">&lt;alloc::string..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22 samples, 9.95%)</title><rect x="69.2308%" y="965" width="9.9548%" height="15" fill="rgb(230,171,20)" fg:x="153" fg:w="22"/><text x="69.4808%" y="975.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 3.62%)</title><rect x="75.5656%" y="949" width="3.6199%" height="15" fill="rgb(210,71,41)" fg:x="167" fg:w="8"/><text x="75.8156%" y="959.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 3.62%)</title><rect x="75.5656%" y="933" width="3.6199%" height="15" fill="rgb(206,173,20)" fg:x="167" fg:w="8"/><text x="75.8156%" y="943.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 3.62%)</title><rect x="75.5656%" y="917" width="3.6199%" height="15" fill="rgb(233,88,34)" fg:x="167" fg:w="8"/><text x="75.8156%" y="927.50">core..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (8 samples, 3.62%)</title><rect x="75.5656%" y="901" width="3.6199%" height="15" fill="rgb(223,209,46)" fg:x="167" fg:w="8"/><text x="75.8156%" y="911.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 3.62%)</title><rect x="75.5656%" y="885" width="3.6199%" height="15" fill="rgb(250,43,18)" fg:x="167" fg:w="8"/><text x="75.8156%" y="895.50">core..</text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.45%)</title><rect x="78.7330%" y="869" width="0.4525%" height="15" fill="rgb(208,13,10)" fg:x="174" fg:w="1"/><text x="78.9830%" y="879.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_ascii_lowercase (1 samples, 0.45%)</title><rect x="78.7330%" y="853" width="0.4525%" height="15" fill="rgb(212,200,36)" fg:x="174" fg:w="1"/><text x="78.9830%" y="863.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_uppercase (1 samples, 0.45%)</title><rect x="78.7330%" y="837" width="0.4525%" height="15" fill="rgb(225,90,30)" fg:x="174" fg:w="1"/><text x="78.9830%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.45%)</title><rect x="79.1855%" y="1013" width="0.4525%" height="15" fill="rgb(236,182,39)" fg:x="175" fg:w="1"/><text x="79.4355%" y="1023.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.45%)</title><rect x="79.1855%" y="997" width="0.4525%" height="15" fill="rgb(212,144,35)" fg:x="175" fg:w="1"/><text x="79.4355%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.45%)</title><rect x="79.1855%" y="981" width="0.4525%" height="15" fill="rgb(228,63,44)" fg:x="175" fg:w="1"/><text x="79.4355%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.45%)</title><rect x="79.1855%" y="965" width="0.4525%" height="15" fill="rgb(228,109,6)" fg:x="175" fg:w="1"/><text x="79.4355%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.45%)</title><rect x="79.1855%" y="949" width="0.4525%" height="15" fill="rgb(238,117,24)" fg:x="175" fg:w="1"/><text x="79.4355%" y="959.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.45%)</title><rect x="79.1855%" y="933" width="0.4525%" height="15" fill="rgb(242,26,26)" fg:x="175" fg:w="1"/><text x="79.4355%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.90%)</title><rect x="79.6380%" y="1013" width="0.9050%" height="15" fill="rgb(221,92,48)" fg:x="176" fg:w="2"/><text x="79.8880%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.90%)</title><rect x="79.6380%" y="997" width="0.9050%" height="15" fill="rgb(209,209,32)" fg:x="176" fg:w="2"/><text x="79.8880%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.90%)</title><rect x="79.6380%" y="981" width="0.9050%" height="15" fill="rgb(221,70,22)" fg:x="176" fg:w="2"/><text x="79.8880%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.90%)</title><rect x="79.6380%" y="965" width="0.9050%" height="15" fill="rgb(248,145,5)" fg:x="176" fg:w="2"/><text x="79.8880%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.90%)</title><rect x="79.6380%" y="949" width="0.9050%" height="15" fill="rgb(226,116,26)" fg:x="176" fg:w="2"/><text x="79.8880%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.90%)</title><rect x="79.6380%" y="933" width="0.9050%" height="15" fill="rgb(244,5,17)" fg:x="176" fg:w="2"/><text x="79.8880%" y="943.50"></text></g><g><title>__GI___libc_free (1 samples, 0.45%)</title><rect x="80.0905%" y="917" width="0.4525%" height="15" fill="rgb(252,159,33)" fg:x="177" fg:w="1"/><text x="80.3405%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.45%)</title><rect x="80.0905%" y="901" width="0.4525%" height="15" fill="rgb(206,71,0)" fg:x="177" fg:w="1"/><text x="80.3405%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.90%)</title><rect x="80.9955%" y="885" width="0.9050%" height="15" fill="rgb(233,118,54)" fg:x="179" fg:w="2"/><text x="81.2455%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="80.9955%" y="869" width="0.9050%" height="15" fill="rgb(234,83,48)" fg:x="179" fg:w="2"/><text x="81.2455%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.90%)</title><rect x="80.9955%" y="853" width="0.9050%" height="15" fill="rgb(228,3,54)" fg:x="179" fg:w="2"/><text x="81.2455%" y="863.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.36%)</title><rect x="80.9955%" y="901" width="1.3575%" height="15" fill="rgb(226,155,13)" fg:x="179" fg:w="3"/><text x="81.2455%" y="911.50"></text></g><g><title>unidecode::unidecode (1 samples, 0.45%)</title><rect x="81.9005%" y="885" width="0.4525%" height="15" fill="rgb(241,28,37)" fg:x="181" fg:w="1"/><text x="82.1505%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.45%)</title><rect x="84.6154%" y="757" width="0.4525%" height="15" fill="rgb(233,93,10)" fg:x="187" fg:w="1"/><text x="84.8654%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.45%)</title><rect x="84.6154%" y="741" width="0.4525%" height="15" fill="rgb(225,113,19)" fg:x="187" fg:w="1"/><text x="84.8654%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.45%)</title><rect x="85.9729%" y="725" width="0.4525%" height="15" fill="rgb(241,2,18)" fg:x="190" fg:w="1"/><text x="86.2229%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 1.36%)</title><rect x="86.4253%" y="709" width="1.3575%" height="15" fill="rgb(228,207,21)" fg:x="191" fg:w="3"/><text x="86.6753%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 1.36%)</title><rect x="86.4253%" y="693" width="1.3575%" height="15" fill="rgb(213,211,35)" fg:x="191" fg:w="3"/><text x="86.6753%" y="703.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 1.36%)</title><rect x="86.4253%" y="677" width="1.3575%" height="15" fill="rgb(209,83,10)" fg:x="191" fg:w="3"/><text x="86.6753%" y="687.50"></text></g><g><title>__GI___libc_realloc (3 samples, 1.36%)</title><rect x="86.4253%" y="661" width="1.3575%" height="15" fill="rgb(209,164,1)" fg:x="191" fg:w="3"/><text x="86.6753%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.45%)</title><rect x="87.3303%" y="645" width="0.4525%" height="15" fill="rgb(213,184,43)" fg:x="193" fg:w="1"/><text x="87.5803%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 5.88%)</title><rect x="82.3529%" y="789" width="5.8824%" height="15" fill="rgb(231,61,34)" fg:x="182" fg:w="13"/><text x="82.6029%" y="799.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 5.88%)</title><rect x="82.3529%" y="773" width="5.8824%" height="15" fill="rgb(235,75,3)" fg:x="182" fg:w="13"/><text x="82.6029%" y="783.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 3.17%)</title><rect x="85.0679%" y="757" width="3.1674%" height="15" fill="rgb(220,106,47)" fg:x="188" fg:w="7"/><text x="85.3179%" y="767.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 3.17%)</title><rect x="85.0679%" y="741" width="3.1674%" height="15" fill="rgb(210,196,33)" fg:x="188" fg:w="7"/><text x="85.3179%" y="751.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 1.81%)</title><rect x="86.4253%" y="725" width="1.8100%" height="15" fill="rgb(229,154,42)" fg:x="191" fg:w="4"/><text x="86.6753%" y="735.50">a..</text></g><g><title>__rdl_alloc (1 samples, 0.45%)</title><rect x="87.7828%" y="709" width="0.4525%" height="15" fill="rgb(228,114,26)" fg:x="194" fg:w="1"/><text x="88.0328%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.45%)</title><rect x="87.7828%" y="693" width="0.4525%" height="15" fill="rgb(208,144,1)" fg:x="194" fg:w="1"/><text x="88.0328%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 1.81%)</title><rect x="88.2353%" y="789" width="1.8100%" height="15" fill="rgb(239,112,37)" fg:x="195" fg:w="4"/><text x="88.4853%" y="799.50">c..</text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 1.81%)</title><rect x="88.2353%" y="773" width="1.8100%" height="15" fill="rgb(210,96,50)" fg:x="195" fg:w="4"/><text x="88.4853%" y="783.50">_..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 8.14%)</title><rect x="82.3529%" y="885" width="8.1448%" height="15" fill="rgb(222,178,2)" fg:x="182" fg:w="18"/><text x="82.6029%" y="895.50">core::iter:..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (18 samples, 8.14%)</title><rect x="82.3529%" y="869" width="8.1448%" height="15" fill="rgb(226,74,18)" fg:x="182" fg:w="18"/><text x="82.6029%" y="879.50">&lt;alloc::str..</text></g><g><title>alloc::string::String::push_str (18 samples, 8.14%)</title><rect x="82.3529%" y="853" width="8.1448%" height="15" fill="rgb(225,67,54)" fg:x="182" fg:w="18"/><text x="82.6029%" y="863.50">alloc::stri..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 8.14%)</title><rect x="82.3529%" y="837" width="8.1448%" height="15" fill="rgb(251,92,32)" fg:x="182" fg:w="18"/><text x="82.6029%" y="847.50">alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 8.14%)</title><rect x="82.3529%" y="821" width="8.1448%" height="15" fill="rgb(228,149,22)" fg:x="182" fg:w="18"/><text x="82.6029%" y="831.50">&lt;alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 8.14%)</title><rect x="82.3529%" y="805" width="8.1448%" height="15" fill="rgb(243,54,13)" fg:x="182" fg:w="18"/><text x="82.6029%" y="815.50">alloc::vec:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.45%)</title><rect x="90.0452%" y="789" width="0.4525%" height="15" fill="rgb(243,180,28)" fg:x="199" fg:w="1"/><text x="90.2952%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 1.36%)</title><rect x="90.4977%" y="853" width="1.3575%" height="15" fill="rgb(208,167,24)" fg:x="200" fg:w="3"/><text x="90.7477%" y="863.50"></text></g><g><title>unidecode::unidecode_char::{{closure}} (3 samples, 1.36%)</title><rect x="90.4977%" y="837" width="1.3575%" height="15" fill="rgb(245,73,45)" fg:x="200" fg:w="3"/><text x="90.7477%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 61.09%)</title><rect x="31.2217%" y="1125" width="61.0860%" height="15" fill="rgb(237,203,48)" fg:x="69" fg:w="135"/><text x="31.4717%" y="1135.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (135 samples, 61.09%)</title><rect x="31.2217%" y="1109" width="61.0860%" height="15" fill="rgb(211,197,16)" fg:x="69" fg:w="135"/><text x="31.4717%" y="1119.50">core::iter::traits::iterator::Iterator::find_map</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (135 samples, 61.09%)</title><rect x="31.2217%" y="1093" width="61.0860%" height="15" fill="rgb(243,99,51)" fg:x="69" fg:w="135"/><text x="31.4717%" y="1103.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (134 samples, 60.63%)</title><rect x="31.6742%" y="1077" width="60.6335%" height="15" fill="rgb(215,123,29)" fg:x="70" fg:w="134"/><text x="31.9242%" y="1087.50">core::iter::traits::iterator::Iterator::find_map::check::{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (134 samples, 60.63%)</title><rect x="31.6742%" y="1061" width="60.6335%" height="15" fill="rgb(239,186,37)" fg:x="70" fg:w="134"/><text x="31.9242%" y="1071.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>paranagram::Paranagram::new::{{closure}} (134 samples, 60.63%)</title><rect x="31.6742%" y="1045" width="60.6335%" height="15" fill="rgb(252,136,39)" fg:x="70" fg:w="134"/><text x="31.9242%" y="1055.50">paranagram::Paranagram::new::{{closure}}</text></g><g><title>paranagram::word::Word::new (131 samples, 59.28%)</title><rect x="33.0317%" y="1029" width="59.2760%" height="15" fill="rgb(223,213,32)" fg:x="73" fg:w="131"/><text x="33.2817%" y="1039.50">paranagram::word::Word::new</text></g><g><title>unidecode::unidecode (26 samples, 11.76%)</title><rect x="80.5430%" y="1013" width="11.7647%" height="15" fill="rgb(233,115,5)" fg:x="178" fg:w="26"/><text x="80.7930%" y="1023.50">unidecode::unidec..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 11.76%)</title><rect x="80.5430%" y="997" width="11.7647%" height="15" fill="rgb(207,226,44)" fg:x="178" fg:w="26"/><text x="80.7930%" y="1007.50">core::iter::trait..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (26 samples, 11.76%)</title><rect x="80.5430%" y="981" width="11.7647%" height="15" fill="rgb(208,126,0)" fg:x="178" fg:w="26"/><text x="80.7930%" y="991.50">&lt;alloc::string::S..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (25 samples, 11.31%)</title><rect x="80.9955%" y="965" width="11.3122%" height="15" fill="rgb(244,66,21)" fg:x="179" fg:w="25"/><text x="81.2455%" y="975.50">&lt;alloc::string::S..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 11.31%)</title><rect x="80.9955%" y="949" width="11.3122%" height="15" fill="rgb(222,97,12)" fg:x="179" fg:w="25"/><text x="81.2455%" y="959.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 11.31%)</title><rect x="80.9955%" y="933" width="11.3122%" height="15" fill="rgb(219,213,19)" fg:x="179" fg:w="25"/><text x="81.2455%" y="943.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 11.31%)</title><rect x="80.9955%" y="917" width="11.3122%" height="15" fill="rgb(252,169,30)" fg:x="179" fg:w="25"/><text x="81.2455%" y="927.50">core::iter::trait..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (22 samples, 9.95%)</title><rect x="82.3529%" y="901" width="9.9548%" height="15" fill="rgb(206,32,51)" fg:x="182" fg:w="22"/><text x="82.6029%" y="911.50">core::iter::ad..</text></g><g><title>unidecode::unidecode::{{closure}} (4 samples, 1.81%)</title><rect x="90.4977%" y="885" width="1.8100%" height="15" fill="rgb(250,172,42)" fg:x="200" fg:w="4"/><text x="90.7477%" y="895.50">u..</text></g><g><title>unidecode::unidecode_char (4 samples, 1.81%)</title><rect x="90.4977%" y="869" width="1.8100%" height="15" fill="rgb(209,34,43)" fg:x="200" fg:w="4"/><text x="90.7477%" y="879.50">u..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.45%)</title><rect x="91.8552%" y="853" width="0.4525%" height="15" fill="rgb(223,11,35)" fg:x="203" fg:w="1"/><text x="92.1052%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 2.71%)</title><rect x="92.3077%" y="1125" width="2.7149%" height="15" fill="rgb(251,219,26)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1135.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 2.71%)</title><rect x="92.3077%" y="1109" width="2.7149%" height="15" fill="rgb(231,119,3)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1119.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 2.71%)</title><rect x="92.3077%" y="1093" width="2.7149%" height="15" fill="rgb(216,97,11)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1103.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 2.71%)</title><rect x="92.3077%" y="1077" width="2.7149%" height="15" fill="rgb(223,59,9)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1087.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 2.71%)</title><rect x="92.3077%" y="1061" width="2.7149%" height="15" fill="rgb(233,93,31)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1071.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 2.71%)</title><rect x="92.3077%" y="1045" width="2.7149%" height="15" fill="rgb(239,81,33)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1055.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 2.71%)</title><rect x="92.3077%" y="1029" width="2.7149%" height="15" fill="rgb(213,120,34)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1039.50">al..</text></g><g><title>alloc::alloc::realloc (6 samples, 2.71%)</title><rect x="92.3077%" y="1013" width="2.7149%" height="15" fill="rgb(243,49,53)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1023.50">al..</text></g><g><title>__GI___libc_realloc (6 samples, 2.71%)</title><rect x="92.3077%" y="997" width="2.7149%" height="15" fill="rgb(247,216,33)" fg:x="204" fg:w="6"/><text x="92.5577%" y="1007.50">__..</text></g><g><title>mremap_chunk (6 samples, 2.71%)</title><rect x="92.3077%" y="981" width="2.7149%" height="15" fill="rgb(226,26,14)" fg:x="204" fg:w="6"/><text x="92.5577%" y="991.50">mr..</text></g><g><title>__GI___mremap (6 samples, 2.71%)</title><rect x="92.3077%" y="965" width="2.7149%" height="15" fill="rgb(215,49,53)" fg:x="204" fg:w="6"/><text x="92.5577%" y="975.50">__..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="949" width="2.7149%" height="15" fill="rgb(245,162,40)" fg:x="204" fg:w="6"/><text x="92.5577%" y="959.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="933" width="2.7149%" height="15" fill="rgb(229,68,17)" fg:x="204" fg:w="6"/><text x="92.5577%" y="943.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="917" width="2.7149%" height="15" fill="rgb(213,182,10)" fg:x="204" fg:w="6"/><text x="92.5577%" y="927.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="901" width="2.7149%" height="15" fill="rgb(245,125,30)" fg:x="204" fg:w="6"/><text x="92.5577%" y="911.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="885" width="2.7149%" height="15" fill="rgb(232,202,2)" fg:x="204" fg:w="6"/><text x="92.5577%" y="895.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="869" width="2.7149%" height="15" fill="rgb(237,140,51)" fg:x="204" fg:w="6"/><text x="92.5577%" y="879.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="853" width="2.7149%" height="15" fill="rgb(236,157,25)" fg:x="204" fg:w="6"/><text x="92.5577%" y="863.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="837" width="2.7149%" height="15" fill="rgb(219,209,0)" fg:x="204" fg:w="6"/><text x="92.5577%" y="847.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="821" width="2.7149%" height="15" fill="rgb(240,116,54)" fg:x="204" fg:w="6"/><text x="92.5577%" y="831.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="805" width="2.7149%" height="15" fill="rgb(216,10,36)" fg:x="204" fg:w="6"/><text x="92.5577%" y="815.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="789" width="2.7149%" height="15" fill="rgb(222,72,44)" fg:x="204" fg:w="6"/><text x="92.5577%" y="799.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="773" width="2.7149%" height="15" fill="rgb(232,159,9)" fg:x="204" fg:w="6"/><text x="92.5577%" y="783.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="757" width="2.7149%" height="15" fill="rgb(210,39,32)" fg:x="204" fg:w="6"/><text x="92.5577%" y="767.50">[u..</text></g><g><title>[unknown] (6 samples, 2.71%)</title><rect x="92.3077%" y="741" width="2.7149%" height="15" fill="rgb(216,194,45)" fg:x="204" fg:w="6"/><text x="92.5577%" y="751.50">[u..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="92.7602%" y="725" width="2.2624%" height="15" fill="rgb(218,18,35)" fg:x="205" fg:w="5"/><text x="93.0102%" y="735.50">[..</text></g><g><title>__libc_start_main_impl (154 samples, 69.68%)</title><rect x="27.6018%" y="1509" width="69.6833%" height="15" fill="rgb(207,83,51)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1519.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (154 samples, 69.68%)</title><rect x="27.6018%" y="1493" width="69.6833%" height="15" fill="rgb(225,63,43)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1503.50">__libc_start_call_main</text></g><g><title>main (154 samples, 69.68%)</title><rect x="27.6018%" y="1477" width="69.6833%" height="15" fill="rgb(207,57,36)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1487.50">main</text></g><g><title>std::rt::lang_start_internal (154 samples, 69.68%)</title><rect x="27.6018%" y="1461" width="69.6833%" height="15" fill="rgb(216,99,33)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1471.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (154 samples, 69.68%)</title><rect x="27.6018%" y="1445" width="69.6833%" height="15" fill="rgb(225,42,16)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1455.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (154 samples, 69.68%)</title><rect x="27.6018%" y="1429" width="69.6833%" height="15" fill="rgb(220,201,45)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1439.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (154 samples, 69.68%)</title><rect x="27.6018%" y="1413" width="69.6833%" height="15" fill="rgb(225,33,4)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1423.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (154 samples, 69.68%)</title><rect x="27.6018%" y="1397" width="69.6833%" height="15" fill="rgb(224,33,50)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1407.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (154 samples, 69.68%)</title><rect x="27.6018%" y="1381" width="69.6833%" height="15" fill="rgb(246,198,51)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1391.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (154 samples, 69.68%)</title><rect x="27.6018%" y="1365" width="69.6833%" height="15" fill="rgb(205,22,4)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1375.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (154 samples, 69.68%)</title><rect x="27.6018%" y="1349" width="69.6833%" height="15" fill="rgb(206,3,8)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1359.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (154 samples, 69.68%)</title><rect x="27.6018%" y="1333" width="69.6833%" height="15" fill="rgb(251,23,15)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1343.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (154 samples, 69.68%)</title><rect x="27.6018%" y="1317" width="69.6833%" height="15" fill="rgb(252,88,28)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1327.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (154 samples, 69.68%)</title><rect x="27.6018%" y="1301" width="69.6833%" height="15" fill="rgb(212,127,14)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1311.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (154 samples, 69.68%)</title><rect x="27.6018%" y="1285" width="69.6833%" height="15" fill="rgb(247,145,37)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1295.50">core::ops::function::FnOnce::call_once</text></g><g><title>para::main (154 samples, 69.68%)</title><rect x="27.6018%" y="1269" width="69.6833%" height="15" fill="rgb(209,117,53)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1279.50">para::main</text></g><g><title>para::dbg_main (154 samples, 69.68%)</title><rect x="27.6018%" y="1253" width="69.6833%" height="15" fill="rgb(212,90,42)" fg:x="61" fg:w="154"/><text x="27.8518%" y="1263.50">para::dbg_main</text></g><g><title>paranagram::Paranagram::new (146 samples, 66.06%)</title><rect x="31.2217%" y="1237" width="66.0633%" height="15" fill="rgb(218,164,37)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1247.50">paranagram::Paranagram::new</text></g><g><title>core::iter::traits::iterator::Iterator::collect (146 samples, 66.06%)</title><rect x="31.2217%" y="1221" width="66.0633%" height="15" fill="rgb(246,65,34)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1231.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (146 samples, 66.06%)</title><rect x="31.2217%" y="1205" width="66.0633%" height="15" fill="rgb(231,100,33)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1215.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (146 samples, 66.06%)</title><rect x="31.2217%" y="1189" width="66.0633%" height="15" fill="rgb(228,126,14)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1199.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (146 samples, 66.06%)</title><rect x="31.2217%" y="1173" width="66.0633%" height="15" fill="rgb(215,173,21)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1183.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (146 samples, 66.06%)</title><rect x="31.2217%" y="1157" width="66.0633%" height="15" fill="rgb(210,6,40)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1167.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (146 samples, 66.06%)</title><rect x="31.2217%" y="1141" width="66.0633%" height="15" fill="rgb(212,48,18)" fg:x="69" fg:w="146"/><text x="31.4717%" y="1151.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (5 samples, 2.26%)</title><rect x="95.0226%" y="1125" width="2.2624%" height="15" fill="rgb(230,214,11)" fg:x="210" fg:w="5"/><text x="95.2726%" y="1135.50">c..</text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1109" width="1.3575%" height="15" fill="rgb(254,105,39)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1093" width="1.3575%" height="15" fill="rgb(245,158,5)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1077" width="1.3575%" height="15" fill="rgb(249,208,11)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1061" width="1.3575%" height="15" fill="rgb(210,39,28)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1045" width="1.3575%" height="15" fill="rgb(211,56,53)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1029" width="1.3575%" height="15" fill="rgb(226,201,30)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="1013" width="1.3575%" height="15" fill="rgb(239,101,34)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="997" width="1.3575%" height="15" fill="rgb(226,209,5)" fg:x="212" fg:w="3"/><text x="96.1776%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 1.36%)</title><rect x="95.9276%" y="981" width="1.3575%" height="15" fill="rgb(250,105,47)" fg:x="212" fg:w="3"/><text x="96.1776%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="96.8326%" y="965" width="0.4525%" height="15" fill="rgb(230,72,3)" fg:x="214" fg:w="1"/><text x="97.0826%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="96.8326%" y="949" width="0.4525%" height="15" fill="rgb(232,218,39)" fg:x="214" fg:w="1"/><text x="97.0826%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="96.8326%" y="933" width="0.4525%" height="15" fill="rgb(248,166,6)" fg:x="214" fg:w="1"/><text x="97.0826%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="96.8326%" y="917" width="0.4525%" height="15" fill="rgb(247,89,20)" fg:x="214" fg:w="1"/><text x="97.0826%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.45%)</title><rect x="96.8326%" y="901" width="0.4525%" height="15" fill="rgb(248,130,54)" fg:x="214" fg:w="1"/><text x="97.0826%" y="911.50"></text></g><g><title>para (216 samples, 97.74%)</title><rect x="0.0000%" y="1541" width="97.7376%" height="15" fill="rgb(234,196,4)" fg:x="0" fg:w="216"/><text x="0.2500%" y="1551.50">para</text></g><g><title>_start (155 samples, 70.14%)</title><rect x="27.6018%" y="1525" width="70.1357%" height="15" fill="rgb(250,143,31)" fg:x="61" fg:w="155"/><text x="27.8518%" y="1535.50">_start</text></g><g><title>_dl_start (1 samples, 0.45%)</title><rect x="97.2851%" y="1509" width="0.4525%" height="15" fill="rgb(211,110,34)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1519.50"></text></g><g><title>_dl_start_final (1 samples, 0.45%)</title><rect x="97.2851%" y="1493" width="0.4525%" height="15" fill="rgb(215,124,48)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1503.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.45%)</title><rect x="97.2851%" y="1477" width="0.4525%" height="15" fill="rgb(216,46,13)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1487.50"></text></g><g><title>dl_main (1 samples, 0.45%)</title><rect x="97.2851%" y="1461" width="0.4525%" height="15" fill="rgb(205,184,25)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1471.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.45%)</title><rect x="97.2851%" y="1445" width="0.4525%" height="15" fill="rgb(228,1,10)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1455.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.45%)</title><rect x="97.2851%" y="1429" width="0.4525%" height="15" fill="rgb(213,116,27)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1439.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.45%)</title><rect x="97.2851%" y="1413" width="0.4525%" height="15" fill="rgb(241,95,50)" fg:x="215" fg:w="1"/><text x="97.5351%" y="1423.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(238,48,32)" fg:x="0" fg:w="221"/><text x="0.2500%" y="1567.50"></text></g><g><title>perf-exec (5 samples, 2.26%)</title><rect x="97.7376%" y="1541" width="2.2624%" height="15" fill="rgb(235,113,49)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1551.50">p..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1525" width="2.2624%" height="15" fill="rgb(205,127,43)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1535.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1509" width="2.2624%" height="15" fill="rgb(250,162,2)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1519.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1493" width="2.2624%" height="15" fill="rgb(220,13,41)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1503.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1477" width="2.2624%" height="15" fill="rgb(249,221,25)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1487.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1461" width="2.2624%" height="15" fill="rgb(215,208,19)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1471.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1445" width="2.2624%" height="15" fill="rgb(236,175,2)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1455.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1429" width="2.2624%" height="15" fill="rgb(241,52,2)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1439.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1413" width="2.2624%" height="15" fill="rgb(248,140,14)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1423.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1397" width="2.2624%" height="15" fill="rgb(253,22,42)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1407.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1381" width="2.2624%" height="15" fill="rgb(234,61,47)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1391.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1365" width="2.2624%" height="15" fill="rgb(208,226,15)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1375.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1349" width="2.2624%" height="15" fill="rgb(217,221,4)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1359.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1333" width="2.2624%" height="15" fill="rgb(212,174,34)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1343.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1317" width="2.2624%" height="15" fill="rgb(253,83,4)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1327.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1301" width="2.2624%" height="15" fill="rgb(250,195,49)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1311.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1285" width="2.2624%" height="15" fill="rgb(241,192,25)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1295.50">[..</text></g><g><title>[unknown] (5 samples, 2.26%)</title><rect x="97.7376%" y="1269" width="2.2624%" height="15" fill="rgb(208,124,10)" fg:x="216" fg:w="5"/><text x="97.9876%" y="1279.50">[..</text></g></svg></svg>