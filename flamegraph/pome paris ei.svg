<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="9464"><g><title>__GI___libc_free (6 samples, 0.06%)</title><rect x="0.0000%" y="1093" width="0.0634%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1103.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="0.0634%" y="1093" width="0.0211%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="2"/><text x="0.3134%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="0.0845%" y="1093" width="0.0106%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="1"/><text x="0.3345%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="0.0951%" y="1093" width="0.0211%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="2"/><text x="0.3451%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="0.1057%" y="1077" width="0.0106%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="1"/><text x="0.3557%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="0.1057%" y="1061" width="0.0106%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="1"/><text x="0.3557%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="0.1057%" y="1045" width="0.0106%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="1"/><text x="0.3557%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="0.1162%" y="1045" width="0.0106%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="1"/><text x="0.3662%" y="1055.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.1162%" y="1029" width="0.0106%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="1"/><text x="0.3662%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.01%)</title><rect x="0.1162%" y="1013" width="0.0106%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="1"/><text x="0.3662%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="0.1162%" y="997" width="0.0106%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="1"/><text x="0.3662%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="0.1162%" y="981" width="0.0106%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="1"/><text x="0.3662%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="0.1162%" y="965" width="0.0106%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="1"/><text x="0.3662%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="0.1162%" y="1093" width="0.0423%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="4"/><text x="0.3662%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.04%)</title><rect x="0.1162%" y="1077" width="0.0423%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="4"/><text x="0.3662%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4 samples, 0.04%)</title><rect x="0.1162%" y="1061" width="0.0423%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="4"/><text x="0.3662%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.03%)</title><rect x="0.1268%" y="1045" width="0.0317%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="3"/><text x="0.3768%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.03%)</title><rect x="0.1268%" y="1029" width="0.0317%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="3"/><text x="0.3768%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.03%)</title><rect x="0.1268%" y="1013" width="0.0317%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="3"/><text x="0.3768%" y="1023.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.03%)</title><rect x="0.1268%" y="997" width="0.0317%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="3"/><text x="0.3768%" y="1007.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="0.1585%" y="1093" width="0.0211%" height="15" fill="rgb(249,33,26)" fg:x="15" fg:w="2"/><text x="0.4085%" y="1103.50"></text></g><g><title>[[heap]] (18 samples, 0.19%)</title><rect x="0.0000%" y="1109" width="0.1902%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1119.50"></text></g><g><title>unidecode::unidecode (1 samples, 0.01%)</title><rect x="0.1796%" y="1093" width="0.0106%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="0.1796%" y="1077" width="0.0106%" height="15" fill="rgb(247,18,42)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="0.1796%" y="1061" width="0.0106%" height="15" fill="rgb(241,131,45)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="0.1796%" y="1045" width="0.0106%" height="15" fill="rgb(249,31,29)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="0.1796%" y="1029" width="0.0106%" height="15" fill="rgb(225,111,53)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="0.1796%" y="1013" width="0.0106%" height="15" fill="rgb(238,160,17)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="0.1796%" y="997" width="0.0106%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="1"/><text x="0.4296%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="0.1796%" y="981" width="0.0106%" height="15" fill="rgb(232,36,49)" fg:x="17" fg:w="1"/><text x="0.4296%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="0.1796%" y="965" width="0.0106%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="1"/><text x="0.4296%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (1 samples, 0.01%)</title><rect x="0.1796%" y="949" width="0.0106%" height="15" fill="rgb(229,88,8)" fg:x="17" fg:w="1"/><text x="0.4296%" y="959.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="0.1796%" y="933" width="0.0106%" height="15" fill="rgb(213,181,19)" fg:x="17" fg:w="1"/><text x="0.4296%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="0.1796%" y="917" width="0.0106%" height="15" fill="rgb(254,191,54)" fg:x="17" fg:w="1"/><text x="0.4296%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="0.1796%" y="901" width="0.0106%" height="15" fill="rgb(241,83,37)" fg:x="17" fg:w="1"/><text x="0.4296%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="0.1796%" y="885" width="0.0106%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="1"/><text x="0.4296%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="0.1796%" y="869" width="0.0106%" height="15" fill="rgb(226,3,54)" fg:x="17" fg:w="1"/><text x="0.4296%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="0.1902%" y="1093" width="0.0211%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="2"/><text x="0.4402%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="0.2008%" y="1077" width="0.0106%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="1"/><text x="0.4508%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="0.2008%" y="1061" width="0.0106%" height="15" fill="rgb(232,182,51)" fg:x="19" fg:w="1"/><text x="0.4508%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="0.2008%" y="1045" width="0.0106%" height="15" fill="rgb(231,60,39)" fg:x="19" fg:w="1"/><text x="0.4508%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="0.2008%" y="1029" width="0.0106%" height="15" fill="rgb(208,69,12)" fg:x="19" fg:w="1"/><text x="0.4508%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="0.2008%" y="1013" width="0.0106%" height="15" fill="rgb(235,93,37)" fg:x="19" fg:w="1"/><text x="0.4508%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="0.2008%" y="997" width="0.0106%" height="15" fill="rgb(213,116,39)" fg:x="19" fg:w="1"/><text x="0.4508%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="0.2008%" y="981" width="0.0106%" height="15" fill="rgb(222,207,29)" fg:x="19" fg:w="1"/><text x="0.4508%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="0.2008%" y="965" width="0.0106%" height="15" fill="rgb(206,96,30)" fg:x="19" fg:w="1"/><text x="0.4508%" y="975.50"></text></g><g><title>__GI___libc_free (8 samples, 0.08%)</title><rect x="0.2113%" y="1093" width="0.0845%" height="15" fill="rgb(218,138,4)" fg:x="20" fg:w="8"/><text x="0.4613%" y="1103.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.07%)</title><rect x="0.2959%" y="1093" width="0.0740%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="7"/><text x="0.5459%" y="1103.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="0.3698%" y="1093" width="0.0106%" height="15" fill="rgb(239,60,40)" fg:x="35" fg:w="1"/><text x="0.6198%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="0.3804%" y="1093" width="0.0106%" height="15" fill="rgb(206,27,48)" fg:x="36" fg:w="1"/><text x="0.6304%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="0.3910%" y="1093" width="0.0106%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="1"/><text x="0.6410%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="0.3910%" y="1077" width="0.0106%" height="15" fill="rgb(250,213,24)" fg:x="37" fg:w="1"/><text x="0.6410%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="0.3910%" y="1061" width="0.0106%" height="15" fill="rgb(247,123,22)" fg:x="37" fg:w="1"/><text x="0.6410%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="0.3910%" y="1045" width="0.0106%" height="15" fill="rgb(231,138,38)" fg:x="37" fg:w="1"/><text x="0.6410%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (8 samples, 0.08%)</title><rect x="0.4015%" y="1093" width="0.0845%" height="15" fill="rgb(231,145,46)" fg:x="38" fg:w="8"/><text x="0.6515%" y="1103.50"></text></g><g><title>[[stack]] (68 samples, 0.72%)</title><rect x="0.1902%" y="1109" width="0.7185%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="68"/><text x="0.4402%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (40 samples, 0.42%)</title><rect x="0.4861%" y="1093" width="0.4227%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="40"/><text x="0.7361%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="0.9087%" y="1093" width="0.0423%" height="15" fill="rgb(247,81,37)" fg:x="86" fg:w="4"/><text x="1.1587%" y="1103.50"></text></g><g><title>__GI___libc_free (6 samples, 0.06%)</title><rect x="0.9510%" y="1093" width="0.0634%" height="15" fill="rgb(209,12,38)" fg:x="90" fg:w="6"/><text x="1.2010%" y="1103.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="1.0144%" y="1093" width="0.0528%" height="15" fill="rgb(227,1,9)" fg:x="96" fg:w="5"/><text x="1.2644%" y="1103.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.23%)</title><rect x="1.0672%" y="1093" width="0.2325%" height="15" fill="rgb(248,47,43)" fg:x="101" fg:w="22"/><text x="1.3172%" y="1103.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="1.2997%" y="1093" width="0.0211%" height="15" fill="rgb(221,10,30)" fg:x="123" fg:w="2"/><text x="1.5497%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="1.2997%" y="1077" width="0.0211%" height="15" fill="rgb(210,229,1)" fg:x="123" fg:w="2"/><text x="1.5497%" y="1087.50"></text></g><g><title>_int_free (22 samples, 0.23%)</title><rect x="1.3208%" y="1093" width="0.2325%" height="15" fill="rgb(222,148,37)" fg:x="125" fg:w="22"/><text x="1.5708%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="1.5533%" y="1093" width="0.0106%" height="15" fill="rgb(234,67,33)" fg:x="147" fg:w="1"/><text x="1.8033%" y="1103.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="1.5638%" y="1093" width="0.0106%" height="15" fill="rgb(247,98,35)" fg:x="148" fg:w="1"/><text x="1.8138%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="1.5744%" y="1093" width="0.0211%" height="15" fill="rgb(247,138,52)" fg:x="149" fg:w="2"/><text x="1.8244%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="1.5744%" y="1077" width="0.0211%" height="15" fill="rgb(213,79,30)" fg:x="149" fg:w="2"/><text x="1.8244%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.02%)</title><rect x="1.5744%" y="1061" width="0.0211%" height="15" fill="rgb(246,177,23)" fg:x="149" fg:w="2"/><text x="1.8244%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="1.5744%" y="1045" width="0.0211%" height="15" fill="rgb(230,62,27)" fg:x="149" fg:w="2"/><text x="1.8244%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="1.5955%" y="1093" width="0.0211%" height="15" fill="rgb(216,154,8)" fg:x="151" fg:w="2"/><text x="1.8455%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="1.5955%" y="1077" width="0.0211%" height="15" fill="rgb(244,35,45)" fg:x="151" fg:w="2"/><text x="1.8455%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.16%)</title><rect x="1.6167%" y="1093" width="0.1585%" height="15" fill="rgb(251,115,12)" fg:x="153" fg:w="15"/><text x="1.8667%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.07%)</title><rect x="1.7012%" y="1077" width="0.0740%" height="15" fill="rgb(240,54,50)" fg:x="161" fg:w="7"/><text x="1.9512%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.07%)</title><rect x="1.7012%" y="1061" width="0.0740%" height="15" fill="rgb(233,84,52)" fg:x="161" fg:w="7"/><text x="1.9512%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.07%)</title><rect x="1.7012%" y="1045" width="0.0740%" height="15" fill="rgb(207,117,47)" fg:x="161" fg:w="7"/><text x="1.9512%" y="1055.50"></text></g><g><title>[anon] (83 samples, 0.88%)</title><rect x="0.9087%" y="1109" width="0.8770%" height="15" fill="rgb(249,43,39)" fg:x="86" fg:w="83"/><text x="1.1587%" y="1119.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="1.7751%" y="1093" width="0.0106%" height="15" fill="rgb(209,38,44)" fg:x="168" fg:w="1"/><text x="2.0251%" y="1103.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (1 samples, 0.01%)</title><rect x="2.7367%" y="1093" width="0.0106%" height="15" fill="rgb(236,212,23)" fg:x="259" fg:w="1"/><text x="2.9867%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="2.7367%" y="1077" width="0.0106%" height="15" fill="rgb(242,79,21)" fg:x="259" fg:w="1"/><text x="2.9867%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="2.7367%" y="1061" width="0.0106%" height="15" fill="rgb(211,96,35)" fg:x="259" fg:w="1"/><text x="2.9867%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="2.7367%" y="1045" width="0.0106%" height="15" fill="rgb(253,215,40)" fg:x="259" fg:w="1"/><text x="2.9867%" y="1055.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (1 samples, 0.01%)</title><rect x="2.7367%" y="1029" width="0.0106%" height="15" fill="rgb(211,81,21)" fg:x="259" fg:w="1"/><text x="2.9867%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="2.7367%" y="1013" width="0.0106%" height="15" fill="rgb(208,190,38)" fg:x="259" fg:w="1"/><text x="2.9867%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="2.7473%" y="1093" width="0.0106%" height="15" fill="rgb(235,213,38)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="2.7473%" y="1077" width="0.0106%" height="15" fill="rgb(237,122,38)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="2.7473%" y="1061" width="0.0106%" height="15" fill="rgb(244,218,35)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="2.7473%" y="1045" width="0.0106%" height="15" fill="rgb(240,68,47)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="2.7473%" y="1029" width="0.0106%" height="15" fill="rgb(210,16,53)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1039.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.01%)</title><rect x="2.7473%" y="1013" width="0.0106%" height="15" fill="rgb(235,124,12)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="2.7473%" y="997" width="0.0106%" height="15" fill="rgb(224,169,11)" fg:x="260" fg:w="1"/><text x="2.9973%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1 samples, 0.01%)</title><rect x="2.7473%" y="981" width="0.0106%" height="15" fill="rgb(250,166,2)" fg:x="260" fg:w="1"/><text x="2.9973%" y="991.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.01%)</title><rect x="2.7473%" y="965" width="0.0106%" height="15" fill="rgb(242,216,29)" fg:x="260" fg:w="1"/><text x="2.9973%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="2.7473%" y="949" width="0.0106%" height="15" fill="rgb(230,116,27)" fg:x="260" fg:w="1"/><text x="2.9973%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="2.7578%" y="1093" width="0.0106%" height="15" fill="rgb(228,99,48)" fg:x="261" fg:w="1"/><text x="3.0078%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7684%" y="1093" width="0.0528%" height="15" fill="rgb(253,11,6)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.05%)</title><rect x="2.7684%" y="1077" width="0.0528%" height="15" fill="rgb(247,143,39)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.05%)</title><rect x="2.7684%" y="1061" width="0.0528%" height="15" fill="rgb(236,97,10)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1071.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (5 samples, 0.05%)</title><rect x="2.7684%" y="1045" width="0.0528%" height="15" fill="rgb(233,208,19)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::utils::FromTupleIndex&gt;::from_tuple_index (5 samples, 0.05%)</title><rect x="2.7684%" y="1029" width="0.0528%" height="15" fill="rgb(216,164,2)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (5 samples, 0.05%)</title><rect x="2.7684%" y="1013" width="0.0528%" height="15" fill="rgb(220,129,5)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (5 samples, 0.05%)</title><rect x="2.7684%" y="997" width="0.0528%" height="15" fill="rgb(242,17,10)" fg:x="262" fg:w="5"/><text x="3.0184%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="2.7684%" y="981" width="0.0528%" height="15" fill="rgb(242,107,0)" fg:x="262" fg:w="5"/><text x="3.0184%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="2.7684%" y="965" width="0.0528%" height="15" fill="rgb(251,28,31)" fg:x="262" fg:w="5"/><text x="3.0184%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="2.7684%" y="949" width="0.0528%" height="15" fill="rgb(233,223,10)" fg:x="262" fg:w="5"/><text x="3.0184%" y="959.50"></text></g><g><title>[unknown] (1,893 samples, 20.00%)</title><rect x="2.8212%" y="1093" width="20.0021%" height="15" fill="rgb(215,21,27)" fg:x="267" fg:w="1893"/><text x="3.0712%" y="1103.50">[unknown]</text></g><g><title>[unknown] (1,881 samples, 19.88%)</title><rect x="2.9480%" y="1077" width="19.8753%" height="15" fill="rgb(232,23,21)" fg:x="279" fg:w="1881"/><text x="3.1980%" y="1087.50">[unknown]</text></g><g><title>[unknown] (1,834 samples, 19.38%)</title><rect x="3.4446%" y="1061" width="19.3787%" height="15" fill="rgb(244,5,23)" fg:x="326" fg:w="1834"/><text x="3.6946%" y="1071.50">[unknown]</text></g><g><title>[unknown] (1,769 samples, 18.69%)</title><rect x="4.1314%" y="1045" width="18.6919%" height="15" fill="rgb(226,81,46)" fg:x="391" fg:w="1769"/><text x="4.3814%" y="1055.50">[unknown]</text></g><g><title>[unknown] (1,741 samples, 18.40%)</title><rect x="4.4273%" y="1029" width="18.3960%" height="15" fill="rgb(247,70,30)" fg:x="419" fg:w="1741"/><text x="4.6773%" y="1039.50">[unknown]</text></g><g><title>[unknown] (1,726 samples, 18.24%)</title><rect x="4.5858%" y="1013" width="18.2375%" height="15" fill="rgb(212,68,19)" fg:x="434" fg:w="1726"/><text x="4.8358%" y="1023.50">[unknown]</text></g><g><title>[unknown] (1,724 samples, 18.22%)</title><rect x="4.6069%" y="997" width="18.2164%" height="15" fill="rgb(240,187,13)" fg:x="436" fg:w="1724"/><text x="4.8569%" y="1007.50">[unknown]</text></g><g><title>[unknown] (51 samples, 0.54%)</title><rect x="22.2844%" y="981" width="0.5389%" height="15" fill="rgb(223,113,26)" fg:x="2109" fg:w="51"/><text x="22.5344%" y="991.50"></text></g><g><title>[unknown] (50 samples, 0.53%)</title><rect x="22.2950%" y="965" width="0.5283%" height="15" fill="rgb(206,192,2)" fg:x="2110" fg:w="50"/><text x="22.5450%" y="975.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="22.3056%" y="949" width="0.5178%" height="15" fill="rgb(241,108,4)" fg:x="2111" fg:w="49"/><text x="22.5556%" y="959.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="22.3056%" y="933" width="0.5178%" height="15" fill="rgb(247,173,49)" fg:x="2111" fg:w="49"/><text x="22.5556%" y="943.50"></text></g><g><title>[unknown] (47 samples, 0.50%)</title><rect x="22.3267%" y="917" width="0.4966%" height="15" fill="rgb(224,114,35)" fg:x="2113" fg:w="47"/><text x="22.5767%" y="927.50"></text></g><g><title>[unknown] (46 samples, 0.49%)</title><rect x="22.3373%" y="901" width="0.4861%" height="15" fill="rgb(245,159,27)" fg:x="2114" fg:w="46"/><text x="22.5873%" y="911.50"></text></g><g><title>[unknown] (38 samples, 0.40%)</title><rect x="22.4218%" y="885" width="0.4015%" height="15" fill="rgb(245,172,44)" fg:x="2122" fg:w="38"/><text x="22.6718%" y="895.50"></text></g><g><title>[unknown] (31 samples, 0.33%)</title><rect x="22.4958%" y="869" width="0.3276%" height="15" fill="rgb(236,23,11)" fg:x="2129" fg:w="31"/><text x="22.7458%" y="879.50"></text></g><g><title>[unknown] (29 samples, 0.31%)</title><rect x="22.5169%" y="853" width="0.3064%" height="15" fill="rgb(205,117,38)" fg:x="2131" fg:w="29"/><text x="22.7669%" y="863.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="22.5486%" y="837" width="0.2747%" height="15" fill="rgb(237,72,25)" fg:x="2134" fg:w="26"/><text x="22.7986%" y="847.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="22.6226%" y="821" width="0.2008%" height="15" fill="rgb(244,70,9)" fg:x="2141" fg:w="19"/><text x="22.8726%" y="831.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="22.6754%" y="805" width="0.1479%" height="15" fill="rgb(217,125,39)" fg:x="2146" fg:w="14"/><text x="22.9254%" y="815.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="22.7071%" y="789" width="0.1162%" height="15" fill="rgb(235,36,10)" fg:x="2149" fg:w="11"/><text x="22.9571%" y="799.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="22.7071%" y="773" width="0.1162%" height="15" fill="rgb(251,123,47)" fg:x="2149" fg:w="11"/><text x="22.9571%" y="783.50"></text></g><g><title>__GI___clock_nanosleep (3 samples, 0.03%)</title><rect x="22.8233%" y="1093" width="0.0317%" height="15" fill="rgb(221,13,13)" fg:x="2160" fg:w="3"/><text x="23.0733%" y="1103.50"></text></g><g><title>__GI___libc_free (17 samples, 0.18%)</title><rect x="22.8550%" y="1093" width="0.1796%" height="15" fill="rgb(238,131,9)" fg:x="2163" fg:w="17"/><text x="23.1050%" y="1103.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.19%)</title><rect x="23.0347%" y="1093" width="0.1902%" height="15" fill="rgb(211,50,8)" fg:x="2180" fg:w="18"/><text x="23.2847%" y="1103.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.08%)</title><rect x="23.2249%" y="1093" width="0.0845%" height="15" fill="rgb(245,182,24)" fg:x="2198" fg:w="8"/><text x="23.4749%" y="1103.50"></text></g><g><title>__GI___nanosleep (1 samples, 0.01%)</title><rect x="23.3094%" y="1093" width="0.0106%" height="15" fill="rgb(242,14,37)" fg:x="2206" fg:w="1"/><text x="23.5594%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (19 samples, 0.20%)</title><rect x="23.3199%" y="1093" width="0.2008%" height="15" fill="rgb(246,228,12)" fg:x="2207" fg:w="19"/><text x="23.5699%" y="1103.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.01%)</title><rect x="23.5207%" y="1093" width="0.0106%" height="15" fill="rgb(213,55,15)" fg:x="2226" fg:w="1"/><text x="23.7707%" y="1103.50"></text></g><g><title>__rdl_realloc (6 samples, 0.06%)</title><rect x="23.5313%" y="1093" width="0.0634%" height="15" fill="rgb(209,9,3)" fg:x="2227" fg:w="6"/><text x="23.7813%" y="1103.50"></text></g><g><title>_int_free (52 samples, 0.55%)</title><rect x="23.5947%" y="1093" width="0.5495%" height="15" fill="rgb(230,59,30)" fg:x="2233" fg:w="52"/><text x="23.8447%" y="1103.50"></text></g><g><title>_int_malloc (36 samples, 0.38%)</title><rect x="24.1441%" y="1093" width="0.3804%" height="15" fill="rgb(209,121,21)" fg:x="2285" fg:w="36"/><text x="24.3941%" y="1103.50"></text></g><g><title>_int_realloc (46 samples, 0.49%)</title><rect x="24.5245%" y="1093" width="0.4861%" height="15" fill="rgb(220,109,13)" fg:x="2321" fg:w="46"/><text x="24.7745%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.18%)</title><rect x="25.0106%" y="1093" width="0.1796%" height="15" fill="rgb(232,18,1)" fg:x="2367" fg:w="17"/><text x="25.2606%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.05%)</title><rect x="25.1374%" y="1077" width="0.0528%" height="15" fill="rgb(215,41,42)" fg:x="2379" fg:w="5"/><text x="25.3874%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.02%)</title><rect x="25.1691%" y="1061" width="0.0211%" height="15" fill="rgb(224,123,36)" fg:x="2382" fg:w="2"/><text x="25.4191%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="25.1691%" y="1045" width="0.0211%" height="15" fill="rgb(240,125,3)" fg:x="2382" fg:w="2"/><text x="25.4191%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.11%)</title><rect x="25.1902%" y="1093" width="0.1057%" height="15" fill="rgb(205,98,50)" fg:x="2384" fg:w="10"/><text x="25.4402%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.05%)</title><rect x="25.2430%" y="1077" width="0.0528%" height="15" fill="rgb(205,185,37)" fg:x="2389" fg:w="5"/><text x="25.4930%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.04%)</title><rect x="25.2536%" y="1061" width="0.0423%" height="15" fill="rgb(238,207,15)" fg:x="2390" fg:w="4"/><text x="25.5036%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.04%)</title><rect x="25.2536%" y="1045" width="0.0423%" height="15" fill="rgb(213,199,42)" fg:x="2390" fg:w="4"/><text x="25.5036%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.17%)</title><rect x="25.2959%" y="1093" width="0.1691%" height="15" fill="rgb(235,201,11)" fg:x="2394" fg:w="16"/><text x="25.5459%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.12%)</title><rect x="25.3487%" y="1077" width="0.1162%" height="15" fill="rgb(207,46,11)" fg:x="2399" fg:w="11"/><text x="25.5987%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.12%)</title><rect x="25.3487%" y="1061" width="0.1162%" height="15" fill="rgb(241,35,35)" fg:x="2399" fg:w="11"/><text x="25.5987%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.12%)</title><rect x="25.3487%" y="1045" width="0.1162%" height="15" fill="rgb(243,32,47)" fg:x="2399" fg:w="11"/><text x="25.5987%" y="1055.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (8 samples, 0.08%)</title><rect x="25.4649%" y="949" width="0.0845%" height="15" fill="rgb(247,202,23)" fg:x="2410" fg:w="8"/><text x="25.7149%" y="959.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.08%)</title><rect x="25.4649%" y="933" width="0.0845%" height="15" fill="rgb(219,102,11)" fg:x="2410" fg:w="8"/><text x="25.7149%" y="943.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.08%)</title><rect x="25.4649%" y="917" width="0.0845%" height="15" fill="rgb(243,110,44)" fg:x="2410" fg:w="8"/><text x="25.7149%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.42%)</title><rect x="25.4649%" y="997" width="0.4227%" height="15" fill="rgb(222,74,54)" fg:x="2410" fg:w="40"/><text x="25.7149%" y="1007.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}}::{{closure}} (40 samples, 0.42%)</title><rect x="25.4649%" y="981" width="0.4227%" height="15" fill="rgb(216,99,12)" fg:x="2410" fg:w="40"/><text x="25.7149%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::merge (40 samples, 0.42%)</title><rect x="25.4649%" y="965" width="0.4227%" height="15" fill="rgb(226,22,26)" fg:x="2410" fg:w="40"/><text x="25.7149%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (32 samples, 0.34%)</title><rect x="25.5495%" y="949" width="0.3381%" height="15" fill="rgb(217,163,10)" fg:x="2418" fg:w="32"/><text x="25.7995%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="25.8876%" y="997" width="0.0106%" height="15" fill="rgb(213,25,53)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="25.8876%" y="981" width="0.0106%" height="15" fill="rgb(252,105,26)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="25.8876%" y="965" width="0.0106%" height="15" fill="rgb(220,39,43)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="25.8876%" y="949" width="0.0106%" height="15" fill="rgb(229,68,48)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.01%)</title><rect x="25.8876%" y="933" width="0.0106%" height="15" fill="rgb(252,8,32)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1 samples, 0.01%)</title><rect x="25.8876%" y="917" width="0.0106%" height="15" fill="rgb(223,20,43)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="25.8876%" y="901" width="0.0106%" height="15" fill="rgb(229,81,49)" fg:x="2450" fg:w="1"/><text x="26.1376%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt; (1 samples, 0.01%)</title><rect x="25.8981%" y="997" width="0.0106%" height="15" fill="rgb(236,28,36)" fg:x="2451" fg:w="1"/><text x="26.1481%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::Word&gt;&gt; (1 samples, 0.01%)</title><rect x="25.8981%" y="981" width="0.0106%" height="15" fill="rgb(249,185,26)" fg:x="2451" fg:w="1"/><text x="26.1481%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.8981%" y="965" width="0.0106%" height="15" fill="rgb(249,174,33)" fg:x="2451" fg:w="1"/><text x="26.1481%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="25.8981%" y="949" width="0.0106%" height="15" fill="rgb(233,201,37)" fg:x="2451" fg:w="1"/><text x="26.1481%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="25.8981%" y="933" width="0.0106%" height="15" fill="rgb(221,78,26)" fg:x="2451" fg:w="1"/><text x="26.1481%" y="943.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (47 samples, 0.50%)</title><rect x="25.4649%" y="1093" width="0.4966%" height="15" fill="rgb(250,127,30)" fg:x="2410" fg:w="47"/><text x="25.7149%" y="1103.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (47 samples, 0.50%)</title><rect x="25.4649%" y="1077" width="0.4966%" height="15" fill="rgb(230,49,44)" fg:x="2410" fg:w="47"/><text x="25.7149%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.50%)</title><rect x="25.4649%" y="1061" width="0.4966%" height="15" fill="rgb(229,67,23)" fg:x="2410" fg:w="47"/><text x="25.7149%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.50%)</title><rect x="25.4649%" y="1045" width="0.4966%" height="15" fill="rgb(249,83,47)" fg:x="2410" fg:w="47"/><text x="25.7149%" y="1055.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (47 samples, 0.50%)</title><rect x="25.4649%" y="1029" width="0.4966%" height="15" fill="rgb(215,43,3)" fg:x="2410" fg:w="47"/><text x="25.7149%" y="1039.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (47 samples, 0.50%)</title><rect x="25.4649%" y="1013" width="0.4966%" height="15" fill="rgb(238,154,13)" fg:x="2410" fg:w="47"/><text x="25.7149%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (5 samples, 0.05%)</title><rect x="25.9087%" y="997" width="0.0528%" height="15" fill="rgb(219,56,2)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.05%)</title><rect x="25.9087%" y="981" width="0.0528%" height="15" fill="rgb(233,0,4)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (5 samples, 0.05%)</title><rect x="25.9087%" y="965" width="0.0528%" height="15" fill="rgb(235,30,7)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="25.9087%" y="949" width="0.0528%" height="15" fill="rgb(250,79,13)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (5 samples, 0.05%)</title><rect x="25.9087%" y="933" width="0.0528%" height="15" fill="rgb(211,146,34)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.05%)</title><rect x="25.9087%" y="917" width="0.0528%" height="15" fill="rgb(228,22,38)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="25.9087%" y="901" width="0.0528%" height="15" fill="rgb(235,168,5)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="25.9087%" y="885" width="0.0528%" height="15" fill="rgb(221,155,16)" fg:x="2452" fg:w="5"/><text x="26.1587%" y="895.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.01%)</title><rect x="25.9615%" y="1093" width="0.0106%" height="15" fill="rgb(215,215,53)" fg:x="2457" fg:w="1"/><text x="26.2115%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="26.1306%" y="1045" width="0.0106%" height="15" fill="rgb(223,4,10)" fg:x="2473" fg:w="1"/><text x="26.3806%" y="1055.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.1306%" y="1029" width="0.0106%" height="15" fill="rgb(234,103,6)" fg:x="2473" fg:w="1"/><text x="26.3806%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.01%)</title><rect x="26.1306%" y="1013" width="0.0106%" height="15" fill="rgb(227,97,0)" fg:x="2473" fg:w="1"/><text x="26.3806%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="26.1306%" y="997" width="0.0106%" height="15" fill="rgb(234,150,53)" fg:x="2473" fg:w="1"/><text x="26.3806%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="26.1306%" y="981" width="0.0106%" height="15" fill="rgb(228,201,54)" fg:x="2473" fg:w="1"/><text x="26.3806%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="26.1306%" y="965" width="0.0106%" height="15" fill="rgb(222,22,37)" fg:x="2473" fg:w="1"/><text x="26.3806%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.01%)</title><rect x="26.1412%" y="1013" width="0.0106%" height="15" fill="rgb(237,53,32)" fg:x="2474" fg:w="1"/><text x="26.3912%" y="1023.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.01%)</title><rect x="26.1412%" y="997" width="0.0106%" height="15" fill="rgb(233,25,53)" fg:x="2474" fg:w="1"/><text x="26.3912%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.21%)</title><rect x="25.9721%" y="1093" width="0.2113%" height="15" fill="rgb(210,40,34)" fg:x="2458" fg:w="20"/><text x="26.2221%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (10 samples, 0.11%)</title><rect x="26.0778%" y="1077" width="0.1057%" height="15" fill="rgb(241,220,44)" fg:x="2468" fg:w="10"/><text x="26.3278%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (5 samples, 0.05%)</title><rect x="26.1306%" y="1061" width="0.0528%" height="15" fill="rgb(235,28,35)" fg:x="2473" fg:w="5"/><text x="26.3806%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (4 samples, 0.04%)</title><rect x="26.1412%" y="1045" width="0.0423%" height="15" fill="rgb(210,56,17)" fg:x="2474" fg:w="4"/><text x="26.3912%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (4 samples, 0.04%)</title><rect x="26.1412%" y="1029" width="0.0423%" height="15" fill="rgb(224,130,29)" fg:x="2474" fg:w="4"/><text x="26.3912%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.03%)</title><rect x="26.1517%" y="1013" width="0.0317%" height="15" fill="rgb(235,212,8)" fg:x="2475" fg:w="3"/><text x="26.4017%" y="1023.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.03%)</title><rect x="26.1517%" y="997" width="0.0317%" height="15" fill="rgb(223,33,50)" fg:x="2475" fg:w="3"/><text x="26.4017%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="26.1517%" y="981" width="0.0317%" height="15" fill="rgb(219,149,13)" fg:x="2475" fg:w="3"/><text x="26.4017%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="26.1517%" y="965" width="0.0317%" height="15" fill="rgb(250,156,29)" fg:x="2475" fg:w="3"/><text x="26.4017%" y="975.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="26.1517%" y="949" width="0.0317%" height="15" fill="rgb(216,193,19)" fg:x="2475" fg:w="3"/><text x="26.4017%" y="959.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (20 samples, 0.21%)</title><rect x="26.1834%" y="1093" width="0.2113%" height="15" fill="rgb(216,135,14)" fg:x="2478" fg:w="20"/><text x="26.4334%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.05%)</title><rect x="26.3419%" y="1077" width="0.0528%" height="15" fill="rgb(241,47,5)" fg:x="2493" fg:w="5"/><text x="26.5919%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.05%)</title><rect x="26.3419%" y="1061" width="0.0528%" height="15" fill="rgb(233,42,35)" fg:x="2493" fg:w="5"/><text x="26.5919%" y="1071.50"></text></g><g><title>malloc_consolidate (5 samples, 0.05%)</title><rect x="26.3948%" y="1093" width="0.0528%" height="15" fill="rgb(231,13,6)" fg:x="2498" fg:w="5"/><text x="26.6448%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="26.6378%" y="981" width="0.0423%" height="15" fill="rgb(207,181,40)" fg:x="2521" fg:w="4"/><text x="26.8878%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="26.6378%" y="965" width="0.0423%" height="15" fill="rgb(254,173,49)" fg:x="2521" fg:w="4"/><text x="26.8878%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="26.6378%" y="949" width="0.0423%" height="15" fill="rgb(221,1,38)" fg:x="2521" fg:w="4"/><text x="26.8878%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="26.6378%" y="933" width="0.0423%" height="15" fill="rgb(206,124,46)" fg:x="2521" fg:w="4"/><text x="26.8878%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="26.6378%" y="917" width="0.0423%" height="15" fill="rgb(249,21,11)" fg:x="2521" fg:w="4"/><text x="26.8878%" y="927.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="26.6378%" y="901" width="0.0423%" height="15" fill="rgb(222,201,40)" fg:x="2521" fg:w="4"/><text x="26.8878%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="26.6378%" y="1077" width="0.1057%" height="15" fill="rgb(235,61,29)" fg:x="2521" fg:w="10"/><text x="26.8878%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="26.6378%" y="1061" width="0.1057%" height="15" fill="rgb(219,207,3)" fg:x="2521" fg:w="10"/><text x="26.8878%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="26.6378%" y="1045" width="0.1057%" height="15" fill="rgb(222,56,46)" fg:x="2521" fg:w="10"/><text x="26.8878%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.11%)</title><rect x="26.6378%" y="1029" width="0.1057%" height="15" fill="rgb(239,76,54)" fg:x="2521" fg:w="10"/><text x="26.8878%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.11%)</title><rect x="26.6378%" y="1013" width="0.1057%" height="15" fill="rgb(231,124,27)" fg:x="2521" fg:w="10"/><text x="26.8878%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.11%)</title><rect x="26.6378%" y="997" width="0.1057%" height="15" fill="rgb(249,195,6)" fg:x="2521" fg:w="10"/><text x="26.8878%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.06%)</title><rect x="26.6801%" y="981" width="0.0634%" height="15" fill="rgb(237,174,47)" fg:x="2525" fg:w="6"/><text x="26.9301%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="26.6801%" y="965" width="0.0634%" height="15" fill="rgb(206,201,31)" fg:x="2525" fg:w="6"/><text x="26.9301%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.07%)</title><rect x="26.7434%" y="1077" width="0.0740%" height="15" fill="rgb(231,57,52)" fg:x="2531" fg:w="7"/><text x="26.9934%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.07%)</title><rect x="26.7434%" y="1061" width="0.0740%" height="15" fill="rgb(248,177,22)" fg:x="2531" fg:w="7"/><text x="26.9934%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.07%)</title><rect x="26.7434%" y="1045" width="0.0740%" height="15" fill="rgb(215,211,37)" fg:x="2531" fg:w="7"/><text x="26.9934%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.07%)</title><rect x="26.7434%" y="1029" width="0.0740%" height="15" fill="rgb(241,128,51)" fg:x="2531" fg:w="7"/><text x="26.9934%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="26.8174%" y="1029" width="0.0211%" height="15" fill="rgb(227,165,31)" fg:x="2538" fg:w="2"/><text x="27.0674%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="26.8174%" y="1013" width="0.0211%" height="15" fill="rgb(228,167,24)" fg:x="2538" fg:w="2"/><text x="27.0674%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.08%)</title><rect x="26.8174%" y="1077" width="0.0845%" height="15" fill="rgb(228,143,12)" fg:x="2538" fg:w="8"/><text x="27.0674%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.08%)</title><rect x="26.8174%" y="1061" width="0.0845%" height="15" fill="rgb(249,149,8)" fg:x="2538" fg:w="8"/><text x="27.0674%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.08%)</title><rect x="26.8174%" y="1045" width="0.0845%" height="15" fill="rgb(243,35,44)" fg:x="2538" fg:w="8"/><text x="27.0674%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="26.8385%" y="1029" width="0.0634%" height="15" fill="rgb(246,89,9)" fg:x="2540" fg:w="6"/><text x="27.0885%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.04%)</title><rect x="26.9019%" y="1045" width="0.0423%" height="15" fill="rgb(233,213,13)" fg:x="2546" fg:w="4"/><text x="27.1519%" y="1055.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (4 samples, 0.04%)</title><rect x="26.9019%" y="1029" width="0.0423%" height="15" fill="rgb(233,141,41)" fg:x="2546" fg:w="4"/><text x="27.1519%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.04%)</title><rect x="26.9019%" y="1013" width="0.0423%" height="15" fill="rgb(239,167,4)" fg:x="2546" fg:w="4"/><text x="27.1519%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.06%)</title><rect x="26.9019%" y="1077" width="0.0634%" height="15" fill="rgb(209,217,16)" fg:x="2546" fg:w="6"/><text x="27.1519%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.06%)</title><rect x="26.9019%" y="1061" width="0.0634%" height="15" fill="rgb(219,88,35)" fg:x="2546" fg:w="6"/><text x="27.1519%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="26.9442%" y="1045" width="0.0211%" height="15" fill="rgb(220,193,23)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="26.9442%" y="1029" width="0.0211%" height="15" fill="rgb(230,90,52)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="26.9442%" y="1013" width="0.0211%" height="15" fill="rgb(252,106,19)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="1023.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="26.9442%" y="997" width="0.0211%" height="15" fill="rgb(206,74,20)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="26.9442%" y="981" width="0.0211%" height="15" fill="rgb(230,138,44)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="26.9442%" y="965" width="0.0211%" height="15" fill="rgb(235,182,43)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="26.9442%" y="949" width="0.0211%" height="15" fill="rgb(242,16,51)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="26.9442%" y="933" width="0.0211%" height="15" fill="rgb(248,9,4)" fg:x="2550" fg:w="2"/><text x="27.1942%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (4 samples, 0.04%)</title><rect x="26.9653%" y="1077" width="0.0423%" height="15" fill="rgb(210,31,22)" fg:x="2552" fg:w="4"/><text x="27.2153%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (4 samples, 0.04%)</title><rect x="26.9653%" y="1061" width="0.0423%" height="15" fill="rgb(239,54,39)" fg:x="2552" fg:w="4"/><text x="27.2153%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="26.9653%" y="1045" width="0.0423%" height="15" fill="rgb(230,99,41)" fg:x="2552" fg:w="4"/><text x="27.2153%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="26.9653%" y="1029" width="0.0423%" height="15" fill="rgb(253,106,12)" fg:x="2552" fg:w="4"/><text x="27.2153%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="26.9653%" y="1013" width="0.0423%" height="15" fill="rgb(213,46,41)" fg:x="2552" fg:w="4"/><text x="27.2153%" y="1023.50"></text></g><g><title>paranagram::utils::find_sum_rec (57 samples, 0.60%)</title><rect x="26.4476%" y="1093" width="0.6023%" height="15" fill="rgb(215,133,35)" fg:x="2503" fg:w="57"/><text x="26.6976%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="27.0076%" y="1077" width="0.0423%" height="15" fill="rgb(213,28,5)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="27.0076%" y="1061" width="0.0423%" height="15" fill="rgb(215,77,49)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (4 samples, 0.04%)</title><rect x="27.0076%" y="1045" width="0.0423%" height="15" fill="rgb(248,100,22)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="27.0076%" y="1029" width="0.0423%" height="15" fill="rgb(208,67,9)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="27.0076%" y="1013" width="0.0423%" height="15" fill="rgb(219,133,21)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="1023.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="27.0076%" y="997" width="0.0423%" height="15" fill="rgb(246,46,29)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (4 samples, 0.04%)</title><rect x="27.0076%" y="981" width="0.0423%" height="15" fill="rgb(246,185,52)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="27.0076%" y="965" width="0.0423%" height="15" fill="rgb(252,136,11)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="27.0076%" y="949" width="0.0423%" height="15" fill="rgb(219,138,53)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="27.0076%" y="933" width="0.0423%" height="15" fill="rgb(211,51,23)" fg:x="2556" fg:w="4"/><text x="27.2576%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.01%)</title><rect x="27.0499%" y="1093" width="0.0106%" height="15" fill="rgb(247,221,28)" fg:x="2560" fg:w="1"/><text x="27.2999%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="27.0604%" y="1093" width="0.0106%" height="15" fill="rgb(251,222,45)" fg:x="2561" fg:w="1"/><text x="27.3104%" y="1103.50"></text></g><g><title>std::thread::sleep (1 samples, 0.01%)</title><rect x="27.0710%" y="1093" width="0.0106%" height="15" fill="rgb(217,162,53)" fg:x="2562" fg:w="1"/><text x="27.3210%" y="1103.50"></text></g><g><title>unidecode::unidecode (2 samples, 0.02%)</title><rect x="27.0816%" y="1093" width="0.0211%" height="15" fill="rgb(229,93,14)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="27.0816%" y="1077" width="0.0211%" height="15" fill="rgb(209,67,49)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="27.0816%" y="1061" width="0.0211%" height="15" fill="rgb(213,87,29)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="27.0816%" y="1045" width="0.0211%" height="15" fill="rgb(205,151,52)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="27.0816%" y="1029" width="0.0211%" height="15" fill="rgb(253,215,39)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="27.0816%" y="1013" width="0.0211%" height="15" fill="rgb(221,220,41)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="27.0816%" y="997" width="0.0211%" height="15" fill="rgb(218,133,21)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="27.0816%" y="981" width="0.0211%" height="15" fill="rgb(221,193,43)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="27.0816%" y="965" width="0.0211%" height="15" fill="rgb(240,128,52)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (2 samples, 0.02%)</title><rect x="27.0816%" y="949" width="0.0211%" height="15" fill="rgb(253,114,12)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="959.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="27.0816%" y="933" width="0.0211%" height="15" fill="rgb(215,223,47)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="27.0816%" y="917" width="0.0211%" height="15" fill="rgb(248,225,23)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="27.0816%" y="901" width="0.0211%" height="15" fill="rgb(250,108,0)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="27.0816%" y="885" width="0.0211%" height="15" fill="rgb(228,208,7)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="27.0816%" y="869" width="0.0211%" height="15" fill="rgb(244,45,10)" fg:x="2563" fg:w="2"/><text x="27.3316%" y="879.50"></text></g><g><title>[unknown] (2,397 samples, 25.33%)</title><rect x="1.7857%" y="1109" width="25.3276%" height="15" fill="rgb(207,125,25)" fg:x="169" fg:w="2397"/><text x="2.0357%" y="1119.50">[unknown]</text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="27.1027%" y="1093" width="0.0106%" height="15" fill="rgb(210,195,18)" fg:x="2565" fg:w="1"/><text x="27.3527%" y="1103.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.1133%" y="1109" width="0.0106%" height="15" fill="rgb(249,80,12)" fg:x="2566" fg:w="1"/><text x="27.3633%" y="1119.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="27.1238%" y="1109" width="0.0951%" height="15" fill="rgb(221,65,9)" fg:x="2567" fg:w="9"/><text x="27.3738%" y="1119.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="27.2295%" y="1093" width="0.1162%" height="15" fill="rgb(235,49,36)" fg:x="2577" fg:w="11"/><text x="27.4795%" y="1103.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="27.2295%" y="1077" width="0.1162%" height="15" fill="rgb(225,32,20)" fg:x="2577" fg:w="11"/><text x="27.4795%" y="1087.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="27.2295%" y="1061" width="0.1162%" height="15" fill="rgb(215,141,46)" fg:x="2577" fg:w="11"/><text x="27.4795%" y="1071.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="27.2295%" y="1045" width="0.1162%" height="15" fill="rgb(250,160,47)" fg:x="2577" fg:w="11"/><text x="27.4795%" y="1055.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="27.2401%" y="1029" width="0.1057%" height="15" fill="rgb(216,222,40)" fg:x="2578" fg:w="10"/><text x="27.4901%" y="1039.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="27.2401%" y="1013" width="0.1057%" height="15" fill="rgb(234,217,39)" fg:x="2578" fg:w="10"/><text x="27.4901%" y="1023.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="27.2401%" y="997" width="0.1057%" height="15" fill="rgb(207,178,40)" fg:x="2578" fg:w="10"/><text x="27.4901%" y="1007.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="27.2506%" y="981" width="0.0951%" height="15" fill="rgb(221,136,13)" fg:x="2579" fg:w="9"/><text x="27.5006%" y="991.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="27.2612%" y="965" width="0.0845%" height="15" fill="rgb(249,199,10)" fg:x="2580" fg:w="8"/><text x="27.5112%" y="975.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="27.2612%" y="949" width="0.0845%" height="15" fill="rgb(249,222,13)" fg:x="2580" fg:w="8"/><text x="27.5112%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="27.2823%" y="933" width="0.0634%" height="15" fill="rgb(244,185,38)" fg:x="2582" fg:w="6"/><text x="27.5323%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.3140%" y="917" width="0.0317%" height="15" fill="rgb(236,202,9)" fg:x="2585" fg:w="3"/><text x="27.5640%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.3246%" y="901" width="0.0211%" height="15" fill="rgb(250,229,37)" fg:x="2586" fg:w="2"/><text x="27.5746%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.3352%" y="885" width="0.0106%" height="15" fill="rgb(206,174,23)" fg:x="2587" fg:w="1"/><text x="27.5852%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="27.3563%" y="1077" width="0.0634%" height="15" fill="rgb(211,33,43)" fg:x="2589" fg:w="6"/><text x="27.6063%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="27.3563%" y="1061" width="0.0634%" height="15" fill="rgb(245,58,50)" fg:x="2589" fg:w="6"/><text x="27.6063%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="27.3774%" y="1045" width="0.0423%" height="15" fill="rgb(244,68,36)" fg:x="2591" fg:w="4"/><text x="27.6274%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="27.3774%" y="1029" width="0.0423%" height="15" fill="rgb(232,229,15)" fg:x="2591" fg:w="4"/><text x="27.6274%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.3986%" y="1013" width="0.0211%" height="15" fill="rgb(254,30,23)" fg:x="2593" fg:w="2"/><text x="27.6486%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="997" width="0.0106%" height="15" fill="rgb(235,160,14)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="981" width="0.0106%" height="15" fill="rgb(212,155,44)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="965" width="0.0106%" height="15" fill="rgb(226,2,50)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="949" width="0.0106%" height="15" fill="rgb(234,177,6)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="933" width="0.0106%" height="15" fill="rgb(217,24,9)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="917" width="0.0106%" height="15" fill="rgb(220,13,46)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="901" width="0.0106%" height="15" fill="rgb(239,221,27)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="885" width="0.0106%" height="15" fill="rgb(222,198,25)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="869" width="0.0106%" height="15" fill="rgb(211,99,13)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.4091%" y="853" width="0.0106%" height="15" fill="rgb(232,111,31)" fg:x="2594" fg:w="1"/><text x="27.6591%" y="863.50"></text></g><g><title>__malloc_arena_thread_freeres (8 samples, 0.08%)</title><rect x="27.4197%" y="1077" width="0.0845%" height="15" fill="rgb(245,82,37)" fg:x="2595" fg:w="8"/><text x="27.6697%" y="1087.50"></text></g><g><title>tcache_thread_shutdown (8 samples, 0.08%)</title><rect x="27.4197%" y="1061" width="0.0845%" height="15" fill="rgb(227,149,46)" fg:x="2595" fg:w="8"/><text x="27.6697%" y="1071.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="27.4620%" y="1045" width="0.0423%" height="15" fill="rgb(218,36,50)" fg:x="2599" fg:w="4"/><text x="27.7120%" y="1055.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="27.4620%" y="1029" width="0.0423%" height="15" fill="rgb(226,80,48)" fg:x="2599" fg:w="4"/><text x="27.7120%" y="1039.50"></text></g><g><title>advise_stack_range (2 samples, 0.02%)</title><rect x="27.5042%" y="1077" width="0.0211%" height="15" fill="rgb(238,224,15)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="1087.50"></text></g><g><title>__GI_madvise (2 samples, 0.02%)</title><rect x="27.5042%" y="1061" width="0.0211%" height="15" fill="rgb(241,136,10)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="1045" width="0.0211%" height="15" fill="rgb(208,32,45)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="1029" width="0.0211%" height="15" fill="rgb(207,135,9)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="1013" width="0.0211%" height="15" fill="rgb(206,86,44)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="997" width="0.0211%" height="15" fill="rgb(245,177,15)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="981" width="0.0211%" height="15" fill="rgb(206,64,50)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="965" width="0.0211%" height="15" fill="rgb(234,36,40)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="949" width="0.0211%" height="15" fill="rgb(213,64,8)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="933" width="0.0211%" height="15" fill="rgb(210,75,36)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="917" width="0.0211%" height="15" fill="rgb(229,88,21)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="901" width="0.0211%" height="15" fill="rgb(252,204,47)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5042%" y="885" width="0.0211%" height="15" fill="rgb(208,77,27)" fg:x="2603" fg:w="2"/><text x="27.7542%" y="895.50"></text></g><g><title>rseq_register_current_thread (2 samples, 0.02%)</title><rect x="27.5254%" y="1077" width="0.0211%" height="15" fill="rgb(221,76,26)" fg:x="2605" fg:w="2"/><text x="27.7754%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5254%" y="1061" width="0.0211%" height="15" fill="rgb(225,139,18)" fg:x="2605" fg:w="2"/><text x="27.7754%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5254%" y="1045" width="0.0211%" height="15" fill="rgb(230,137,11)" fg:x="2605" fg:w="2"/><text x="27.7754%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5254%" y="1029" width="0.0211%" height="15" fill="rgb(212,28,1)" fg:x="2605" fg:w="2"/><text x="27.7754%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.5254%" y="1013" width="0.0211%" height="15" fill="rgb(248,164,17)" fg:x="2605" fg:w="2"/><text x="27.7754%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="27.5571%" y="869" width="0.0317%" height="15" fill="rgb(222,171,42)" fg:x="2608" fg:w="3"/><text x="27.8071%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.03%)</title><rect x="27.5571%" y="853" width="0.0317%" height="15" fill="rgb(243,84,45)" fg:x="2608" fg:w="3"/><text x="27.8071%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.03%)</title><rect x="27.5571%" y="837" width="0.0317%" height="15" fill="rgb(252,49,23)" fg:x="2608" fg:w="3"/><text x="27.8071%" y="847.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="27.5676%" y="821" width="0.0211%" height="15" fill="rgb(215,19,7)" fg:x="2609" fg:w="2"/><text x="27.8176%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.7473%" y="645" width="0.0106%" height="15" fill="rgb(238,81,41)" fg:x="2626" fg:w="1"/><text x="27.9973%" y="655.50"></text></g><g><title>malloc_consolidate (15 samples, 0.16%)</title><rect x="27.7578%" y="645" width="0.1585%" height="15" fill="rgb(210,199,37)" fg:x="2627" fg:w="15"/><text x="28.0078%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="629" width="0.0211%" height="15" fill="rgb(244,192,49)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="613" width="0.0211%" height="15" fill="rgb(226,211,11)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="597" width="0.0211%" height="15" fill="rgb(236,162,54)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="581" width="0.0211%" height="15" fill="rgb(220,229,9)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="565" width="0.0211%" height="15" fill="rgb(250,87,22)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="549" width="0.0211%" height="15" fill="rgb(239,43,17)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="533" width="0.0211%" height="15" fill="rgb(231,177,25)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.9374%" y="517" width="0.0211%" height="15" fill="rgb(219,179,1)" fg:x="2644" fg:w="2"/><text x="28.1874%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.9480%" y="501" width="0.0106%" height="15" fill="rgb(238,219,53)" fg:x="2645" fg:w="1"/><text x="28.1980%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.9480%" y="485" width="0.0106%" height="15" fill="rgb(232,167,36)" fg:x="2645" fg:w="1"/><text x="28.1980%" y="495.50"></text></g><g><title>sysmalloc (21 samples, 0.22%)</title><rect x="27.9163%" y="645" width="0.2219%" height="15" fill="rgb(244,19,51)" fg:x="2642" fg:w="21"/><text x="28.1663%" y="655.50"></text></g><g><title>grow_heap (17 samples, 0.18%)</title><rect x="27.9586%" y="629" width="0.1796%" height="15" fill="rgb(224,6,22)" fg:x="2646" fg:w="17"/><text x="28.2086%" y="639.50"></text></g><g><title>__GI___mprotect (17 samples, 0.18%)</title><rect x="27.9586%" y="613" width="0.1796%" height="15" fill="rgb(224,145,5)" fg:x="2646" fg:w="17"/><text x="28.2086%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="27.9691%" y="597" width="0.1691%" height="15" fill="rgb(234,130,49)" fg:x="2647" fg:w="16"/><text x="28.2191%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="27.9691%" y="581" width="0.1691%" height="15" fill="rgb(254,6,2)" fg:x="2647" fg:w="16"/><text x="28.2191%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="27.9691%" y="565" width="0.1691%" height="15" fill="rgb(208,96,46)" fg:x="2647" fg:w="16"/><text x="28.2191%" y="575.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="27.9691%" y="549" width="0.1691%" height="15" fill="rgb(239,3,39)" fg:x="2647" fg:w="16"/><text x="28.2191%" y="559.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="27.9797%" y="533" width="0.1585%" height="15" fill="rgb(233,210,1)" fg:x="2648" fg:w="15"/><text x="28.2297%" y="543.50"></text></g><g><title>[unknown] (13 samples, 0.14%)</title><rect x="28.0008%" y="517" width="0.1374%" height="15" fill="rgb(244,137,37)" fg:x="2650" fg:w="13"/><text x="28.2508%" y="527.50"></text></g><g><title>[unknown] (13 samples, 0.14%)</title><rect x="28.0008%" y="501" width="0.1374%" height="15" fill="rgb(240,136,2)" fg:x="2650" fg:w="13"/><text x="28.2508%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="28.0220%" y="485" width="0.1162%" height="15" fill="rgb(239,18,37)" fg:x="2652" fg:w="11"/><text x="28.2720%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="28.0325%" y="469" width="0.1057%" height="15" fill="rgb(218,185,22)" fg:x="2653" fg:w="10"/><text x="28.2825%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="28.0325%" y="453" width="0.1057%" height="15" fill="rgb(225,218,4)" fg:x="2653" fg:w="10"/><text x="28.2825%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="28.0537%" y="437" width="0.0845%" height="15" fill="rgb(230,182,32)" fg:x="2655" fg:w="8"/><text x="28.3037%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="28.0854%" y="421" width="0.0528%" height="15" fill="rgb(242,56,43)" fg:x="2658" fg:w="5"/><text x="28.3354%" y="431.50"></text></g><g><title>_int_malloc (46 samples, 0.49%)</title><rect x="27.6627%" y="661" width="0.4861%" height="15" fill="rgb(233,99,24)" fg:x="2618" fg:w="46"/><text x="27.9127%" y="671.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="28.1382%" y="645" width="0.0106%" height="15" fill="rgb(234,209,42)" fg:x="2663" fg:w="1"/><text x="28.3882%" y="655.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.57%)</title><rect x="27.5888%" y="677" width="0.5706%" height="15" fill="rgb(227,7,12)" fg:x="2611" fg:w="54"/><text x="27.8388%" y="687.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="28.1488%" y="661" width="0.0106%" height="15" fill="rgb(245,203,43)" fg:x="2664" fg:w="1"/><text x="28.3988%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (55 samples, 0.58%)</title><rect x="27.5888%" y="773" width="0.5811%" height="15" fill="rgb(238,205,33)" fg:x="2611" fg:w="55"/><text x="27.8388%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55 samples, 0.58%)</title><rect x="27.5888%" y="757" width="0.5811%" height="15" fill="rgb(231,56,7)" fg:x="2611" fg:w="55"/><text x="27.8388%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (55 samples, 0.58%)</title><rect x="27.5888%" y="741" width="0.5811%" height="15" fill="rgb(244,186,29)" fg:x="2611" fg:w="55"/><text x="27.8388%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.58%)</title><rect x="27.5888%" y="725" width="0.5811%" height="15" fill="rgb(234,111,31)" fg:x="2611" fg:w="55"/><text x="27.8388%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.58%)</title><rect x="27.5888%" y="709" width="0.5811%" height="15" fill="rgb(241,149,10)" fg:x="2611" fg:w="55"/><text x="27.8388%" y="719.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.58%)</title><rect x="27.5888%" y="693" width="0.5811%" height="15" fill="rgb(249,206,44)" fg:x="2611" fg:w="55"/><text x="27.8388%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="28.1593%" y="677" width="0.0106%" height="15" fill="rgb(251,153,30)" fg:x="2665" fg:w="1"/><text x="28.4093%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (68 samples, 0.72%)</title><rect x="27.5888%" y="869" width="0.7185%" height="15" fill="rgb(239,152,38)" fg:x="2611" fg:w="68"/><text x="27.8388%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (68 samples, 0.72%)</title><rect x="27.5888%" y="853" width="0.7185%" height="15" fill="rgb(249,139,47)" fg:x="2611" fg:w="68"/><text x="27.8388%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (68 samples, 0.72%)</title><rect x="27.5888%" y="837" width="0.7185%" height="15" fill="rgb(244,64,35)" fg:x="2611" fg:w="68"/><text x="27.8388%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (68 samples, 0.72%)</title><rect x="27.5888%" y="821" width="0.7185%" height="15" fill="rgb(216,46,15)" fg:x="2611" fg:w="68"/><text x="27.8388%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (68 samples, 0.72%)</title><rect x="27.5888%" y="805" width="0.7185%" height="15" fill="rgb(250,74,19)" fg:x="2611" fg:w="68"/><text x="27.8388%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (68 samples, 0.72%)</title><rect x="27.5888%" y="789" width="0.7185%" height="15" fill="rgb(249,42,33)" fg:x="2611" fg:w="68"/><text x="27.8388%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.14%)</title><rect x="28.1699%" y="773" width="0.1374%" height="15" fill="rgb(242,149,17)" fg:x="2666" fg:w="13"/><text x="28.4199%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.14%)</title><rect x="28.1699%" y="757" width="0.1374%" height="15" fill="rgb(244,29,21)" fg:x="2666" fg:w="13"/><text x="28.4199%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13 samples, 0.14%)</title><rect x="28.1699%" y="741" width="0.1374%" height="15" fill="rgb(220,130,37)" fg:x="2666" fg:w="13"/><text x="28.4199%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.3073%" y="805" width="0.0106%" height="15" fill="rgb(211,67,2)" fg:x="2679" fg:w="1"/><text x="28.5573%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="28.3178%" y="805" width="0.0106%" height="15" fill="rgb(235,68,52)" fg:x="2680" fg:w="1"/><text x="28.5678%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="28.3178%" y="789" width="0.0106%" height="15" fill="rgb(246,142,3)" fg:x="2680" fg:w="1"/><text x="28.5678%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="28.3073%" y="869" width="0.0317%" height="15" fill="rgb(241,25,7)" fg:x="2679" fg:w="3"/><text x="28.5573%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="28.3073%" y="853" width="0.0317%" height="15" fill="rgb(242,119,39)" fg:x="2679" fg:w="3"/><text x="28.5573%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="28.3073%" y="837" width="0.0317%" height="15" fill="rgb(241,98,45)" fg:x="2679" fg:w="3"/><text x="28.5573%" y="847.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="28.3073%" y="821" width="0.0317%" height="15" fill="rgb(254,28,30)" fg:x="2679" fg:w="3"/><text x="28.5573%" y="831.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="28.3284%" y="805" width="0.0106%" height="15" fill="rgb(241,142,54)" fg:x="2681" fg:w="1"/><text x="28.5784%" y="815.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.11%)</title><rect x="28.3495%" y="693" width="0.1057%" height="15" fill="rgb(222,85,15)" fg:x="2683" fg:w="10"/><text x="28.5995%" y="703.50"></text></g><g><title>_int_realloc (7 samples, 0.07%)</title><rect x="28.3812%" y="677" width="0.0740%" height="15" fill="rgb(210,85,47)" fg:x="2686" fg:w="7"/><text x="28.6312%" y="687.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="28.3918%" y="661" width="0.0634%" height="15" fill="rgb(224,206,25)" fg:x="2687" fg:w="6"/><text x="28.6418%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.13%)</title><rect x="28.3390%" y="869" width="0.1268%" height="15" fill="rgb(243,201,19)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.13%)</title><rect x="28.3390%" y="853" width="0.1268%" height="15" fill="rgb(236,59,4)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.13%)</title><rect x="28.3390%" y="837" width="0.1268%" height="15" fill="rgb(254,179,45)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.13%)</title><rect x="28.3390%" y="821" width="0.1268%" height="15" fill="rgb(226,14,10)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.13%)</title><rect x="28.3390%" y="805" width="0.1268%" height="15" fill="rgb(244,27,41)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.13%)</title><rect x="28.3390%" y="789" width="0.1268%" height="15" fill="rgb(235,35,32)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.13%)</title><rect x="28.3390%" y="773" width="0.1268%" height="15" fill="rgb(218,68,31)" fg:x="2682" fg:w="12"/><text x="28.5890%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.12%)</title><rect x="28.3495%" y="757" width="0.1162%" height="15" fill="rgb(207,120,37)" fg:x="2683" fg:w="11"/><text x="28.5995%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.12%)</title><rect x="28.3495%" y="741" width="0.1162%" height="15" fill="rgb(227,98,0)" fg:x="2683" fg:w="11"/><text x="28.5995%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.12%)</title><rect x="28.3495%" y="725" width="0.1162%" height="15" fill="rgb(207,7,3)" fg:x="2683" fg:w="11"/><text x="28.5995%" y="735.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.12%)</title><rect x="28.3495%" y="709" width="0.1162%" height="15" fill="rgb(206,98,19)" fg:x="2683" fg:w="11"/><text x="28.5995%" y="719.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="28.4552%" y="693" width="0.0106%" height="15" fill="rgb(217,5,26)" fg:x="2693" fg:w="1"/><text x="28.7052%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="28.4658%" y="805" width="0.0106%" height="15" fill="rgb(235,190,38)" fg:x="2694" fg:w="1"/><text x="28.7158%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="28.4658%" y="789" width="0.0106%" height="15" fill="rgb(247,86,24)" fg:x="2694" fg:w="1"/><text x="28.7158%" y="799.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="28.4658%" y="773" width="0.0106%" height="15" fill="rgb(205,101,16)" fg:x="2694" fg:w="1"/><text x="28.7158%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="28.4658%" y="757" width="0.0106%" height="15" fill="rgb(246,168,33)" fg:x="2694" fg:w="1"/><text x="28.7158%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="28.4658%" y="741" width="0.0106%" height="15" fill="rgb(231,114,1)" fg:x="2694" fg:w="1"/><text x="28.7158%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="28.4658%" y="725" width="0.0106%" height="15" fill="rgb(207,184,53)" fg:x="2694" fg:w="1"/><text x="28.7158%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="28.4658%" y="853" width="0.0211%" height="15" fill="rgb(224,95,51)" fg:x="2694" fg:w="2"/><text x="28.7158%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="28.4658%" y="837" width="0.0211%" height="15" fill="rgb(212,188,45)" fg:x="2694" fg:w="2"/><text x="28.7158%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="28.4658%" y="821" width="0.0211%" height="15" fill="rgb(223,154,38)" fg:x="2694" fg:w="2"/><text x="28.7158%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.4763%" y="805" width="0.0106%" height="15" fill="rgb(251,22,52)" fg:x="2695" fg:w="1"/><text x="28.7263%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="28.4763%" y="789" width="0.0106%" height="15" fill="rgb(229,209,22)" fg:x="2695" fg:w="1"/><text x="28.7263%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="28.4658%" y="869" width="0.0317%" height="15" fill="rgb(234,138,34)" fg:x="2694" fg:w="3"/><text x="28.7158%" y="879.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="28.4869%" y="853" width="0.0106%" height="15" fill="rgb(212,95,11)" fg:x="2696" fg:w="1"/><text x="28.7369%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="28.5292%" y="837" width="0.0317%" height="15" fill="rgb(240,179,47)" fg:x="2700" fg:w="3"/><text x="28.7792%" y="847.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="28.5397%" y="821" width="0.0211%" height="15" fill="rgb(240,163,11)" fg:x="2701" fg:w="2"/><text x="28.7897%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="28.6348%" y="757" width="0.0106%" height="15" fill="rgb(236,37,12)" fg:x="2710" fg:w="1"/><text x="28.8848%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (82 samples, 0.87%)</title><rect x="28.6454%" y="661" width="0.8664%" height="15" fill="rgb(232,164,16)" fg:x="2711" fg:w="82"/><text x="28.8954%" y="671.50"></text></g><g><title>[unknown] (78 samples, 0.82%)</title><rect x="28.6877%" y="645" width="0.8242%" height="15" fill="rgb(244,205,15)" fg:x="2715" fg:w="78"/><text x="28.9377%" y="655.50"></text></g><g><title>[unknown] (72 samples, 0.76%)</title><rect x="28.7511%" y="629" width="0.7608%" height="15" fill="rgb(223,117,47)" fg:x="2721" fg:w="72"/><text x="29.0011%" y="639.50"></text></g><g><title>[unknown] (72 samples, 0.76%)</title><rect x="28.7511%" y="613" width="0.7608%" height="15" fill="rgb(244,107,35)" fg:x="2721" fg:w="72"/><text x="29.0011%" y="623.50"></text></g><g><title>[unknown] (71 samples, 0.75%)</title><rect x="28.7616%" y="597" width="0.7502%" height="15" fill="rgb(205,140,8)" fg:x="2722" fg:w="71"/><text x="29.0116%" y="607.50"></text></g><g><title>[unknown] (69 samples, 0.73%)</title><rect x="28.7828%" y="581" width="0.7291%" height="15" fill="rgb(228,84,46)" fg:x="2724" fg:w="69"/><text x="29.0328%" y="591.50"></text></g><g><title>[unknown] (68 samples, 0.72%)</title><rect x="28.7933%" y="565" width="0.7185%" height="15" fill="rgb(254,188,9)" fg:x="2725" fg:w="68"/><text x="29.0433%" y="575.50"></text></g><g><title>[unknown] (66 samples, 0.70%)</title><rect x="28.8145%" y="549" width="0.6974%" height="15" fill="rgb(206,112,54)" fg:x="2727" fg:w="66"/><text x="29.0645%" y="559.50"></text></g><g><title>[unknown] (63 samples, 0.67%)</title><rect x="28.8462%" y="533" width="0.6657%" height="15" fill="rgb(216,84,49)" fg:x="2730" fg:w="63"/><text x="29.0962%" y="543.50"></text></g><g><title>[unknown] (59 samples, 0.62%)</title><rect x="28.8884%" y="517" width="0.6234%" height="15" fill="rgb(214,194,35)" fg:x="2734" fg:w="59"/><text x="29.1384%" y="527.50"></text></g><g><title>[unknown] (57 samples, 0.60%)</title><rect x="28.9096%" y="501" width="0.6023%" height="15" fill="rgb(249,28,3)" fg:x="2736" fg:w="57"/><text x="29.1596%" y="511.50"></text></g><g><title>[unknown] (54 samples, 0.57%)</title><rect x="28.9413%" y="485" width="0.5706%" height="15" fill="rgb(222,56,52)" fg:x="2739" fg:w="54"/><text x="29.1913%" y="495.50"></text></g><g><title>[unknown] (53 samples, 0.56%)</title><rect x="28.9518%" y="469" width="0.5600%" height="15" fill="rgb(245,217,50)" fg:x="2740" fg:w="53"/><text x="29.2018%" y="479.50"></text></g><g><title>[unknown] (48 samples, 0.51%)</title><rect x="29.0046%" y="453" width="0.5072%" height="15" fill="rgb(213,201,24)" fg:x="2745" fg:w="48"/><text x="29.2546%" y="463.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="29.0680%" y="437" width="0.4438%" height="15" fill="rgb(248,116,28)" fg:x="2751" fg:w="42"/><text x="29.3180%" y="447.50"></text></g><g><title>[unknown] (39 samples, 0.41%)</title><rect x="29.0997%" y="421" width="0.4121%" height="15" fill="rgb(219,72,43)" fg:x="2754" fg:w="39"/><text x="29.3497%" y="431.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="29.5118%" y="645" width="0.0106%" height="15" fill="rgb(209,138,14)" fg:x="2793" fg:w="1"/><text x="29.7618%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="29.5224%" y="629" width="0.0317%" height="15" fill="rgb(222,18,33)" fg:x="2794" fg:w="3"/><text x="29.7724%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="29.5224%" y="613" width="0.0317%" height="15" fill="rgb(213,199,7)" fg:x="2794" fg:w="3"/><text x="29.7724%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="29.5224%" y="597" width="0.0317%" height="15" fill="rgb(250,110,10)" fg:x="2794" fg:w="3"/><text x="29.7724%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="29.5224%" y="581" width="0.0317%" height="15" fill="rgb(248,123,6)" fg:x="2794" fg:w="3"/><text x="29.7724%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="29.5330%" y="565" width="0.0211%" height="15" fill="rgb(206,91,31)" fg:x="2795" fg:w="2"/><text x="29.7830%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="29.5330%" y="549" width="0.0211%" height="15" fill="rgb(211,154,13)" fg:x="2795" fg:w="2"/><text x="29.7830%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="29.5330%" y="533" width="0.0211%" height="15" fill="rgb(225,148,7)" fg:x="2795" fg:w="2"/><text x="29.7830%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="29.5435%" y="517" width="0.0106%" height="15" fill="rgb(220,160,43)" fg:x="2796" fg:w="1"/><text x="29.7935%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="29.5435%" y="501" width="0.0106%" height="15" fill="rgb(213,52,39)" fg:x="2796" fg:w="1"/><text x="29.7935%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="29.5435%" y="485" width="0.0106%" height="15" fill="rgb(243,137,7)" fg:x="2796" fg:w="1"/><text x="29.7935%" y="495.50"></text></g><g><title>__GI___libc_realloc (90 samples, 0.95%)</title><rect x="28.6454%" y="693" width="0.9510%" height="15" fill="rgb(230,79,13)" fg:x="2711" fg:w="90"/><text x="28.8954%" y="703.50"></text></g><g><title>_int_realloc (90 samples, 0.95%)</title><rect x="28.6454%" y="677" width="0.9510%" height="15" fill="rgb(247,105,23)" fg:x="2711" fg:w="90"/><text x="28.8954%" y="687.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="29.5118%" y="661" width="0.0845%" height="15" fill="rgb(223,179,41)" fg:x="2793" fg:w="8"/><text x="29.7618%" y="671.50"></text></g><g><title>sysmalloc (7 samples, 0.07%)</title><rect x="29.5224%" y="645" width="0.0740%" height="15" fill="rgb(218,9,34)" fg:x="2794" fg:w="7"/><text x="29.7724%" y="655.50"></text></g><g><title>grow_heap (4 samples, 0.04%)</title><rect x="29.5541%" y="629" width="0.0423%" height="15" fill="rgb(222,106,8)" fg:x="2797" fg:w="4"/><text x="29.8041%" y="639.50"></text></g><g><title>__GI___mprotect (4 samples, 0.04%)</title><rect x="29.5541%" y="613" width="0.0423%" height="15" fill="rgb(211,220,0)" fg:x="2797" fg:w="4"/><text x="29.8041%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="29.5541%" y="597" width="0.0423%" height="15" fill="rgb(229,52,16)" fg:x="2797" fg:w="4"/><text x="29.8041%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="29.5541%" y="581" width="0.0423%" height="15" fill="rgb(212,155,18)" fg:x="2797" fg:w="4"/><text x="29.8041%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="29.5541%" y="565" width="0.0423%" height="15" fill="rgb(242,21,14)" fg:x="2797" fg:w="4"/><text x="29.8041%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="29.5541%" y="549" width="0.0423%" height="15" fill="rgb(222,19,48)" fg:x="2797" fg:w="4"/><text x="29.8041%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="29.5647%" y="533" width="0.0317%" height="15" fill="rgb(232,45,27)" fg:x="2798" fg:w="3"/><text x="29.8147%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="29.5752%" y="517" width="0.0211%" height="15" fill="rgb(249,103,42)" fg:x="2799" fg:w="2"/><text x="29.8252%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="29.5752%" y="501" width="0.0211%" height="15" fill="rgb(246,81,33)" fg:x="2799" fg:w="2"/><text x="29.8252%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="29.5858%" y="485" width="0.0106%" height="15" fill="rgb(252,33,42)" fg:x="2800" fg:w="1"/><text x="29.8358%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (92 samples, 0.97%)</title><rect x="28.6348%" y="789" width="0.9721%" height="15" fill="rgb(209,212,41)" fg:x="2710" fg:w="92"/><text x="28.8848%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (92 samples, 0.97%)</title><rect x="28.6348%" y="773" width="0.9721%" height="15" fill="rgb(207,154,6)" fg:x="2710" fg:w="92"/><text x="28.8848%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (91 samples, 0.96%)</title><rect x="28.6454%" y="757" width="0.9615%" height="15" fill="rgb(223,64,47)" fg:x="2711" fg:w="91"/><text x="28.8954%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (91 samples, 0.96%)</title><rect x="28.6454%" y="741" width="0.9615%" height="15" fill="rgb(211,161,38)" fg:x="2711" fg:w="91"/><text x="28.8954%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (91 samples, 0.96%)</title><rect x="28.6454%" y="725" width="0.9615%" height="15" fill="rgb(219,138,40)" fg:x="2711" fg:w="91"/><text x="28.8954%" y="735.50"></text></g><g><title>alloc::alloc::realloc (91 samples, 0.96%)</title><rect x="28.6454%" y="709" width="0.9615%" height="15" fill="rgb(241,228,46)" fg:x="2711" fg:w="91"/><text x="28.8954%" y="719.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="29.5964%" y="693" width="0.0106%" height="15" fill="rgb(223,209,38)" fg:x="2801" fg:w="1"/><text x="29.8464%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="29.5964%" y="677" width="0.0106%" height="15" fill="rgb(236,164,45)" fg:x="2801" fg:w="1"/><text x="29.8464%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (226 samples, 2.39%)</title><rect x="28.5609%" y="837" width="2.3880%" height="15" fill="rgb(231,15,5)" fg:x="2703" fg:w="226"/><text x="28.8109%" y="847.50">co..</text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (226 samples, 2.39%)</title><rect x="28.5609%" y="821" width="2.3880%" height="15" fill="rgb(252,35,15)" fg:x="2703" fg:w="226"/><text x="28.8109%" y="831.50">pa..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (226 samples, 2.39%)</title><rect x="28.5609%" y="805" width="2.3880%" height="15" fill="rgb(248,181,18)" fg:x="2703" fg:w="226"/><text x="28.8109%" y="815.50">al..</text></g><g><title>core::ptr::write (127 samples, 1.34%)</title><rect x="29.6069%" y="789" width="1.3419%" height="15" fill="rgb(233,39,42)" fg:x="2802" fg:w="127"/><text x="29.8569%" y="799.50"></text></g><g><title>[unknown] (102 samples, 1.08%)</title><rect x="29.8711%" y="773" width="1.0778%" height="15" fill="rgb(238,110,33)" fg:x="2827" fg:w="102"/><text x="30.1211%" y="783.50"></text></g><g><title>[unknown] (99 samples, 1.05%)</title><rect x="29.9028%" y="757" width="1.0461%" height="15" fill="rgb(233,195,10)" fg:x="2830" fg:w="99"/><text x="30.1528%" y="767.50"></text></g><g><title>[unknown] (99 samples, 1.05%)</title><rect x="29.9028%" y="741" width="1.0461%" height="15" fill="rgb(254,105,3)" fg:x="2830" fg:w="99"/><text x="30.1528%" y="751.50"></text></g><g><title>[unknown] (98 samples, 1.04%)</title><rect x="29.9134%" y="725" width="1.0355%" height="15" fill="rgb(221,225,9)" fg:x="2831" fg:w="98"/><text x="30.1634%" y="735.50"></text></g><g><title>[unknown] (97 samples, 1.02%)</title><rect x="29.9239%" y="709" width="1.0249%" height="15" fill="rgb(224,227,45)" fg:x="2832" fg:w="97"/><text x="30.1739%" y="719.50"></text></g><g><title>[unknown] (97 samples, 1.02%)</title><rect x="29.9239%" y="693" width="1.0249%" height="15" fill="rgb(229,198,43)" fg:x="2832" fg:w="97"/><text x="30.1739%" y="703.50"></text></g><g><title>[unknown] (97 samples, 1.02%)</title><rect x="29.9239%" y="677" width="1.0249%" height="15" fill="rgb(206,209,35)" fg:x="2832" fg:w="97"/><text x="30.1739%" y="687.50"></text></g><g><title>[unknown] (95 samples, 1.00%)</title><rect x="29.9451%" y="661" width="1.0038%" height="15" fill="rgb(245,195,53)" fg:x="2834" fg:w="95"/><text x="30.1951%" y="671.50"></text></g><g><title>[unknown] (94 samples, 0.99%)</title><rect x="29.9556%" y="645" width="0.9932%" height="15" fill="rgb(240,92,26)" fg:x="2835" fg:w="94"/><text x="30.2056%" y="655.50"></text></g><g><title>[unknown] (89 samples, 0.94%)</title><rect x="30.0085%" y="629" width="0.9404%" height="15" fill="rgb(207,40,23)" fg:x="2840" fg:w="89"/><text x="30.2585%" y="639.50"></text></g><g><title>[unknown] (88 samples, 0.93%)</title><rect x="30.0190%" y="613" width="0.9298%" height="15" fill="rgb(223,111,35)" fg:x="2841" fg:w="88"/><text x="30.2690%" y="623.50"></text></g><g><title>[unknown] (87 samples, 0.92%)</title><rect x="30.0296%" y="597" width="0.9193%" height="15" fill="rgb(229,147,28)" fg:x="2842" fg:w="87"/><text x="30.2796%" y="607.50"></text></g><g><title>[unknown] (86 samples, 0.91%)</title><rect x="30.0402%" y="581" width="0.9087%" height="15" fill="rgb(211,29,28)" fg:x="2843" fg:w="86"/><text x="30.2902%" y="591.50"></text></g><g><title>[unknown] (83 samples, 0.88%)</title><rect x="30.0719%" y="565" width="0.8770%" height="15" fill="rgb(228,72,33)" fg:x="2846" fg:w="83"/><text x="30.3219%" y="575.50"></text></g><g><title>[unknown] (76 samples, 0.80%)</title><rect x="30.1458%" y="549" width="0.8030%" height="15" fill="rgb(205,214,31)" fg:x="2853" fg:w="76"/><text x="30.3958%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="30.8855%" y="533" width="0.0634%" height="15" fill="rgb(224,111,15)" fg:x="2923" fg:w="6"/><text x="31.1355%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="30.8855%" y="517" width="0.0634%" height="15" fill="rgb(253,21,26)" fg:x="2923" fg:w="6"/><text x="31.1355%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="30.8855%" y="501" width="0.0634%" height="15" fill="rgb(245,139,43)" fg:x="2923" fg:w="6"/><text x="31.1355%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="30.8960%" y="485" width="0.0528%" height="15" fill="rgb(252,170,7)" fg:x="2924" fg:w="5"/><text x="31.1460%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (233 samples, 2.46%)</title><rect x="28.4975%" y="869" width="2.4620%" height="15" fill="rgb(231,118,14)" fg:x="2697" fg:w="233"/><text x="28.7475%" y="879.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (233 samples, 2.46%)</title><rect x="28.4975%" y="853" width="2.4620%" height="15" fill="rgb(238,83,0)" fg:x="2697" fg:w="233"/><text x="28.7475%" y="863.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="30.9489%" y="837" width="0.0106%" height="15" fill="rgb(221,39,39)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.9489%" y="821" width="0.0106%" height="15" fill="rgb(222,119,46)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="30.9489%" y="805" width="0.0106%" height="15" fill="rgb(222,165,49)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.9489%" y="789" width="0.0106%" height="15" fill="rgb(219,113,52)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="30.9489%" y="773" width="0.0106%" height="15" fill="rgb(214,7,15)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.9489%" y="757" width="0.0106%" height="15" fill="rgb(235,32,4)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="30.9489%" y="741" width="0.0106%" height="15" fill="rgb(238,90,54)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="30.9489%" y="725" width="0.0106%" height="15" fill="rgb(213,208,19)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.9489%" y="709" width="0.0106%" height="15" fill="rgb(233,156,4)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.9489%" y="693" width="0.0106%" height="15" fill="rgb(207,194,5)" fg:x="2929" fg:w="1"/><text x="31.1989%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (22 samples, 0.23%)</title><rect x="31.4877%" y="821" width="0.2325%" height="15" fill="rgb(206,111,30)" fg:x="2980" fg:w="22"/><text x="31.7377%" y="831.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="31.6991%" y="805" width="0.0211%" height="15" fill="rgb(243,70,54)" fg:x="3000" fg:w="2"/><text x="31.9491%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.25%)</title><rect x="31.4877%" y="853" width="0.2536%" height="15" fill="rgb(242,28,8)" fg:x="2980" fg:w="24"/><text x="31.7377%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (24 samples, 0.25%)</title><rect x="31.4877%" y="837" width="0.2536%" height="15" fill="rgb(219,106,18)" fg:x="2980" fg:w="24"/><text x="31.7377%" y="847.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="31.7202%" y="821" width="0.0211%" height="15" fill="rgb(244,222,10)" fg:x="3002" fg:w="2"/><text x="31.9702%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="31.7202%" y="805" width="0.0211%" height="15" fill="rgb(236,179,52)" fg:x="3002" fg:w="2"/><text x="31.9702%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="31.7202%" y="789" width="0.0211%" height="15" fill="rgb(213,23,39)" fg:x="3002" fg:w="2"/><text x="31.9702%" y="799.50"></text></g><g><title>malloc_consolidate (5 samples, 0.05%)</title><rect x="31.8998%" y="629" width="0.0528%" height="15" fill="rgb(238,48,10)" fg:x="3019" fg:w="5"/><text x="32.1498%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="613" width="0.0106%" height="15" fill="rgb(251,196,23)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="597" width="0.0106%" height="15" fill="rgb(250,152,24)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="581" width="0.0106%" height="15" fill="rgb(209,150,17)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="565" width="0.0106%" height="15" fill="rgb(234,202,34)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="549" width="0.0106%" height="15" fill="rgb(253,148,53)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="533" width="0.0106%" height="15" fill="rgb(218,129,16)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="517" width="0.0106%" height="15" fill="rgb(216,85,19)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="501" width="0.0106%" height="15" fill="rgb(235,228,7)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="485" width="0.0106%" height="15" fill="rgb(245,175,0)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="469" width="0.0106%" height="15" fill="rgb(208,168,36)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="453" width="0.0106%" height="15" fill="rgb(246,171,24)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9632%" y="437" width="0.0106%" height="15" fill="rgb(215,142,24)" fg:x="3025" fg:w="1"/><text x="32.2132%" y="447.50"></text></g><g><title>sysmalloc (14 samples, 0.15%)</title><rect x="31.9527%" y="629" width="0.1479%" height="15" fill="rgb(250,187,7)" fg:x="3024" fg:w="14"/><text x="32.2027%" y="639.50"></text></g><g><title>grow_heap (12 samples, 0.13%)</title><rect x="31.9738%" y="613" width="0.1268%" height="15" fill="rgb(228,66,33)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="623.50"></text></g><g><title>__GI___mprotect (12 samples, 0.13%)</title><rect x="31.9738%" y="597" width="0.1268%" height="15" fill="rgb(234,215,21)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="607.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="581" width="0.1268%" height="15" fill="rgb(222,191,20)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="591.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="565" width="0.1268%" height="15" fill="rgb(245,79,54)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="575.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="549" width="0.1268%" height="15" fill="rgb(240,10,37)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="533" width="0.1268%" height="15" fill="rgb(214,192,32)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="517" width="0.1268%" height="15" fill="rgb(209,36,54)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="501" width="0.1268%" height="15" fill="rgb(220,10,11)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="485" width="0.1268%" height="15" fill="rgb(221,106,17)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="469" width="0.1268%" height="15" fill="rgb(251,142,44)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="453" width="0.1268%" height="15" fill="rgb(238,13,15)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="437" width="0.1268%" height="15" fill="rgb(208,107,27)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="31.9738%" y="421" width="0.1268%" height="15" fill="rgb(205,136,37)" fg:x="3026" fg:w="12"/><text x="32.2238%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="31.9844%" y="405" width="0.1162%" height="15" fill="rgb(250,205,27)" fg:x="3027" fg:w="11"/><text x="32.2344%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="31.9949%" y="389" width="0.1057%" height="15" fill="rgb(210,80,43)" fg:x="3028" fg:w="10"/><text x="32.2449%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="31.9949%" y="373" width="0.1057%" height="15" fill="rgb(247,160,36)" fg:x="3028" fg:w="10"/><text x="32.2449%" y="383.50"></text></g><g><title>_int_malloc (24 samples, 0.25%)</title><rect x="31.8576%" y="645" width="0.2536%" height="15" fill="rgb(234,13,49)" fg:x="3015" fg:w="24"/><text x="32.1076%" y="655.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="32.1006%" y="629" width="0.0106%" height="15" fill="rgb(234,122,0)" fg:x="3038" fg:w="1"/><text x="32.3506%" y="639.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="32.1112%" y="645" width="0.0211%" height="15" fill="rgb(207,146,38)" fg:x="3039" fg:w="2"/><text x="32.3612%" y="655.50"></text></g><g><title>__GI___libc_malloc (36 samples, 0.38%)</title><rect x="31.8047%" y="661" width="0.3804%" height="15" fill="rgb(207,177,25)" fg:x="3010" fg:w="36"/><text x="32.0547%" y="671.50"></text></g><g><title>tcache_get (5 samples, 0.05%)</title><rect x="32.1323%" y="645" width="0.0528%" height="15" fill="rgb(211,178,42)" fg:x="3041" fg:w="5"/><text x="32.3823%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 0.43%)</title><rect x="31.7836%" y="757" width="0.4332%" height="15" fill="rgb(230,69,54)" fg:x="3008" fg:w="41"/><text x="32.0336%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (41 samples, 0.43%)</title><rect x="31.7836%" y="741" width="0.4332%" height="15" fill="rgb(214,135,41)" fg:x="3008" fg:w="41"/><text x="32.0336%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (41 samples, 0.43%)</title><rect x="31.7836%" y="725" width="0.4332%" height="15" fill="rgb(237,67,25)" fg:x="3008" fg:w="41"/><text x="32.0336%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.41%)</title><rect x="31.8047%" y="709" width="0.4121%" height="15" fill="rgb(222,189,50)" fg:x="3010" fg:w="39"/><text x="32.0547%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.41%)</title><rect x="31.8047%" y="693" width="0.4121%" height="15" fill="rgb(245,148,34)" fg:x="3010" fg:w="39"/><text x="32.0547%" y="703.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.41%)</title><rect x="31.8047%" y="677" width="0.4121%" height="15" fill="rgb(222,29,6)" fg:x="3010" fg:w="39"/><text x="32.0547%" y="687.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="32.1851%" y="661" width="0.0317%" height="15" fill="rgb(221,189,43)" fg:x="3046" fg:w="3"/><text x="32.4351%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.03%)</title><rect x="32.1851%" y="645" width="0.0317%" height="15" fill="rgb(207,36,27)" fg:x="3046" fg:w="3"/><text x="32.4351%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (64 samples, 0.68%)</title><rect x="31.7413%" y="853" width="0.6762%" height="15" fill="rgb(217,90,24)" fg:x="3004" fg:w="64"/><text x="31.9913%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (60 samples, 0.63%)</title><rect x="31.7836%" y="837" width="0.6340%" height="15" fill="rgb(224,66,35)" fg:x="3008" fg:w="60"/><text x="32.0336%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.63%)</title><rect x="31.7836%" y="821" width="0.6340%" height="15" fill="rgb(221,13,50)" fg:x="3008" fg:w="60"/><text x="32.0336%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60 samples, 0.63%)</title><rect x="31.7836%" y="805" width="0.6340%" height="15" fill="rgb(236,68,49)" fg:x="3008" fg:w="60"/><text x="32.0336%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (60 samples, 0.63%)</title><rect x="31.7836%" y="789" width="0.6340%" height="15" fill="rgb(229,146,28)" fg:x="3008" fg:w="60"/><text x="32.0336%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (60 samples, 0.63%)</title><rect x="31.7836%" y="773" width="0.6340%" height="15" fill="rgb(225,31,38)" fg:x="3008" fg:w="60"/><text x="32.0336%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.20%)</title><rect x="32.2168%" y="757" width="0.2008%" height="15" fill="rgb(250,208,3)" fg:x="3049" fg:w="19"/><text x="32.4668%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.20%)</title><rect x="32.2168%" y="741" width="0.2008%" height="15" fill="rgb(246,54,23)" fg:x="3049" fg:w="19"/><text x="32.4668%" y="751.50"></text></g><g><title>__memcpy_evex_unaligned_erms (19 samples, 0.20%)</title><rect x="32.2168%" y="725" width="0.2008%" height="15" fill="rgb(243,76,11)" fg:x="3049" fg:w="19"/><text x="32.4668%" y="735.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="32.4704%" y="773" width="0.0106%" height="15" fill="rgb(245,21,50)" fg:x="3073" fg:w="1"/><text x="32.7204%" y="783.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.07%)</title><rect x="32.4281%" y="789" width="0.0740%" height="15" fill="rgb(228,9,43)" fg:x="3069" fg:w="7"/><text x="32.6781%" y="799.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="32.4810%" y="773" width="0.0211%" height="15" fill="rgb(208,100,47)" fg:x="3074" fg:w="2"/><text x="32.7310%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.10%)</title><rect x="32.4176%" y="853" width="0.0951%" height="15" fill="rgb(232,26,8)" fg:x="3068" fg:w="9"/><text x="32.6676%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.10%)</title><rect x="32.4176%" y="837" width="0.0951%" height="15" fill="rgb(216,166,38)" fg:x="3068" fg:w="9"/><text x="32.6676%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="32.4176%" y="821" width="0.0951%" height="15" fill="rgb(251,202,51)" fg:x="3068" fg:w="9"/><text x="32.6676%" y="831.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="32.4176%" y="805" width="0.0951%" height="15" fill="rgb(254,216,34)" fg:x="3068" fg:w="9"/><text x="32.6676%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="32.5021%" y="789" width="0.0106%" height="15" fill="rgb(251,32,27)" fg:x="3076" fg:w="1"/><text x="32.7521%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="32.5021%" y="773" width="0.0106%" height="15" fill="rgb(208,127,28)" fg:x="3076" fg:w="1"/><text x="32.7521%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="32.5232%" y="741" width="0.0211%" height="15" fill="rgb(224,137,22)" fg:x="3078" fg:w="2"/><text x="32.7732%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="32.5338%" y="725" width="0.0106%" height="15" fill="rgb(254,70,32)" fg:x="3079" fg:w="1"/><text x="32.7838%" y="735.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="32.7980%" y="645" width="0.0528%" height="15" fill="rgb(229,75,37)" fg:x="3104" fg:w="5"/><text x="33.0480%" y="655.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="32.8508%" y="645" width="0.0528%" height="15" fill="rgb(252,64,23)" fg:x="3109" fg:w="5"/><text x="33.1008%" y="655.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="33.2840%" y="629" width="0.0106%" height="15" fill="rgb(232,162,48)" fg:x="3150" fg:w="1"/><text x="33.5340%" y="639.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="33.2946%" y="629" width="0.0106%" height="15" fill="rgb(246,160,12)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="613" width="0.0106%" height="15" fill="rgb(247,166,0)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="597" width="0.0106%" height="15" fill="rgb(249,219,21)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="581" width="0.0106%" height="15" fill="rgb(205,209,3)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="565" width="0.0106%" height="15" fill="rgb(243,44,1)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="549" width="0.0106%" height="15" fill="rgb(206,159,16)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="533" width="0.0106%" height="15" fill="rgb(244,77,30)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="517" width="0.0106%" height="15" fill="rgb(218,69,12)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="501" width="0.0106%" height="15" fill="rgb(212,87,7)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2946%" y="485" width="0.0106%" height="15" fill="rgb(245,114,25)" fg:x="3151" fg:w="1"/><text x="33.5446%" y="495.50"></text></g><g><title>_int_realloc (55 samples, 0.58%)</title><rect x="32.7346%" y="661" width="0.5811%" height="15" fill="rgb(210,61,42)" fg:x="3098" fg:w="55"/><text x="32.9846%" y="671.50"></text></g><g><title>_int_malloc (39 samples, 0.41%)</title><rect x="32.9036%" y="645" width="0.4121%" height="15" fill="rgb(211,52,33)" fg:x="3114" fg:w="39"/><text x="33.1536%" y="655.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="33.3052%" y="629" width="0.0106%" height="15" fill="rgb(234,58,33)" fg:x="3152" fg:w="1"/><text x="33.5552%" y="639.50"></text></g><g><title>__GI___libc_realloc (73 samples, 0.77%)</title><rect x="32.5655%" y="677" width="0.7713%" height="15" fill="rgb(220,115,36)" fg:x="3082" fg:w="73"/><text x="32.8155%" y="687.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="33.3157%" y="661" width="0.0211%" height="15" fill="rgb(243,153,54)" fg:x="3153" fg:w="2"/><text x="33.5657%" y="671.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="33.3157%" y="645" width="0.0211%" height="15" fill="rgb(251,47,18)" fg:x="3153" fg:w="2"/><text x="33.5657%" y="655.50"></text></g><g><title>heap_for_ptr (2 samples, 0.02%)</title><rect x="33.3157%" y="629" width="0.0211%" height="15" fill="rgb(242,102,42)" fg:x="3153" fg:w="2"/><text x="33.5657%" y="639.50"></text></g><g><title>__rdl_realloc (4 samples, 0.04%)</title><rect x="33.3369%" y="677" width="0.0423%" height="15" fill="rgb(234,31,38)" fg:x="3155" fg:w="4"/><text x="33.5869%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.04%)</title><rect x="33.3369%" y="661" width="0.0423%" height="15" fill="rgb(221,117,51)" fg:x="3155" fg:w="4"/><text x="33.5869%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (79 samples, 0.83%)</title><rect x="32.5655%" y="725" width="0.8347%" height="15" fill="rgb(212,20,18)" fg:x="3082" fg:w="79"/><text x="32.8155%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (79 samples, 0.83%)</title><rect x="32.5655%" y="709" width="0.8347%" height="15" fill="rgb(245,133,36)" fg:x="3082" fg:w="79"/><text x="32.8155%" y="719.50"></text></g><g><title>alloc::alloc::realloc (79 samples, 0.83%)</title><rect x="32.5655%" y="693" width="0.8347%" height="15" fill="rgb(212,6,19)" fg:x="3082" fg:w="79"/><text x="32.8155%" y="703.50"></text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="33.3791%" y="677" width="0.0211%" height="15" fill="rgb(218,1,36)" fg:x="3159" fg:w="2"/><text x="33.6291%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 samples, 0.87%)</title><rect x="32.5444%" y="741" width="0.8664%" height="15" fill="rgb(246,84,54)" fg:x="3080" fg:w="82"/><text x="32.7944%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="33.4003%" y="725" width="0.0106%" height="15" fill="rgb(242,110,6)" fg:x="3161" fg:w="1"/><text x="33.6503%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.03%)</title><rect x="33.4108%" y="741" width="0.0317%" height="15" fill="rgb(214,47,5)" fg:x="3162" fg:w="3"/><text x="33.6608%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.03%)</title><rect x="33.4108%" y="725" width="0.0317%" height="15" fill="rgb(218,159,25)" fg:x="3162" fg:w="3"/><text x="33.6608%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (89 samples, 0.94%)</title><rect x="32.5127%" y="805" width="0.9404%" height="15" fill="rgb(215,211,28)" fg:x="3077" fg:w="89"/><text x="32.7627%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (89 samples, 0.94%)</title><rect x="32.5127%" y="789" width="0.9404%" height="15" fill="rgb(238,59,32)" fg:x="3077" fg:w="89"/><text x="32.7627%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (89 samples, 0.94%)</title><rect x="32.5127%" y="773" width="0.9404%" height="15" fill="rgb(226,82,3)" fg:x="3077" fg:w="89"/><text x="32.7627%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (89 samples, 0.94%)</title><rect x="32.5127%" y="757" width="0.9404%" height="15" fill="rgb(240,164,32)" fg:x="3077" fg:w="89"/><text x="32.7627%" y="767.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="33.4425%" y="741" width="0.0106%" height="15" fill="rgb(232,46,7)" fg:x="3165" fg:w="1"/><text x="33.6925%" y="751.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="33.4425%" y="725" width="0.0106%" height="15" fill="rgb(229,129,53)" fg:x="3165" fg:w="1"/><text x="33.6925%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="33.4425%" y="709" width="0.0106%" height="15" fill="rgb(234,188,29)" fg:x="3165" fg:w="1"/><text x="33.6925%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (93 samples, 0.98%)</title><rect x="32.5127%" y="853" width="0.9827%" height="15" fill="rgb(246,141,4)" fg:x="3077" fg:w="93"/><text x="32.7627%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (93 samples, 0.98%)</title><rect x="32.5127%" y="837" width="0.9827%" height="15" fill="rgb(229,23,39)" fg:x="3077" fg:w="93"/><text x="32.7627%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (93 samples, 0.98%)</title><rect x="32.5127%" y="821" width="0.9827%" height="15" fill="rgb(206,12,3)" fg:x="3077" fg:w="93"/><text x="32.7627%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="33.4531%" y="805" width="0.0423%" height="15" fill="rgb(252,226,20)" fg:x="3166" fg:w="4"/><text x="33.7031%" y="815.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.04%)</title><rect x="33.4531%" y="789" width="0.0423%" height="15" fill="rgb(216,123,35)" fg:x="3166" fg:w="4"/><text x="33.7031%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="33.4954%" y="837" width="0.0106%" height="15" fill="rgb(212,68,40)" fg:x="3170" fg:w="1"/><text x="33.7454%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="33.4954%" y="821" width="0.0106%" height="15" fill="rgb(254,125,32)" fg:x="3170" fg:w="1"/><text x="33.7454%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="33.4954%" y="805" width="0.0106%" height="15" fill="rgb(253,97,22)" fg:x="3170" fg:w="1"/><text x="33.7454%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.4954%" y="789" width="0.0106%" height="15" fill="rgb(241,101,14)" fg:x="3170" fg:w="1"/><text x="33.7454%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="33.4954%" y="853" width="0.0211%" height="15" fill="rgb(238,103,29)" fg:x="3170" fg:w="2"/><text x="33.7454%" y="863.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="33.5059%" y="837" width="0.0106%" height="15" fill="rgb(233,195,47)" fg:x="3171" fg:w="1"/><text x="33.7559%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="33.5165%" y="853" width="0.0211%" height="15" fill="rgb(246,218,30)" fg:x="3172" fg:w="2"/><text x="33.7665%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (27 samples, 0.29%)</title><rect x="33.5376%" y="853" width="0.2853%" height="15" fill="rgb(219,145,47)" fg:x="3174" fg:w="27"/><text x="33.7876%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="33.8757%" y="821" width="0.0317%" height="15" fill="rgb(243,12,26)" fg:x="3206" fg:w="3"/><text x="34.1257%" y="831.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="33.8969%" y="805" width="0.0106%" height="15" fill="rgb(214,87,16)" fg:x="3208" fg:w="1"/><text x="34.1469%" y="815.50"></text></g><g><title>__memcpy_evex_unaligned_erms (25 samples, 0.26%)</title><rect x="34.0131%" y="645" width="0.2642%" height="15" fill="rgb(208,99,42)" fg:x="3219" fg:w="25"/><text x="34.2631%" y="655.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="34.0554%" y="629" width="0.2219%" height="15" fill="rgb(253,99,2)" fg:x="3223" fg:w="21"/><text x="34.3054%" y="639.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="34.0554%" y="613" width="0.2219%" height="15" fill="rgb(220,168,23)" fg:x="3223" fg:w="21"/><text x="34.3054%" y="623.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="34.0554%" y="597" width="0.2219%" height="15" fill="rgb(242,38,24)" fg:x="3223" fg:w="21"/><text x="34.3054%" y="607.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="34.0554%" y="581" width="0.2219%" height="15" fill="rgb(225,182,9)" fg:x="3223" fg:w="21"/><text x="34.3054%" y="591.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="34.0554%" y="565" width="0.2219%" height="15" fill="rgb(243,178,37)" fg:x="3223" fg:w="21"/><text x="34.3054%" y="575.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="34.0659%" y="549" width="0.2113%" height="15" fill="rgb(232,139,19)" fg:x="3224" fg:w="20"/><text x="34.3159%" y="559.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="34.0659%" y="533" width="0.2113%" height="15" fill="rgb(225,201,24)" fg:x="3224" fg:w="20"/><text x="34.3159%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="34.0765%" y="517" width="0.2008%" height="15" fill="rgb(221,47,46)" fg:x="3225" fg:w="19"/><text x="34.3265%" y="527.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="34.0765%" y="501" width="0.2008%" height="15" fill="rgb(249,23,13)" fg:x="3225" fg:w="19"/><text x="34.3265%" y="511.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="34.1082%" y="485" width="0.1691%" height="15" fill="rgb(219,9,5)" fg:x="3228" fg:w="16"/><text x="34.3582%" y="495.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="34.1188%" y="469" width="0.1585%" height="15" fill="rgb(254,171,16)" fg:x="3229" fg:w="15"/><text x="34.3688%" y="479.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="34.1188%" y="453" width="0.1585%" height="15" fill="rgb(230,171,20)" fg:x="3229" fg:w="15"/><text x="34.3688%" y="463.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="34.1188%" y="437" width="0.1585%" height="15" fill="rgb(210,71,41)" fg:x="3229" fg:w="15"/><text x="34.3688%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="34.1188%" y="421" width="0.1585%" height="15" fill="rgb(206,173,20)" fg:x="3229" fg:w="15"/><text x="34.3688%" y="431.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="34.1188%" y="405" width="0.1585%" height="15" fill="rgb(233,88,34)" fg:x="3229" fg:w="15"/><text x="34.3688%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.2244%" y="389" width="0.0528%" height="15" fill="rgb(223,209,46)" fg:x="3239" fg:w="5"/><text x="34.4744%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.2244%" y="373" width="0.0528%" height="15" fill="rgb(250,43,18)" fg:x="3239" fg:w="5"/><text x="34.4744%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.2244%" y="357" width="0.0528%" height="15" fill="rgb(208,13,10)" fg:x="3239" fg:w="5"/><text x="34.4744%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.2244%" y="341" width="0.0528%" height="15" fill="rgb(212,200,36)" fg:x="3239" fg:w="5"/><text x="34.4744%" y="351.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="34.2773%" y="645" width="0.0211%" height="15" fill="rgb(225,90,30)" fg:x="3244" fg:w="2"/><text x="34.5273%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="629" width="0.0106%" height="15" fill="rgb(236,182,39)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="613" width="0.0106%" height="15" fill="rgb(212,144,35)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="597" width="0.0106%" height="15" fill="rgb(228,63,44)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="581" width="0.0106%" height="15" fill="rgb(228,109,6)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="565" width="0.0106%" height="15" fill="rgb(238,117,24)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="549" width="0.0106%" height="15" fill="rgb(242,26,26)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="533" width="0.0106%" height="15" fill="rgb(221,92,48)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="517" width="0.0106%" height="15" fill="rgb(209,209,32)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="501" width="0.0106%" height="15" fill="rgb(221,70,22)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="485" width="0.0106%" height="15" fill="rgb(248,145,5)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3935%" y="469" width="0.0106%" height="15" fill="rgb(226,116,26)" fg:x="3255" fg:w="1"/><text x="34.6435%" y="479.50"></text></g><g><title>malloc_consolidate (3 samples, 0.03%)</title><rect x="34.4041%" y="629" width="0.0317%" height="15" fill="rgb(244,5,17)" fg:x="3256" fg:w="3"/><text x="34.6541%" y="639.50"></text></g><g><title>[unknown] (66 samples, 0.70%)</title><rect x="34.4463%" y="613" width="0.6974%" height="15" fill="rgb(252,159,33)" fg:x="3260" fg:w="66"/><text x="34.6963%" y="623.50"></text></g><g><title>[unknown] (63 samples, 0.67%)</title><rect x="34.4780%" y="597" width="0.6657%" height="15" fill="rgb(206,71,0)" fg:x="3263" fg:w="63"/><text x="34.7280%" y="607.50"></text></g><g><title>[unknown] (63 samples, 0.67%)</title><rect x="34.4780%" y="581" width="0.6657%" height="15" fill="rgb(233,118,54)" fg:x="3263" fg:w="63"/><text x="34.7280%" y="591.50"></text></g><g><title>[unknown] (63 samples, 0.67%)</title><rect x="34.4780%" y="565" width="0.6657%" height="15" fill="rgb(234,83,48)" fg:x="3263" fg:w="63"/><text x="34.7280%" y="575.50"></text></g><g><title>[unknown] (62 samples, 0.66%)</title><rect x="34.4886%" y="549" width="0.6551%" height="15" fill="rgb(228,3,54)" fg:x="3264" fg:w="62"/><text x="34.7386%" y="559.50"></text></g><g><title>[unknown] (60 samples, 0.63%)</title><rect x="34.5097%" y="533" width="0.6340%" height="15" fill="rgb(226,155,13)" fg:x="3266" fg:w="60"/><text x="34.7597%" y="543.50"></text></g><g><title>[unknown] (56 samples, 0.59%)</title><rect x="34.5520%" y="517" width="0.5917%" height="15" fill="rgb(241,28,37)" fg:x="3270" fg:w="56"/><text x="34.8020%" y="527.50"></text></g><g><title>[unknown] (56 samples, 0.59%)</title><rect x="34.5520%" y="501" width="0.5917%" height="15" fill="rgb(233,93,10)" fg:x="3270" fg:w="56"/><text x="34.8020%" y="511.50"></text></g><g><title>[unknown] (53 samples, 0.56%)</title><rect x="34.5837%" y="485" width="0.5600%" height="15" fill="rgb(225,113,19)" fg:x="3273" fg:w="53"/><text x="34.8337%" y="495.50"></text></g><g><title>[unknown] (47 samples, 0.50%)</title><rect x="34.6471%" y="469" width="0.4966%" height="15" fill="rgb(241,2,18)" fg:x="3279" fg:w="47"/><text x="34.8971%" y="479.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="34.6788%" y="453" width="0.4649%" height="15" fill="rgb(228,207,21)" fg:x="3282" fg:w="44"/><text x="34.9288%" y="463.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="34.6999%" y="437" width="0.4438%" height="15" fill="rgb(213,211,35)" fg:x="3284" fg:w="42"/><text x="34.9499%" y="447.50"></text></g><g><title>[unknown] (38 samples, 0.40%)</title><rect x="34.7422%" y="421" width="0.4015%" height="15" fill="rgb(209,83,10)" fg:x="3288" fg:w="38"/><text x="34.9922%" y="431.50"></text></g><g><title>[unknown] (37 samples, 0.39%)</title><rect x="34.7527%" y="405" width="0.3910%" height="15" fill="rgb(209,164,1)" fg:x="3289" fg:w="37"/><text x="35.0027%" y="415.50"></text></g><g><title>[unknown] (36 samples, 0.38%)</title><rect x="34.7633%" y="389" width="0.3804%" height="15" fill="rgb(213,184,43)" fg:x="3290" fg:w="36"/><text x="35.0133%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="35.1331%" y="373" width="0.0106%" height="15" fill="rgb(231,61,34)" fg:x="3325" fg:w="1"/><text x="35.3831%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (259 samples, 2.74%)</title><rect x="33.9814%" y="725" width="2.7367%" height="15" fill="rgb(235,75,3)" fg:x="3216" fg:w="259"/><text x="34.2314%" y="735.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (259 samples, 2.74%)</title><rect x="33.9814%" y="709" width="2.7367%" height="15" fill="rgb(220,106,47)" fg:x="3216" fg:w="259"/><text x="34.2314%" y="719.50">al..</text></g><g><title>alloc::alloc::realloc (259 samples, 2.74%)</title><rect x="33.9814%" y="693" width="2.7367%" height="15" fill="rgb(210,196,33)" fg:x="3216" fg:w="259"/><text x="34.2314%" y="703.50">al..</text></g><g><title>__GI___libc_realloc (259 samples, 2.74%)</title><rect x="33.9814%" y="677" width="2.7367%" height="15" fill="rgb(229,154,42)" fg:x="3216" fg:w="259"/><text x="34.2314%" y="687.50">__..</text></g><g><title>_int_realloc (257 samples, 2.72%)</title><rect x="34.0025%" y="661" width="2.7156%" height="15" fill="rgb(228,114,26)" fg:x="3218" fg:w="257"/><text x="34.2525%" y="671.50">_i..</text></g><g><title>_int_malloc (229 samples, 2.42%)</title><rect x="34.2984%" y="645" width="2.4197%" height="15" fill="rgb(208,144,1)" fg:x="3246" fg:w="229"/><text x="34.5484%" y="655.50">_i..</text></g><g><title>sysmalloc (216 samples, 2.28%)</title><rect x="34.4358%" y="629" width="2.2823%" height="15" fill="rgb(239,112,37)" fg:x="3259" fg:w="216"/><text x="34.6858%" y="639.50">s..</text></g><g><title>grow_heap (149 samples, 1.57%)</title><rect x="35.1437%" y="613" width="1.5744%" height="15" fill="rgb(210,96,50)" fg:x="3326" fg:w="149"/><text x="35.3937%" y="623.50"></text></g><g><title>__GI___mprotect (149 samples, 1.57%)</title><rect x="35.1437%" y="597" width="1.5744%" height="15" fill="rgb(222,178,2)" fg:x="3326" fg:w="149"/><text x="35.3937%" y="607.50"></text></g><g><title>[unknown] (149 samples, 1.57%)</title><rect x="35.1437%" y="581" width="1.5744%" height="15" fill="rgb(226,74,18)" fg:x="3326" fg:w="149"/><text x="35.3937%" y="591.50"></text></g><g><title>[unknown] (147 samples, 1.55%)</title><rect x="35.1648%" y="565" width="1.5533%" height="15" fill="rgb(225,67,54)" fg:x="3328" fg:w="147"/><text x="35.4148%" y="575.50"></text></g><g><title>[unknown] (147 samples, 1.55%)</title><rect x="35.1648%" y="549" width="1.5533%" height="15" fill="rgb(251,92,32)" fg:x="3328" fg:w="147"/><text x="35.4148%" y="559.50"></text></g><g><title>[unknown] (147 samples, 1.55%)</title><rect x="35.1648%" y="533" width="1.5533%" height="15" fill="rgb(228,149,22)" fg:x="3328" fg:w="147"/><text x="35.4148%" y="543.50"></text></g><g><title>[unknown] (147 samples, 1.55%)</title><rect x="35.1648%" y="517" width="1.5533%" height="15" fill="rgb(243,54,13)" fg:x="3328" fg:w="147"/><text x="35.4148%" y="527.50"></text></g><g><title>[unknown] (143 samples, 1.51%)</title><rect x="35.2071%" y="501" width="1.5110%" height="15" fill="rgb(243,180,28)" fg:x="3332" fg:w="143"/><text x="35.4571%" y="511.50"></text></g><g><title>[unknown] (134 samples, 1.42%)</title><rect x="35.3022%" y="485" width="1.4159%" height="15" fill="rgb(208,167,24)" fg:x="3341" fg:w="134"/><text x="35.5522%" y="495.50"></text></g><g><title>[unknown] (126 samples, 1.33%)</title><rect x="35.3867%" y="469" width="1.3314%" height="15" fill="rgb(245,73,45)" fg:x="3349" fg:w="126"/><text x="35.6367%" y="479.50"></text></g><g><title>[unknown] (116 samples, 1.23%)</title><rect x="35.4924%" y="453" width="1.2257%" height="15" fill="rgb(237,203,48)" fg:x="3359" fg:w="116"/><text x="35.7424%" y="463.50"></text></g><g><title>[unknown] (109 samples, 1.15%)</title><rect x="35.5664%" y="437" width="1.1517%" height="15" fill="rgb(211,197,16)" fg:x="3366" fg:w="109"/><text x="35.8164%" y="447.50"></text></g><g><title>[unknown] (103 samples, 1.09%)</title><rect x="35.6298%" y="421" width="1.0883%" height="15" fill="rgb(243,99,51)" fg:x="3372" fg:w="103"/><text x="35.8798%" y="431.50"></text></g><g><title>[unknown] (95 samples, 1.00%)</title><rect x="35.7143%" y="405" width="1.0038%" height="15" fill="rgb(215,123,29)" fg:x="3380" fg:w="95"/><text x="35.9643%" y="415.50"></text></g><g><title>[unknown] (84 samples, 0.89%)</title><rect x="35.8305%" y="389" width="0.8876%" height="15" fill="rgb(239,186,37)" fg:x="3391" fg:w="84"/><text x="36.0805%" y="399.50"></text></g><g><title>[unknown] (82 samples, 0.87%)</title><rect x="35.8516%" y="373" width="0.8664%" height="15" fill="rgb(252,136,39)" fg:x="3393" fg:w="82"/><text x="36.1016%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="357" width="0.0106%" height="15" fill="rgb(223,213,32)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="341" width="0.0106%" height="15" fill="rgb(233,115,5)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="325" width="0.0106%" height="15" fill="rgb(207,226,44)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="309" width="0.0106%" height="15" fill="rgb(208,126,0)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="293" width="0.0106%" height="15" fill="rgb(244,66,21)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="277" width="0.0106%" height="15" fill="rgb(222,97,12)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="261" width="0.0106%" height="15" fill="rgb(219,213,19)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="245" width="0.0106%" height="15" fill="rgb(252,169,30)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="36.7075%" y="229" width="0.0106%" height="15" fill="rgb(206,32,51)" fg:x="3474" fg:w="1"/><text x="36.9575%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (261 samples, 2.76%)</title><rect x="33.9708%" y="773" width="2.7578%" height="15" fill="rgb(250,172,42)" fg:x="3215" fg:w="261"/><text x="34.2208%" y="783.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (261 samples, 2.76%)</title><rect x="33.9708%" y="757" width="2.7578%" height="15" fill="rgb(209,34,43)" fg:x="3215" fg:w="261"/><text x="34.2208%" y="767.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (260 samples, 2.75%)</title><rect x="33.9814%" y="741" width="2.7473%" height="15" fill="rgb(223,11,35)" fg:x="3216" fg:w="260"/><text x="34.2314%" y="751.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="36.7181%" y="725" width="0.0106%" height="15" fill="rgb(251,219,26)" fg:x="3475" fg:w="1"/><text x="36.9681%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="36.7287%" y="773" width="0.0106%" height="15" fill="rgb(231,119,3)" fg:x="3476" fg:w="1"/><text x="36.9787%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="36.7287%" y="757" width="0.0106%" height="15" fill="rgb(216,97,11)" fg:x="3476" fg:w="1"/><text x="36.9787%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (280 samples, 2.96%)</title><rect x="33.9074%" y="821" width="2.9586%" height="15" fill="rgb(223,59,9)" fg:x="3209" fg:w="280"/><text x="34.1574%" y="831.50">cor..</text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (279 samples, 2.95%)</title><rect x="33.9180%" y="805" width="2.9480%" height="15" fill="rgb(233,93,31)" fg:x="3210" fg:w="279"/><text x="34.1680%" y="815.50">pa..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (279 samples, 2.95%)</title><rect x="33.9180%" y="789" width="2.9480%" height="15" fill="rgb(239,81,33)" fg:x="3210" fg:w="279"/><text x="34.1680%" y="799.50">al..</text></g><g><title>core::ptr::write (12 samples, 0.13%)</title><rect x="36.7392%" y="773" width="0.1268%" height="15" fill="rgb(213,120,34)" fg:x="3477" fg:w="12"/><text x="36.9892%" y="783.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="37.0034%" y="661" width="0.0106%" height="15" fill="rgb(243,49,53)" fg:x="3502" fg:w="1"/><text x="37.2534%" y="671.50"></text></g><g><title>__GI___libc_free (14 samples, 0.15%)</title><rect x="36.8766%" y="693" width="0.1479%" height="15" fill="rgb(247,216,33)" fg:x="3490" fg:w="14"/><text x="37.1266%" y="703.50"></text></g><g><title>_int_free (13 samples, 0.14%)</title><rect x="36.8872%" y="677" width="0.1374%" height="15" fill="rgb(226,26,14)" fg:x="3491" fg:w="13"/><text x="37.1372%" y="687.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="37.0139%" y="661" width="0.0106%" height="15" fill="rgb(215,49,53)" fg:x="3503" fg:w="1"/><text x="37.2639%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (304 samples, 3.21%)</title><rect x="33.8229%" y="853" width="3.2122%" height="15" fill="rgb(245,162,40)" fg:x="3201" fg:w="304"/><text x="34.0729%" y="863.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (302 samples, 3.19%)</title><rect x="33.8440%" y="837" width="3.1910%" height="15" fill="rgb(229,68,17)" fg:x="3203" fg:w="302"/><text x="34.0940%" y="847.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (16 samples, 0.17%)</title><rect x="36.8660%" y="821" width="0.1691%" height="15" fill="rgb(213,182,10)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="36.8660%" y="805" width="0.1691%" height="15" fill="rgb(245,125,30)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (16 samples, 0.17%)</title><rect x="36.8660%" y="789" width="0.1691%" height="15" fill="rgb(232,202,2)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="799.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="36.8660%" y="773" width="0.1691%" height="15" fill="rgb(237,140,51)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (16 samples, 0.17%)</title><rect x="36.8660%" y="757" width="0.1691%" height="15" fill="rgb(236,157,25)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="36.8660%" y="741" width="0.1691%" height="15" fill="rgb(219,209,0)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.17%)</title><rect x="36.8660%" y="725" width="0.1691%" height="15" fill="rgb(240,116,54)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.17%)</title><rect x="36.8660%" y="709" width="0.1691%" height="15" fill="rgb(216,10,36)" fg:x="3489" fg:w="16"/><text x="37.1160%" y="719.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="37.0245%" y="693" width="0.0106%" height="15" fill="rgb(222,72,44)" fg:x="3504" fg:w="1"/><text x="37.2745%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="37.0351%" y="805" width="0.0211%" height="15" fill="rgb(232,159,9)" fg:x="3505" fg:w="2"/><text x="37.2851%" y="815.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="37.0456%" y="789" width="0.0106%" height="15" fill="rgb(210,39,32)" fg:x="3506" fg:w="1"/><text x="37.2956%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.03%)</title><rect x="37.0351%" y="853" width="0.0317%" height="15" fill="rgb(216,194,45)" fg:x="3505" fg:w="3"/><text x="37.2851%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.03%)</title><rect x="37.0351%" y="837" width="0.0317%" height="15" fill="rgb(218,18,35)" fg:x="3505" fg:w="3"/><text x="37.2851%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="37.0351%" y="821" width="0.0317%" height="15" fill="rgb(207,83,51)" fg:x="3505" fg:w="3"/><text x="37.2851%" y="831.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="37.0562%" y="805" width="0.0106%" height="15" fill="rgb(225,63,43)" fg:x="3507" fg:w="1"/><text x="37.3062%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (6 samples, 0.06%)</title><rect x="37.0668%" y="853" width="0.0634%" height="15" fill="rgb(207,57,36)" fg:x="3508" fg:w="6"/><text x="37.3168%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (6 samples, 0.06%)</title><rect x="37.0668%" y="837" width="0.0634%" height="15" fill="rgb(216,99,33)" fg:x="3508" fg:w="6"/><text x="37.3168%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="37.0668%" y="821" width="0.0634%" height="15" fill="rgb(225,42,16)" fg:x="3508" fg:w="6"/><text x="37.3168%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="37.0668%" y="805" width="0.0634%" height="15" fill="rgb(220,201,45)" fg:x="3508" fg:w="6"/><text x="37.3168%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="37.0668%" y="789" width="0.0634%" height="15" fill="rgb(225,33,4)" fg:x="3508" fg:w="6"/><text x="37.3168%" y="799.50"></text></g><g><title>__GI___libc_free (6 samples, 0.06%)</title><rect x="37.0668%" y="773" width="0.0634%" height="15" fill="rgb(224,33,50)" fg:x="3508" fg:w="6"/><text x="37.3168%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="37.0879%" y="757" width="0.0423%" height="15" fill="rgb(246,198,51)" fg:x="3510" fg:w="4"/><text x="37.3379%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="37.1302%" y="853" width="0.0634%" height="15" fill="rgb(205,22,4)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="37.1302%" y="837" width="0.0634%" height="15" fill="rgb(206,3,8)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (6 samples, 0.06%)</title><rect x="37.1302%" y="821" width="0.0634%" height="15" fill="rgb(251,23,15)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="37.1302%" y="805" width="0.0634%" height="15" fill="rgb(252,88,28)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (6 samples, 0.06%)</title><rect x="37.1302%" y="789" width="0.0634%" height="15" fill="rgb(212,127,14)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="799.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="37.1302%" y="773" width="0.0634%" height="15" fill="rgb(247,145,37)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (6 samples, 0.06%)</title><rect x="37.1302%" y="757" width="0.0634%" height="15" fill="rgb(209,117,53)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="37.1302%" y="741" width="0.0634%" height="15" fill="rgb(212,90,42)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="37.1302%" y="725" width="0.0634%" height="15" fill="rgb(218,164,37)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="37.1302%" y="709" width="0.0634%" height="15" fill="rgb(246,65,34)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="719.50"></text></g><g><title>__GI___libc_free (6 samples, 0.06%)</title><rect x="37.1302%" y="693" width="0.0634%" height="15" fill="rgb(231,100,33)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="703.50"></text></g><g><title>_int_free (6 samples, 0.06%)</title><rect x="37.1302%" y="677" width="0.0634%" height="15" fill="rgb(228,126,14)" fg:x="3514" fg:w="6"/><text x="37.3802%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="37.7008%" y="837" width="0.0106%" height="15" fill="rgb(215,173,21)" fg:x="3568" fg:w="1"/><text x="37.9508%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (28 samples, 0.30%)</title><rect x="37.7113%" y="805" width="0.2959%" height="15" fill="rgb(210,6,40)" fg:x="3569" fg:w="28"/><text x="37.9613%" y="815.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="37.9966%" y="789" width="0.0106%" height="15" fill="rgb(212,48,18)" fg:x="3596" fg:w="1"/><text x="38.2466%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.36%)</title><rect x="37.7113%" y="837" width="0.3593%" height="15" fill="rgb(230,214,11)" fg:x="3569" fg:w="34"/><text x="37.9613%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (34 samples, 0.36%)</title><rect x="37.7113%" y="821" width="0.3593%" height="15" fill="rgb(254,105,39)" fg:x="3569" fg:w="34"/><text x="37.9613%" y="831.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (6 samples, 0.06%)</title><rect x="38.0072%" y="805" width="0.0634%" height="15" fill="rgb(245,158,5)" fg:x="3597" fg:w="6"/><text x="38.2572%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.06%)</title><rect x="38.0072%" y="789" width="0.0634%" height="15" fill="rgb(249,208,11)" fg:x="3597" fg:w="6"/><text x="38.2572%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (6 samples, 0.06%)</title><rect x="38.0072%" y="773" width="0.0634%" height="15" fill="rgb(210,39,28)" fg:x="3597" fg:w="6"/><text x="38.2572%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="629" width="0.0528%" height="15" fill="rgb(211,56,53)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="613" width="0.0528%" height="15" fill="rgb(226,201,30)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="597" width="0.0528%" height="15" fill="rgb(239,101,34)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="581" width="0.0528%" height="15" fill="rgb(226,209,5)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="565" width="0.0528%" height="15" fill="rgb(250,105,47)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="549" width="0.0528%" height="15" fill="rgb(230,72,3)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="533" width="0.0528%" height="15" fill="rgb(232,218,39)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="517" width="0.0528%" height="15" fill="rgb(248,166,6)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="501" width="0.0528%" height="15" fill="rgb(247,89,20)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.3136%" y="485" width="0.0528%" height="15" fill="rgb(248,130,54)" fg:x="3626" fg:w="5"/><text x="38.5636%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.3242%" y="469" width="0.0423%" height="15" fill="rgb(234,196,4)" fg:x="3627" fg:w="4"/><text x="38.5742%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.3242%" y="453" width="0.0423%" height="15" fill="rgb(250,143,31)" fg:x="3627" fg:w="4"/><text x="38.5742%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.3242%" y="437" width="0.0423%" height="15" fill="rgb(211,110,34)" fg:x="3627" fg:w="4"/><text x="38.5742%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.3242%" y="421" width="0.0423%" height="15" fill="rgb(215,124,48)" fg:x="3627" fg:w="4"/><text x="38.5742%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="38.3664%" y="629" width="0.0106%" height="15" fill="rgb(216,46,13)" fg:x="3631" fg:w="1"/><text x="38.6164%" y="639.50"></text></g><g><title>checked_request2size (5 samples, 0.05%)</title><rect x="38.3770%" y="629" width="0.0528%" height="15" fill="rgb(205,184,25)" fg:x="3632" fg:w="5"/><text x="38.6270%" y="639.50"></text></g><g><title>__GI___libc_malloc (39 samples, 0.41%)</title><rect x="38.1340%" y="645" width="0.4121%" height="15" fill="rgb(228,1,10)" fg:x="3609" fg:w="39"/><text x="38.3840%" y="655.50"></text></g><g><title>tcache_get (11 samples, 0.12%)</title><rect x="38.4298%" y="629" width="0.1162%" height="15" fill="rgb(213,116,27)" fg:x="3637" fg:w="11"/><text x="38.6798%" y="639.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="38.5461%" y="645" width="0.0423%" height="15" fill="rgb(241,95,50)" fg:x="3648" fg:w="4"/><text x="38.7961%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="38.5461%" y="629" width="0.0423%" height="15" fill="rgb(238,48,32)" fg:x="3648" fg:w="4"/><text x="38.7961%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.50%)</title><rect x="38.1023%" y="693" width="0.4966%" height="15" fill="rgb(235,113,49)" fg:x="3606" fg:w="47"/><text x="38.3523%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.50%)</title><rect x="38.1023%" y="677" width="0.4966%" height="15" fill="rgb(205,127,43)" fg:x="3606" fg:w="47"/><text x="38.3523%" y="687.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.50%)</title><rect x="38.1023%" y="661" width="0.4966%" height="15" fill="rgb(250,162,2)" fg:x="3606" fg:w="47"/><text x="38.3523%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="38.5883%" y="645" width="0.0106%" height="15" fill="rgb(220,13,41)" fg:x="3652" fg:w="1"/><text x="38.8383%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="693" width="0.0528%" height="15" fill="rgb(249,221,25)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="677" width="0.0528%" height="15" fill="rgb(215,208,19)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="661" width="0.0528%" height="15" fill="rgb(236,175,2)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="645" width="0.0528%" height="15" fill="rgb(241,52,2)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="629" width="0.0528%" height="15" fill="rgb(248,140,14)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="613" width="0.0528%" height="15" fill="rgb(253,22,42)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="597" width="0.0528%" height="15" fill="rgb(234,61,47)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="581" width="0.0528%" height="15" fill="rgb(208,226,15)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="565" width="0.0528%" height="15" fill="rgb(217,221,4)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="38.5989%" y="549" width="0.0528%" height="15" fill="rgb(212,174,34)" fg:x="3653" fg:w="5"/><text x="38.8489%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.6095%" y="533" width="0.0423%" height="15" fill="rgb(253,83,4)" fg:x="3654" fg:w="4"/><text x="38.8595%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.6095%" y="517" width="0.0423%" height="15" fill="rgb(250,195,49)" fg:x="3654" fg:w="4"/><text x="38.8595%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.6095%" y="501" width="0.0423%" height="15" fill="rgb(241,192,25)" fg:x="3654" fg:w="4"/><text x="38.8595%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="38.6095%" y="485" width="0.0423%" height="15" fill="rgb(208,124,10)" fg:x="3654" fg:w="4"/><text x="38.8595%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56 samples, 0.59%)</title><rect x="38.0706%" y="741" width="0.5917%" height="15" fill="rgb(222,33,0)" fg:x="3603" fg:w="56"/><text x="38.3206%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (56 samples, 0.59%)</title><rect x="38.0706%" y="725" width="0.5917%" height="15" fill="rgb(234,209,28)" fg:x="3603" fg:w="56"/><text x="38.3206%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.59%)</title><rect x="38.0706%" y="709" width="0.5917%" height="15" fill="rgb(224,11,23)" fg:x="3603" fg:w="56"/><text x="38.3206%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="38.6517%" y="693" width="0.0106%" height="15" fill="rgb(232,99,1)" fg:x="3658" fg:w="1"/><text x="38.9017%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="38.6517%" y="677" width="0.0106%" height="15" fill="rgb(237,95,45)" fg:x="3658" fg:w="1"/><text x="38.9017%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (65 samples, 0.69%)</title><rect x="38.0706%" y="837" width="0.6868%" height="15" fill="rgb(208,109,11)" fg:x="3603" fg:w="65"/><text x="38.3206%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (65 samples, 0.69%)</title><rect x="38.0706%" y="821" width="0.6868%" height="15" fill="rgb(216,190,48)" fg:x="3603" fg:w="65"/><text x="38.3206%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.69%)</title><rect x="38.0706%" y="805" width="0.6868%" height="15" fill="rgb(251,171,36)" fg:x="3603" fg:w="65"/><text x="38.3206%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.69%)</title><rect x="38.0706%" y="789" width="0.6868%" height="15" fill="rgb(230,62,22)" fg:x="3603" fg:w="65"/><text x="38.3206%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.69%)</title><rect x="38.0706%" y="773" width="0.6868%" height="15" fill="rgb(225,114,35)" fg:x="3603" fg:w="65"/><text x="38.3206%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.69%)</title><rect x="38.0706%" y="757" width="0.6868%" height="15" fill="rgb(215,118,42)" fg:x="3603" fg:w="65"/><text x="38.3206%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.10%)</title><rect x="38.6623%" y="741" width="0.0951%" height="15" fill="rgb(243,119,21)" fg:x="3659" fg:w="9"/><text x="38.9123%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.10%)</title><rect x="38.6623%" y="725" width="0.0951%" height="15" fill="rgb(252,177,53)" fg:x="3659" fg:w="9"/><text x="38.9123%" y="735.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.10%)</title><rect x="38.6623%" y="709" width="0.0951%" height="15" fill="rgb(237,209,29)" fg:x="3659" fg:w="9"/><text x="38.9123%" y="719.50"></text></g><g><title>checked_request2size (6 samples, 0.06%)</title><rect x="38.9582%" y="757" width="0.0634%" height="15" fill="rgb(212,65,23)" fg:x="3687" fg:w="6"/><text x="39.2082%" y="767.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.30%)</title><rect x="38.7785%" y="773" width="0.2959%" height="15" fill="rgb(230,222,46)" fg:x="3670" fg:w="28"/><text x="39.0285%" y="783.50"></text></g><g><title>tcache_get (5 samples, 0.05%)</title><rect x="39.0216%" y="757" width="0.0528%" height="15" fill="rgb(215,135,32)" fg:x="3693" fg:w="5"/><text x="39.2716%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="39.0744%" y="773" width="0.0106%" height="15" fill="rgb(246,101,22)" fg:x="3698" fg:w="1"/><text x="39.3244%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="39.0744%" y="757" width="0.0106%" height="15" fill="rgb(206,107,13)" fg:x="3698" fg:w="1"/><text x="39.3244%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="39.0850%" y="773" width="0.0106%" height="15" fill="rgb(250,100,44)" fg:x="3699" fg:w="1"/><text x="39.3350%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.36%)</title><rect x="38.7574%" y="837" width="0.3593%" height="15" fill="rgb(231,147,38)" fg:x="3668" fg:w="34"/><text x="39.0074%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.36%)</title><rect x="38.7574%" y="821" width="0.3593%" height="15" fill="rgb(229,8,40)" fg:x="3668" fg:w="34"/><text x="39.0074%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.36%)</title><rect x="38.7574%" y="805" width="0.3593%" height="15" fill="rgb(221,135,30)" fg:x="3668" fg:w="34"/><text x="39.0074%" y="815.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.36%)</title><rect x="38.7574%" y="789" width="0.3593%" height="15" fill="rgb(249,193,18)" fg:x="3668" fg:w="34"/><text x="39.0074%" y="799.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="39.0955%" y="773" width="0.0211%" height="15" fill="rgb(209,133,39)" fg:x="3700" fg:w="2"/><text x="39.3455%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (3 samples, 0.03%)</title><rect x="39.1167%" y="805" width="0.0317%" height="15" fill="rgb(232,100,14)" fg:x="3702" fg:w="3"/><text x="39.3667%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (5 samples, 0.05%)</title><rect x="39.1167%" y="837" width="0.0528%" height="15" fill="rgb(224,185,1)" fg:x="3702" fg:w="5"/><text x="39.3667%" y="847.50"></text></g><g><title>alloc::slice::hack::into_vec (5 samples, 0.05%)</title><rect x="39.1167%" y="821" width="0.0528%" height="15" fill="rgb(223,139,8)" fg:x="3702" fg:w="5"/><text x="39.3667%" y="831.50"></text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="39.1484%" y="805" width="0.0211%" height="15" fill="rgb(232,213,38)" fg:x="3705" fg:w="2"/><text x="39.3984%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="39.2012%" y="725" width="0.0106%" height="15" fill="rgb(207,94,22)" fg:x="3710" fg:w="1"/><text x="39.4512%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="39.2012%" y="709" width="0.0106%" height="15" fill="rgb(219,183,54)" fg:x="3710" fg:w="1"/><text x="39.4512%" y="719.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="40.0254%" y="629" width="0.0423%" height="15" fill="rgb(216,185,54)" fg:x="3788" fg:w="4"/><text x="40.2754%" y="639.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6 samples, 0.06%)</title><rect x="40.0676%" y="629" width="0.0634%" height="15" fill="rgb(254,217,39)" fg:x="3792" fg:w="6"/><text x="40.3176%" y="639.50"></text></g><g><title>_int_free (27 samples, 0.29%)</title><rect x="40.1310%" y="629" width="0.2853%" height="15" fill="rgb(240,178,23)" fg:x="3798" fg:w="27"/><text x="40.3810%" y="639.50"></text></g><g><title>tcache_put (6 samples, 0.06%)</title><rect x="40.3529%" y="613" width="0.0634%" height="15" fill="rgb(218,11,47)" fg:x="3819" fg:w="6"/><text x="40.6029%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="613" width="0.0528%" height="15" fill="rgb(218,51,51)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="597" width="0.0528%" height="15" fill="rgb(238,126,27)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="581" width="0.0528%" height="15" fill="rgb(249,202,22)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="565" width="0.0528%" height="15" fill="rgb(254,195,49)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="549" width="0.0528%" height="15" fill="rgb(208,123,14)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="533" width="0.0528%" height="15" fill="rgb(224,200,8)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="517" width="0.0528%" height="15" fill="rgb(217,61,36)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.2511%" y="501" width="0.0528%" height="15" fill="rgb(206,35,45)" fg:x="3904" fg:w="5"/><text x="41.5011%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="41.2616%" y="485" width="0.0423%" height="15" fill="rgb(217,65,33)" fg:x="3905" fg:w="4"/><text x="41.5116%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="41.2616%" y="469" width="0.0423%" height="15" fill="rgb(222,158,48)" fg:x="3905" fg:w="4"/><text x="41.5116%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="41.2616%" y="453" width="0.0423%" height="15" fill="rgb(254,2,54)" fg:x="3905" fg:w="4"/><text x="41.5116%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="41.2616%" y="437" width="0.0423%" height="15" fill="rgb(250,143,38)" fg:x="3905" fg:w="4"/><text x="41.5116%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="41.2722%" y="421" width="0.0317%" height="15" fill="rgb(248,25,0)" fg:x="3906" fg:w="3"/><text x="41.5222%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="41.2722%" y="405" width="0.0317%" height="15" fill="rgb(206,152,27)" fg:x="3906" fg:w="3"/><text x="41.5222%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="41.2722%" y="389" width="0.0317%" height="15" fill="rgb(240,77,30)" fg:x="3906" fg:w="3"/><text x="41.5222%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="597" width="0.0211%" height="15" fill="rgb(231,5,3)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="581" width="0.0211%" height="15" fill="rgb(207,226,32)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="565" width="0.0211%" height="15" fill="rgb(222,207,47)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="549" width="0.0211%" height="15" fill="rgb(229,115,45)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="533" width="0.0211%" height="15" fill="rgb(224,191,6)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="517" width="0.0211%" height="15" fill="rgb(230,227,24)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.3039%" y="501" width="0.0211%" height="15" fill="rgb(228,80,19)" fg:x="3909" fg:w="2"/><text x="41.5539%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="41.3145%" y="485" width="0.0106%" height="15" fill="rgb(247,229,0)" fg:x="3910" fg:w="1"/><text x="41.5645%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="41.3145%" y="469" width="0.0106%" height="15" fill="rgb(237,194,15)" fg:x="3910" fg:w="1"/><text x="41.5645%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="41.3145%" y="453" width="0.0106%" height="15" fill="rgb(219,203,20)" fg:x="3910" fg:w="1"/><text x="41.5645%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="41.3145%" y="437" width="0.0106%" height="15" fill="rgb(234,128,8)" fg:x="3910" fg:w="1"/><text x="41.5645%" y="447.50"></text></g><g><title>_int_realloc (142 samples, 1.50%)</title><rect x="39.9091%" y="645" width="1.5004%" height="15" fill="rgb(248,202,8)" fg:x="3777" fg:w="142"/><text x="40.1591%" y="655.50"></text></g><g><title>_int_malloc (94 samples, 0.99%)</title><rect x="40.4163%" y="629" width="0.9932%" height="15" fill="rgb(206,104,37)" fg:x="3825" fg:w="94"/><text x="40.6663%" y="639.50"></text></g><g><title>sysmalloc (10 samples, 0.11%)</title><rect x="41.3039%" y="613" width="0.1057%" height="15" fill="rgb(223,8,27)" fg:x="3909" fg:w="10"/><text x="41.5539%" y="623.50"></text></g><g><title>grow_heap (8 samples, 0.08%)</title><rect x="41.3250%" y="597" width="0.0845%" height="15" fill="rgb(216,217,28)" fg:x="3911" fg:w="8"/><text x="41.5750%" y="607.50"></text></g><g><title>__GI___mprotect (8 samples, 0.08%)</title><rect x="41.3250%" y="581" width="0.0845%" height="15" fill="rgb(249,199,1)" fg:x="3911" fg:w="8"/><text x="41.5750%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="41.3250%" y="565" width="0.0845%" height="15" fill="rgb(240,85,17)" fg:x="3911" fg:w="8"/><text x="41.5750%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="41.3250%" y="549" width="0.0845%" height="15" fill="rgb(206,108,45)" fg:x="3911" fg:w="8"/><text x="41.5750%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="41.3250%" y="533" width="0.0845%" height="15" fill="rgb(245,210,41)" fg:x="3911" fg:w="8"/><text x="41.5750%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="41.3250%" y="517" width="0.0845%" height="15" fill="rgb(206,13,37)" fg:x="3911" fg:w="8"/><text x="41.5750%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="41.3356%" y="501" width="0.0740%" height="15" fill="rgb(250,61,18)" fg:x="3912" fg:w="7"/><text x="41.5856%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="41.3462%" y="485" width="0.0634%" height="15" fill="rgb(235,172,48)" fg:x="3913" fg:w="6"/><text x="41.5962%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="469" width="0.0528%" height="15" fill="rgb(249,201,17)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="453" width="0.0528%" height="15" fill="rgb(219,208,6)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="437" width="0.0528%" height="15" fill="rgb(248,31,23)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="421" width="0.0528%" height="15" fill="rgb(245,15,42)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="405" width="0.0528%" height="15" fill="rgb(222,217,39)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="389" width="0.0528%" height="15" fill="rgb(210,219,27)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="373" width="0.0528%" height="15" fill="rgb(252,166,36)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.3567%" y="357" width="0.0528%" height="15" fill="rgb(245,132,34)" fg:x="3914" fg:w="5"/><text x="41.6067%" y="367.50"></text></g><g><title>arena_for_chunk (12 samples, 0.13%)</title><rect x="41.4096%" y="645" width="0.1268%" height="15" fill="rgb(236,54,3)" fg:x="3919" fg:w="12"/><text x="41.6596%" y="655.50"></text></g><g><title>arena_for_chunk (9 samples, 0.10%)</title><rect x="41.4413%" y="629" width="0.0951%" height="15" fill="rgb(241,173,43)" fg:x="3922" fg:w="9"/><text x="41.6913%" y="639.50"></text></g><g><title>heap_for_ptr (5 samples, 0.05%)</title><rect x="41.4835%" y="613" width="0.0528%" height="15" fill="rgb(215,190,9)" fg:x="3926" fg:w="5"/><text x="41.7335%" y="623.50"></text></g><g><title>__GI___libc_realloc (218 samples, 2.30%)</title><rect x="39.3280%" y="661" width="2.3035%" height="15" fill="rgb(242,101,16)" fg:x="3722" fg:w="218"/><text x="39.5780%" y="671.50">_..</text></g><g><title>checked_request2size (9 samples, 0.10%)</title><rect x="41.5363%" y="645" width="0.0951%" height="15" fill="rgb(223,190,21)" fg:x="3931" fg:w="9"/><text x="41.7863%" y="655.50"></text></g><g><title>__rdl_realloc (8 samples, 0.08%)</title><rect x="41.6314%" y="661" width="0.0845%" height="15" fill="rgb(215,228,25)" fg:x="3940" fg:w="8"/><text x="41.8814%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.08%)</title><rect x="41.6314%" y="645" width="0.0845%" height="15" fill="rgb(225,36,22)" fg:x="3940" fg:w="8"/><text x="41.8814%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (228 samples, 2.41%)</title><rect x="39.3280%" y="709" width="2.4091%" height="15" fill="rgb(251,106,46)" fg:x="3722" fg:w="228"/><text x="39.5780%" y="719.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (228 samples, 2.41%)</title><rect x="39.3280%" y="693" width="2.4091%" height="15" fill="rgb(208,90,1)" fg:x="3722" fg:w="228"/><text x="39.5780%" y="703.50">al..</text></g><g><title>alloc::alloc::realloc (228 samples, 2.41%)</title><rect x="39.3280%" y="677" width="2.4091%" height="15" fill="rgb(243,10,4)" fg:x="3722" fg:w="228"/><text x="39.5780%" y="687.50">al..</text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="41.7160%" y="661" width="0.0211%" height="15" fill="rgb(212,137,27)" fg:x="3948" fg:w="2"/><text x="41.9660%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (242 samples, 2.56%)</title><rect x="39.2117%" y="725" width="2.5571%" height="15" fill="rgb(231,220,49)" fg:x="3711" fg:w="242"/><text x="39.4617%" y="735.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.03%)</title><rect x="41.7371%" y="709" width="0.0317%" height="15" fill="rgb(237,96,20)" fg:x="3950" fg:w="3"/><text x="41.9871%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (249 samples, 2.63%)</title><rect x="39.1695%" y="789" width="2.6310%" height="15" fill="rgb(239,229,30)" fg:x="3707" fg:w="249"/><text x="39.4195%" y="799.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (249 samples, 2.63%)</title><rect x="39.1695%" y="773" width="2.6310%" height="15" fill="rgb(219,65,33)" fg:x="3707" fg:w="249"/><text x="39.4195%" y="783.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (247 samples, 2.61%)</title><rect x="39.1906%" y="757" width="2.6099%" height="15" fill="rgb(243,134,7)" fg:x="3709" fg:w="247"/><text x="39.4406%" y="767.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (247 samples, 2.61%)</title><rect x="39.1906%" y="741" width="2.6099%" height="15" fill="rgb(216,177,54)" fg:x="3709" fg:w="247"/><text x="39.4406%" y="751.50">al..</text></g><g><title>core::cmp::max (3 samples, 0.03%)</title><rect x="41.7688%" y="725" width="0.0317%" height="15" fill="rgb(211,160,20)" fg:x="3953" fg:w="3"/><text x="42.0188%" y="735.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.03%)</title><rect x="41.7688%" y="709" width="0.0317%" height="15" fill="rgb(239,85,39)" fg:x="3953" fg:w="3"/><text x="42.0188%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="41.7688%" y="693" width="0.0317%" height="15" fill="rgb(232,125,22)" fg:x="3953" fg:w="3"/><text x="42.0188%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.10%)</title><rect x="41.8005%" y="789" width="0.0951%" height="15" fill="rgb(244,57,34)" fg:x="3956" fg:w="9"/><text x="42.0505%" y="799.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.10%)</title><rect x="41.8005%" y="773" width="0.0951%" height="15" fill="rgb(214,203,32)" fg:x="3956" fg:w="9"/><text x="42.0505%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="41.8956%" y="789" width="0.0106%" height="15" fill="rgb(207,58,43)" fg:x="3965" fg:w="1"/><text x="42.1456%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (262 samples, 2.77%)</title><rect x="39.1695%" y="805" width="2.7684%" height="15" fill="rgb(215,193,15)" fg:x="3707" fg:w="262"/><text x="39.4195%" y="815.50">al..</text></g><g><title>paranagram::utils::find_sum_rec (3 samples, 0.03%)</title><rect x="41.9062%" y="789" width="0.0317%" height="15" fill="rgb(232,15,44)" fg:x="3966" fg:w="3"/><text x="42.1562%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (263 samples, 2.78%)</title><rect x="39.1695%" y="837" width="2.7790%" height="15" fill="rgb(212,3,48)" fg:x="3707" fg:w="263"/><text x="39.4195%" y="847.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (263 samples, 2.78%)</title><rect x="39.1695%" y="821" width="2.7790%" height="15" fill="rgb(218,128,7)" fg:x="3707" fg:w="263"/><text x="39.4195%" y="831.50">&lt;a..</text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="41.9379%" y="805" width="0.0106%" height="15" fill="rgb(226,216,39)" fg:x="3969" fg:w="1"/><text x="42.1879%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="41.9484%" y="789" width="0.0106%" height="15" fill="rgb(243,47,51)" fg:x="3970" fg:w="1"/><text x="42.1984%" y="799.50"></text></g><g><title>_int_realloc (6 samples, 0.06%)</title><rect x="41.9696%" y="709" width="0.0634%" height="15" fill="rgb(241,183,40)" fg:x="3972" fg:w="6"/><text x="42.2196%" y="719.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="41.9696%" y="693" width="0.0634%" height="15" fill="rgb(231,217,32)" fg:x="3972" fg:w="6"/><text x="42.2196%" y="703.50"></text></g><g><title>sysmalloc (5 samples, 0.05%)</title><rect x="41.9801%" y="677" width="0.0528%" height="15" fill="rgb(229,61,38)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="687.50"></text></g><g><title>grow_heap (5 samples, 0.05%)</title><rect x="41.9801%" y="661" width="0.0528%" height="15" fill="rgb(225,210,5)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="671.50"></text></g><g><title>__GI___mprotect (5 samples, 0.05%)</title><rect x="41.9801%" y="645" width="0.0528%" height="15" fill="rgb(231,79,45)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="629" width="0.0528%" height="15" fill="rgb(224,100,7)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="613" width="0.0528%" height="15" fill="rgb(241,198,18)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="597" width="0.0528%" height="15" fill="rgb(252,97,53)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="581" width="0.0528%" height="15" fill="rgb(220,88,7)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="565" width="0.0528%" height="15" fill="rgb(213,176,14)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="549" width="0.0528%" height="15" fill="rgb(246,73,7)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="533" width="0.0528%" height="15" fill="rgb(245,64,36)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="517" width="0.0528%" height="15" fill="rgb(245,80,10)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="501" width="0.0528%" height="15" fill="rgb(232,107,50)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="485" width="0.0528%" height="15" fill="rgb(253,3,0)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="469" width="0.0528%" height="15" fill="rgb(212,99,53)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="453" width="0.0528%" height="15" fill="rgb(249,111,54)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="437" width="0.0528%" height="15" fill="rgb(249,55,30)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="41.9801%" y="421" width="0.0528%" height="15" fill="rgb(237,47,42)" fg:x="3973" fg:w="5"/><text x="42.2301%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.07%)</title><rect x="41.9696%" y="773" width="0.0740%" height="15" fill="rgb(211,20,18)" fg:x="3972" fg:w="7"/><text x="42.2196%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.07%)</title><rect x="41.9696%" y="757" width="0.0740%" height="15" fill="rgb(231,203,46)" fg:x="3972" fg:w="7"/><text x="42.2196%" y="767.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.07%)</title><rect x="41.9696%" y="741" width="0.0740%" height="15" fill="rgb(237,142,3)" fg:x="3972" fg:w="7"/><text x="42.2196%" y="751.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.07%)</title><rect x="41.9696%" y="725" width="0.0740%" height="15" fill="rgb(241,107,1)" fg:x="3972" fg:w="7"/><text x="42.2196%" y="735.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="42.0330%" y="709" width="0.0106%" height="15" fill="rgb(229,83,13)" fg:x="3978" fg:w="1"/><text x="42.2830%" y="719.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="42.0330%" y="693" width="0.0106%" height="15" fill="rgb(241,91,40)" fg:x="3978" fg:w="1"/><text x="42.2830%" y="703.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="42.0330%" y="677" width="0.0106%" height="15" fill="rgb(225,3,45)" fg:x="3978" fg:w="1"/><text x="42.2830%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="42.0647%" y="757" width="0.0106%" height="15" fill="rgb(244,223,14)" fg:x="3981" fg:w="1"/><text x="42.3147%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.14%)</title><rect x="41.9484%" y="821" width="0.1374%" height="15" fill="rgb(224,124,37)" fg:x="3970" fg:w="13"/><text x="42.1984%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.14%)</title><rect x="41.9484%" y="805" width="0.1374%" height="15" fill="rgb(251,171,30)" fg:x="3970" fg:w="13"/><text x="42.1984%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.13%)</title><rect x="41.9590%" y="789" width="0.1268%" height="15" fill="rgb(236,46,54)" fg:x="3971" fg:w="12"/><text x="42.2090%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="42.0435%" y="773" width="0.0423%" height="15" fill="rgb(245,213,5)" fg:x="3979" fg:w="4"/><text x="42.2935%" y="783.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="42.0752%" y="757" width="0.0106%" height="15" fill="rgb(230,144,27)" fg:x="3982" fg:w="1"/><text x="42.3252%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.15%)</title><rect x="41.9484%" y="837" width="0.1479%" height="15" fill="rgb(220,86,6)" fg:x="3970" fg:w="14"/><text x="42.1984%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="42.0858%" y="821" width="0.0106%" height="15" fill="rgb(240,20,13)" fg:x="3983" fg:w="1"/><text x="42.3358%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="42.0964%" y="837" width="0.0106%" height="15" fill="rgb(217,89,34)" fg:x="3984" fg:w="1"/><text x="42.3464%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (37 samples, 0.39%)</title><rect x="42.1069%" y="837" width="0.3910%" height="15" fill="rgb(229,13,5)" fg:x="3985" fg:w="37"/><text x="42.3569%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="42.5613%" y="805" width="0.0317%" height="15" fill="rgb(244,67,35)" fg:x="4028" fg:w="3"/><text x="42.8113%" y="815.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="42.5613%" y="789" width="0.0317%" height="15" fill="rgb(221,40,2)" fg:x="4028" fg:w="3"/><text x="42.8113%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="42.6352%" y="725" width="0.0106%" height="15" fill="rgb(237,157,21)" fg:x="4035" fg:w="1"/><text x="42.8852%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="42.7726%" y="629" width="0.0106%" height="15" fill="rgb(222,94,11)" fg:x="4048" fg:w="1"/><text x="43.0226%" y="639.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6 samples, 0.06%)</title><rect x="42.7832%" y="629" width="0.0634%" height="15" fill="rgb(249,113,6)" fg:x="4049" fg:w="6"/><text x="43.0332%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8360%" y="613" width="0.0106%" height="15" fill="rgb(238,137,36)" fg:x="4054" fg:w="1"/><text x="43.0860%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8360%" y="597" width="0.0106%" height="15" fill="rgb(210,102,26)" fg:x="4054" fg:w="1"/><text x="43.0860%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8360%" y="581" width="0.0106%" height="15" fill="rgb(218,30,30)" fg:x="4054" fg:w="1"/><text x="43.0860%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8360%" y="565" width="0.0106%" height="15" fill="rgb(214,67,26)" fg:x="4054" fg:w="1"/><text x="43.0860%" y="575.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="42.8466%" y="629" width="0.0211%" height="15" fill="rgb(251,9,53)" fg:x="4055" fg:w="2"/><text x="43.0966%" y="639.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="613" width="0.1057%" height="15" fill="rgb(228,204,25)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="623.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="597" width="0.1057%" height="15" fill="rgb(207,153,8)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="581" width="0.1057%" height="15" fill="rgb(242,9,16)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="565" width="0.1057%" height="15" fill="rgb(217,211,10)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="549" width="0.1057%" height="15" fill="rgb(219,228,52)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="533" width="0.1057%" height="15" fill="rgb(231,92,29)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="517" width="0.1057%" height="15" fill="rgb(232,8,23)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="501" width="0.1057%" height="15" fill="rgb(216,211,34)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="511.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="485" width="0.1057%" height="15" fill="rgb(236,151,0)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="469" width="0.1057%" height="15" fill="rgb(209,168,3)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="453" width="0.1057%" height="15" fill="rgb(208,129,28)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="437" width="0.1057%" height="15" fill="rgb(229,78,22)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="421" width="0.1057%" height="15" fill="rgb(228,187,13)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="405" width="0.1057%" height="15" fill="rgb(240,119,24)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="42.9417%" y="389" width="0.1057%" height="15" fill="rgb(209,194,42)" fg:x="4064" fg:w="10"/><text x="43.1917%" y="399.50"></text></g><g><title>alloc_perturb (1 samples, 0.01%)</title><rect x="43.0473%" y="613" width="0.0106%" height="15" fill="rgb(247,200,46)" fg:x="4074" fg:w="1"/><text x="43.2973%" y="623.50"></text></g><g><title>malloc_consolidate (4 samples, 0.04%)</title><rect x="43.0579%" y="613" width="0.0423%" height="15" fill="rgb(218,76,16)" fg:x="4075" fg:w="4"/><text x="43.3079%" y="623.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="43.1107%" y="597" width="0.4544%" height="15" fill="rgb(225,21,48)" fg:x="4080" fg:w="43"/><text x="43.3607%" y="607.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="43.1213%" y="581" width="0.4438%" height="15" fill="rgb(239,223,50)" fg:x="4081" fg:w="42"/><text x="43.3713%" y="591.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="43.1213%" y="565" width="0.4438%" height="15" fill="rgb(244,45,21)" fg:x="4081" fg:w="42"/><text x="43.3713%" y="575.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="43.1213%" y="549" width="0.4438%" height="15" fill="rgb(232,33,43)" fg:x="4081" fg:w="42"/><text x="43.3713%" y="559.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="43.1213%" y="533" width="0.4438%" height="15" fill="rgb(209,8,3)" fg:x="4081" fg:w="42"/><text x="43.3713%" y="543.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="43.1213%" y="517" width="0.4438%" height="15" fill="rgb(214,25,53)" fg:x="4081" fg:w="42"/><text x="43.3713%" y="527.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="43.1213%" y="501" width="0.4438%" height="15" fill="rgb(254,186,54)" fg:x="4081" fg:w="42"/><text x="43.3713%" y="511.50"></text></g><g><title>[unknown] (41 samples, 0.43%)</title><rect x="43.1319%" y="485" width="0.4332%" height="15" fill="rgb(208,174,49)" fg:x="4082" fg:w="41"/><text x="43.3819%" y="495.50"></text></g><g><title>[unknown] (38 samples, 0.40%)</title><rect x="43.1636%" y="469" width="0.4015%" height="15" fill="rgb(233,191,51)" fg:x="4085" fg:w="38"/><text x="43.4136%" y="479.50"></text></g><g><title>[unknown] (34 samples, 0.36%)</title><rect x="43.2058%" y="453" width="0.3593%" height="15" fill="rgb(222,134,10)" fg:x="4089" fg:w="34"/><text x="43.4558%" y="463.50"></text></g><g><title>[unknown] (33 samples, 0.35%)</title><rect x="43.2164%" y="437" width="0.3487%" height="15" fill="rgb(230,226,20)" fg:x="4090" fg:w="33"/><text x="43.4664%" y="447.50"></text></g><g><title>[unknown] (31 samples, 0.33%)</title><rect x="43.2375%" y="421" width="0.3276%" height="15" fill="rgb(251,111,25)" fg:x="4092" fg:w="31"/><text x="43.4875%" y="431.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="43.3115%" y="405" width="0.2536%" height="15" fill="rgb(224,40,46)" fg:x="4099" fg:w="24"/><text x="43.5615%" y="415.50"></text></g><g><title>[unknown] (23 samples, 0.24%)</title><rect x="43.3221%" y="389" width="0.2430%" height="15" fill="rgb(236,108,47)" fg:x="4100" fg:w="23"/><text x="43.5721%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="43.3326%" y="373" width="0.2325%" height="15" fill="rgb(234,93,0)" fg:x="4101" fg:w="22"/><text x="43.5826%" y="383.50"></text></g><g><title>sysmalloc (125 samples, 1.32%)</title><rect x="43.1002%" y="613" width="1.3208%" height="15" fill="rgb(224,213,32)" fg:x="4079" fg:w="125"/><text x="43.3502%" y="623.50"></text></g><g><title>grow_heap (81 samples, 0.86%)</title><rect x="43.5651%" y="597" width="0.8559%" height="15" fill="rgb(251,11,48)" fg:x="4123" fg:w="81"/><text x="43.8151%" y="607.50"></text></g><g><title>__GI___mprotect (81 samples, 0.86%)</title><rect x="43.5651%" y="581" width="0.8559%" height="15" fill="rgb(236,173,5)" fg:x="4123" fg:w="81"/><text x="43.8151%" y="591.50"></text></g><g><title>[unknown] (81 samples, 0.86%)</title><rect x="43.5651%" y="565" width="0.8559%" height="15" fill="rgb(230,95,12)" fg:x="4123" fg:w="81"/><text x="43.8151%" y="575.50"></text></g><g><title>[unknown] (80 samples, 0.85%)</title><rect x="43.5757%" y="549" width="0.8453%" height="15" fill="rgb(232,209,1)" fg:x="4124" fg:w="80"/><text x="43.8257%" y="559.50"></text></g><g><title>[unknown] (79 samples, 0.83%)</title><rect x="43.5862%" y="533" width="0.8347%" height="15" fill="rgb(232,6,1)" fg:x="4125" fg:w="79"/><text x="43.8362%" y="543.50"></text></g><g><title>[unknown] (78 samples, 0.82%)</title><rect x="43.5968%" y="517" width="0.8242%" height="15" fill="rgb(210,224,50)" fg:x="4126" fg:w="78"/><text x="43.8468%" y="527.50"></text></g><g><title>[unknown] (77 samples, 0.81%)</title><rect x="43.6074%" y="501" width="0.8136%" height="15" fill="rgb(228,127,35)" fg:x="4127" fg:w="77"/><text x="43.8574%" y="511.50"></text></g><g><title>[unknown] (75 samples, 0.79%)</title><rect x="43.6285%" y="485" width="0.7925%" height="15" fill="rgb(245,102,45)" fg:x="4129" fg:w="75"/><text x="43.8785%" y="495.50"></text></g><g><title>[unknown] (72 samples, 0.76%)</title><rect x="43.6602%" y="469" width="0.7608%" height="15" fill="rgb(214,1,49)" fg:x="4132" fg:w="72"/><text x="43.9102%" y="479.50"></text></g><g><title>[unknown] (68 samples, 0.72%)</title><rect x="43.7025%" y="453" width="0.7185%" height="15" fill="rgb(226,163,40)" fg:x="4136" fg:w="68"/><text x="43.9525%" y="463.50"></text></g><g><title>[unknown] (63 samples, 0.67%)</title><rect x="43.7553%" y="437" width="0.6657%" height="15" fill="rgb(239,212,28)" fg:x="4141" fg:w="63"/><text x="44.0053%" y="447.50"></text></g><g><title>[unknown] (62 samples, 0.66%)</title><rect x="43.7658%" y="421" width="0.6551%" height="15" fill="rgb(220,20,13)" fg:x="4142" fg:w="62"/><text x="44.0158%" y="431.50"></text></g><g><title>[unknown] (56 samples, 0.59%)</title><rect x="43.8292%" y="405" width="0.5917%" height="15" fill="rgb(210,164,35)" fg:x="4148" fg:w="56"/><text x="44.0792%" y="415.50"></text></g><g><title>[unknown] (53 samples, 0.56%)</title><rect x="43.8609%" y="389" width="0.5600%" height="15" fill="rgb(248,109,41)" fg:x="4151" fg:w="53"/><text x="44.1109%" y="399.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="43.9032%" y="373" width="0.5178%" height="15" fill="rgb(238,23,50)" fg:x="4155" fg:w="49"/><text x="44.1532%" y="383.50"></text></g><g><title>[unknown] (45 samples, 0.48%)</title><rect x="43.9455%" y="357" width="0.4755%" height="15" fill="rgb(211,48,49)" fg:x="4159" fg:w="45"/><text x="44.1955%" y="367.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="44.4210%" y="613" width="0.0211%" height="15" fill="rgb(223,36,21)" fg:x="4204" fg:w="2"/><text x="44.6710%" y="623.50"></text></g><g><title>_int_realloc (162 samples, 1.71%)</title><rect x="42.7409%" y="645" width="1.7117%" height="15" fill="rgb(207,123,46)" fg:x="4045" fg:w="162"/><text x="42.9909%" y="655.50"></text></g><g><title>_int_malloc (150 samples, 1.58%)</title><rect x="42.8677%" y="629" width="1.5850%" height="15" fill="rgb(240,218,32)" fg:x="4057" fg:w="150"/><text x="43.1177%" y="639.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="44.4421%" y="613" width="0.0106%" height="15" fill="rgb(252,5,43)" fg:x="4206" fg:w="1"/><text x="44.6921%" y="623.50"></text></g><g><title>__GI___libc_realloc (170 samples, 1.80%)</title><rect x="42.6669%" y="661" width="1.7963%" height="15" fill="rgb(252,84,19)" fg:x="4038" fg:w="170"/><text x="42.9169%" y="671.50">_..</text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="44.4527%" y="645" width="0.0106%" height="15" fill="rgb(243,152,39)" fg:x="4207" fg:w="1"/><text x="44.7027%" y="655.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="44.4527%" y="629" width="0.0106%" height="15" fill="rgb(234,160,15)" fg:x="4207" fg:w="1"/><text x="44.7027%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (171 samples, 1.81%)</title><rect x="42.6669%" y="709" width="1.8068%" height="15" fill="rgb(237,34,20)" fg:x="4038" fg:w="171"/><text x="42.9169%" y="719.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (171 samples, 1.81%)</title><rect x="42.6669%" y="693" width="1.8068%" height="15" fill="rgb(229,97,13)" fg:x="4038" fg:w="171"/><text x="42.9169%" y="703.50">a..</text></g><g><title>alloc::alloc::realloc (171 samples, 1.81%)</title><rect x="42.6669%" y="677" width="1.8068%" height="15" fill="rgb(234,71,50)" fg:x="4038" fg:w="171"/><text x="42.9169%" y="687.50">a..</text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="44.4632%" y="661" width="0.0106%" height="15" fill="rgb(253,155,4)" fg:x="4208" fg:w="1"/><text x="44.7132%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="44.4632%" y="645" width="0.0106%" height="15" fill="rgb(222,185,37)" fg:x="4208" fg:w="1"/><text x="44.7132%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (175 samples, 1.85%)</title><rect x="42.6458%" y="725" width="1.8491%" height="15" fill="rgb(251,177,13)" fg:x="4036" fg:w="175"/><text x="42.8958%" y="735.50">a..</text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="44.4738%" y="709" width="0.0211%" height="15" fill="rgb(250,179,40)" fg:x="4209" fg:w="2"/><text x="44.7238%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (181 samples, 1.91%)</title><rect x="42.6247%" y="757" width="1.9125%" height="15" fill="rgb(242,44,2)" fg:x="4034" fg:w="181"/><text x="42.8747%" y="767.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (181 samples, 1.91%)</title><rect x="42.6247%" y="741" width="1.9125%" height="15" fill="rgb(216,177,13)" fg:x="4034" fg:w="181"/><text x="42.8747%" y="751.50">a..</text></g><g><title>core::cmp::max (4 samples, 0.04%)</title><rect x="44.4949%" y="725" width="0.0423%" height="15" fill="rgb(216,106,43)" fg:x="4211" fg:w="4"/><text x="44.7449%" y="735.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.04%)</title><rect x="44.4949%" y="709" width="0.0423%" height="15" fill="rgb(216,183,2)" fg:x="4211" fg:w="4"/><text x="44.7449%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.04%)</title><rect x="44.4949%" y="693" width="0.0423%" height="15" fill="rgb(249,75,3)" fg:x="4211" fg:w="4"/><text x="44.7449%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="44.5372%" y="757" width="0.0106%" height="15" fill="rgb(219,67,39)" fg:x="4215" fg:w="1"/><text x="44.7872%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="44.5372%" y="741" width="0.0106%" height="15" fill="rgb(253,228,2)" fg:x="4215" fg:w="1"/><text x="44.7872%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (201 samples, 2.12%)</title><rect x="42.5930%" y="805" width="2.1238%" height="15" fill="rgb(235,138,27)" fg:x="4031" fg:w="201"/><text x="42.8430%" y="815.50">c..</text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (200 samples, 2.11%)</title><rect x="42.6036%" y="789" width="2.1133%" height="15" fill="rgb(236,97,51)" fg:x="4032" fg:w="200"/><text x="42.8536%" y="799.50">p..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (200 samples, 2.11%)</title><rect x="42.6036%" y="773" width="2.1133%" height="15" fill="rgb(240,80,30)" fg:x="4032" fg:w="200"/><text x="42.8536%" y="783.50">a..</text></g><g><title>core::ptr::write (16 samples, 0.17%)</title><rect x="44.5478%" y="757" width="0.1691%" height="15" fill="rgb(230,178,19)" fg:x="4216" fg:w="16"/><text x="44.7978%" y="767.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.01%)</title><rect x="44.7168%" y="773" width="0.0106%" height="15" fill="rgb(210,190,27)" fg:x="4232" fg:w="1"/><text x="44.9668%" y="783.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.01%)</title><rect x="44.7168%" y="757" width="0.0106%" height="15" fill="rgb(222,107,31)" fg:x="4232" fg:w="1"/><text x="44.9668%" y="767.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.01%)</title><rect x="44.7168%" y="741" width="0.0106%" height="15" fill="rgb(216,127,34)" fg:x="4232" fg:w="1"/><text x="44.9668%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="44.7168%" y="725" width="0.0106%" height="15" fill="rgb(234,116,52)" fg:x="4232" fg:w="1"/><text x="44.9668%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="44.7168%" y="709" width="0.0106%" height="15" fill="rgb(222,124,15)" fg:x="4232" fg:w="1"/><text x="44.9668%" y="719.50"></text></g><g><title>__GI___libc_free (10 samples, 0.11%)</title><rect x="44.7274%" y="677" width="0.1057%" height="15" fill="rgb(231,179,28)" fg:x="4233" fg:w="10"/><text x="44.9774%" y="687.50"></text></g><g><title>_int_free (10 samples, 0.11%)</title><rect x="44.7274%" y="661" width="0.1057%" height="15" fill="rgb(226,93,45)" fg:x="4233" fg:w="10"/><text x="44.9774%" y="671.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="44.8225%" y="645" width="0.0106%" height="15" fill="rgb(215,8,51)" fg:x="4242" fg:w="1"/><text x="45.0725%" y="655.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="44.8331%" y="677" width="0.0106%" height="15" fill="rgb(223,106,5)" fg:x="4243" fg:w="1"/><text x="45.0831%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="44.8331%" y="661" width="0.0106%" height="15" fill="rgb(250,191,5)" fg:x="4243" fg:w="1"/><text x="45.0831%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.13%)</title><rect x="44.7274%" y="709" width="0.1268%" height="15" fill="rgb(242,132,44)" fg:x="4233" fg:w="12"/><text x="44.9774%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.13%)</title><rect x="44.7274%" y="693" width="0.1268%" height="15" fill="rgb(251,152,29)" fg:x="4233" fg:w="12"/><text x="44.9774%" y="703.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="44.8436%" y="677" width="0.0106%" height="15" fill="rgb(218,179,5)" fg:x="4244" fg:w="1"/><text x="45.0936%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (13 samples, 0.14%)</title><rect x="44.7274%" y="773" width="0.1374%" height="15" fill="rgb(227,67,19)" fg:x="4233" fg:w="13"/><text x="44.9774%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.14%)</title><rect x="44.7274%" y="757" width="0.1374%" height="15" fill="rgb(233,119,31)" fg:x="4233" fg:w="13"/><text x="44.9774%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (13 samples, 0.14%)</title><rect x="44.7274%" y="741" width="0.1374%" height="15" fill="rgb(241,120,22)" fg:x="4233" fg:w="13"/><text x="44.9774%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.14%)</title><rect x="44.7274%" y="725" width="0.1374%" height="15" fill="rgb(224,102,30)" fg:x="4233" fg:w="13"/><text x="44.9774%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="44.8542%" y="709" width="0.0106%" height="15" fill="rgb(210,164,37)" fg:x="4245" fg:w="1"/><text x="45.1042%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (226 samples, 2.39%)</title><rect x="42.4979%" y="837" width="2.3880%" height="15" fill="rgb(226,191,16)" fg:x="4022" fg:w="226"/><text x="42.7479%" y="847.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (224 samples, 2.37%)</title><rect x="42.5190%" y="821" width="2.3669%" height="15" fill="rgb(214,40,45)" fg:x="4024" fg:w="224"/><text x="42.7690%" y="831.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (16 samples, 0.17%)</title><rect x="44.7168%" y="805" width="0.1691%" height="15" fill="rgb(244,29,26)" fg:x="4232" fg:w="16"/><text x="44.9668%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="44.7168%" y="789" width="0.1691%" height="15" fill="rgb(216,16,5)" fg:x="4232" fg:w="16"/><text x="44.9668%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,usize)&gt;]&gt; (2 samples, 0.02%)</title><rect x="44.8648%" y="773" width="0.0211%" height="15" fill="rgb(249,76,35)" fg:x="4246" fg:w="2"/><text x="45.1148%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="44.9176%" y="773" width="0.0106%" height="15" fill="rgb(207,11,44)" fg:x="4251" fg:w="1"/><text x="45.1676%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="44.9281%" y="773" width="0.0106%" height="15" fill="rgb(228,190,49)" fg:x="4252" fg:w="1"/><text x="45.1781%" y="783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.01%)</title><rect x="44.9281%" y="757" width="0.0106%" height="15" fill="rgb(214,173,12)" fg:x="4252" fg:w="1"/><text x="45.1781%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="44.8859%" y="789" width="0.0740%" height="15" fill="rgb(218,26,35)" fg:x="4248" fg:w="7"/><text x="45.1359%" y="799.50"></text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="44.9387%" y="773" width="0.0211%" height="15" fill="rgb(220,200,19)" fg:x="4253" fg:w="2"/><text x="45.1887%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.10%)</title><rect x="44.8859%" y="837" width="0.0951%" height="15" fill="rgb(239,95,49)" fg:x="4248" fg:w="9"/><text x="45.1359%" y="847.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.10%)</title><rect x="44.8859%" y="821" width="0.0951%" height="15" fill="rgb(235,85,53)" fg:x="4248" fg:w="9"/><text x="45.1359%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.10%)</title><rect x="44.8859%" y="805" width="0.0951%" height="15" fill="rgb(233,133,31)" fg:x="4248" fg:w="9"/><text x="45.1359%" y="815.50"></text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="44.9598%" y="789" width="0.0211%" height="15" fill="rgb(218,25,20)" fg:x="4255" fg:w="2"/><text x="45.2098%" y="799.50"></text></g><g><title>_int_free (18 samples, 0.19%)</title><rect x="44.9915%" y="741" width="0.1902%" height="15" fill="rgb(252,210,38)" fg:x="4258" fg:w="18"/><text x="45.2415%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (21 samples, 0.22%)</title><rect x="44.9810%" y="837" width="0.2219%" height="15" fill="rgb(242,134,21)" fg:x="4257" fg:w="21"/><text x="45.2310%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (21 samples, 0.22%)</title><rect x="44.9810%" y="821" width="0.2219%" height="15" fill="rgb(213,28,48)" fg:x="4257" fg:w="21"/><text x="45.2310%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.22%)</title><rect x="44.9810%" y="805" width="0.2219%" height="15" fill="rgb(250,196,2)" fg:x="4257" fg:w="21"/><text x="45.2310%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.22%)</title><rect x="44.9810%" y="789" width="0.2219%" height="15" fill="rgb(227,5,17)" fg:x="4257" fg:w="21"/><text x="45.2310%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.22%)</title><rect x="44.9810%" y="773" width="0.2219%" height="15" fill="rgb(221,226,24)" fg:x="4257" fg:w="21"/><text x="45.2310%" y="783.50"></text></g><g><title>__GI___libc_free (21 samples, 0.22%)</title><rect x="44.9810%" y="757" width="0.2219%" height="15" fill="rgb(211,5,48)" fg:x="4257" fg:w="21"/><text x="45.2310%" y="767.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="45.1817%" y="741" width="0.0211%" height="15" fill="rgb(219,150,6)" fg:x="4276" fg:w="2"/><text x="45.4317%" y="751.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="45.1817%" y="725" width="0.0211%" height="15" fill="rgb(251,46,16)" fg:x="4276" fg:w="2"/><text x="45.4317%" y="735.50"></text></g><g><title>_int_free (9 samples, 0.10%)</title><rect x="45.2346%" y="661" width="0.0951%" height="15" fill="rgb(220,204,40)" fg:x="4281" fg:w="9"/><text x="45.4846%" y="671.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="45.3191%" y="645" width="0.0106%" height="15" fill="rgb(211,85,2)" fg:x="4289" fg:w="1"/><text x="45.5691%" y="655.50"></text></g><g><title>__GI___libc_free (14 samples, 0.15%)</title><rect x="45.2029%" y="677" width="0.1479%" height="15" fill="rgb(229,17,7)" fg:x="4278" fg:w="14"/><text x="45.4529%" y="687.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="45.3297%" y="661" width="0.0211%" height="15" fill="rgb(239,72,28)" fg:x="4290" fg:w="2"/><text x="45.5797%" y="671.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="45.3297%" y="645" width="0.0211%" height="15" fill="rgb(230,47,54)" fg:x="4290" fg:w="2"/><text x="45.5797%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (15 samples, 0.16%)</title><rect x="45.2029%" y="837" width="0.1585%" height="15" fill="rgb(214,50,8)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (15 samples, 0.16%)</title><rect x="45.2029%" y="821" width="0.1585%" height="15" fill="rgb(216,198,43)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (15 samples, 0.16%)</title><rect x="45.2029%" y="805" width="0.1585%" height="15" fill="rgb(234,20,35)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.16%)</title><rect x="45.2029%" y="789" width="0.1585%" height="15" fill="rgb(254,45,19)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (15 samples, 0.16%)</title><rect x="45.2029%" y="773" width="0.1585%" height="15" fill="rgb(219,14,44)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.16%)</title><rect x="45.2029%" y="757" width="0.1585%" height="15" fill="rgb(217,220,26)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (15 samples, 0.16%)</title><rect x="45.2029%" y="741" width="0.1585%" height="15" fill="rgb(213,158,28)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.16%)</title><rect x="45.2029%" y="725" width="0.1585%" height="15" fill="rgb(252,51,52)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.16%)</title><rect x="45.2029%" y="709" width="0.1585%" height="15" fill="rgb(246,89,16)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.16%)</title><rect x="45.2029%" y="693" width="0.1585%" height="15" fill="rgb(216,158,49)" fg:x="4278" fg:w="15"/><text x="45.4529%" y="703.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="45.3508%" y="677" width="0.0106%" height="15" fill="rgb(236,107,19)" fg:x="4292" fg:w="1"/><text x="45.6008%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="45.3508%" y="661" width="0.0106%" height="15" fill="rgb(228,185,30)" fg:x="4292" fg:w="1"/><text x="45.6008%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="45.8052%" y="821" width="0.0106%" height="15" fill="rgb(246,134,8)" fg:x="4335" fg:w="1"/><text x="46.0552%" y="831.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="45.8052%" y="805" width="0.0106%" height="15" fill="rgb(214,143,50)" fg:x="4335" fg:w="1"/><text x="46.0552%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="45.8157%" y="821" width="0.0317%" height="15" fill="rgb(228,75,8)" fg:x="4336" fg:w="3"/><text x="46.0657%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="45.8369%" y="805" width="0.0106%" height="15" fill="rgb(207,175,4)" fg:x="4338" fg:w="1"/><text x="46.0869%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="45.8369%" y="789" width="0.0106%" height="15" fill="rgb(205,108,24)" fg:x="4338" fg:w="1"/><text x="46.0869%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (22 samples, 0.23%)</title><rect x="45.8474%" y="789" width="0.2325%" height="15" fill="rgb(244,120,49)" fg:x="4339" fg:w="22"/><text x="46.0974%" y="799.50"></text></g><g><title>core::ptr::read (7 samples, 0.07%)</title><rect x="46.0059%" y="773" width="0.0740%" height="15" fill="rgb(223,47,38)" fg:x="4354" fg:w="7"/><text x="46.2559%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.25%)</title><rect x="45.8474%" y="821" width="0.2536%" height="15" fill="rgb(229,179,11)" fg:x="4339" fg:w="24"/><text x="46.0974%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (24 samples, 0.25%)</title><rect x="45.8474%" y="805" width="0.2536%" height="15" fill="rgb(231,122,1)" fg:x="4339" fg:w="24"/><text x="46.0974%" y="815.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="46.0799%" y="789" width="0.0211%" height="15" fill="rgb(245,119,9)" fg:x="4361" fg:w="2"/><text x="46.3299%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="46.0799%" y="773" width="0.0211%" height="15" fill="rgb(241,163,25)" fg:x="4361" fg:w="2"/><text x="46.3299%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="46.0799%" y="757" width="0.0211%" height="15" fill="rgb(217,214,3)" fg:x="4361" fg:w="2"/><text x="46.3299%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="613" width="0.0106%" height="15" fill="rgb(240,86,28)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="597" width="0.0106%" height="15" fill="rgb(215,47,9)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="581" width="0.0106%" height="15" fill="rgb(252,25,45)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="565" width="0.0106%" height="15" fill="rgb(251,164,9)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="549" width="0.0106%" height="15" fill="rgb(233,194,0)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="533" width="0.0106%" height="15" fill="rgb(249,111,24)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="517" width="0.0106%" height="15" fill="rgb(250,223,3)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="501" width="0.0106%" height="15" fill="rgb(236,178,37)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="485" width="0.0106%" height="15" fill="rgb(241,158,50)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="469" width="0.0106%" height="15" fill="rgb(213,121,41)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.2806%" y="453" width="0.0106%" height="15" fill="rgb(240,92,3)" fg:x="4380" fg:w="1"/><text x="46.5306%" y="463.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="46.2912%" y="613" width="0.0211%" height="15" fill="rgb(205,123,3)" fg:x="4381" fg:w="2"/><text x="46.5412%" y="623.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.18%)</title><rect x="46.1855%" y="629" width="0.1796%" height="15" fill="rgb(205,97,47)" fg:x="4371" fg:w="17"/><text x="46.4355%" y="639.50"></text></g><g><title>tcache_get (5 samples, 0.05%)</title><rect x="46.3123%" y="613" width="0.0528%" height="15" fill="rgb(247,152,14)" fg:x="4383" fg:w="5"/><text x="46.5623%" y="623.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="46.3652%" y="629" width="0.0423%" height="15" fill="rgb(248,195,53)" fg:x="4388" fg:w="4"/><text x="46.6152%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="46.3652%" y="613" width="0.0423%" height="15" fill="rgb(226,201,16)" fg:x="4388" fg:w="4"/><text x="46.6152%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.29%)</title><rect x="46.1327%" y="725" width="0.2853%" height="15" fill="rgb(205,98,0)" fg:x="4366" fg:w="27"/><text x="46.3827%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.29%)</title><rect x="46.1327%" y="709" width="0.2853%" height="15" fill="rgb(214,191,48)" fg:x="4366" fg:w="27"/><text x="46.3827%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.29%)</title><rect x="46.1327%" y="693" width="0.2853%" height="15" fill="rgb(237,112,39)" fg:x="4366" fg:w="27"/><text x="46.3827%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.25%)</title><rect x="46.1644%" y="677" width="0.2536%" height="15" fill="rgb(247,203,27)" fg:x="4369" fg:w="24"/><text x="46.4144%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.25%)</title><rect x="46.1644%" y="661" width="0.2536%" height="15" fill="rgb(235,124,28)" fg:x="4369" fg:w="24"/><text x="46.4144%" y="671.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.25%)</title><rect x="46.1644%" y="645" width="0.2536%" height="15" fill="rgb(208,207,46)" fg:x="4369" fg:w="24"/><text x="46.4144%" y="655.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="46.4074%" y="629" width="0.0106%" height="15" fill="rgb(234,176,4)" fg:x="4392" fg:w="1"/><text x="46.6574%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.38%)</title><rect x="46.1010%" y="821" width="0.3804%" height="15" fill="rgb(230,133,28)" fg:x="4363" fg:w="36"/><text x="46.3510%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (33 samples, 0.35%)</title><rect x="46.1327%" y="805" width="0.3487%" height="15" fill="rgb(211,137,40)" fg:x="4366" fg:w="33"/><text x="46.3827%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.35%)</title><rect x="46.1327%" y="789" width="0.3487%" height="15" fill="rgb(254,35,13)" fg:x="4366" fg:w="33"/><text x="46.3827%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.35%)</title><rect x="46.1327%" y="773" width="0.3487%" height="15" fill="rgb(225,49,51)" fg:x="4366" fg:w="33"/><text x="46.3827%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.35%)</title><rect x="46.1327%" y="757" width="0.3487%" height="15" fill="rgb(251,10,15)" fg:x="4366" fg:w="33"/><text x="46.3827%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.35%)</title><rect x="46.1327%" y="741" width="0.3487%" height="15" fill="rgb(228,207,15)" fg:x="4366" fg:w="33"/><text x="46.3827%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.06%)</title><rect x="46.4180%" y="725" width="0.0634%" height="15" fill="rgb(241,99,19)" fg:x="4393" fg:w="6"/><text x="46.6680%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="46.4180%" y="709" width="0.0634%" height="15" fill="rgb(207,104,49)" fg:x="4393" fg:w="6"/><text x="46.6680%" y="719.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.03%)</title><rect x="46.4497%" y="693" width="0.0317%" height="15" fill="rgb(234,99,18)" fg:x="4396" fg:w="3"/><text x="46.6997%" y="703.50"></text></g><g><title>checked_request2size (4 samples, 0.04%)</title><rect x="46.7033%" y="741" width="0.0423%" height="15" fill="rgb(213,191,49)" fg:x="4420" fg:w="4"/><text x="46.9533%" y="751.50"></text></g><g><title>__GI___libc_malloc (30 samples, 0.32%)</title><rect x="46.5131%" y="757" width="0.3170%" height="15" fill="rgb(210,226,19)" fg:x="4402" fg:w="30"/><text x="46.7631%" y="767.50"></text></g><g><title>tcache_get (8 samples, 0.08%)</title><rect x="46.7456%" y="741" width="0.0845%" height="15" fill="rgb(229,97,18)" fg:x="4424" fg:w="8"/><text x="46.9956%" y="751.50"></text></g><g><title>__rdl_alloc (5 samples, 0.05%)</title><rect x="46.8301%" y="757" width="0.0528%" height="15" fill="rgb(211,167,15)" fg:x="4432" fg:w="5"/><text x="47.0801%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.05%)</title><rect x="46.8301%" y="741" width="0.0528%" height="15" fill="rgb(210,169,34)" fg:x="4432" fg:w="5"/><text x="47.0801%" y="751.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="46.8829%" y="757" width="0.0106%" height="15" fill="rgb(241,121,31)" fg:x="4437" fg:w="1"/><text x="47.1329%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.42%)</title><rect x="46.4814%" y="821" width="0.4227%" height="15" fill="rgb(232,40,11)" fg:x="4399" fg:w="40"/><text x="46.7314%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.42%)</title><rect x="46.4814%" y="805" width="0.4227%" height="15" fill="rgb(205,86,26)" fg:x="4399" fg:w="40"/><text x="46.7314%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.42%)</title><rect x="46.4814%" y="789" width="0.4227%" height="15" fill="rgb(231,126,28)" fg:x="4399" fg:w="40"/><text x="46.7314%" y="799.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.42%)</title><rect x="46.4814%" y="773" width="0.4227%" height="15" fill="rgb(219,221,18)" fg:x="4399" fg:w="40"/><text x="46.7314%" y="783.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="46.8935%" y="757" width="0.0106%" height="15" fill="rgb(211,40,0)" fg:x="4438" fg:w="1"/><text x="47.1435%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.01%)</title><rect x="46.9041%" y="789" width="0.0106%" height="15" fill="rgb(239,85,43)" fg:x="4439" fg:w="1"/><text x="47.1541%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (2 samples, 0.02%)</title><rect x="46.9041%" y="821" width="0.0211%" height="15" fill="rgb(231,55,21)" fg:x="4439" fg:w="2"/><text x="47.1541%" y="831.50"></text></g><g><title>alloc::slice::hack::into_vec (2 samples, 0.02%)</title><rect x="46.9041%" y="805" width="0.0211%" height="15" fill="rgb(225,184,43)" fg:x="4439" fg:w="2"/><text x="47.1541%" y="815.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="46.9146%" y="789" width="0.0106%" height="15" fill="rgb(251,158,41)" fg:x="4440" fg:w="1"/><text x="47.1646%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="46.9252%" y="773" width="0.0106%" height="15" fill="rgb(234,159,37)" fg:x="4441" fg:w="1"/><text x="47.1752%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="46.9252%" y="757" width="0.0106%" height="15" fill="rgb(216,204,22)" fg:x="4441" fg:w="1"/><text x="47.1752%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.02%)</title><rect x="46.9358%" y="773" width="0.0211%" height="15" fill="rgb(214,17,3)" fg:x="4442" fg:w="2"/><text x="47.1858%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="47.0626%" y="709" width="0.0106%" height="15" fill="rgb(212,111,17)" fg:x="4454" fg:w="1"/><text x="47.3126%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.05%)</title><rect x="47.0731%" y="709" width="0.0528%" height="15" fill="rgb(221,157,24)" fg:x="4455" fg:w="5"/><text x="47.3231%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.02%)</title><rect x="47.1048%" y="693" width="0.0211%" height="15" fill="rgb(252,16,13)" fg:x="4458" fg:w="2"/><text x="47.3548%" y="703.50"></text></g><g><title>[libc.so.6] (4 samples, 0.04%)</title><rect x="48.1086%" y="613" width="0.0423%" height="15" fill="rgb(221,62,2)" fg:x="4553" fg:w="4"/><text x="48.3586%" y="623.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="48.1509%" y="613" width="0.0528%" height="15" fill="rgb(247,87,22)" fg:x="4557" fg:w="5"/><text x="48.4009%" y="623.50"></text></g><g><title>_int_free (28 samples, 0.30%)</title><rect x="48.2037%" y="613" width="0.2959%" height="15" fill="rgb(215,73,9)" fg:x="4562" fg:w="28"/><text x="48.4537%" y="623.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="48.4784%" y="597" width="0.0211%" height="15" fill="rgb(207,175,33)" fg:x="4588" fg:w="2"/><text x="48.7284%" y="607.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="49.5351%" y="597" width="0.1268%" height="15" fill="rgb(243,129,54)" fg:x="4688" fg:w="12"/><text x="49.7851%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="581" width="0.1162%" height="15" fill="rgb(227,119,45)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="565" width="0.1162%" height="15" fill="rgb(205,109,36)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="549" width="0.1162%" height="15" fill="rgb(205,6,39)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="533" width="0.1162%" height="15" fill="rgb(221,32,16)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="517" width="0.1162%" height="15" fill="rgb(228,144,50)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="501" width="0.1162%" height="15" fill="rgb(229,201,53)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="485" width="0.1162%" height="15" fill="rgb(249,153,27)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="469" width="0.1162%" height="15" fill="rgb(227,106,25)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5456%" y="453" width="0.1162%" height="15" fill="rgb(230,65,29)" fg:x="4689" fg:w="11"/><text x="49.7956%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="49.5562%" y="437" width="0.1057%" height="15" fill="rgb(221,57,46)" fg:x="4690" fg:w="10"/><text x="49.8062%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="49.5562%" y="421" width="0.1057%" height="15" fill="rgb(229,161,17)" fg:x="4690" fg:w="10"/><text x="49.8062%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="49.5562%" y="405" width="0.1057%" height="15" fill="rgb(222,213,11)" fg:x="4690" fg:w="10"/><text x="49.8062%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="49.5562%" y="389" width="0.1057%" height="15" fill="rgb(235,35,13)" fg:x="4690" fg:w="10"/><text x="49.8062%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="49.5562%" y="373" width="0.1057%" height="15" fill="rgb(233,158,34)" fg:x="4690" fg:w="10"/><text x="49.8062%" y="383.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="49.6619%" y="597" width="0.0211%" height="15" fill="rgb(215,151,48)" fg:x="4700" fg:w="2"/><text x="49.9119%" y="607.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="49.6830%" y="597" width="0.0106%" height="15" fill="rgb(229,84,14)" fg:x="4702" fg:w="1"/><text x="49.9330%" y="607.50"></text></g><g><title>[unknown] (37 samples, 0.39%)</title><rect x="49.7041%" y="581" width="0.3910%" height="15" fill="rgb(229,68,14)" fg:x="4704" fg:w="37"/><text x="49.9541%" y="591.50"></text></g><g><title>[unknown] (34 samples, 0.36%)</title><rect x="49.7358%" y="565" width="0.3593%" height="15" fill="rgb(243,106,26)" fg:x="4707" fg:w="34"/><text x="49.9858%" y="575.50"></text></g><g><title>[unknown] (34 samples, 0.36%)</title><rect x="49.7358%" y="549" width="0.3593%" height="15" fill="rgb(206,45,38)" fg:x="4707" fg:w="34"/><text x="49.9858%" y="559.50"></text></g><g><title>[unknown] (34 samples, 0.36%)</title><rect x="49.7358%" y="533" width="0.3593%" height="15" fill="rgb(226,6,15)" fg:x="4707" fg:w="34"/><text x="49.9858%" y="543.50"></text></g><g><title>[unknown] (34 samples, 0.36%)</title><rect x="49.7358%" y="517" width="0.3593%" height="15" fill="rgb(232,22,54)" fg:x="4707" fg:w="34"/><text x="49.9858%" y="527.50"></text></g><g><title>[unknown] (33 samples, 0.35%)</title><rect x="49.7464%" y="501" width="0.3487%" height="15" fill="rgb(229,222,32)" fg:x="4708" fg:w="33"/><text x="49.9964%" y="511.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="49.7570%" y="485" width="0.3381%" height="15" fill="rgb(228,62,29)" fg:x="4709" fg:w="32"/><text x="50.0070%" y="495.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="49.7570%" y="469" width="0.3381%" height="15" fill="rgb(251,103,34)" fg:x="4709" fg:w="32"/><text x="50.0070%" y="479.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="49.7570%" y="453" width="0.3381%" height="15" fill="rgb(233,12,30)" fg:x="4709" fg:w="32"/><text x="50.0070%" y="463.50"></text></g><g><title>[unknown] (31 samples, 0.33%)</title><rect x="49.7675%" y="437" width="0.3276%" height="15" fill="rgb(238,52,0)" fg:x="4710" fg:w="31"/><text x="50.0175%" y="447.50"></text></g><g><title>[unknown] (30 samples, 0.32%)</title><rect x="49.7781%" y="421" width="0.3170%" height="15" fill="rgb(223,98,5)" fg:x="4711" fg:w="30"/><text x="50.0281%" y="431.50"></text></g><g><title>[unknown] (29 samples, 0.31%)</title><rect x="49.7887%" y="405" width="0.3064%" height="15" fill="rgb(228,75,37)" fg:x="4712" fg:w="29"/><text x="50.0387%" y="415.50"></text></g><g><title>[unknown] (28 samples, 0.30%)</title><rect x="49.7992%" y="389" width="0.2959%" height="15" fill="rgb(205,115,49)" fg:x="4713" fg:w="28"/><text x="50.0492%" y="399.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="49.8415%" y="373" width="0.2536%" height="15" fill="rgb(250,154,43)" fg:x="4717" fg:w="24"/><text x="50.0915%" y="383.50"></text></g><g><title>[unknown] (23 samples, 0.24%)</title><rect x="49.8521%" y="357" width="0.2430%" height="15" fill="rgb(226,43,29)" fg:x="4718" fg:w="23"/><text x="50.1021%" y="367.50"></text></g><g><title>sysmalloc (101 samples, 1.07%)</title><rect x="49.6936%" y="597" width="1.0672%" height="15" fill="rgb(249,228,39)" fg:x="4703" fg:w="101"/><text x="49.9436%" y="607.50"></text></g><g><title>grow_heap (63 samples, 0.67%)</title><rect x="50.0951%" y="581" width="0.6657%" height="15" fill="rgb(216,79,43)" fg:x="4741" fg:w="63"/><text x="50.3451%" y="591.50"></text></g><g><title>__GI___mprotect (63 samples, 0.67%)</title><rect x="50.0951%" y="565" width="0.6657%" height="15" fill="rgb(228,95,12)" fg:x="4741" fg:w="63"/><text x="50.3451%" y="575.50"></text></g><g><title>[unknown] (63 samples, 0.67%)</title><rect x="50.0951%" y="549" width="0.6657%" height="15" fill="rgb(249,221,15)" fg:x="4741" fg:w="63"/><text x="50.3451%" y="559.50"></text></g><g><title>[unknown] (62 samples, 0.66%)</title><rect x="50.1057%" y="533" width="0.6551%" height="15" fill="rgb(233,34,13)" fg:x="4742" fg:w="62"/><text x="50.3557%" y="543.50"></text></g><g><title>[unknown] (62 samples, 0.66%)</title><rect x="50.1057%" y="517" width="0.6551%" height="15" fill="rgb(214,103,39)" fg:x="4742" fg:w="62"/><text x="50.3557%" y="527.50"></text></g><g><title>[unknown] (62 samples, 0.66%)</title><rect x="50.1057%" y="501" width="0.6551%" height="15" fill="rgb(251,126,39)" fg:x="4742" fg:w="62"/><text x="50.3557%" y="511.50"></text></g><g><title>[unknown] (61 samples, 0.64%)</title><rect x="50.1162%" y="485" width="0.6445%" height="15" fill="rgb(214,216,36)" fg:x="4743" fg:w="61"/><text x="50.3662%" y="495.50"></text></g><g><title>[unknown] (60 samples, 0.63%)</title><rect x="50.1268%" y="469" width="0.6340%" height="15" fill="rgb(220,221,8)" fg:x="4744" fg:w="60"/><text x="50.3768%" y="479.50"></text></g><g><title>[unknown] (60 samples, 0.63%)</title><rect x="50.1268%" y="453" width="0.6340%" height="15" fill="rgb(240,216,3)" fg:x="4744" fg:w="60"/><text x="50.3768%" y="463.50"></text></g><g><title>[unknown] (57 samples, 0.60%)</title><rect x="50.1585%" y="437" width="0.6023%" height="15" fill="rgb(232,218,17)" fg:x="4747" fg:w="57"/><text x="50.4085%" y="447.50"></text></g><g><title>[unknown] (54 samples, 0.57%)</title><rect x="50.1902%" y="421" width="0.5706%" height="15" fill="rgb(229,163,45)" fg:x="4750" fg:w="54"/><text x="50.4402%" y="431.50"></text></g><g><title>[unknown] (51 samples, 0.54%)</title><rect x="50.2219%" y="405" width="0.5389%" height="15" fill="rgb(231,110,42)" fg:x="4753" fg:w="51"/><text x="50.4719%" y="415.50"></text></g><g><title>[unknown] (48 samples, 0.51%)</title><rect x="50.2536%" y="389" width="0.5072%" height="15" fill="rgb(208,170,48)" fg:x="4756" fg:w="48"/><text x="50.5036%" y="399.50"></text></g><g><title>[unknown] (46 samples, 0.49%)</title><rect x="50.2747%" y="373" width="0.4861%" height="15" fill="rgb(239,116,25)" fg:x="4758" fg:w="46"/><text x="50.5247%" y="383.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="50.3064%" y="357" width="0.4544%" height="15" fill="rgb(219,200,50)" fg:x="4761" fg:w="43"/><text x="50.5564%" y="367.50"></text></g><g><title>[unknown] (41 samples, 0.43%)</title><rect x="50.3276%" y="341" width="0.4332%" height="15" fill="rgb(245,200,0)" fg:x="4763" fg:w="41"/><text x="50.5776%" y="351.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="50.7608%" y="597" width="0.0106%" height="15" fill="rgb(245,119,33)" fg:x="4804" fg:w="1"/><text x="51.0108%" y="607.50"></text></g><g><title>_int_realloc (275 samples, 2.91%)</title><rect x="47.9079%" y="629" width="2.9057%" height="15" fill="rgb(231,125,12)" fg:x="4534" fg:w="275"/><text x="48.1579%" y="639.50">_i..</text></g><g><title>_int_malloc (219 samples, 2.31%)</title><rect x="48.4996%" y="613" width="2.3140%" height="15" fill="rgb(216,96,41)" fg:x="4590" fg:w="219"/><text x="48.7496%" y="623.50">_..</text></g><g><title>unlink_chunk (4 samples, 0.04%)</title><rect x="50.7713%" y="597" width="0.0423%" height="15" fill="rgb(248,43,45)" fg:x="4805" fg:w="4"/><text x="51.0213%" y="607.50"></text></g><g><title>__GI___libc_realloc (349 samples, 3.69%)</title><rect x="47.2527%" y="645" width="3.6877%" height="15" fill="rgb(217,222,7)" fg:x="4472" fg:w="349"/><text x="47.5027%" y="655.50">__GI..</text></g><g><title>arena_for_chunk (12 samples, 0.13%)</title><rect x="50.8136%" y="629" width="0.1268%" height="15" fill="rgb(233,28,6)" fg:x="4809" fg:w="12"/><text x="51.0636%" y="639.50"></text></g><g><title>arena_for_chunk (8 samples, 0.08%)</title><rect x="50.8559%" y="613" width="0.0845%" height="15" fill="rgb(231,218,15)" fg:x="4813" fg:w="8"/><text x="51.1059%" y="623.50"></text></g><g><title>heap_for_ptr (4 samples, 0.04%)</title><rect x="50.8981%" y="597" width="0.0423%" height="15" fill="rgb(226,171,48)" fg:x="4817" fg:w="4"/><text x="51.1481%" y="607.50"></text></g><g><title>__rdl_realloc (3 samples, 0.03%)</title><rect x="50.9404%" y="645" width="0.0317%" height="15" fill="rgb(235,201,9)" fg:x="4821" fg:w="3"/><text x="51.1904%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="50.9615%" y="629" width="0.0106%" height="15" fill="rgb(217,80,15)" fg:x="4823" fg:w="1"/><text x="51.2115%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (355 samples, 3.75%)</title><rect x="47.2527%" y="693" width="3.7511%" height="15" fill="rgb(219,152,8)" fg:x="4472" fg:w="355"/><text x="47.5027%" y="703.50">&lt;all..</text></g><g><title>alloc::alloc::Global::grow_impl (355 samples, 3.75%)</title><rect x="47.2527%" y="677" width="3.7511%" height="15" fill="rgb(243,107,38)" fg:x="4472" fg:w="355"/><text x="47.5027%" y="687.50">allo..</text></g><g><title>alloc::alloc::realloc (355 samples, 3.75%)</title><rect x="47.2527%" y="661" width="3.7511%" height="15" fill="rgb(231,17,5)" fg:x="4472" fg:w="355"/><text x="47.5027%" y="671.50">allo..</text></g><g><title>__rust_realloc (3 samples, 0.03%)</title><rect x="50.9721%" y="645" width="0.0317%" height="15" fill="rgb(209,25,54)" fg:x="4824" fg:w="3"/><text x="51.2221%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (372 samples, 3.93%)</title><rect x="47.1260%" y="709" width="3.9307%" height="15" fill="rgb(219,0,2)" fg:x="4460" fg:w="372"/><text x="47.3760%" y="719.50">allo..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.05%)</title><rect x="51.0038%" y="693" width="0.0528%" height="15" fill="rgb(246,9,5)" fg:x="4827" fg:w="5"/><text x="51.2538%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.03%)</title><rect x="51.0566%" y="709" width="0.0317%" height="15" fill="rgb(226,159,4)" fg:x="4832" fg:w="3"/><text x="51.3066%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.03%)</title><rect x="51.0566%" y="693" width="0.0317%" height="15" fill="rgb(219,175,34)" fg:x="4832" fg:w="3"/><text x="51.3066%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (398 samples, 4.21%)</title><rect x="46.9569%" y="773" width="4.2054%" height="15" fill="rgb(236,10,46)" fg:x="4444" fg:w="398"/><text x="47.2069%" y="783.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (398 samples, 4.21%)</title><rect x="46.9569%" y="757" width="4.2054%" height="15" fill="rgb(240,211,16)" fg:x="4444" fg:w="398"/><text x="47.2069%" y="767.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (397 samples, 4.19%)</title><rect x="46.9675%" y="741" width="4.1948%" height="15" fill="rgb(205,3,43)" fg:x="4445" fg:w="397"/><text x="47.2175%" y="751.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (397 samples, 4.19%)</title><rect x="46.9675%" y="725" width="4.1948%" height="15" fill="rgb(245,7,22)" fg:x="4445" fg:w="397"/><text x="47.2175%" y="735.50">alloc..</text></g><g><title>core::cmp::max (7 samples, 0.07%)</title><rect x="51.0883%" y="709" width="0.0740%" height="15" fill="rgb(239,132,32)" fg:x="4835" fg:w="7"/><text x="51.3383%" y="719.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.07%)</title><rect x="51.0883%" y="693" width="0.0740%" height="15" fill="rgb(228,202,34)" fg:x="4835" fg:w="7"/><text x="51.3383%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.07%)</title><rect x="51.0883%" y="677" width="0.0740%" height="15" fill="rgb(254,200,22)" fg:x="4835" fg:w="7"/><text x="51.3383%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="51.1623%" y="773" width="0.0634%" height="15" fill="rgb(219,10,39)" fg:x="4842" fg:w="6"/><text x="51.4123%" y="783.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6 samples, 0.06%)</title><rect x="51.1623%" y="757" width="0.0634%" height="15" fill="rgb(226,210,39)" fg:x="4842" fg:w="6"/><text x="51.4123%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="51.2257%" y="773" width="0.0106%" height="15" fill="rgb(208,219,16)" fg:x="4848" fg:w="1"/><text x="51.4757%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (413 samples, 4.36%)</title><rect x="46.9252%" y="789" width="4.3639%" height="15" fill="rgb(216,158,51)" fg:x="4441" fg:w="413"/><text x="47.1752%" y="799.50">alloc..</text></g><g><title>paranagram::utils::find_sum_rec (5 samples, 0.05%)</title><rect x="51.2363%" y="773" width="0.0528%" height="15" fill="rgb(233,14,44)" fg:x="4849" fg:w="5"/><text x="51.4863%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (414 samples, 4.37%)</title><rect x="46.9252%" y="821" width="4.3745%" height="15" fill="rgb(237,97,39)" fg:x="4441" fg:w="414"/><text x="47.1752%" y="831.50">alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (414 samples, 4.37%)</title><rect x="46.9252%" y="805" width="4.3745%" height="15" fill="rgb(218,198,43)" fg:x="4441" fg:w="414"/><text x="47.1752%" y="815.50">&lt;allo..</text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="51.2891%" y="789" width="0.0106%" height="15" fill="rgb(231,104,20)" fg:x="4854" fg:w="1"/><text x="51.5391%" y="799.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="51.3525%" y="741" width="0.0106%" height="15" fill="rgb(254,36,13)" fg:x="4860" fg:w="1"/><text x="51.6025%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.12%)</title><rect x="51.2997%" y="773" width="0.1162%" height="15" fill="rgb(248,14,50)" fg:x="4855" fg:w="11"/><text x="51.5497%" y="783.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="51.3208%" y="757" width="0.0951%" height="15" fill="rgb(217,107,29)" fg:x="4857" fg:w="9"/><text x="51.5708%" y="767.50"></text></g><g><title>tcache_get (5 samples, 0.05%)</title><rect x="51.3631%" y="741" width="0.0528%" height="15" fill="rgb(251,169,33)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="725" width="0.0528%" height="15" fill="rgb(217,108,32)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="709" width="0.0528%" height="15" fill="rgb(219,66,42)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="693" width="0.0528%" height="15" fill="rgb(206,180,7)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="677" width="0.0528%" height="15" fill="rgb(208,226,31)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="661" width="0.0528%" height="15" fill="rgb(218,26,49)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="645" width="0.0528%" height="15" fill="rgb(233,197,48)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="629" width="0.0528%" height="15" fill="rgb(252,181,51)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="613" width="0.0528%" height="15" fill="rgb(253,90,19)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="597" width="0.0528%" height="15" fill="rgb(215,171,30)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="581" width="0.0528%" height="15" fill="rgb(214,222,9)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="565" width="0.0528%" height="15" fill="rgb(223,3,22)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="549" width="0.0528%" height="15" fill="rgb(225,196,46)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="533" width="0.0528%" height="15" fill="rgb(209,110,37)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="51.3631%" y="517" width="0.0528%" height="15" fill="rgb(249,89,12)" fg:x="4861" fg:w="5"/><text x="51.6131%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.13%)</title><rect x="51.2997%" y="805" width="0.1268%" height="15" fill="rgb(226,27,33)" fg:x="4855" fg:w="12"/><text x="51.5497%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.13%)</title><rect x="51.2997%" y="789" width="0.1268%" height="15" fill="rgb(213,82,22)" fg:x="4855" fg:w="12"/><text x="51.5497%" y="799.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="51.4159%" y="773" width="0.0106%" height="15" fill="rgb(248,140,0)" fg:x="4866" fg:w="1"/><text x="51.6659%" y="783.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="51.4159%" y="757" width="0.0106%" height="15" fill="rgb(228,106,3)" fg:x="4866" fg:w="1"/><text x="51.6659%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="51.4159%" y="741" width="0.0106%" height="15" fill="rgb(209,23,37)" fg:x="4866" fg:w="1"/><text x="51.6659%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.14%)</title><rect x="51.2997%" y="821" width="0.1374%" height="15" fill="rgb(241,93,50)" fg:x="4855" fg:w="13"/><text x="51.5497%" y="831.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="51.4265%" y="805" width="0.0106%" height="15" fill="rgb(253,46,43)" fg:x="4867" fg:w="1"/><text x="51.6765%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="51.4370%" y="821" width="0.0211%" height="15" fill="rgb(226,206,43)" fg:x="4868" fg:w="2"/><text x="51.6870%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (24 samples, 0.25%)</title><rect x="51.4582%" y="821" width="0.2536%" height="15" fill="rgb(217,54,7)" fg:x="4870" fg:w="24"/><text x="51.7082%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="51.7540%" y="789" width="0.0211%" height="15" fill="rgb(223,5,52)" fg:x="4898" fg:w="2"/><text x="52.0040%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="51.8068%" y="709" width="0.0106%" height="15" fill="rgb(206,52,46)" fg:x="4903" fg:w="1"/><text x="52.0568%" y="719.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="51.8174%" y="629" width="0.0317%" height="15" fill="rgb(253,136,11)" fg:x="4904" fg:w="3"/><text x="52.0674%" y="639.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="51.8174%" y="613" width="0.0317%" height="15" fill="rgb(208,106,33)" fg:x="4904" fg:w="3"/><text x="52.0674%" y="623.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="51.8385%" y="597" width="0.0106%" height="15" fill="rgb(206,54,4)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="607.50"></text></g><g><title>grow_heap (1 samples, 0.01%)</title><rect x="51.8385%" y="581" width="0.0106%" height="15" fill="rgb(213,3,15)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="591.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="51.8385%" y="565" width="0.0106%" height="15" fill="rgb(252,211,39)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.8385%" y="549" width="0.0106%" height="15" fill="rgb(223,6,36)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.8385%" y="533" width="0.0106%" height="15" fill="rgb(252,169,45)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.8385%" y="517" width="0.0106%" height="15" fill="rgb(212,48,26)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.8385%" y="501" width="0.0106%" height="15" fill="rgb(251,102,48)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.8385%" y="485" width="0.0106%" height="15" fill="rgb(243,208,16)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.8385%" y="469" width="0.0106%" height="15" fill="rgb(219,96,24)" fg:x="4906" fg:w="1"/><text x="52.0885%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.04%)</title><rect x="51.8174%" y="693" width="0.0423%" height="15" fill="rgb(219,33,29)" fg:x="4904" fg:w="4"/><text x="52.0674%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.04%)</title><rect x="51.8174%" y="677" width="0.0423%" height="15" fill="rgb(223,176,5)" fg:x="4904" fg:w="4"/><text x="52.0674%" y="687.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.04%)</title><rect x="51.8174%" y="661" width="0.0423%" height="15" fill="rgb(228,140,14)" fg:x="4904" fg:w="4"/><text x="52.0674%" y="671.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.04%)</title><rect x="51.8174%" y="645" width="0.0423%" height="15" fill="rgb(217,179,31)" fg:x="4904" fg:w="4"/><text x="52.0674%" y="655.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="51.8491%" y="629" width="0.0106%" height="15" fill="rgb(230,9,30)" fg:x="4907" fg:w="1"/><text x="52.0991%" y="639.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="51.8491%" y="613" width="0.0106%" height="15" fill="rgb(230,136,20)" fg:x="4907" fg:w="1"/><text x="52.0991%" y="623.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="51.8914%" y="677" width="0.0106%" height="15" fill="rgb(215,210,22)" fg:x="4911" fg:w="1"/><text x="52.1414%" y="687.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="51.8597%" y="693" width="0.0528%" height="15" fill="rgb(218,43,5)" fg:x="4908" fg:w="5"/><text x="52.1097%" y="703.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="51.9019%" y="677" width="0.0106%" height="15" fill="rgb(216,11,5)" fg:x="4912" fg:w="1"/><text x="52.1519%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.12%)</title><rect x="51.8174%" y="709" width="0.1162%" height="15" fill="rgb(209,82,29)" fg:x="4904" fg:w="11"/><text x="52.0674%" y="719.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="51.9125%" y="693" width="0.0211%" height="15" fill="rgb(244,115,12)" fg:x="4913" fg:w="2"/><text x="52.1625%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="51.9125%" y="677" width="0.0211%" height="15" fill="rgb(222,82,18)" fg:x="4913" fg:w="2"/><text x="52.1625%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.18%)</title><rect x="51.8068%" y="741" width="0.1796%" height="15" fill="rgb(249,227,8)" fg:x="4903" fg:w="17"/><text x="52.0568%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.18%)</title><rect x="51.8068%" y="725" width="0.1796%" height="15" fill="rgb(253,141,45)" fg:x="4903" fg:w="17"/><text x="52.0568%" y="735.50"></text></g><g><title>core::cmp::max (5 samples, 0.05%)</title><rect x="51.9336%" y="709" width="0.0528%" height="15" fill="rgb(234,184,4)" fg:x="4915" fg:w="5"/><text x="52.1836%" y="719.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.05%)</title><rect x="51.9336%" y="693" width="0.0528%" height="15" fill="rgb(218,194,23)" fg:x="4915" fg:w="5"/><text x="52.1836%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.05%)</title><rect x="51.9336%" y="677" width="0.0528%" height="15" fill="rgb(235,66,41)" fg:x="4915" fg:w="5"/><text x="52.1836%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="51.9865%" y="741" width="0.0106%" height="15" fill="rgb(245,217,1)" fg:x="4920" fg:w="1"/><text x="52.2365%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="51.9865%" y="725" width="0.0106%" height="15" fill="rgb(229,91,1)" fg:x="4920" fg:w="1"/><text x="52.2365%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.27%)</title><rect x="51.7751%" y="789" width="0.2747%" height="15" fill="rgb(207,101,30)" fg:x="4900" fg:w="26"/><text x="52.0251%" y="799.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (26 samples, 0.27%)</title><rect x="51.7751%" y="773" width="0.2747%" height="15" fill="rgb(223,82,49)" fg:x="4900" fg:w="26"/><text x="52.0251%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.27%)</title><rect x="51.7751%" y="757" width="0.2747%" height="15" fill="rgb(218,167,17)" fg:x="4900" fg:w="26"/><text x="52.0251%" y="767.50"></text></g><g><title>core::ptr::write (5 samples, 0.05%)</title><rect x="51.9970%" y="741" width="0.0528%" height="15" fill="rgb(208,103,14)" fg:x="4921" fg:w="5"/><text x="52.2470%" y="751.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (2 samples, 0.02%)</title><rect x="52.0499%" y="757" width="0.0211%" height="15" fill="rgb(238,20,8)" fg:x="4926" fg:w="2"/><text x="52.2999%" y="767.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.02%)</title><rect x="52.0499%" y="741" width="0.0211%" height="15" fill="rgb(218,80,54)" fg:x="4926" fg:w="2"/><text x="52.2999%" y="751.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="52.0499%" y="725" width="0.0211%" height="15" fill="rgb(240,144,17)" fg:x="4926" fg:w="2"/><text x="52.2999%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="52.0499%" y="709" width="0.0211%" height="15" fill="rgb(245,27,50)" fg:x="4926" fg:w="2"/><text x="52.2999%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="52.0499%" y="693" width="0.0211%" height="15" fill="rgb(251,51,7)" fg:x="4926" fg:w="2"/><text x="52.2999%" y="703.50"></text></g><g><title>_int_free (7 samples, 0.07%)</title><rect x="52.1027%" y="645" width="0.0740%" height="15" fill="rgb(245,217,29)" fg:x="4931" fg:w="7"/><text x="52.3527%" y="655.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="52.1555%" y="629" width="0.0211%" height="15" fill="rgb(221,176,29)" fg:x="4936" fg:w="2"/><text x="52.4055%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.14%)</title><rect x="52.0710%" y="693" width="0.1374%" height="15" fill="rgb(212,180,24)" fg:x="4928" fg:w="13"/><text x="52.3210%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.14%)</title><rect x="52.0710%" y="677" width="0.1374%" height="15" fill="rgb(254,24,2)" fg:x="4928" fg:w="13"/><text x="52.3210%" y="687.50"></text></g><g><title>__GI___libc_free (13 samples, 0.14%)</title><rect x="52.0710%" y="661" width="0.1374%" height="15" fill="rgb(230,100,2)" fg:x="4928" fg:w="13"/><text x="52.3210%" y="671.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="52.1767%" y="645" width="0.0317%" height="15" fill="rgb(219,142,25)" fg:x="4938" fg:w="3"/><text x="52.4267%" y="655.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="52.1767%" y="629" width="0.0317%" height="15" fill="rgb(240,73,43)" fg:x="4938" fg:w="3"/><text x="52.4267%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (14 samples, 0.15%)</title><rect x="52.0710%" y="757" width="0.1479%" height="15" fill="rgb(214,114,15)" fg:x="4928" fg:w="14"/><text x="52.3210%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="52.0710%" y="741" width="0.1479%" height="15" fill="rgb(207,130,4)" fg:x="4928" fg:w="14"/><text x="52.3210%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (14 samples, 0.15%)</title><rect x="52.0710%" y="725" width="0.1479%" height="15" fill="rgb(221,25,40)" fg:x="4928" fg:w="14"/><text x="52.3210%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="52.0710%" y="709" width="0.1479%" height="15" fill="rgb(241,184,7)" fg:x="4928" fg:w="14"/><text x="52.3210%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="52.2084%" y="693" width="0.0106%" height="15" fill="rgb(235,159,4)" fg:x="4941" fg:w="1"/><text x="52.4584%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 0.50%)</title><rect x="51.7329%" y="805" width="0.4966%" height="15" fill="rgb(214,87,48)" fg:x="4896" fg:w="47"/><text x="51.9829%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (17 samples, 0.18%)</title><rect x="52.0499%" y="789" width="0.1796%" height="15" fill="rgb(246,198,24)" fg:x="4926" fg:w="17"/><text x="52.2999%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="52.0499%" y="773" width="0.1796%" height="15" fill="rgb(209,66,40)" fg:x="4926" fg:w="17"/><text x="52.2999%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,usize)&gt;]&gt; (1 samples, 0.01%)</title><rect x="52.2189%" y="757" width="0.0106%" height="15" fill="rgb(233,147,39)" fg:x="4942" fg:w="1"/><text x="52.4689%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (50 samples, 0.53%)</title><rect x="51.7117%" y="821" width="0.5283%" height="15" fill="rgb(231,145,52)" fg:x="4894" fg:w="50"/><text x="51.9617%" y="831.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="52.2295%" y="805" width="0.0106%" height="15" fill="rgb(206,20,26)" fg:x="4943" fg:w="1"/><text x="52.4795%" y="815.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="52.2929%" y="757" width="0.0106%" height="15" fill="rgb(238,220,4)" fg:x="4949" fg:w="1"/><text x="52.5429%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="52.3035%" y="757" width="0.0317%" height="15" fill="rgb(252,195,42)" fg:x="4950" fg:w="3"/><text x="52.5535%" y="767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.03%)</title><rect x="52.3035%" y="741" width="0.0317%" height="15" fill="rgb(209,10,6)" fg:x="4950" fg:w="3"/><text x="52.5535%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12 samples, 0.13%)</title><rect x="52.2401%" y="821" width="0.1268%" height="15" fill="rgb(229,3,52)" fg:x="4944" fg:w="12"/><text x="52.4901%" y="831.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12 samples, 0.13%)</title><rect x="52.2401%" y="805" width="0.1268%" height="15" fill="rgb(253,49,37)" fg:x="4944" fg:w="12"/><text x="52.4901%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.13%)</title><rect x="52.2401%" y="789" width="0.1268%" height="15" fill="rgb(240,103,49)" fg:x="4944" fg:w="12"/><text x="52.4901%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.13%)</title><rect x="52.2401%" y="773" width="0.1268%" height="15" fill="rgb(250,182,30)" fg:x="4944" fg:w="12"/><text x="52.4901%" y="783.50"></text></g><g><title>paranagram::utils::find_sum_rec (3 samples, 0.03%)</title><rect x="52.3352%" y="757" width="0.0317%" height="15" fill="rgb(248,8,30)" fg:x="4953" fg:w="3"/><text x="52.5852%" y="767.50"></text></g><g><title>_int_free (58 samples, 0.61%)</title><rect x="52.4937%" y="725" width="0.6128%" height="15" fill="rgb(237,120,30)" fg:x="4968" fg:w="58"/><text x="52.7437%" y="735.50"></text></g><g><title>__GI___libc_free (75 samples, 0.79%)</title><rect x="52.3669%" y="741" width="0.7925%" height="15" fill="rgb(221,146,34)" fg:x="4956" fg:w="75"/><text x="52.6169%" y="751.50"></text></g><g><title>arena_for_chunk (5 samples, 0.05%)</title><rect x="53.1065%" y="725" width="0.0528%" height="15" fill="rgb(242,55,13)" fg:x="5026" fg:w="5"/><text x="53.3565%" y="735.50"></text></g><g><title>arena_for_chunk (4 samples, 0.04%)</title><rect x="53.1171%" y="709" width="0.0423%" height="15" fill="rgb(242,112,31)" fg:x="5027" fg:w="4"/><text x="53.3671%" y="719.50"></text></g><g><title>heap_for_ptr (4 samples, 0.04%)</title><rect x="53.1171%" y="693" width="0.0423%" height="15" fill="rgb(249,192,27)" fg:x="5027" fg:w="4"/><text x="53.3671%" y="703.50"></text></g><g><title>heap_max_size (1 samples, 0.01%)</title><rect x="53.1488%" y="677" width="0.0106%" height="15" fill="rgb(208,204,44)" fg:x="5030" fg:w="1"/><text x="53.3988%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (77 samples, 0.81%)</title><rect x="52.3669%" y="773" width="0.8136%" height="15" fill="rgb(208,93,54)" fg:x="4956" fg:w="77"/><text x="52.6169%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (77 samples, 0.81%)</title><rect x="52.3669%" y="757" width="0.8136%" height="15" fill="rgb(242,1,31)" fg:x="4956" fg:w="77"/><text x="52.6169%" y="767.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="53.1593%" y="741" width="0.0211%" height="15" fill="rgb(241,83,25)" fg:x="5031" fg:w="2"/><text x="53.4093%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="53.1593%" y="725" width="0.0211%" height="15" fill="rgb(205,169,50)" fg:x="5031" fg:w="2"/><text x="53.4093%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (78 samples, 0.82%)</title><rect x="52.3669%" y="821" width="0.8242%" height="15" fill="rgb(239,186,37)" fg:x="4956" fg:w="78"/><text x="52.6169%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (78 samples, 0.82%)</title><rect x="52.3669%" y="805" width="0.8242%" height="15" fill="rgb(205,221,10)" fg:x="4956" fg:w="78"/><text x="52.6169%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.82%)</title><rect x="52.3669%" y="789" width="0.8242%" height="15" fill="rgb(218,196,15)" fg:x="4956" fg:w="78"/><text x="52.6169%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="53.1805%" y="773" width="0.0106%" height="15" fill="rgb(218,196,35)" fg:x="5033" fg:w="1"/><text x="53.4305%" y="783.50"></text></g><g><title>_int_free (36 samples, 0.38%)</title><rect x="53.2650%" y="645" width="0.3804%" height="15" fill="rgb(233,63,24)" fg:x="5041" fg:w="36"/><text x="53.5150%" y="655.50"></text></g><g><title>tcache_put (4 samples, 0.04%)</title><rect x="53.6031%" y="629" width="0.0423%" height="15" fill="rgb(225,8,4)" fg:x="5073" fg:w="4"/><text x="53.8531%" y="639.50"></text></g><g><title>__GI___libc_free (48 samples, 0.51%)</title><rect x="53.1910%" y="661" width="0.5072%" height="15" fill="rgb(234,105,35)" fg:x="5034" fg:w="48"/><text x="53.4410%" y="671.50"></text></g><g><title>arena_for_chunk (5 samples, 0.05%)</title><rect x="53.6454%" y="645" width="0.0528%" height="15" fill="rgb(236,21,32)" fg:x="5077" fg:w="5"/><text x="53.8954%" y="655.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="53.6771%" y="629" width="0.0211%" height="15" fill="rgb(228,109,6)" fg:x="5080" fg:w="2"/><text x="53.9271%" y="639.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="53.6982%" y="661" width="0.0106%" height="15" fill="rgb(229,215,31)" fg:x="5082" fg:w="1"/><text x="53.9482%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="53.6982%" y="645" width="0.0106%" height="15" fill="rgb(221,52,54)" fg:x="5082" fg:w="1"/><text x="53.9482%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (50 samples, 0.53%)</title><rect x="53.1910%" y="821" width="0.5283%" height="15" fill="rgb(252,129,43)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (50 samples, 0.53%)</title><rect x="53.1910%" y="805" width="0.5283%" height="15" fill="rgb(248,183,27)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (50 samples, 0.53%)</title><rect x="53.1910%" y="789" width="0.5283%" height="15" fill="rgb(250,0,22)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.53%)</title><rect x="53.1910%" y="773" width="0.5283%" height="15" fill="rgb(213,166,10)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (50 samples, 0.53%)</title><rect x="53.1910%" y="757" width="0.5283%" height="15" fill="rgb(207,163,36)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.53%)</title><rect x="53.1910%" y="741" width="0.5283%" height="15" fill="rgb(208,122,22)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (50 samples, 0.53%)</title><rect x="53.1910%" y="725" width="0.5283%" height="15" fill="rgb(207,104,49)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.53%)</title><rect x="53.1910%" y="709" width="0.5283%" height="15" fill="rgb(248,211,50)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.53%)</title><rect x="53.1910%" y="693" width="0.5283%" height="15" fill="rgb(217,13,45)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.53%)</title><rect x="53.1910%" y="677" width="0.5283%" height="15" fill="rgb(211,216,49)" fg:x="5034" fg:w="50"/><text x="53.4410%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="53.7088%" y="661" width="0.0106%" height="15" fill="rgb(221,58,53)" fg:x="5083" fg:w="1"/><text x="53.9588%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="53.8779%" y="805" width="0.0106%" height="15" fill="rgb(220,112,41)" fg:x="5099" fg:w="1"/><text x="54.1279%" y="815.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="53.8779%" y="789" width="0.0106%" height="15" fill="rgb(236,38,28)" fg:x="5099" fg:w="1"/><text x="54.1279%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="53.8884%" y="805" width="0.0106%" height="15" fill="rgb(227,195,22)" fg:x="5100" fg:w="1"/><text x="54.1384%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (12 samples, 0.13%)</title><rect x="53.8990%" y="773" width="0.1268%" height="15" fill="rgb(214,55,33)" fg:x="5101" fg:w="12"/><text x="54.1490%" y="783.50"></text></g><g><title>core::ptr::read (7 samples, 0.07%)</title><rect x="53.9518%" y="757" width="0.0740%" height="15" fill="rgb(248,80,13)" fg:x="5106" fg:w="7"/><text x="54.2018%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.15%)</title><rect x="53.8990%" y="805" width="0.1479%" height="15" fill="rgb(238,52,6)" fg:x="5101" fg:w="14"/><text x="54.1490%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (14 samples, 0.15%)</title><rect x="53.8990%" y="789" width="0.1479%" height="15" fill="rgb(224,198,47)" fg:x="5101" fg:w="14"/><text x="54.1490%" y="799.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="54.0258%" y="773" width="0.0211%" height="15" fill="rgb(233,171,20)" fg:x="5113" fg:w="2"/><text x="54.2758%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="54.0258%" y="757" width="0.0211%" height="15" fill="rgb(241,30,25)" fg:x="5113" fg:w="2"/><text x="54.2758%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="54.0258%" y="741" width="0.0211%" height="15" fill="rgb(207,171,38)" fg:x="5113" fg:w="2"/><text x="54.2758%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="54.0680%" y="613" width="0.0317%" height="15" fill="rgb(234,70,1)" fg:x="5117" fg:w="3"/><text x="54.3180%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="54.0997%" y="613" width="0.0106%" height="15" fill="rgb(232,178,18)" fg:x="5120" fg:w="1"/><text x="54.3497%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="54.0997%" y="597" width="0.0106%" height="15" fill="rgb(241,78,40)" fg:x="5120" fg:w="1"/><text x="54.3497%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.07%)</title><rect x="54.0469%" y="805" width="0.0740%" height="15" fill="rgb(222,35,25)" fg:x="5115" fg:w="7"/><text x="54.2969%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="54.0575%" y="789" width="0.0634%" height="15" fill="rgb(207,92,16)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="54.0575%" y="773" width="0.0634%" height="15" fill="rgb(216,59,51)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.06%)</title><rect x="54.0575%" y="757" width="0.0634%" height="15" fill="rgb(213,80,28)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.06%)</title><rect x="54.0575%" y="741" width="0.0634%" height="15" fill="rgb(220,93,7)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.06%)</title><rect x="54.0575%" y="725" width="0.0634%" height="15" fill="rgb(225,24,44)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="54.0575%" y="709" width="0.0634%" height="15" fill="rgb(243,74,40)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="54.0575%" y="693" width="0.0634%" height="15" fill="rgb(228,39,7)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.06%)</title><rect x="54.0575%" y="677" width="0.0634%" height="15" fill="rgb(227,79,8)" fg:x="5116" fg:w="6"/><text x="54.3075%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="54.0680%" y="661" width="0.0528%" height="15" fill="rgb(236,58,11)" fg:x="5117" fg:w="5"/><text x="54.3180%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="54.0680%" y="645" width="0.0528%" height="15" fill="rgb(249,63,35)" fg:x="5117" fg:w="5"/><text x="54.3180%" y="655.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="54.0680%" y="629" width="0.0528%" height="15" fill="rgb(252,114,16)" fg:x="5117" fg:w="5"/><text x="54.3180%" y="639.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="54.1103%" y="613" width="0.0106%" height="15" fill="rgb(254,151,24)" fg:x="5121" fg:w="1"/><text x="54.3603%" y="623.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="54.1737%" y="725" width="0.0317%" height="15" fill="rgb(253,54,39)" fg:x="5127" fg:w="3"/><text x="54.4237%" y="735.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.15%)</title><rect x="54.1209%" y="741" width="0.1479%" height="15" fill="rgb(243,25,45)" fg:x="5122" fg:w="14"/><text x="54.3709%" y="751.50"></text></g><g><title>tcache_get (6 samples, 0.06%)</title><rect x="54.2054%" y="725" width="0.0634%" height="15" fill="rgb(234,134,9)" fg:x="5130" fg:w="6"/><text x="54.4554%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="54.2688%" y="741" width="0.0106%" height="15" fill="rgb(227,166,31)" fg:x="5136" fg:w="1"/><text x="54.5188%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="54.2688%" y="725" width="0.0106%" height="15" fill="rgb(245,143,41)" fg:x="5136" fg:w="1"/><text x="54.5188%" y="735.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="54.2794%" y="741" width="0.0106%" height="15" fill="rgb(238,181,32)" fg:x="5137" fg:w="1"/><text x="54.5294%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.19%)</title><rect x="54.1209%" y="805" width="0.1902%" height="15" fill="rgb(224,113,18)" fg:x="5122" fg:w="18"/><text x="54.3709%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.19%)</title><rect x="54.1209%" y="789" width="0.1902%" height="15" fill="rgb(240,229,28)" fg:x="5122" fg:w="18"/><text x="54.3709%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.19%)</title><rect x="54.1209%" y="773" width="0.1902%" height="15" fill="rgb(250,185,3)" fg:x="5122" fg:w="18"/><text x="54.3709%" y="783.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.19%)</title><rect x="54.1209%" y="757" width="0.1902%" height="15" fill="rgb(212,59,25)" fg:x="5122" fg:w="18"/><text x="54.3709%" y="767.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="54.2899%" y="741" width="0.0211%" height="15" fill="rgb(221,87,20)" fg:x="5138" fg:w="2"/><text x="54.5399%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (1 samples, 0.01%)</title><rect x="54.3111%" y="805" width="0.0106%" height="15" fill="rgb(213,74,28)" fg:x="5140" fg:w="1"/><text x="54.5611%" y="815.50"></text></g><g><title>alloc::slice::hack::into_vec (1 samples, 0.01%)</title><rect x="54.3111%" y="789" width="0.0106%" height="15" fill="rgb(224,132,34)" fg:x="5140" fg:w="1"/><text x="54.5611%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.01%)</title><rect x="54.3111%" y="773" width="0.0106%" height="15" fill="rgb(222,101,24)" fg:x="5140" fg:w="1"/><text x="54.5611%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="54.3216%" y="757" width="0.0106%" height="15" fill="rgb(254,142,4)" fg:x="5141" fg:w="1"/><text x="54.5716%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="54.3850%" y="693" width="0.0211%" height="15" fill="rgb(230,229,49)" fg:x="5147" fg:w="2"/><text x="54.6350%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="54.3956%" y="677" width="0.0106%" height="15" fill="rgb(238,70,47)" fg:x="5148" fg:w="1"/><text x="54.6456%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="613" width="0.0106%" height="15" fill="rgb(231,160,17)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="597" width="0.0106%" height="15" fill="rgb(218,68,53)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="581" width="0.0106%" height="15" fill="rgb(236,111,10)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="565" width="0.0106%" height="15" fill="rgb(224,34,41)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="549" width="0.0106%" height="15" fill="rgb(241,118,19)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="533" width="0.0106%" height="15" fill="rgb(238,129,25)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="517" width="0.0106%" height="15" fill="rgb(238,22,31)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="501" width="0.0106%" height="15" fill="rgb(222,174,48)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="485" width="0.0106%" height="15" fill="rgb(206,152,40)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="469" width="0.0106%" height="15" fill="rgb(218,99,54)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="453" width="0.0106%" height="15" fill="rgb(220,174,26)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="437" width="0.0106%" height="15" fill="rgb(245,116,9)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="421" width="0.0106%" height="15" fill="rgb(209,72,35)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.7126%" y="405" width="0.0106%" height="15" fill="rgb(226,126,21)" fg:x="5178" fg:w="1"/><text x="54.9626%" y="415.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.04%)</title><rect x="54.8500%" y="597" width="0.0423%" height="15" fill="rgb(227,192,1)" fg:x="5191" fg:w="4"/><text x="55.1000%" y="607.50"></text></g><g><title>_int_free (14 samples, 0.15%)</title><rect x="54.8922%" y="597" width="0.1479%" height="15" fill="rgb(237,180,29)" fg:x="5195" fg:w="14"/><text x="55.1422%" y="607.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="55.0085%" y="581" width="0.0317%" height="15" fill="rgb(230,197,35)" fg:x="5206" fg:w="3"/><text x="55.2585%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="581" width="0.0106%" height="15" fill="rgb(246,193,31)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="565" width="0.0106%" height="15" fill="rgb(241,36,4)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="549" width="0.0106%" height="15" fill="rgb(241,130,17)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="533" width="0.0106%" height="15" fill="rgb(206,137,32)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="517" width="0.0106%" height="15" fill="rgb(237,228,51)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="501" width="0.0106%" height="15" fill="rgb(243,6,42)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="485" width="0.0106%" height="15" fill="rgb(251,74,28)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="469" width="0.0106%" height="15" fill="rgb(218,20,49)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="453" width="0.0106%" height="15" fill="rgb(238,28,14)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="437" width="0.0106%" height="15" fill="rgb(229,40,46)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="421" width="0.0106%" height="15" fill="rgb(244,195,20)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.6002%" y="405" width="0.0106%" height="15" fill="rgb(253,56,35)" fg:x="5262" fg:w="1"/><text x="55.8502%" y="415.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="55.6107%" y="565" width="0.2747%" height="15" fill="rgb(210,149,44)" fg:x="5263" fg:w="26"/><text x="55.8607%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="55.6530%" y="549" width="0.2325%" height="15" fill="rgb(240,135,12)" fg:x="5267" fg:w="22"/><text x="55.9030%" y="559.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="55.6530%" y="533" width="0.2325%" height="15" fill="rgb(251,24,50)" fg:x="5267" fg:w="22"/><text x="55.9030%" y="543.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="55.6530%" y="517" width="0.2325%" height="15" fill="rgb(243,200,47)" fg:x="5267" fg:w="22"/><text x="55.9030%" y="527.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="55.6530%" y="501" width="0.2325%" height="15" fill="rgb(224,166,26)" fg:x="5267" fg:w="22"/><text x="55.9030%" y="511.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="55.6530%" y="485" width="0.2325%" height="15" fill="rgb(233,0,47)" fg:x="5267" fg:w="22"/><text x="55.9030%" y="495.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="55.6636%" y="469" width="0.2219%" height="15" fill="rgb(253,80,5)" fg:x="5268" fg:w="21"/><text x="55.9136%" y="479.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="55.6741%" y="453" width="0.2113%" height="15" fill="rgb(214,133,25)" fg:x="5269" fg:w="20"/><text x="55.9241%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="55.6847%" y="437" width="0.2008%" height="15" fill="rgb(209,27,14)" fg:x="5270" fg:w="19"/><text x="55.9347%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="55.6847%" y="421" width="0.2008%" height="15" fill="rgb(219,102,51)" fg:x="5270" fg:w="19"/><text x="55.9347%" y="431.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="55.7270%" y="405" width="0.1585%" height="15" fill="rgb(237,18,16)" fg:x="5274" fg:w="15"/><text x="55.9770%" y="415.50"></text></g><g><title>[unknown] (13 samples, 0.14%)</title><rect x="55.7481%" y="389" width="0.1374%" height="15" fill="rgb(241,85,17)" fg:x="5276" fg:w="13"/><text x="55.9981%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="55.7587%" y="373" width="0.1268%" height="15" fill="rgb(236,90,42)" fg:x="5277" fg:w="12"/><text x="56.0087%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="55.7798%" y="357" width="0.1057%" height="15" fill="rgb(249,57,21)" fg:x="5279" fg:w="10"/><text x="56.0298%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="55.7798%" y="341" width="0.1057%" height="15" fill="rgb(243,12,36)" fg:x="5279" fg:w="10"/><text x="56.0298%" y="351.50"></text></g><g><title>sysmalloc (95 samples, 1.00%)</title><rect x="55.6107%" y="581" width="1.0038%" height="15" fill="rgb(253,128,47)" fg:x="5263" fg:w="95"/><text x="55.8607%" y="591.50"></text></g><g><title>grow_heap (69 samples, 0.73%)</title><rect x="55.8855%" y="565" width="0.7291%" height="15" fill="rgb(207,33,20)" fg:x="5289" fg:w="69"/><text x="56.1355%" y="575.50"></text></g><g><title>__GI___mprotect (69 samples, 0.73%)</title><rect x="55.8855%" y="549" width="0.7291%" height="15" fill="rgb(233,215,35)" fg:x="5289" fg:w="69"/><text x="56.1355%" y="559.50"></text></g><g><title>[unknown] (69 samples, 0.73%)</title><rect x="55.8855%" y="533" width="0.7291%" height="15" fill="rgb(249,188,52)" fg:x="5289" fg:w="69"/><text x="56.1355%" y="543.50"></text></g><g><title>[unknown] (69 samples, 0.73%)</title><rect x="55.8855%" y="517" width="0.7291%" height="15" fill="rgb(225,12,32)" fg:x="5289" fg:w="69"/><text x="56.1355%" y="527.50"></text></g><g><title>[unknown] (69 samples, 0.73%)</title><rect x="55.8855%" y="501" width="0.7291%" height="15" fill="rgb(247,98,14)" fg:x="5289" fg:w="69"/><text x="56.1355%" y="511.50"></text></g><g><title>[unknown] (69 samples, 0.73%)</title><rect x="55.8855%" y="485" width="0.7291%" height="15" fill="rgb(247,219,48)" fg:x="5289" fg:w="69"/><text x="56.1355%" y="495.50"></text></g><g><title>[unknown] (68 samples, 0.72%)</title><rect x="55.8960%" y="469" width="0.7185%" height="15" fill="rgb(253,60,48)" fg:x="5290" fg:w="68"/><text x="56.1460%" y="479.50"></text></g><g><title>[unknown] (67 samples, 0.71%)</title><rect x="55.9066%" y="453" width="0.7079%" height="15" fill="rgb(245,15,52)" fg:x="5291" fg:w="67"/><text x="56.1566%" y="463.50"></text></g><g><title>[unknown] (67 samples, 0.71%)</title><rect x="55.9066%" y="437" width="0.7079%" height="15" fill="rgb(220,133,28)" fg:x="5291" fg:w="67"/><text x="56.1566%" y="447.50"></text></g><g><title>[unknown] (65 samples, 0.69%)</title><rect x="55.9277%" y="421" width="0.6868%" height="15" fill="rgb(217,180,4)" fg:x="5293" fg:w="65"/><text x="56.1777%" y="431.50"></text></g><g><title>[unknown] (60 samples, 0.63%)</title><rect x="55.9806%" y="405" width="0.6340%" height="15" fill="rgb(251,24,1)" fg:x="5298" fg:w="60"/><text x="56.2306%" y="415.50"></text></g><g><title>[unknown] (59 samples, 0.62%)</title><rect x="55.9911%" y="389" width="0.6234%" height="15" fill="rgb(212,185,49)" fg:x="5299" fg:w="59"/><text x="56.2411%" y="399.50"></text></g><g><title>[unknown] (56 samples, 0.59%)</title><rect x="56.0228%" y="373" width="0.5917%" height="15" fill="rgb(215,175,22)" fg:x="5302" fg:w="56"/><text x="56.2728%" y="383.50"></text></g><g><title>[unknown] (50 samples, 0.53%)</title><rect x="56.0862%" y="357" width="0.5283%" height="15" fill="rgb(250,205,14)" fg:x="5308" fg:w="50"/><text x="56.3362%" y="367.50"></text></g><g><title>[unknown] (48 samples, 0.51%)</title><rect x="56.1074%" y="341" width="0.5072%" height="15" fill="rgb(225,211,22)" fg:x="5310" fg:w="48"/><text x="56.3574%" y="351.50"></text></g><g><title>[unknown] (46 samples, 0.49%)</title><rect x="56.1285%" y="325" width="0.4861%" height="15" fill="rgb(251,179,42)" fg:x="5312" fg:w="46"/><text x="56.3785%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.6040%" y="309" width="0.0106%" height="15" fill="rgb(208,216,51)" fg:x="5357" fg:w="1"/><text x="56.8540%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.6040%" y="293" width="0.0106%" height="15" fill="rgb(235,36,11)" fg:x="5357" fg:w="1"/><text x="56.8540%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.6040%" y="277" width="0.0106%" height="15" fill="rgb(213,189,28)" fg:x="5357" fg:w="1"/><text x="56.8540%" y="287.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="56.6145%" y="581" width="0.0106%" height="15" fill="rgb(227,203,42)" fg:x="5358" fg:w="1"/><text x="56.8645%" y="591.50"></text></g><g><title>_int_realloc (181 samples, 1.91%)</title><rect x="54.7232%" y="613" width="1.9125%" height="15" fill="rgb(244,72,36)" fg:x="5179" fg:w="181"/><text x="54.9732%" y="623.50">_..</text></g><g><title>_int_malloc (151 samples, 1.60%)</title><rect x="55.0402%" y="597" width="1.5955%" height="15" fill="rgb(213,53,17)" fg:x="5209" fg:w="151"/><text x="55.2902%" y="607.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="56.6251%" y="581" width="0.0106%" height="15" fill="rgb(207,167,3)" fg:x="5359" fg:w="1"/><text x="56.8751%" y="591.50"></text></g><g><title>arena_for_chunk (4 samples, 0.04%)</title><rect x="56.6357%" y="613" width="0.0423%" height="15" fill="rgb(216,98,30)" fg:x="5360" fg:w="4"/><text x="56.8857%" y="623.50"></text></g><g><title>arena_for_chunk (4 samples, 0.04%)</title><rect x="56.6357%" y="597" width="0.0423%" height="15" fill="rgb(236,123,15)" fg:x="5360" fg:w="4"/><text x="56.8857%" y="607.50"></text></g><g><title>heap_for_ptr (2 samples, 0.02%)</title><rect x="56.6568%" y="581" width="0.0211%" height="15" fill="rgb(248,81,50)" fg:x="5362" fg:w="2"/><text x="56.9068%" y="591.50"></text></g><g><title>__GI___libc_realloc (213 samples, 2.25%)</title><rect x="54.4484%" y="629" width="2.2506%" height="15" fill="rgb(214,120,4)" fg:x="5153" fg:w="213"/><text x="54.6984%" y="639.50">_..</text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="56.6779%" y="613" width="0.0211%" height="15" fill="rgb(208,179,34)" fg:x="5364" fg:w="2"/><text x="56.9279%" y="623.50"></text></g><g><title>__rdl_realloc (3 samples, 0.03%)</title><rect x="56.6991%" y="629" width="0.0317%" height="15" fill="rgb(227,140,7)" fg:x="5366" fg:w="3"/><text x="56.9491%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="56.7096%" y="613" width="0.0211%" height="15" fill="rgb(214,22,6)" fg:x="5367" fg:w="2"/><text x="56.9596%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (222 samples, 2.35%)</title><rect x="54.4062%" y="693" width="2.3457%" height="15" fill="rgb(207,137,27)" fg:x="5149" fg:w="222"/><text x="54.6562%" y="703.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (218 samples, 2.30%)</title><rect x="54.4484%" y="677" width="2.3035%" height="15" fill="rgb(210,8,46)" fg:x="5153" fg:w="218"/><text x="54.6984%" y="687.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (218 samples, 2.30%)</title><rect x="54.4484%" y="661" width="2.3035%" height="15" fill="rgb(240,16,54)" fg:x="5153" fg:w="218"/><text x="54.6984%" y="671.50">a..</text></g><g><title>alloc::alloc::realloc (218 samples, 2.30%)</title><rect x="54.4484%" y="645" width="2.3035%" height="15" fill="rgb(211,209,29)" fg:x="5153" fg:w="218"/><text x="54.6984%" y="655.50">a..</text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="56.7308%" y="629" width="0.0211%" height="15" fill="rgb(226,228,24)" fg:x="5369" fg:w="2"/><text x="56.9808%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="56.7519%" y="693" width="0.0106%" height="15" fill="rgb(222,84,9)" fg:x="5371" fg:w="1"/><text x="57.0019%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="56.7519%" y="677" width="0.0106%" height="15" fill="rgb(234,203,30)" fg:x="5371" fg:w="1"/><text x="57.0019%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (233 samples, 2.46%)</title><rect x="54.3322%" y="757" width="2.4620%" height="15" fill="rgb(238,109,14)" fg:x="5142" fg:w="233"/><text x="54.5822%" y="767.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (233 samples, 2.46%)</title><rect x="54.3322%" y="741" width="2.4620%" height="15" fill="rgb(233,206,34)" fg:x="5142" fg:w="233"/><text x="54.5822%" y="751.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (233 samples, 2.46%)</title><rect x="54.3322%" y="725" width="2.4620%" height="15" fill="rgb(220,167,47)" fg:x="5142" fg:w="233"/><text x="54.5822%" y="735.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (233 samples, 2.46%)</title><rect x="54.3322%" y="709" width="2.4620%" height="15" fill="rgb(238,105,10)" fg:x="5142" fg:w="233"/><text x="54.5822%" y="719.50">al..</text></g><g><title>core::cmp::max (3 samples, 0.03%)</title><rect x="56.7625%" y="693" width="0.0317%" height="15" fill="rgb(213,227,17)" fg:x="5372" fg:w="3"/><text x="57.0125%" y="703.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.03%)</title><rect x="56.7625%" y="677" width="0.0317%" height="15" fill="rgb(217,132,38)" fg:x="5372" fg:w="3"/><text x="57.0125%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="56.7625%" y="661" width="0.0317%" height="15" fill="rgb(242,146,4)" fg:x="5372" fg:w="3"/><text x="57.0125%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="56.7942%" y="757" width="0.0528%" height="15" fill="rgb(212,61,9)" fg:x="5375" fg:w="5"/><text x="57.0442%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="56.7942%" y="741" width="0.0528%" height="15" fill="rgb(247,126,22)" fg:x="5375" fg:w="5"/><text x="57.0442%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (240 samples, 2.54%)</title><rect x="54.3216%" y="805" width="2.5359%" height="15" fill="rgb(220,196,2)" fg:x="5141" fg:w="240"/><text x="54.5716%" y="815.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (240 samples, 2.54%)</title><rect x="54.3216%" y="789" width="2.5359%" height="15" fill="rgb(208,46,4)" fg:x="5141" fg:w="240"/><text x="54.5716%" y="799.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (240 samples, 2.54%)</title><rect x="54.3216%" y="773" width="2.5359%" height="15" fill="rgb(252,104,46)" fg:x="5141" fg:w="240"/><text x="54.5716%" y="783.50">al..</text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="56.8470%" y="757" width="0.0106%" height="15" fill="rgb(237,152,48)" fg:x="5380" fg:w="1"/><text x="57.0970%" y="767.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.06%)</title><rect x="56.8787%" y="741" width="0.0634%" height="15" fill="rgb(221,59,37)" fg:x="5383" fg:w="6"/><text x="57.1287%" y="751.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="56.9315%" y="725" width="0.0106%" height="15" fill="rgb(209,202,51)" fg:x="5388" fg:w="1"/><text x="57.1815%" y="735.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="56.9421%" y="741" width="0.0211%" height="15" fill="rgb(228,81,30)" fg:x="5389" fg:w="2"/><text x="57.1921%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="56.9421%" y="725" width="0.0211%" height="15" fill="rgb(227,42,39)" fg:x="5389" fg:w="2"/><text x="57.1921%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.12%)</title><rect x="56.8576%" y="805" width="0.1162%" height="15" fill="rgb(221,26,2)" fg:x="5381" fg:w="11"/><text x="57.1076%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.11%)</title><rect x="56.8681%" y="789" width="0.1057%" height="15" fill="rgb(254,61,31)" fg:x="5382" fg:w="10"/><text x="57.1181%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.11%)</title><rect x="56.8681%" y="773" width="0.1057%" height="15" fill="rgb(222,173,38)" fg:x="5382" fg:w="10"/><text x="57.1181%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.11%)</title><rect x="56.8681%" y="757" width="0.1057%" height="15" fill="rgb(218,50,12)" fg:x="5382" fg:w="10"/><text x="57.1181%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="56.9632%" y="741" width="0.0106%" height="15" fill="rgb(223,88,40)" fg:x="5391" fg:w="1"/><text x="57.2132%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.07%)</title><rect x="56.9738%" y="805" width="0.0740%" height="15" fill="rgb(237,54,19)" fg:x="5392" fg:w="7"/><text x="57.2238%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="57.0689%" y="773" width="0.0106%" height="15" fill="rgb(251,129,25)" fg:x="5401" fg:w="1"/><text x="57.3189%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="57.1006%" y="725" width="0.0317%" height="15" fill="rgb(238,97,19)" fg:x="5404" fg:w="3"/><text x="57.3506%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="57.1006%" y="709" width="0.0317%" height="15" fill="rgb(240,169,18)" fg:x="5404" fg:w="3"/><text x="57.3506%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="57.1006%" y="693" width="0.0317%" height="15" fill="rgb(230,187,49)" fg:x="5404" fg:w="3"/><text x="57.3506%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.1217%" y="677" width="0.0106%" height="15" fill="rgb(209,44,26)" fg:x="5406" fg:w="1"/><text x="57.3717%" y="687.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="57.1217%" y="661" width="0.0106%" height="15" fill="rgb(244,0,6)" fg:x="5406" fg:w="1"/><text x="57.3717%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.08%)</title><rect x="57.0795%" y="773" width="0.0845%" height="15" fill="rgb(248,18,21)" fg:x="5402" fg:w="8"/><text x="57.3295%" y="783.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (8 samples, 0.08%)</title><rect x="57.0795%" y="757" width="0.0845%" height="15" fill="rgb(245,180,19)" fg:x="5402" fg:w="8"/><text x="57.3295%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.08%)</title><rect x="57.0795%" y="741" width="0.0845%" height="15" fill="rgb(252,118,36)" fg:x="5402" fg:w="8"/><text x="57.3295%" y="751.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="57.1323%" y="725" width="0.0317%" height="15" fill="rgb(210,224,19)" fg:x="5407" fg:w="3"/><text x="57.3823%" y="735.50"></text></g><g><title>_int_free (6 samples, 0.06%)</title><rect x="57.1746%" y="629" width="0.0634%" height="15" fill="rgb(218,30,24)" fg:x="5411" fg:w="6"/><text x="57.4246%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.21%)</title><rect x="57.0478%" y="805" width="0.2113%" height="15" fill="rgb(219,75,50)" fg:x="5399" fg:w="20"/><text x="57.2978%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.19%)</title><rect x="57.0689%" y="789" width="0.1902%" height="15" fill="rgb(234,72,50)" fg:x="5401" fg:w="18"/><text x="57.3189%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (9 samples, 0.10%)</title><rect x="57.1640%" y="773" width="0.0951%" height="15" fill="rgb(219,100,48)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.10%)</title><rect x="57.1640%" y="757" width="0.0951%" height="15" fill="rgb(253,5,41)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (9 samples, 0.10%)</title><rect x="57.1640%" y="741" width="0.0951%" height="15" fill="rgb(247,181,11)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.10%)</title><rect x="57.1640%" y="725" width="0.0951%" height="15" fill="rgb(222,223,25)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (9 samples, 0.10%)</title><rect x="57.1640%" y="709" width="0.0951%" height="15" fill="rgb(214,198,28)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.10%)</title><rect x="57.1640%" y="693" width="0.0951%" height="15" fill="rgb(230,46,43)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.10%)</title><rect x="57.1640%" y="677" width="0.0951%" height="15" fill="rgb(233,65,53)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.10%)</title><rect x="57.1640%" y="661" width="0.0951%" height="15" fill="rgb(221,121,27)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="671.50"></text></g><g><title>__GI___libc_free (9 samples, 0.10%)</title><rect x="57.1640%" y="645" width="0.0951%" height="15" fill="rgb(247,70,47)" fg:x="5410" fg:w="9"/><text x="57.4140%" y="655.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="57.2380%" y="629" width="0.0211%" height="15" fill="rgb(228,85,35)" fg:x="5417" fg:w="2"/><text x="57.4880%" y="639.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="57.2380%" y="613" width="0.0211%" height="15" fill="rgb(209,50,18)" fg:x="5417" fg:w="2"/><text x="57.4880%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="57.3542%" y="741" width="0.0317%" height="15" fill="rgb(250,19,35)" fg:x="5428" fg:w="3"/><text x="57.6042%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.03%)</title><rect x="57.3542%" y="725" width="0.0317%" height="15" fill="rgb(253,107,29)" fg:x="5428" fg:w="3"/><text x="57.6042%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (13 samples, 0.14%)</title><rect x="57.2591%" y="805" width="0.1374%" height="15" fill="rgb(252,179,29)" fg:x="5419" fg:w="13"/><text x="57.5091%" y="815.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (13 samples, 0.14%)</title><rect x="57.2591%" y="789" width="0.1374%" height="15" fill="rgb(238,194,6)" fg:x="5419" fg:w="13"/><text x="57.5091%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.14%)</title><rect x="57.2591%" y="773" width="0.1374%" height="15" fill="rgb(238,164,29)" fg:x="5419" fg:w="13"/><text x="57.5091%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.14%)</title><rect x="57.2591%" y="757" width="0.1374%" height="15" fill="rgb(224,25,9)" fg:x="5419" fg:w="13"/><text x="57.5091%" y="767.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="57.3859%" y="741" width="0.0106%" height="15" fill="rgb(244,153,23)" fg:x="5431" fg:w="1"/><text x="57.6359%" y="751.50"></text></g><g><title>_int_free (43 samples, 0.45%)</title><rect x="57.4598%" y="709" width="0.4544%" height="15" fill="rgb(212,203,14)" fg:x="5438" fg:w="43"/><text x="57.7098%" y="719.50"></text></g><g><title>__GI___libc_free (59 samples, 0.62%)</title><rect x="57.3964%" y="725" width="0.6234%" height="15" fill="rgb(220,164,20)" fg:x="5432" fg:w="59"/><text x="57.6464%" y="735.50"></text></g><g><title>arena_for_chunk (10 samples, 0.11%)</title><rect x="57.9142%" y="709" width="0.1057%" height="15" fill="rgb(222,203,48)" fg:x="5481" fg:w="10"/><text x="58.1642%" y="719.50"></text></g><g><title>arena_for_chunk (8 samples, 0.08%)</title><rect x="57.9353%" y="693" width="0.0845%" height="15" fill="rgb(215,159,22)" fg:x="5483" fg:w="8"/><text x="58.1853%" y="703.50"></text></g><g><title>heap_for_ptr (3 samples, 0.03%)</title><rect x="57.9882%" y="677" width="0.0317%" height="15" fill="rgb(216,183,47)" fg:x="5488" fg:w="3"/><text x="58.2382%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 0.67%)</title><rect x="57.3964%" y="757" width="0.6657%" height="15" fill="rgb(229,195,25)" fg:x="5432" fg:w="63"/><text x="57.6464%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (63 samples, 0.67%)</title><rect x="57.3964%" y="741" width="0.6657%" height="15" fill="rgb(224,132,51)" fg:x="5432" fg:w="63"/><text x="57.6464%" y="751.50"></text></g><g><title>__rust_dealloc (4 samples, 0.04%)</title><rect x="58.0199%" y="725" width="0.0423%" height="15" fill="rgb(240,63,7)" fg:x="5491" fg:w="4"/><text x="58.2699%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (64 samples, 0.68%)</title><rect x="57.3964%" y="805" width="0.6762%" height="15" fill="rgb(249,182,41)" fg:x="5432" fg:w="64"/><text x="57.6464%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (64 samples, 0.68%)</title><rect x="57.3964%" y="789" width="0.6762%" height="15" fill="rgb(243,47,26)" fg:x="5432" fg:w="64"/><text x="57.6464%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.68%)</title><rect x="57.3964%" y="773" width="0.6762%" height="15" fill="rgb(233,48,2)" fg:x="5432" fg:w="64"/><text x="57.6464%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="58.0621%" y="757" width="0.0106%" height="15" fill="rgb(244,165,34)" fg:x="5495" fg:w="1"/><text x="58.3121%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="58.0621%" y="741" width="0.0106%" height="15" fill="rgb(207,89,7)" fg:x="5495" fg:w="1"/><text x="58.3121%" y="751.50"></text></g><g><title>_int_free (20 samples, 0.21%)</title><rect x="58.1255%" y="629" width="0.2113%" height="15" fill="rgb(244,117,36)" fg:x="5501" fg:w="20"/><text x="58.3755%" y="639.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="58.3157%" y="613" width="0.0211%" height="15" fill="rgb(226,144,34)" fg:x="5519" fg:w="2"/><text x="58.5657%" y="623.50"></text></g><g><title>__GI___libc_free (30 samples, 0.32%)</title><rect x="58.0833%" y="645" width="0.3170%" height="15" fill="rgb(213,23,19)" fg:x="5497" fg:w="30"/><text x="58.3333%" y="655.50"></text></g><g><title>arena_for_chunk (6 samples, 0.06%)</title><rect x="58.3369%" y="629" width="0.0634%" height="15" fill="rgb(217,75,12)" fg:x="5521" fg:w="6"/><text x="58.5869%" y="639.50"></text></g><g><title>arena_for_chunk (5 samples, 0.05%)</title><rect x="58.3474%" y="613" width="0.0528%" height="15" fill="rgb(224,159,17)" fg:x="5522" fg:w="5"/><text x="58.5974%" y="623.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="58.3897%" y="597" width="0.0106%" height="15" fill="rgb(217,118,1)" fg:x="5526" fg:w="1"/><text x="58.6397%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (32 samples, 0.34%)</title><rect x="58.0727%" y="805" width="0.3381%" height="15" fill="rgb(232,180,48)" fg:x="5496" fg:w="32"/><text x="58.3227%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (32 samples, 0.34%)</title><rect x="58.0727%" y="789" width="0.3381%" height="15" fill="rgb(230,27,33)" fg:x="5496" fg:w="32"/><text x="58.3227%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (32 samples, 0.34%)</title><rect x="58.0727%" y="773" width="0.3381%" height="15" fill="rgb(205,31,21)" fg:x="5496" fg:w="32"/><text x="58.3227%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.34%)</title><rect x="58.0727%" y="757" width="0.3381%" height="15" fill="rgb(253,59,4)" fg:x="5496" fg:w="32"/><text x="58.3227%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (32 samples, 0.34%)</title><rect x="58.0727%" y="741" width="0.3381%" height="15" fill="rgb(224,201,9)" fg:x="5496" fg:w="32"/><text x="58.3227%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.34%)</title><rect x="58.0727%" y="725" width="0.3381%" height="15" fill="rgb(229,206,30)" fg:x="5496" fg:w="32"/><text x="58.3227%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (31 samples, 0.33%)</title><rect x="58.0833%" y="709" width="0.3276%" height="15" fill="rgb(212,67,47)" fg:x="5497" fg:w="31"/><text x="58.3333%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.33%)</title><rect x="58.0833%" y="693" width="0.3276%" height="15" fill="rgb(211,96,50)" fg:x="5497" fg:w="31"/><text x="58.3333%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.33%)</title><rect x="58.0833%" y="677" width="0.3276%" height="15" fill="rgb(252,114,18)" fg:x="5497" fg:w="31"/><text x="58.3333%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.33%)</title><rect x="58.0833%" y="661" width="0.3276%" height="15" fill="rgb(223,58,37)" fg:x="5497" fg:w="31"/><text x="58.3333%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="58.4003%" y="645" width="0.0106%" height="15" fill="rgb(237,70,4)" fg:x="5527" fg:w="1"/><text x="58.6503%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="58.4531%" y="789" width="0.0317%" height="15" fill="rgb(244,85,46)" fg:x="5532" fg:w="3"/><text x="58.7031%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="58.4637%" y="773" width="0.0211%" height="15" fill="rgb(223,39,52)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="58.4637%" y="757" width="0.0211%" height="15" fill="rgb(218,200,14)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="58.4637%" y="741" width="0.0211%" height="15" fill="rgb(208,171,16)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="58.4637%" y="725" width="0.0211%" height="15" fill="rgb(234,200,18)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="58.4637%" y="709" width="0.0211%" height="15" fill="rgb(228,45,11)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="58.4637%" y="693" width="0.0211%" height="15" fill="rgb(237,182,11)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="58.4637%" y="677" width="0.0211%" height="15" fill="rgb(241,175,49)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="58.4637%" y="661" width="0.0211%" height="15" fill="rgb(247,38,35)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="58.4637%" y="645" width="0.0211%" height="15" fill="rgb(228,39,49)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="58.4637%" y="629" width="0.0211%" height="15" fill="rgb(226,101,26)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="58.4637%" y="613" width="0.0211%" height="15" fill="rgb(206,141,19)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="58.4637%" y="597" width="0.0211%" height="15" fill="rgb(211,200,13)" fg:x="5533" fg:w="2"/><text x="58.7137%" y="607.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="58.4742%" y="581" width="0.0106%" height="15" fill="rgb(241,121,6)" fg:x="5534" fg:w="1"/><text x="58.7242%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.04%)</title><rect x="58.4848%" y="789" width="0.0423%" height="15" fill="rgb(234,221,29)" fg:x="5535" fg:w="4"/><text x="58.7348%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="58.4848%" y="773" width="0.0423%" height="15" fill="rgb(229,136,5)" fg:x="5535" fg:w="4"/><text x="58.7348%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="58.4848%" y="757" width="0.0423%" height="15" fill="rgb(238,36,11)" fg:x="5535" fg:w="4"/><text x="58.7348%" y="767.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="58.4848%" y="741" width="0.0423%" height="15" fill="rgb(251,55,41)" fg:x="5535" fg:w="4"/><text x="58.7348%" y="751.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="58.4848%" y="725" width="0.0423%" height="15" fill="rgb(242,34,40)" fg:x="5535" fg:w="4"/><text x="58.7348%" y="735.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="58.5059%" y="709" width="0.0211%" height="15" fill="rgb(215,42,17)" fg:x="5537" fg:w="2"/><text x="58.7559%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.01%)</title><rect x="58.5270%" y="757" width="0.0106%" height="15" fill="rgb(207,44,46)" fg:x="5539" fg:w="1"/><text x="58.7770%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (3 samples, 0.03%)</title><rect x="58.5270%" y="789" width="0.0317%" height="15" fill="rgb(211,206,28)" fg:x="5539" fg:w="3"/><text x="58.7770%" y="799.50"></text></g><g><title>alloc::slice::hack::into_vec (3 samples, 0.03%)</title><rect x="58.5270%" y="773" width="0.0317%" height="15" fill="rgb(237,167,16)" fg:x="5539" fg:w="3"/><text x="58.7770%" y="783.50"></text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="58.5376%" y="757" width="0.0211%" height="15" fill="rgb(233,66,6)" fg:x="5540" fg:w="2"/><text x="58.7876%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="58.5587%" y="741" width="0.0106%" height="15" fill="rgb(246,123,29)" fg:x="5542" fg:w="1"/><text x="58.8087%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="58.5587%" y="725" width="0.0106%" height="15" fill="rgb(209,62,40)" fg:x="5542" fg:w="1"/><text x="58.8087%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="58.5799%" y="677" width="0.0106%" height="15" fill="rgb(218,4,25)" fg:x="5544" fg:w="1"/><text x="58.8299%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="58.5799%" y="661" width="0.0106%" height="15" fill="rgb(253,91,49)" fg:x="5544" fg:w="1"/><text x="58.8299%" y="671.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="58.6855%" y="581" width="0.0106%" height="15" fill="rgb(228,155,29)" fg:x="5554" fg:w="1"/><text x="58.9355%" y="591.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="58.6961%" y="581" width="0.0211%" height="15" fill="rgb(243,57,37)" fg:x="5555" fg:w="2"/><text x="58.9461%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="58.9074%" y="549" width="0.0740%" height="15" fill="rgb(244,167,17)" fg:x="5575" fg:w="7"/><text x="59.1574%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="58.9074%" y="533" width="0.0740%" height="15" fill="rgb(207,181,38)" fg:x="5575" fg:w="7"/><text x="59.1574%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="58.9074%" y="517" width="0.0740%" height="15" fill="rgb(211,8,23)" fg:x="5575" fg:w="7"/><text x="59.1574%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="58.9180%" y="501" width="0.0634%" height="15" fill="rgb(235,11,44)" fg:x="5576" fg:w="6"/><text x="59.1680%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="58.9180%" y="485" width="0.0634%" height="15" fill="rgb(248,18,52)" fg:x="5576" fg:w="6"/><text x="59.1680%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="58.9391%" y="469" width="0.0423%" height="15" fill="rgb(208,4,7)" fg:x="5578" fg:w="4"/><text x="59.1891%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="58.9497%" y="453" width="0.0317%" height="15" fill="rgb(240,17,39)" fg:x="5579" fg:w="3"/><text x="59.1997%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="58.9497%" y="437" width="0.0317%" height="15" fill="rgb(207,170,3)" fg:x="5579" fg:w="3"/><text x="59.1997%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="58.9497%" y="421" width="0.0317%" height="15" fill="rgb(236,100,52)" fg:x="5579" fg:w="3"/><text x="59.1997%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="58.9603%" y="405" width="0.0211%" height="15" fill="rgb(246,78,51)" fg:x="5580" fg:w="2"/><text x="59.2103%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="58.9603%" y="389" width="0.0211%" height="15" fill="rgb(211,17,15)" fg:x="5580" fg:w="2"/><text x="59.2103%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="58.9708%" y="373" width="0.0106%" height="15" fill="rgb(209,59,46)" fg:x="5581" fg:w="1"/><text x="59.2208%" y="383.50"></text></g><g><title>sysmalloc (39 samples, 0.41%)</title><rect x="58.9074%" y="565" width="0.4121%" height="15" fill="rgb(210,92,25)" fg:x="5575" fg:w="39"/><text x="59.1574%" y="575.50"></text></g><g><title>grow_heap (32 samples, 0.34%)</title><rect x="58.9814%" y="549" width="0.3381%" height="15" fill="rgb(238,174,52)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="559.50"></text></g><g><title>__GI___mprotect (32 samples, 0.34%)</title><rect x="58.9814%" y="533" width="0.3381%" height="15" fill="rgb(230,73,7)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="543.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="58.9814%" y="517" width="0.3381%" height="15" fill="rgb(243,124,40)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="58.9814%" y="501" width="0.3381%" height="15" fill="rgb(244,170,11)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="511.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="58.9814%" y="485" width="0.3381%" height="15" fill="rgb(207,114,54)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="495.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="58.9814%" y="469" width="0.3381%" height="15" fill="rgb(205,42,20)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="479.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="58.9814%" y="453" width="0.3381%" height="15" fill="rgb(230,30,28)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="463.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="58.9814%" y="437" width="0.3381%" height="15" fill="rgb(205,73,54)" fg:x="5582" fg:w="32"/><text x="59.2314%" y="447.50"></text></g><g><title>[unknown] (31 samples, 0.33%)</title><rect x="58.9920%" y="421" width="0.3276%" height="15" fill="rgb(254,227,23)" fg:x="5583" fg:w="31"/><text x="59.2420%" y="431.50"></text></g><g><title>[unknown] (27 samples, 0.29%)</title><rect x="59.0342%" y="405" width="0.2853%" height="15" fill="rgb(228,202,34)" fg:x="5587" fg:w="27"/><text x="59.2842%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="59.0554%" y="389" width="0.2642%" height="15" fill="rgb(222,225,37)" fg:x="5589" fg:w="25"/><text x="59.3054%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="59.0554%" y="373" width="0.2642%" height="15" fill="rgb(221,14,54)" fg:x="5589" fg:w="25"/><text x="59.3054%" y="383.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="59.0554%" y="357" width="0.2642%" height="15" fill="rgb(254,102,2)" fg:x="5589" fg:w="25"/><text x="59.3054%" y="367.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="59.0659%" y="341" width="0.2536%" height="15" fill="rgb(232,104,17)" fg:x="5590" fg:w="24"/><text x="59.3159%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="59.0976%" y="325" width="0.2219%" height="15" fill="rgb(250,220,14)" fg:x="5593" fg:w="21"/><text x="59.3476%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="59.1610%" y="309" width="0.1585%" height="15" fill="rgb(241,158,9)" fg:x="5599" fg:w="15"/><text x="59.4110%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.74%)</title><rect x="58.5904%" y="677" width="0.7396%" height="15" fill="rgb(246,9,43)" fg:x="5545" fg:w="70"/><text x="58.8404%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (70 samples, 0.74%)</title><rect x="58.5904%" y="661" width="0.7396%" height="15" fill="rgb(206,73,33)" fg:x="5545" fg:w="70"/><text x="58.8404%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (70 samples, 0.74%)</title><rect x="58.5904%" y="645" width="0.7396%" height="15" fill="rgb(222,79,8)" fg:x="5545" fg:w="70"/><text x="58.8404%" y="655.50"></text></g><g><title>alloc::alloc::realloc (70 samples, 0.74%)</title><rect x="58.5904%" y="629" width="0.7396%" height="15" fill="rgb(234,8,54)" fg:x="5545" fg:w="70"/><text x="58.8404%" y="639.50"></text></g><g><title>__GI___libc_realloc (70 samples, 0.74%)</title><rect x="58.5904%" y="613" width="0.7396%" height="15" fill="rgb(209,134,38)" fg:x="5545" fg:w="70"/><text x="58.8404%" y="623.50"></text></g><g><title>_int_realloc (62 samples, 0.66%)</title><rect x="58.6750%" y="597" width="0.6551%" height="15" fill="rgb(230,127,29)" fg:x="5553" fg:w="62"/><text x="58.9250%" y="607.50"></text></g><g><title>_int_malloc (58 samples, 0.61%)</title><rect x="58.7172%" y="581" width="0.6128%" height="15" fill="rgb(242,44,41)" fg:x="5557" fg:w="58"/><text x="58.9672%" y="591.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="59.3195%" y="565" width="0.0106%" height="15" fill="rgb(222,56,43)" fg:x="5614" fg:w="1"/><text x="59.5695%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (73 samples, 0.77%)</title><rect x="58.5693%" y="741" width="0.7713%" height="15" fill="rgb(238,39,47)" fg:x="5543" fg:w="73"/><text x="58.8193%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (73 samples, 0.77%)</title><rect x="58.5693%" y="725" width="0.7713%" height="15" fill="rgb(226,79,43)" fg:x="5543" fg:w="73"/><text x="58.8193%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 0.76%)</title><rect x="58.5799%" y="709" width="0.7608%" height="15" fill="rgb(242,105,53)" fg:x="5544" fg:w="72"/><text x="58.8299%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (72 samples, 0.76%)</title><rect x="58.5799%" y="693" width="0.7608%" height="15" fill="rgb(251,132,46)" fg:x="5544" fg:w="72"/><text x="58.8299%" y="703.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="59.3301%" y="677" width="0.0106%" height="15" fill="rgb(231,77,14)" fg:x="5615" fg:w="1"/><text x="59.5801%" y="687.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="59.3301%" y="661" width="0.0106%" height="15" fill="rgb(240,135,9)" fg:x="5615" fg:w="1"/><text x="59.5801%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="59.3301%" y="645" width="0.0106%" height="15" fill="rgb(248,109,14)" fg:x="5615" fg:w="1"/><text x="59.5801%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (75 samples, 0.79%)</title><rect x="58.5587%" y="789" width="0.7925%" height="15" fill="rgb(227,146,52)" fg:x="5542" fg:w="75"/><text x="58.8087%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (75 samples, 0.79%)</title><rect x="58.5587%" y="773" width="0.7925%" height="15" fill="rgb(232,54,3)" fg:x="5542" fg:w="75"/><text x="58.8087%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (75 samples, 0.79%)</title><rect x="58.5587%" y="757" width="0.7925%" height="15" fill="rgb(229,201,43)" fg:x="5542" fg:w="75"/><text x="58.8087%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="59.3407%" y="741" width="0.0106%" height="15" fill="rgb(252,161,33)" fg:x="5616" fg:w="1"/><text x="59.5907%" y="751.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="59.3407%" y="725" width="0.0106%" height="15" fill="rgb(226,146,40)" fg:x="5616" fg:w="1"/><text x="59.5907%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.05%)</title><rect x="59.3512%" y="789" width="0.0528%" height="15" fill="rgb(219,47,25)" fg:x="5617" fg:w="5"/><text x="59.6012%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="59.3724%" y="773" width="0.0317%" height="15" fill="rgb(250,135,13)" fg:x="5619" fg:w="3"/><text x="59.6224%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="59.3724%" y="757" width="0.0317%" height="15" fill="rgb(219,229,18)" fg:x="5619" fg:w="3"/><text x="59.6224%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="59.3724%" y="741" width="0.0317%" height="15" fill="rgb(217,152,27)" fg:x="5619" fg:w="3"/><text x="59.6224%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.3829%" y="725" width="0.0211%" height="15" fill="rgb(225,71,47)" fg:x="5620" fg:w="2"/><text x="59.6329%" y="735.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="59.3935%" y="709" width="0.0106%" height="15" fill="rgb(220,139,14)" fg:x="5621" fg:w="1"/><text x="59.6435%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="59.4041%" y="789" width="0.0106%" height="15" fill="rgb(247,54,32)" fg:x="5622" fg:w="1"/><text x="59.6541%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="59.4146%" y="789" width="0.0106%" height="15" fill="rgb(252,131,39)" fg:x="5623" fg:w="1"/><text x="59.6646%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="59.4146%" y="773" width="0.0106%" height="15" fill="rgb(210,108,39)" fg:x="5623" fg:w="1"/><text x="59.6646%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="59.4146%" y="757" width="0.0106%" height="15" fill="rgb(205,23,29)" fg:x="5623" fg:w="1"/><text x="59.6646%" y="767.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (1 samples, 0.01%)</title><rect x="59.4146%" y="741" width="0.0106%" height="15" fill="rgb(246,139,46)" fg:x="5623" fg:w="1"/><text x="59.6646%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="59.4146%" y="725" width="0.0106%" height="15" fill="rgb(250,81,26)" fg:x="5623" fg:w="1"/><text x="59.6646%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="59.4252%" y="789" width="0.0106%" height="15" fill="rgb(214,104,7)" fg:x="5624" fg:w="1"/><text x="59.6752%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="59.4252%" y="773" width="0.0106%" height="15" fill="rgb(233,189,8)" fg:x="5624" fg:w="1"/><text x="59.6752%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="59.4252%" y="757" width="0.0106%" height="15" fill="rgb(228,141,17)" fg:x="5624" fg:w="1"/><text x="59.6752%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="59.4252%" y="741" width="0.0106%" height="15" fill="rgb(247,157,1)" fg:x="5624" fg:w="1"/><text x="59.6752%" y="751.50"></text></g><g><title>_int_free (8 samples, 0.08%)</title><rect x="59.4463%" y="693" width="0.0845%" height="15" fill="rgb(249,225,5)" fg:x="5626" fg:w="8"/><text x="59.6963%" y="703.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="59.5203%" y="677" width="0.0106%" height="15" fill="rgb(242,55,13)" fg:x="5633" fg:w="1"/><text x="59.7703%" y="687.50"></text></g><g><title>__GI___libc_free (10 samples, 0.11%)</title><rect x="59.4358%" y="709" width="0.1057%" height="15" fill="rgb(230,49,50)" fg:x="5625" fg:w="10"/><text x="59.6858%" y="719.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="59.5309%" y="693" width="0.0106%" height="15" fill="rgb(241,111,38)" fg:x="5634" fg:w="1"/><text x="59.7809%" y="703.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="59.5309%" y="677" width="0.0106%" height="15" fill="rgb(252,155,4)" fg:x="5634" fg:w="1"/><text x="59.7809%" y="687.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="59.5309%" y="661" width="0.0106%" height="15" fill="rgb(212,69,32)" fg:x="5634" fg:w="1"/><text x="59.7809%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (12 samples, 0.13%)</title><rect x="59.4358%" y="789" width="0.1268%" height="15" fill="rgb(243,107,47)" fg:x="5625" fg:w="12"/><text x="59.6858%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (12 samples, 0.13%)</title><rect x="59.4358%" y="773" width="0.1268%" height="15" fill="rgb(247,130,12)" fg:x="5625" fg:w="12"/><text x="59.6858%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.13%)</title><rect x="59.4358%" y="757" width="0.1268%" height="15" fill="rgb(233,74,16)" fg:x="5625" fg:w="12"/><text x="59.6858%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.13%)</title><rect x="59.4358%" y="741" width="0.1268%" height="15" fill="rgb(208,58,18)" fg:x="5625" fg:w="12"/><text x="59.6858%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.13%)</title><rect x="59.4358%" y="725" width="0.1268%" height="15" fill="rgb(242,225,1)" fg:x="5625" fg:w="12"/><text x="59.6858%" y="735.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="59.5414%" y="709" width="0.0211%" height="15" fill="rgb(249,39,40)" fg:x="5635" fg:w="2"/><text x="59.7914%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="59.5626%" y="789" width="0.0423%" height="15" fill="rgb(207,72,44)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="59.5626%" y="773" width="0.0423%" height="15" fill="rgb(215,193,12)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (4 samples, 0.04%)</title><rect x="59.5626%" y="757" width="0.0423%" height="15" fill="rgb(248,41,39)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="59.5626%" y="741" width="0.0423%" height="15" fill="rgb(253,85,4)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="59.5626%" y="725" width="0.0423%" height="15" fill="rgb(243,70,31)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="59.5626%" y="709" width="0.0423%" height="15" fill="rgb(253,195,26)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (4 samples, 0.04%)</title><rect x="59.5626%" y="693" width="0.0423%" height="15" fill="rgb(243,42,11)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="59.5626%" y="677" width="0.0423%" height="15" fill="rgb(239,66,17)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="59.5626%" y="661" width="0.0423%" height="15" fill="rgb(217,132,21)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="59.5626%" y="645" width="0.0423%" height="15" fill="rgb(252,202,21)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="655.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="59.5626%" y="629" width="0.0423%" height="15" fill="rgb(233,98,36)" fg:x="5637" fg:w="4"/><text x="59.8126%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="59.5943%" y="613" width="0.0106%" height="15" fill="rgb(216,153,54)" fg:x="5640" fg:w="1"/><text x="59.8443%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="59.6048%" y="773" width="0.0106%" height="15" fill="rgb(250,99,7)" fg:x="5641" fg:w="1"/><text x="59.8548%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="59.6048%" y="757" width="0.0106%" height="15" fill="rgb(207,56,50)" fg:x="5641" fg:w="1"/><text x="59.8548%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="59.6048%" y="741" width="0.0106%" height="15" fill="rgb(244,61,34)" fg:x="5641" fg:w="1"/><text x="59.8548%" y="751.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="59.6048%" y="725" width="0.0106%" height="15" fill="rgb(241,50,38)" fg:x="5641" fg:w="1"/><text x="59.8548%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="59.6154%" y="773" width="0.0211%" height="15" fill="rgb(212,166,30)" fg:x="5642" fg:w="2"/><text x="59.8654%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="59.6154%" y="757" width="0.0211%" height="15" fill="rgb(249,127,32)" fg:x="5642" fg:w="2"/><text x="59.8654%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="59.6154%" y="741" width="0.0211%" height="15" fill="rgb(209,103,0)" fg:x="5642" fg:w="2"/><text x="59.8654%" y="751.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="59.6154%" y="725" width="0.0211%" height="15" fill="rgb(238,209,51)" fg:x="5642" fg:w="2"/><text x="59.8654%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.6154%" y="709" width="0.0211%" height="15" fill="rgb(237,56,23)" fg:x="5642" fg:w="2"/><text x="59.8654%" y="719.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="59.6154%" y="693" width="0.0211%" height="15" fill="rgb(215,153,46)" fg:x="5642" fg:w="2"/><text x="59.8654%" y="703.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="59.6365%" y="565" width="0.0317%" height="15" fill="rgb(224,49,31)" fg:x="5644" fg:w="3"/><text x="59.8865%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.10%)</title><rect x="59.6365%" y="773" width="0.0951%" height="15" fill="rgb(250,18,42)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.10%)</title><rect x="59.6365%" y="757" width="0.0951%" height="15" fill="rgb(215,176,39)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.10%)</title><rect x="59.6365%" y="741" width="0.0951%" height="15" fill="rgb(223,77,29)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="59.6365%" y="725" width="0.0951%" height="15" fill="rgb(234,94,52)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="59.6365%" y="709" width="0.0951%" height="15" fill="rgb(220,154,50)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.10%)</title><rect x="59.6365%" y="693" width="0.0951%" height="15" fill="rgb(212,11,10)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.10%)</title><rect x="59.6365%" y="677" width="0.0951%" height="15" fill="rgb(205,166,19)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.10%)</title><rect x="59.6365%" y="661" width="0.0951%" height="15" fill="rgb(244,198,16)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.10%)</title><rect x="59.6365%" y="645" width="0.0951%" height="15" fill="rgb(219,69,12)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.10%)</title><rect x="59.6365%" y="629" width="0.0951%" height="15" fill="rgb(245,30,7)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="639.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.10%)</title><rect x="59.6365%" y="613" width="0.0951%" height="15" fill="rgb(218,221,48)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="623.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.10%)</title><rect x="59.6365%" y="597" width="0.0951%" height="15" fill="rgb(216,66,15)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="607.50"></text></g><g><title>_int_realloc (9 samples, 0.10%)</title><rect x="59.6365%" y="581" width="0.0951%" height="15" fill="rgb(226,122,50)" fg:x="5644" fg:w="9"/><text x="59.8865%" y="591.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="59.6682%" y="565" width="0.0634%" height="15" fill="rgb(239,156,16)" fg:x="5647" fg:w="6"/><text x="59.9182%" y="575.50"></text></g><g><title>sysmalloc (4 samples, 0.04%)</title><rect x="59.6893%" y="549" width="0.0423%" height="15" fill="rgb(224,27,38)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="559.50"></text></g><g><title>grow_heap (4 samples, 0.04%)</title><rect x="59.6893%" y="533" width="0.0423%" height="15" fill="rgb(224,39,27)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="543.50"></text></g><g><title>__GI___mprotect (4 samples, 0.04%)</title><rect x="59.6893%" y="517" width="0.0423%" height="15" fill="rgb(215,92,29)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="59.6893%" y="501" width="0.0423%" height="15" fill="rgb(207,159,16)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="59.6893%" y="485" width="0.0423%" height="15" fill="rgb(238,163,47)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="59.6893%" y="469" width="0.0423%" height="15" fill="rgb(219,91,49)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="59.6893%" y="453" width="0.0423%" height="15" fill="rgb(227,167,31)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="59.6893%" y="437" width="0.0423%" height="15" fill="rgb(234,80,54)" fg:x="5649" fg:w="4"/><text x="59.9393%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="59.6999%" y="421" width="0.0317%" height="15" fill="rgb(212,114,2)" fg:x="5650" fg:w="3"/><text x="59.9499%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="59.6999%" y="405" width="0.0317%" height="15" fill="rgb(234,50,24)" fg:x="5650" fg:w="3"/><text x="59.9499%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="59.7210%" y="389" width="0.0106%" height="15" fill="rgb(221,68,8)" fg:x="5652" fg:w="1"/><text x="59.9710%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="59.7210%" y="373" width="0.0106%" height="15" fill="rgb(254,180,31)" fg:x="5652" fg:w="1"/><text x="59.9710%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="59.7210%" y="357" width="0.0106%" height="15" fill="rgb(247,130,50)" fg:x="5652" fg:w="1"/><text x="59.9710%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="59.7316%" y="773" width="0.0211%" height="15" fill="rgb(211,109,4)" fg:x="5653" fg:w="2"/><text x="59.9816%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="59.7422%" y="757" width="0.0106%" height="15" fill="rgb(238,50,21)" fg:x="5654" fg:w="1"/><text x="59.9922%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="59.7422%" y="741" width="0.0106%" height="15" fill="rgb(225,57,45)" fg:x="5654" fg:w="1"/><text x="59.9922%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="59.7422%" y="725" width="0.0106%" height="15" fill="rgb(209,196,50)" fg:x="5654" fg:w="1"/><text x="59.9922%" y="735.50"></text></g><g><title>std::panic::catch_unwind (3,049 samples, 32.22%)</title><rect x="27.5465%" y="997" width="32.2168%" height="15" fill="rgb(242,140,13)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,049 samples, 32.22%)</title><rect x="27.5465%" y="981" width="32.2168%" height="15" fill="rgb(217,111,7)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,049 samples, 32.22%)</title><rect x="27.5465%" y="965" width="32.2168%" height="15" fill="rgb(253,193,51)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="975.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,049 samples, 32.22%)</title><rect x="27.5465%" y="949" width="32.2168%" height="15" fill="rgb(252,70,29)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="959.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3,049 samples, 32.22%)</title><rect x="27.5465%" y="933" width="32.2168%" height="15" fill="rgb(232,127,12)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="943.50">std::thread::Builder::spawn_unchecked_::{{closure}}:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,049 samples, 32.22%)</title><rect x="27.5465%" y="917" width="32.2168%" height="15" fill="rgb(211,180,21)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backt..</text></g><g><title>paranagram::utils::find_sum::{{closure}} (3,049 samples, 32.22%)</title><rect x="27.5465%" y="901" width="32.2168%" height="15" fill="rgb(229,72,13)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="911.50">paranagram::utils::find_sum::{{closure}}</text></g><g><title>paranagram::utils::find_sum_rec (3,049 samples, 32.22%)</title><rect x="27.5465%" y="885" width="32.2168%" height="15" fill="rgb(240,211,49)" fg:x="2607" fg:w="3049"/><text x="27.7965%" y="895.50">paranagram::utils::find_sum_rec</text></g><g><title>paranagram::utils::find_sum_rec (2,726 samples, 28.80%)</title><rect x="30.9594%" y="869" width="28.8039%" height="15" fill="rgb(219,149,40)" fg:x="2930" fg:w="2726"/><text x="31.2094%" y="879.50">paranagram::utils::find_sum_rec</text></g><g><title>paranagram::utils::find_sum_rec (2,136 samples, 22.57%)</title><rect x="37.1936%" y="853" width="22.5697%" height="15" fill="rgb(210,127,46)" fg:x="3520" fg:w="2136"/><text x="37.4436%" y="863.50">paranagram::utils::find_sum_rec</text></g><g><title>paranagram::utils::find_sum_rec (1,363 samples, 14.40%)</title><rect x="45.3614%" y="837" width="14.4019%" height="15" fill="rgb(220,106,7)" fg:x="4293" fg:w="1363"/><text x="45.6114%" y="847.50">paranagram::utils::fin..</text></g><g><title>paranagram::utils::find_sum_rec (572 samples, 6.04%)</title><rect x="53.7194%" y="821" width="6.0440%" height="15" fill="rgb(249,31,22)" fg:x="5084" fg:w="572"/><text x="53.9694%" y="831.50">paranagr..</text></g><g><title>paranagram::utils::find_sum_rec (128 samples, 1.35%)</title><rect x="58.4108%" y="805" width="1.3525%" height="15" fill="rgb(253,1,49)" fg:x="5528" fg:w="128"/><text x="58.6608%" y="815.50"></text></g><g><title>paranagram::utils::find_sum_rec (15 samples, 0.16%)</title><rect x="59.6048%" y="789" width="0.1585%" height="15" fill="rgb(227,144,33)" fg:x="5641" fg:w="15"/><text x="59.8548%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="59.7527%" y="773" width="0.0106%" height="15" fill="rgb(249,163,44)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="59.7527%" y="757" width="0.0106%" height="15" fill="rgb(234,15,39)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="59.7527%" y="741" width="0.0106%" height="15" fill="rgb(207,66,16)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.7527%" y="725" width="0.0106%" height="15" fill="rgb(233,112,24)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="59.7527%" y="709" width="0.0106%" height="15" fill="rgb(230,90,22)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.7527%" y="693" width="0.0106%" height="15" fill="rgb(229,61,13)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="59.7527%" y="677" width="0.0106%" height="15" fill="rgb(225,57,24)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.7527%" y="661" width="0.0106%" height="15" fill="rgb(208,169,48)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="59.7527%" y="645" width="0.0106%" height="15" fill="rgb(244,218,51)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="59.7527%" y="629" width="0.0106%" height="15" fill="rgb(214,148,10)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="639.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="59.7527%" y="613" width="0.0106%" height="15" fill="rgb(225,174,27)" fg:x="5655" fg:w="1"/><text x="60.0027%" y="623.50"></text></g><g><title>__GI___pthread_attr_destroy (1 samples, 0.01%)</title><rect x="59.7633%" y="981" width="0.0106%" height="15" fill="rgb(230,96,26)" fg:x="5656" fg:w="1"/><text x="60.0133%" y="991.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="59.7633%" y="965" width="0.0106%" height="15" fill="rgb(232,10,30)" fg:x="5656" fg:w="1"/><text x="60.0133%" y="975.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="59.7633%" y="949" width="0.0106%" height="15" fill="rgb(222,8,50)" fg:x="5656" fg:w="1"/><text x="60.0133%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.7739%" y="949" width="0.0106%" height="15" fill="rgb(213,81,27)" fg:x="5657" fg:w="1"/><text x="60.0239%" y="959.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.13%)</title><rect x="59.7739%" y="965" width="0.1268%" height="15" fill="rgb(245,50,10)" fg:x="5657" fg:w="12"/><text x="60.0239%" y="975.50"></text></g><g><title>tcache_init (11 samples, 0.12%)</title><rect x="59.7844%" y="949" width="0.1162%" height="15" fill="rgb(216,100,18)" fg:x="5658" fg:w="11"/><text x="60.0344%" y="959.50"></text></g><g><title>tcache_init (11 samples, 0.12%)</title><rect x="59.7844%" y="933" width="0.1162%" height="15" fill="rgb(236,147,54)" fg:x="5658" fg:w="11"/><text x="60.0344%" y="943.50"></text></g><g><title>_int_malloc (11 samples, 0.12%)</title><rect x="59.7844%" y="917" width="0.1162%" height="15" fill="rgb(205,143,26)" fg:x="5658" fg:w="11"/><text x="60.0344%" y="927.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="59.9007%" y="965" width="0.0106%" height="15" fill="rgb(236,26,9)" fg:x="5669" fg:w="1"/><text x="60.1507%" y="975.50"></text></g><g><title>__libc_calloc (1 samples, 0.01%)</title><rect x="59.9112%" y="933" width="0.0106%" height="15" fill="rgb(221,165,53)" fg:x="5670" fg:w="1"/><text x="60.1612%" y="943.50"></text></g><g><title>__GI___pthread_attr_setaffinity_np (3 samples, 0.03%)</title><rect x="59.9112%" y="965" width="0.0317%" height="15" fill="rgb(214,110,17)" fg:x="5670" fg:w="3"/><text x="60.1612%" y="975.50"></text></g><g><title>__pthread_attr_extension (3 samples, 0.03%)</title><rect x="59.9112%" y="949" width="0.0317%" height="15" fill="rgb(237,197,12)" fg:x="5670" fg:w="3"/><text x="60.1612%" y="959.50"></text></g><g><title>__memset_evex_unaligned_erms (2 samples, 0.02%)</title><rect x="59.9218%" y="933" width="0.0211%" height="15" fill="rgb(205,84,17)" fg:x="5671" fg:w="2"/><text x="60.1718%" y="943.50"></text></g><g><title>std::sys::unix::thread::guard::current (24 samples, 0.25%)</title><rect x="59.7633%" y="997" width="0.2536%" height="15" fill="rgb(237,18,45)" fg:x="5656" fg:w="24"/><text x="60.0133%" y="1007.50"></text></g><g><title>__pthread_getattr_np (23 samples, 0.24%)</title><rect x="59.7739%" y="981" width="0.2430%" height="15" fill="rgb(221,87,14)" fg:x="5657" fg:w="23"/><text x="60.0239%" y="991.50"></text></g><g><title>__GI___pthread_getaffinity_np (7 samples, 0.07%)</title><rect x="59.9429%" y="965" width="0.0740%" height="15" fill="rgb(238,186,15)" fg:x="5673" fg:w="7"/><text x="60.1929%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="59.9429%" y="949" width="0.0740%" height="15" fill="rgb(208,115,11)" fg:x="5673" fg:w="7"/><text x="60.1929%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="59.9429%" y="933" width="0.0740%" height="15" fill="rgb(254,175,0)" fg:x="5673" fg:w="7"/><text x="60.1929%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="59.9535%" y="917" width="0.0634%" height="15" fill="rgb(227,24,42)" fg:x="5674" fg:w="6"/><text x="60.2035%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="59.9641%" y="901" width="0.0528%" height="15" fill="rgb(223,211,37)" fg:x="5675" fg:w="5"/><text x="60.2141%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="59.9641%" y="885" width="0.0528%" height="15" fill="rgb(235,49,27)" fg:x="5675" fg:w="5"/><text x="60.2141%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="59.9641%" y="869" width="0.0528%" height="15" fill="rgb(254,97,51)" fg:x="5675" fg:w="5"/><text x="60.2141%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="59.9958%" y="853" width="0.0211%" height="15" fill="rgb(249,51,40)" fg:x="5678" fg:w="2"/><text x="60.2458%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.0063%" y="837" width="0.0106%" height="15" fill="rgb(210,128,45)" fg:x="5679" fg:w="1"/><text x="60.2563%" y="847.50"></text></g><g><title>__GI__dl_find_dso_for_object (1 samples, 0.01%)</title><rect x="60.0169%" y="901" width="0.0106%" height="15" fill="rgb(224,137,50)" fg:x="5680" fg:w="1"/><text x="60.2669%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,075 samples, 32.49%)</title><rect x="27.5465%" y="1045" width="32.4915%" height="15" fill="rgb(242,15,9)" fg:x="2607" fg:w="3075"/><text x="27.7965%" y="1055.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,075 samples, 32.49%)</title><rect x="27.5465%" y="1029" width="32.4915%" height="15" fill="rgb(233,187,41)" fg:x="2607" fg:w="3075"/><text x="27.7965%" y="1039.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3,075 samples, 32.49%)</title><rect x="27.5465%" y="1013" width="32.4915%" height="15" fill="rgb(227,2,29)" fg:x="2607" fg:w="3075"/><text x="27.7965%" y="1023.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys_common::thread_info::set (2 samples, 0.02%)</title><rect x="60.0169%" y="997" width="0.0211%" height="15" fill="rgb(222,70,3)" fg:x="5680" fg:w="2"/><text x="60.2669%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="60.0169%" y="981" width="0.0211%" height="15" fill="rgb(213,11,42)" fg:x="5680" fg:w="2"/><text x="60.2669%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="60.0169%" y="965" width="0.0211%" height="15" fill="rgb(225,150,9)" fg:x="5680" fg:w="2"/><text x="60.2669%" y="975.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (2 samples, 0.02%)</title><rect x="60.0169%" y="949" width="0.0211%" height="15" fill="rgb(230,162,45)" fg:x="5680" fg:w="2"/><text x="60.2669%" y="959.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (2 samples, 0.02%)</title><rect x="60.0169%" y="933" width="0.0211%" height="15" fill="rgb(222,14,52)" fg:x="5680" fg:w="2"/><text x="60.2669%" y="943.50"></text></g><g><title>__cxa_thread_atexit_impl (2 samples, 0.02%)</title><rect x="60.0169%" y="917" width="0.0211%" height="15" fill="rgb(254,198,14)" fg:x="5680" fg:w="2"/><text x="60.2669%" y="927.50"></text></g><g><title>__libc_calloc (1 samples, 0.01%)</title><rect x="60.0275%" y="901" width="0.0106%" height="15" fill="rgb(220,217,30)" fg:x="5681" fg:w="1"/><text x="60.2775%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.0275%" y="885" width="0.0106%" height="15" fill="rgb(215,146,41)" fg:x="5681" fg:w="1"/><text x="60.2775%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,076 samples, 32.50%)</title><rect x="27.5465%" y="1061" width="32.5021%" height="15" fill="rgb(217,27,36)" fg:x="2607" fg:w="3076"/><text x="27.7965%" y="1071.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnc..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="60.0380%" y="1045" width="0.0106%" height="15" fill="rgb(219,218,39)" fg:x="5682" fg:w="1"/><text x="60.2880%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="60.0380%" y="1029" width="0.0106%" height="15" fill="rgb(219,4,42)" fg:x="5682" fg:w="1"/><text x="60.2880%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="60.0380%" y="1013" width="0.0106%" height="15" fill="rgb(249,119,36)" fg:x="5682" fg:w="1"/><text x="60.2880%" y="1023.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="60.0380%" y="997" width="0.0106%" height="15" fill="rgb(209,23,33)" fg:x="5682" fg:w="1"/><text x="60.2880%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="60.0380%" y="981" width="0.0106%" height="15" fill="rgb(211,10,0)" fg:x="5682" fg:w="1"/><text x="60.2880%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (5 samples, 0.05%)</title><rect x="60.0486%" y="1061" width="0.0528%" height="15" fill="rgb(208,99,37)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="1071.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="60.0486%" y="1045" width="0.0528%" height="15" fill="rgb(213,132,31)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="1055.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (5 samples, 0.05%)</title><rect x="60.0486%" y="1029" width="0.0528%" height="15" fill="rgb(243,129,40)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="1039.50"></text></g><g><title>__GI___munmap (5 samples, 0.05%)</title><rect x="60.0486%" y="1013" width="0.0528%" height="15" fill="rgb(210,66,33)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="60.0486%" y="997" width="0.0528%" height="15" fill="rgb(209,189,4)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="60.0486%" y="981" width="0.0528%" height="15" fill="rgb(214,107,37)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="60.0486%" y="965" width="0.0528%" height="15" fill="rgb(245,88,54)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="60.0486%" y="949" width="0.0528%" height="15" fill="rgb(205,146,20)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="60.0486%" y="933" width="0.0528%" height="15" fill="rgb(220,161,25)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="60.0486%" y="917" width="0.0528%" height="15" fill="rgb(215,152,15)" fg:x="5683" fg:w="5"/><text x="60.2986%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.0592%" y="901" width="0.0423%" height="15" fill="rgb(233,192,44)" fg:x="5684" fg:w="4"/><text x="60.3092%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.0592%" y="885" width="0.0423%" height="15" fill="rgb(240,170,46)" fg:x="5684" fg:w="4"/><text x="60.3092%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.0803%" y="869" width="0.0211%" height="15" fill="rgb(207,104,33)" fg:x="5686" fg:w="2"/><text x="60.3303%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.0909%" y="853" width="0.0106%" height="15" fill="rgb(219,21,39)" fg:x="5687" fg:w="1"/><text x="60.3409%" y="863.50"></text></g><g><title>__GI___sigaltstack (4 samples, 0.04%)</title><rect x="60.1014%" y="1029" width="0.0423%" height="15" fill="rgb(214,133,29)" fg:x="5688" fg:w="4"/><text x="60.3514%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1226%" y="1013" width="0.0211%" height="15" fill="rgb(226,93,6)" fg:x="5690" fg:w="2"/><text x="60.3726%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1226%" y="997" width="0.0211%" height="15" fill="rgb(252,222,34)" fg:x="5690" fg:w="2"/><text x="60.3726%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.1331%" y="981" width="0.0106%" height="15" fill="rgb(252,92,48)" fg:x="5691" fg:w="1"/><text x="60.3831%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.1331%" y="965" width="0.0106%" height="15" fill="rgb(245,223,24)" fg:x="5691" fg:w="1"/><text x="60.3831%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.02%)</title><rect x="60.1437%" y="1029" width="0.0211%" height="15" fill="rgb(205,176,3)" fg:x="5692" fg:w="2"/><text x="60.3937%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="60.1437%" y="1013" width="0.0211%" height="15" fill="rgb(235,151,15)" fg:x="5692" fg:w="2"/><text x="60.3937%" y="1023.50"></text></g><g><title>__GI___mmap64 (51 samples, 0.54%)</title><rect x="60.1648%" y="997" width="0.5389%" height="15" fill="rgb(237,209,11)" fg:x="5694" fg:w="51"/><text x="60.4148%" y="1007.50"></text></g><g><title>__GI___mmap64 (51 samples, 0.54%)</title><rect x="60.1648%" y="981" width="0.5389%" height="15" fill="rgb(243,227,24)" fg:x="5694" fg:w="51"/><text x="60.4148%" y="991.50"></text></g><g><title>[unknown] (51 samples, 0.54%)</title><rect x="60.1648%" y="965" width="0.5389%" height="15" fill="rgb(239,193,16)" fg:x="5694" fg:w="51"/><text x="60.4148%" y="975.50"></text></g><g><title>[unknown] (51 samples, 0.54%)</title><rect x="60.1648%" y="949" width="0.5389%" height="15" fill="rgb(231,27,9)" fg:x="5694" fg:w="51"/><text x="60.4148%" y="959.50"></text></g><g><title>[unknown] (51 samples, 0.54%)</title><rect x="60.1648%" y="933" width="0.5389%" height="15" fill="rgb(219,169,10)" fg:x="5694" fg:w="51"/><text x="60.4148%" y="943.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="60.1860%" y="917" width="0.5178%" height="15" fill="rgb(244,229,43)" fg:x="5696" fg:w="49"/><text x="60.4360%" y="927.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="60.1860%" y="901" width="0.5178%" height="15" fill="rgb(254,38,20)" fg:x="5696" fg:w="49"/><text x="60.4360%" y="911.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="60.1860%" y="885" width="0.5178%" height="15" fill="rgb(250,47,30)" fg:x="5696" fg:w="49"/><text x="60.4360%" y="895.50"></text></g><g><title>[unknown] (49 samples, 0.52%)</title><rect x="60.1860%" y="869" width="0.5178%" height="15" fill="rgb(224,124,36)" fg:x="5696" fg:w="49"/><text x="60.4360%" y="879.50"></text></g><g><title>[unknown] (47 samples, 0.50%)</title><rect x="60.2071%" y="853" width="0.4966%" height="15" fill="rgb(246,68,51)" fg:x="5698" fg:w="47"/><text x="60.4571%" y="863.50"></text></g><g><title>[unknown] (41 samples, 0.43%)</title><rect x="60.2705%" y="837" width="0.4332%" height="15" fill="rgb(253,43,49)" fg:x="5704" fg:w="41"/><text x="60.5205%" y="847.50"></text></g><g><title>[unknown] (36 samples, 0.38%)</title><rect x="60.3233%" y="821" width="0.3804%" height="15" fill="rgb(219,54,36)" fg:x="5709" fg:w="36"/><text x="60.5733%" y="831.50"></text></g><g><title>[unknown] (34 samples, 0.36%)</title><rect x="60.3445%" y="805" width="0.3593%" height="15" fill="rgb(227,133,34)" fg:x="5711" fg:w="34"/><text x="60.5945%" y="815.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="60.4501%" y="789" width="0.2536%" height="15" fill="rgb(247,227,15)" fg:x="5721" fg:w="24"/><text x="60.7001%" y="799.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="60.5558%" y="773" width="0.1479%" height="15" fill="rgb(229,96,14)" fg:x="5731" fg:w="14"/><text x="60.8058%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="60.6298%" y="757" width="0.0740%" height="15" fill="rgb(220,79,17)" fg:x="5738" fg:w="7"/><text x="60.8798%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="60.6298%" y="741" width="0.0740%" height="15" fill="rgb(205,131,53)" fg:x="5738" fg:w="7"/><text x="60.8798%" y="751.50"></text></g><g><title>__GI___mprotect (37 samples, 0.39%)</title><rect x="60.7037%" y="997" width="0.3910%" height="15" fill="rgb(209,50,29)" fg:x="5745" fg:w="37"/><text x="60.9537%" y="1007.50"></text></g><g><title>[unknown] (37 samples, 0.39%)</title><rect x="60.7037%" y="981" width="0.3910%" height="15" fill="rgb(245,86,46)" fg:x="5745" fg:w="37"/><text x="60.9537%" y="991.50"></text></g><g><title>[unknown] (37 samples, 0.39%)</title><rect x="60.7037%" y="965" width="0.3910%" height="15" fill="rgb(235,66,46)" fg:x="5745" fg:w="37"/><text x="60.9537%" y="975.50"></text></g><g><title>[unknown] (36 samples, 0.38%)</title><rect x="60.7143%" y="949" width="0.3804%" height="15" fill="rgb(232,148,31)" fg:x="5746" fg:w="36"/><text x="60.9643%" y="959.50"></text></g><g><title>[unknown] (36 samples, 0.38%)</title><rect x="60.7143%" y="933" width="0.3804%" height="15" fill="rgb(217,149,8)" fg:x="5746" fg:w="36"/><text x="60.9643%" y="943.50"></text></g><g><title>[unknown] (36 samples, 0.38%)</title><rect x="60.7143%" y="917" width="0.3804%" height="15" fill="rgb(209,183,11)" fg:x="5746" fg:w="36"/><text x="60.9643%" y="927.50"></text></g><g><title>[unknown] (33 samples, 0.35%)</title><rect x="60.7460%" y="901" width="0.3487%" height="15" fill="rgb(208,55,20)" fg:x="5749" fg:w="33"/><text x="60.9960%" y="911.50"></text></g><g><title>[unknown] (33 samples, 0.35%)</title><rect x="60.7460%" y="885" width="0.3487%" height="15" fill="rgb(218,39,14)" fg:x="5749" fg:w="33"/><text x="60.9960%" y="895.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="60.8199%" y="869" width="0.2747%" height="15" fill="rgb(216,169,33)" fg:x="5756" fg:w="26"/><text x="61.0699%" y="879.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="60.9150%" y="853" width="0.1796%" height="15" fill="rgb(233,80,24)" fg:x="5765" fg:w="17"/><text x="61.1650%" y="863.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="60.9256%" y="837" width="0.1691%" height="15" fill="rgb(213,179,31)" fg:x="5766" fg:w="16"/><text x="61.1756%" y="847.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="60.9362%" y="821" width="0.1585%" height="15" fill="rgb(209,19,5)" fg:x="5767" fg:w="15"/><text x="61.1862%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="60.9784%" y="805" width="0.1162%" height="15" fill="rgb(219,18,35)" fg:x="5771" fg:w="11"/><text x="61.2284%" y="815.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="60.9996%" y="789" width="0.0951%" height="15" fill="rgb(209,169,16)" fg:x="5773" fg:w="9"/><text x="61.2496%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="61.0630%" y="773" width="0.0317%" height="15" fill="rgb(245,90,51)" fg:x="5779" fg:w="3"/><text x="61.3130%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.0735%" y="757" width="0.0211%" height="15" fill="rgb(220,99,45)" fg:x="5780" fg:w="2"/><text x="61.3235%" y="767.50"></text></g><g><title>__clone3 (3,208 samples, 33.90%)</title><rect x="27.2189%" y="1109" width="33.8969%" height="15" fill="rgb(249,89,25)" fg:x="2576" fg:w="3208"/><text x="27.4689%" y="1119.50">__clone3</text></g><g><title>start_thread (3,196 samples, 33.77%)</title><rect x="27.3457%" y="1093" width="33.7701%" height="15" fill="rgb(239,193,0)" fg:x="2588" fg:w="3196"/><text x="27.5957%" y="1103.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,177 samples, 33.57%)</title><rect x="27.5465%" y="1077" width="33.5693%" height="15" fill="rgb(231,126,1)" fg:x="2607" fg:w="3177"/><text x="27.7965%" y="1087.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (96 samples, 1.01%)</title><rect x="60.1014%" y="1061" width="1.0144%" height="15" fill="rgb(243,166,3)" fg:x="5688" fg:w="96"/><text x="60.3514%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (96 samples, 1.01%)</title><rect x="60.1014%" y="1045" width="1.0144%" height="15" fill="rgb(223,22,34)" fg:x="5688" fg:w="96"/><text x="60.3514%" y="1055.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (90 samples, 0.95%)</title><rect x="60.1648%" y="1029" width="0.9510%" height="15" fill="rgb(251,52,51)" fg:x="5694" fg:w="90"/><text x="60.4148%" y="1039.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (90 samples, 0.95%)</title><rect x="60.1648%" y="1013" width="0.9510%" height="15" fill="rgb(221,165,28)" fg:x="5694" fg:w="90"/><text x="60.4148%" y="1023.50"></text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.02%)</title><rect x="61.0947%" y="997" width="0.0211%" height="15" fill="rgb(218,121,47)" fg:x="5782" fg:w="2"/><text x="61.3447%" y="1007.50"></text></g><g><title>__GI___sysconf (2 samples, 0.02%)</title><rect x="61.0947%" y="981" width="0.0211%" height="15" fill="rgb(209,120,9)" fg:x="5782" fg:w="2"/><text x="61.3447%" y="991.50"></text></g><g><title>__memset_evex_unaligned_erms (3 samples, 0.03%)</title><rect x="61.1158%" y="1109" width="0.0317%" height="15" fill="rgb(236,68,12)" fg:x="5784" fg:w="3"/><text x="61.3658%" y="1119.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="61.1475%" y="1109" width="0.0423%" height="15" fill="rgb(225,194,26)" fg:x="5787" fg:w="4"/><text x="61.3975%" y="1119.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="61.1898%" y="1109" width="0.0423%" height="15" fill="rgb(231,84,39)" fg:x="5791" fg:w="4"/><text x="61.4398%" y="1119.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="61.2320%" y="821" width="0.0211%" height="15" fill="rgb(210,11,45)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="831.50"></text></g><g><title>__GI___munmap (2 samples, 0.02%)</title><rect x="61.2320%" y="805" width="0.0211%" height="15" fill="rgb(224,54,52)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="789" width="0.0211%" height="15" fill="rgb(238,102,14)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="773" width="0.0211%" height="15" fill="rgb(243,160,52)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="757" width="0.0211%" height="15" fill="rgb(216,114,19)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="741" width="0.0211%" height="15" fill="rgb(244,166,37)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="725" width="0.0211%" height="15" fill="rgb(246,29,44)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="709" width="0.0211%" height="15" fill="rgb(215,56,53)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="693" width="0.0211%" height="15" fill="rgb(217,60,2)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="677" width="0.0211%" height="15" fill="rgb(207,26,24)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="661" width="0.0211%" height="15" fill="rgb(252,210,15)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="645" width="0.0211%" height="15" fill="rgb(253,209,26)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="629" width="0.0211%" height="15" fill="rgb(238,170,14)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.2320%" y="613" width="0.0211%" height="15" fill="rgb(216,178,15)" fg:x="5795" fg:w="2"/><text x="61.4820%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (95 samples, 1.00%)</title><rect x="61.2532%" y="725" width="1.0038%" height="15" fill="rgb(250,197,2)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (95 samples, 1.00%)</title><rect x="61.2532%" y="709" width="1.0038%" height="15" fill="rgb(212,70,42)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (95 samples, 1.00%)</title><rect x="61.2532%" y="693" width="1.0038%" height="15" fill="rgb(227,213,9)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="703.50"></text></g><g><title>alloc::string::String::push_str (95 samples, 1.00%)</title><rect x="61.2532%" y="677" width="1.0038%" height="15" fill="rgb(245,99,25)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (95 samples, 1.00%)</title><rect x="61.2532%" y="661" width="1.0038%" height="15" fill="rgb(250,82,29)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (95 samples, 1.00%)</title><rect x="61.2532%" y="645" width="1.0038%" height="15" fill="rgb(241,226,54)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (95 samples, 1.00%)</title><rect x="61.2532%" y="629" width="1.0038%" height="15" fill="rgb(221,99,41)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (95 samples, 1.00%)</title><rect x="61.2532%" y="613" width="1.0038%" height="15" fill="rgb(213,90,21)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (95 samples, 1.00%)</title><rect x="61.2532%" y="597" width="1.0038%" height="15" fill="rgb(205,208,24)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (95 samples, 1.00%)</title><rect x="61.2532%" y="581" width="1.0038%" height="15" fill="rgb(246,31,12)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (95 samples, 1.00%)</title><rect x="61.2532%" y="565" width="1.0038%" height="15" fill="rgb(213,154,6)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (95 samples, 1.00%)</title><rect x="61.2532%" y="549" width="1.0038%" height="15" fill="rgb(222,163,29)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (95 samples, 1.00%)</title><rect x="61.2532%" y="533" width="1.0038%" height="15" fill="rgb(227,201,8)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (95 samples, 1.00%)</title><rect x="61.2532%" y="517" width="1.0038%" height="15" fill="rgb(233,9,32)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="527.50"></text></g><g><title>alloc::alloc::realloc (95 samples, 1.00%)</title><rect x="61.2532%" y="501" width="1.0038%" height="15" fill="rgb(217,54,24)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="511.50"></text></g><g><title>__GI___libc_realloc (95 samples, 1.00%)</title><rect x="61.2532%" y="485" width="1.0038%" height="15" fill="rgb(235,192,0)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="495.50"></text></g><g><title>_int_realloc (95 samples, 1.00%)</title><rect x="61.2532%" y="469" width="1.0038%" height="15" fill="rgb(235,45,9)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="479.50"></text></g><g><title>_int_malloc (95 samples, 1.00%)</title><rect x="61.2532%" y="453" width="1.0038%" height="15" fill="rgb(246,42,40)" fg:x="5797" fg:w="95"/><text x="61.5032%" y="463.50"></text></g><g><title>malloc_consolidate (94 samples, 0.99%)</title><rect x="61.2637%" y="437" width="0.9932%" height="15" fill="rgb(248,111,24)" fg:x="5798" fg:w="94"/><text x="61.5137%" y="447.50"></text></g><g><title>unlink_chunk (36 samples, 0.38%)</title><rect x="61.8766%" y="421" width="0.3804%" height="15" fill="rgb(249,65,22)" fg:x="5856" fg:w="36"/><text x="62.1266%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (100 samples, 1.06%)</title><rect x="61.2532%" y="821" width="1.0566%" height="15" fill="rgb(238,111,51)" fg:x="5797" fg:w="100"/><text x="61.5032%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (100 samples, 1.06%)</title><rect x="61.2532%" y="805" width="1.0566%" height="15" fill="rgb(250,118,22)" fg:x="5797" fg:w="100"/><text x="61.5032%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (100 samples, 1.06%)</title><rect x="61.2532%" y="789" width="1.0566%" height="15" fill="rgb(234,84,26)" fg:x="5797" fg:w="100"/><text x="61.5032%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (100 samples, 1.06%)</title><rect x="61.2532%" y="773" width="1.0566%" height="15" fill="rgb(243,172,12)" fg:x="5797" fg:w="100"/><text x="61.5032%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 1.06%)</title><rect x="61.2532%" y="757" width="1.0566%" height="15" fill="rgb(236,150,49)" fg:x="5797" fg:w="100"/><text x="61.5032%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 1.06%)</title><rect x="61.2532%" y="741" width="1.0566%" height="15" fill="rgb(225,197,26)" fg:x="5797" fg:w="100"/><text x="61.5032%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="62.2570%" y="725" width="0.0528%" height="15" fill="rgb(214,17,42)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="62.2570%" y="709" width="0.0528%" height="15" fill="rgb(224,165,40)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;,alloc::alloc::Global&gt;&gt; (5 samples, 0.05%)</title><rect x="62.2570%" y="693" width="0.0528%" height="15" fill="rgb(246,100,4)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="62.2570%" y="677" width="0.0528%" height="15" fill="rgb(222,103,0)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="62.2570%" y="661" width="0.0528%" height="15" fill="rgb(227,189,26)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="62.2570%" y="645" width="0.0528%" height="15" fill="rgb(214,202,17)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="62.2570%" y="629" width="0.0528%" height="15" fill="rgb(229,111,3)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="62.2570%" y="613" width="0.0528%" height="15" fill="rgb(229,172,15)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="623.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="62.2570%" y="597" width="0.0528%" height="15" fill="rgb(230,224,35)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="607.50"></text></g><g><title>__GI___munmap (5 samples, 0.05%)</title><rect x="62.2570%" y="581" width="0.0528%" height="15" fill="rgb(251,141,6)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="565" width="0.0528%" height="15" fill="rgb(225,208,6)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="549" width="0.0528%" height="15" fill="rgb(246,181,16)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="533" width="0.0528%" height="15" fill="rgb(227,129,36)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="517" width="0.0528%" height="15" fill="rgb(248,117,24)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="501" width="0.0528%" height="15" fill="rgb(214,185,35)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="485" width="0.0528%" height="15" fill="rgb(236,150,34)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="469" width="0.0528%" height="15" fill="rgb(243,228,27)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="453" width="0.0528%" height="15" fill="rgb(245,77,44)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="437" width="0.0528%" height="15" fill="rgb(235,214,42)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="62.2570%" y="421" width="0.0528%" height="15" fill="rgb(221,74,3)" fg:x="5892" fg:w="5"/><text x="62.5070%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="62.2675%" y="405" width="0.0423%" height="15" fill="rgb(206,121,29)" fg:x="5893" fg:w="4"/><text x="62.5175%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="62.2675%" y="389" width="0.0423%" height="15" fill="rgb(249,131,53)" fg:x="5893" fg:w="4"/><text x="62.5175%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="62.2675%" y="373" width="0.0423%" height="15" fill="rgb(236,170,29)" fg:x="5893" fg:w="4"/><text x="62.5175%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="62.2675%" y="357" width="0.0423%" height="15" fill="rgb(247,96,15)" fg:x="5893" fg:w="4"/><text x="62.5175%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="62.2675%" y="341" width="0.0423%" height="15" fill="rgb(211,210,7)" fg:x="5893" fg:w="4"/><text x="62.5175%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="62.2781%" y="325" width="0.0317%" height="15" fill="rgb(240,88,50)" fg:x="5894" fg:w="3"/><text x="62.5281%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.2887%" y="309" width="0.0211%" height="15" fill="rgb(209,229,26)" fg:x="5895" fg:w="2"/><text x="62.5387%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.2887%" y="293" width="0.0211%" height="15" fill="rgb(210,68,23)" fg:x="5895" fg:w="2"/><text x="62.5387%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.2887%" y="277" width="0.0211%" height="15" fill="rgb(229,180,13)" fg:x="5895" fg:w="2"/><text x="62.5387%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.2887%" y="261" width="0.0211%" height="15" fill="rgb(236,53,44)" fg:x="5895" fg:w="2"/><text x="62.5387%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.03%)</title><rect x="62.3098%" y="741" width="0.0317%" height="15" fill="rgb(244,214,29)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="62.3098%" y="725" width="0.0317%" height="15" fill="rgb(220,75,29)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="62.3098%" y="709" width="0.0317%" height="15" fill="rgb(214,183,37)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="62.3098%" y="693" width="0.0317%" height="15" fill="rgb(239,117,29)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="62.3098%" y="677" width="0.0317%" height="15" fill="rgb(237,171,35)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="62.3098%" y="661" width="0.0317%" height="15" fill="rgb(229,178,53)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="671.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="62.3098%" y="645" width="0.0317%" height="15" fill="rgb(210,102,19)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="655.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="62.3098%" y="629" width="0.0317%" height="15" fill="rgb(235,127,22)" fg:x="5897" fg:w="3"/><text x="62.5598%" y="639.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="62.3415%" y="597" width="0.0423%" height="15" fill="rgb(244,31,31)" fg:x="5900" fg:w="4"/><text x="62.5915%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::Paranagram&gt; (8 samples, 0.08%)</title><rect x="62.3098%" y="821" width="0.0845%" height="15" fill="rgb(231,43,21)" fg:x="5897" fg:w="8"/><text x="62.5598%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;paranagram::word::Word&gt;&gt; (8 samples, 0.08%)</title><rect x="62.3098%" y="805" width="0.0845%" height="15" fill="rgb(217,131,35)" fg:x="5897" fg:w="8"/><text x="62.5598%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="62.3098%" y="789" width="0.0845%" height="15" fill="rgb(221,149,4)" fg:x="5897" fg:w="8"/><text x="62.5598%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[paranagram::word::Word]&gt; (8 samples, 0.08%)</title><rect x="62.3098%" y="773" width="0.0845%" height="15" fill="rgb(232,170,28)" fg:x="5897" fg:w="8"/><text x="62.5598%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::word::Word&gt; (8 samples, 0.08%)</title><rect x="62.3098%" y="757" width="0.0845%" height="15" fill="rgb(238,56,10)" fg:x="5897" fg:w="8"/><text x="62.5598%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (5 samples, 0.05%)</title><rect x="62.3415%" y="741" width="0.0528%" height="15" fill="rgb(235,196,14)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.05%)</title><rect x="62.3415%" y="725" width="0.0528%" height="15" fill="rgb(216,45,48)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (5 samples, 0.05%)</title><rect x="62.3415%" y="709" width="0.0528%" height="15" fill="rgb(238,213,17)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="62.3415%" y="693" width="0.0528%" height="15" fill="rgb(212,13,2)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (5 samples, 0.05%)</title><rect x="62.3415%" y="677" width="0.0528%" height="15" fill="rgb(240,114,20)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.05%)</title><rect x="62.3415%" y="661" width="0.0528%" height="15" fill="rgb(228,41,40)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="62.3415%" y="645" width="0.0528%" height="15" fill="rgb(244,132,35)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="62.3415%" y="629" width="0.0528%" height="15" fill="rgb(253,189,4)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="639.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="62.3415%" y="613" width="0.0528%" height="15" fill="rgb(224,37,19)" fg:x="5900" fg:w="5"/><text x="62.5915%" y="623.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="62.3838%" y="597" width="0.0106%" height="15" fill="rgb(235,223,18)" fg:x="5904" fg:w="1"/><text x="62.6338%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="62.3943%" y="709" width="0.0317%" height="15" fill="rgb(235,163,25)" fg:x="5905" fg:w="3"/><text x="62.6443%" y="719.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="62.3943%" y="693" width="0.0317%" height="15" fill="rgb(217,145,28)" fg:x="5905" fg:w="3"/><text x="62.6443%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="62.4260%" y="709" width="0.0211%" height="15" fill="rgb(223,223,32)" fg:x="5908" fg:w="2"/><text x="62.6760%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="62.4894%" y="677" width="0.0423%" height="15" fill="rgb(227,189,39)" fg:x="5914" fg:w="4"/><text x="62.7394%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (9 samples, 0.10%)</title><rect x="62.8064%" y="661" width="0.0951%" height="15" fill="rgb(248,10,22)" fg:x="5944" fg:w="9"/><text x="63.0564%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (6 samples, 0.06%)</title><rect x="62.9015%" y="661" width="0.0634%" height="15" fill="rgb(248,46,39)" fg:x="5953" fg:w="6"/><text x="63.1515%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.06%)</title><rect x="62.9015%" y="645" width="0.0634%" height="15" fill="rgb(248,113,48)" fg:x="5953" fg:w="6"/><text x="63.1515%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.26%)</title><rect x="63.5355%" y="565" width="0.2642%" height="15" fill="rgb(245,16,25)" fg:x="6013" fg:w="25"/><text x="63.7855%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="63.7785%" y="549" width="0.0211%" height="15" fill="rgb(249,152,16)" fg:x="6036" fg:w="2"/><text x="64.0285%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.83%)</title><rect x="63.2396%" y="629" width="0.8347%" height="15" fill="rgb(250,16,1)" fg:x="5985" fg:w="79"/><text x="63.4896%" y="639.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.83%)</title><rect x="63.2396%" y="613" width="0.8347%" height="15" fill="rgb(249,138,3)" fg:x="5985" fg:w="79"/><text x="63.4896%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.83%)</title><rect x="63.2396%" y="597" width="0.8347%" height="15" fill="rgb(227,71,41)" fg:x="5985" fg:w="79"/><text x="63.4896%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (51 samples, 0.54%)</title><rect x="63.5355%" y="581" width="0.5389%" height="15" fill="rgb(209,184,23)" fg:x="6013" fg:w="51"/><text x="63.7855%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (26 samples, 0.27%)</title><rect x="63.7997%" y="565" width="0.2747%" height="15" fill="rgb(223,215,31)" fg:x="6038" fg:w="26"/><text x="64.0497%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (26 samples, 0.27%)</title><rect x="63.7997%" y="549" width="0.2747%" height="15" fill="rgb(210,146,28)" fg:x="6038" fg:w="26"/><text x="64.0497%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (26 samples, 0.27%)</title><rect x="63.7997%" y="533" width="0.2747%" height="15" fill="rgb(209,183,41)" fg:x="6038" fg:w="26"/><text x="64.0497%" y="543.50"></text></g><g><title>&lt;u16 as core::ops::arith::AddAssign&lt;&amp;u16&gt;&gt;::add_assign (39 samples, 0.41%)</title><rect x="64.0744%" y="629" width="0.4121%" height="15" fill="rgb(209,224,45)" fg:x="6064" fg:w="39"/><text x="64.3244%" y="639.50"></text></g><g><title>&lt;u16 as core::ops::arith::AddAssign&gt;::add_assign (39 samples, 0.41%)</title><rect x="64.0744%" y="613" width="0.4121%" height="15" fill="rgb(224,209,51)" fg:x="6064" fg:w="39"/><text x="64.3244%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 0.13%)</title><rect x="64.4865%" y="597" width="0.1268%" height="15" fill="rgb(223,17,39)" fg:x="6103" fg:w="12"/><text x="64.7365%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="64.8457%" y="565" width="0.0317%" height="15" fill="rgb(234,204,37)" fg:x="6137" fg:w="3"/><text x="65.0957%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.03%)</title><rect x="64.8457%" y="549" width="0.0317%" height="15" fill="rgb(236,120,5)" fg:x="6137" fg:w="3"/><text x="65.0957%" y="559.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="64.8457%" y="533" width="0.0317%" height="15" fill="rgb(248,97,27)" fg:x="6137" fg:w="3"/><text x="65.0957%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (4 samples, 0.04%)</title><rect x="64.8774%" y="565" width="0.0423%" height="15" fill="rgb(240,66,17)" fg:x="6140" fg:w="4"/><text x="65.1274%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.04%)</title><rect x="64.8774%" y="549" width="0.0423%" height="15" fill="rgb(210,79,3)" fg:x="6140" fg:w="4"/><text x="65.1274%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.04%)</title><rect x="64.8774%" y="533" width="0.0423%" height="15" fill="rgb(214,176,27)" fg:x="6140" fg:w="4"/><text x="65.1274%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.04%)</title><rect x="64.8774%" y="517" width="0.0423%" height="15" fill="rgb(235,185,3)" fg:x="6140" fg:w="4"/><text x="65.1274%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.06%)</title><rect x="65.1416%" y="517" width="0.0634%" height="15" fill="rgb(227,24,12)" fg:x="6165" fg:w="6"/><text x="65.3916%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (10 samples, 0.11%)</title><rect x="65.1205%" y="533" width="0.1057%" height="15" fill="rgb(252,169,48)" fg:x="6163" fg:w="10"/><text x="65.3705%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.02%)</title><rect x="65.2050%" y="517" width="0.0211%" height="15" fill="rgb(212,65,1)" fg:x="6171" fg:w="2"/><text x="65.4550%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="65.2050%" y="501" width="0.0211%" height="15" fill="rgb(242,39,24)" fg:x="6171" fg:w="2"/><text x="65.4550%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (17 samples, 0.18%)</title><rect x="65.3107%" y="517" width="0.1796%" height="15" fill="rgb(249,32,23)" fg:x="6181" fg:w="17"/><text x="65.5607%" y="527.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.01%)</title><rect x="65.4797%" y="501" width="0.0106%" height="15" fill="rgb(251,195,23)" fg:x="6197" fg:w="1"/><text x="65.7297%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="65.4903%" y="517" width="0.0106%" height="15" fill="rgb(236,174,8)" fg:x="6198" fg:w="1"/><text x="65.7403%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (34 samples, 0.36%)</title><rect x="65.2261%" y="533" width="0.3593%" height="15" fill="rgb(220,197,8)" fg:x="6173" fg:w="34"/><text x="65.4761%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (8 samples, 0.08%)</title><rect x="65.5008%" y="517" width="0.0845%" height="15" fill="rgb(240,108,37)" fg:x="6199" fg:w="8"/><text x="65.7508%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (8 samples, 0.08%)</title><rect x="65.5008%" y="501" width="0.0845%" height="15" fill="rgb(232,176,24)" fg:x="6199" fg:w="8"/><text x="65.7508%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (9 samples, 0.10%)</title><rect x="65.5854%" y="533" width="0.0951%" height="15" fill="rgb(243,35,29)" fg:x="6207" fg:w="9"/><text x="65.8354%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (80 samples, 0.85%)</title><rect x="64.9831%" y="549" width="0.8453%" height="15" fill="rgb(210,37,18)" fg:x="6150" fg:w="80"/><text x="65.2331%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (14 samples, 0.15%)</title><rect x="65.6805%" y="533" width="0.1479%" height="15" fill="rgb(224,184,40)" fg:x="6216" fg:w="14"/><text x="65.9305%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (14 samples, 0.15%)</title><rect x="65.6805%" y="517" width="0.1479%" height="15" fill="rgb(236,39,29)" fg:x="6216" fg:w="14"/><text x="65.9305%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.15%)</title><rect x="65.6805%" y="501" width="0.1479%" height="15" fill="rgb(232,48,39)" fg:x="6216" fg:w="14"/><text x="65.9305%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (94 samples, 0.99%)</title><rect x="64.9197%" y="565" width="0.9932%" height="15" fill="rgb(236,34,42)" fg:x="6144" fg:w="94"/><text x="65.1697%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (8 samples, 0.08%)</title><rect x="65.8284%" y="549" width="0.0845%" height="15" fill="rgb(243,106,37)" fg:x="6230" fg:w="8"/><text x="66.0784%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (8 samples, 0.08%)</title><rect x="65.8284%" y="533" width="0.0845%" height="15" fill="rgb(218,96,6)" fg:x="6230" fg:w="8"/><text x="66.0784%" y="543.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (145 samples, 1.53%)</title><rect x="64.4865%" y="629" width="1.5321%" height="15" fill="rgb(235,130,12)" fg:x="6103" fg:w="145"/><text x="64.7365%" y="639.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (145 samples, 1.53%)</title><rect x="64.4865%" y="613" width="1.5321%" height="15" fill="rgb(231,95,0)" fg:x="6103" fg:w="145"/><text x="64.7365%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (133 samples, 1.41%)</title><rect x="64.6133%" y="597" width="1.4053%" height="15" fill="rgb(228,12,23)" fg:x="6115" fg:w="133"/><text x="64.8633%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (126 samples, 1.33%)</title><rect x="64.6872%" y="581" width="1.3314%" height="15" fill="rgb(216,12,1)" fg:x="6122" fg:w="126"/><text x="64.9372%" y="591.50"></text></g><g><title>hashbrown::raw::special_is_empty (10 samples, 0.11%)</title><rect x="65.9129%" y="565" width="0.1057%" height="15" fill="rgb(219,59,3)" fg:x="6238" fg:w="10"/><text x="66.1629%" y="575.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.03%)</title><rect x="66.6631%" y="533" width="0.0317%" height="15" fill="rgb(215,208,46)" fg:x="6309" fg:w="3"/><text x="66.9131%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="66.6631%" y="517" width="0.0317%" height="15" fill="rgb(254,224,29)" fg:x="6309" fg:w="3"/><text x="66.9131%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.23%)</title><rect x="66.6948%" y="533" width="0.2325%" height="15" fill="rgb(232,14,29)" fg:x="6312" fg:w="22"/><text x="66.9448%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="67.0013%" y="517" width="0.0528%" height="15" fill="rgb(208,45,52)" fg:x="6341" fg:w="5"/><text x="67.2513%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.07%)</title><rect x="67.0541%" y="517" width="0.0740%" height="15" fill="rgb(234,191,28)" fg:x="6346" fg:w="7"/><text x="67.3041%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.07%)</title><rect x="67.0541%" y="501" width="0.0740%" height="15" fill="rgb(244,67,43)" fg:x="6346" fg:w="7"/><text x="67.3041%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.04%)</title><rect x="67.0858%" y="485" width="0.0423%" height="15" fill="rgb(236,189,24)" fg:x="6349" fg:w="4"/><text x="67.3358%" y="495.50"></text></g><g><title>core::mem::swap (4 samples, 0.04%)</title><rect x="67.1281%" y="517" width="0.0423%" height="15" fill="rgb(239,214,33)" fg:x="6353" fg:w="4"/><text x="67.3781%" y="527.50"></text></g><g><title>core::mem::swap_simple (4 samples, 0.04%)</title><rect x="67.1281%" y="501" width="0.0423%" height="15" fill="rgb(226,176,41)" fg:x="6353" fg:w="4"/><text x="67.3781%" y="511.50"></text></g><g><title>core::ptr::read (4 samples, 0.04%)</title><rect x="67.1281%" y="485" width="0.0423%" height="15" fill="rgb(248,47,8)" fg:x="6353" fg:w="4"/><text x="67.3781%" y="495.50"></text></g><g><title>_int_free (24 samples, 0.25%)</title><rect x="67.2337%" y="405" width="0.2536%" height="15" fill="rgb(218,81,44)" fg:x="6363" fg:w="24"/><text x="67.4837%" y="415.50"></text></g><g><title>tcache_put (6 samples, 0.06%)</title><rect x="67.4239%" y="389" width="0.0634%" height="15" fill="rgb(213,98,6)" fg:x="6381" fg:w="6"/><text x="67.6739%" y="399.50"></text></g><g><title>__GI___libc_free (34 samples, 0.36%)</title><rect x="67.1915%" y="421" width="0.3593%" height="15" fill="rgb(222,85,22)" fg:x="6359" fg:w="34"/><text x="67.4415%" y="431.50"></text></g><g><title>arena_for_chunk (6 samples, 0.06%)</title><rect x="67.4873%" y="405" width="0.0634%" height="15" fill="rgb(239,46,39)" fg:x="6387" fg:w="6"/><text x="67.7373%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (37 samples, 0.39%)</title><rect x="67.1703%" y="517" width="0.3910%" height="15" fill="rgb(237,12,29)" fg:x="6357" fg:w="37"/><text x="67.4203%" y="527.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.39%)</title><rect x="67.1703%" y="501" width="0.3910%" height="15" fill="rgb(214,77,8)" fg:x="6357" fg:w="37"/><text x="67.4203%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (37 samples, 0.39%)</title><rect x="67.1703%" y="485" width="0.3910%" height="15" fill="rgb(217,168,37)" fg:x="6357" fg:w="37"/><text x="67.4203%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (36 samples, 0.38%)</title><rect x="67.1809%" y="469" width="0.3804%" height="15" fill="rgb(221,217,23)" fg:x="6358" fg:w="36"/><text x="67.4309%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.38%)</title><rect x="67.1809%" y="453" width="0.3804%" height="15" fill="rgb(243,229,36)" fg:x="6358" fg:w="36"/><text x="67.4309%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.37%)</title><rect x="67.1915%" y="437" width="0.3698%" height="15" fill="rgb(251,163,40)" fg:x="6359" fg:w="35"/><text x="67.4415%" y="447.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="67.5507%" y="421" width="0.0106%" height="15" fill="rgb(237,222,12)" fg:x="6393" fg:w="1"/><text x="67.8007%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="67.5613%" y="517" width="0.0106%" height="15" fill="rgb(248,132,6)" fg:x="6394" fg:w="1"/><text x="67.8113%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.10%)</title><rect x="67.7409%" y="405" width="0.0951%" height="15" fill="rgb(227,167,50)" fg:x="6411" fg:w="9"/><text x="67.9909%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.05%)</title><rect x="67.7832%" y="389" width="0.0528%" height="15" fill="rgb(242,84,37)" fg:x="6415" fg:w="5"/><text x="68.0332%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.20%)</title><rect x="67.9100%" y="389" width="0.2008%" height="15" fill="rgb(212,4,50)" fg:x="6427" fg:w="19"/><text x="68.1600%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (65 samples, 0.69%)</title><rect x="67.5719%" y="421" width="0.6868%" height="15" fill="rgb(230,228,32)" fg:x="6395" fg:w="65"/><text x="67.8219%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (40 samples, 0.42%)</title><rect x="67.8360%" y="405" width="0.4227%" height="15" fill="rgb(248,217,23)" fg:x="6420" fg:w="40"/><text x="68.0860%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.15%)</title><rect x="68.1107%" y="389" width="0.1479%" height="15" fill="rgb(238,197,32)" fg:x="6446" fg:w="14"/><text x="68.3607%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (66 samples, 0.70%)</title><rect x="67.5719%" y="453" width="0.6974%" height="15" fill="rgb(236,106,1)" fg:x="6395" fg:w="66"/><text x="67.8219%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (66 samples, 0.70%)</title><rect x="67.5719%" y="437" width="0.6974%" height="15" fill="rgb(219,228,13)" fg:x="6395" fg:w="66"/><text x="67.8219%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="68.2587%" y="421" width="0.0106%" height="15" fill="rgb(238,30,35)" fg:x="6460" fg:w="1"/><text x="68.5087%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (68 samples, 0.72%)</title><rect x="67.5719%" y="517" width="0.7185%" height="15" fill="rgb(236,70,23)" fg:x="6395" fg:w="68"/><text x="67.8219%" y="527.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (68 samples, 0.72%)</title><rect x="67.5719%" y="501" width="0.7185%" height="15" fill="rgb(249,104,48)" fg:x="6395" fg:w="68"/><text x="67.8219%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (68 samples, 0.72%)</title><rect x="67.5719%" y="485" width="0.7185%" height="15" fill="rgb(254,117,50)" fg:x="6395" fg:w="68"/><text x="67.8219%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (68 samples, 0.72%)</title><rect x="67.5719%" y="469" width="0.7185%" height="15" fill="rgb(223,152,4)" fg:x="6395" fg:w="68"/><text x="67.8219%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="68.2692%" y="453" width="0.0211%" height="15" fill="rgb(245,6,2)" fg:x="6461" fg:w="2"/><text x="68.5192%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.08%)</title><rect x="68.3432%" y="469" width="0.0845%" height="15" fill="rgb(249,150,24)" fg:x="6468" fg:w="8"/><text x="68.5932%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="68.3855%" y="453" width="0.0423%" height="15" fill="rgb(228,185,42)" fg:x="6472" fg:w="4"/><text x="68.6355%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (27 samples, 0.29%)</title><rect x="68.2904%" y="485" width="0.2853%" height="15" fill="rgb(226,39,33)" fg:x="6463" fg:w="27"/><text x="68.5404%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (14 samples, 0.15%)</title><rect x="68.4277%" y="469" width="0.1479%" height="15" fill="rgb(221,166,19)" fg:x="6476" fg:w="14"/><text x="68.6777%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.15%)</title><rect x="68.4277%" y="453" width="0.1479%" height="15" fill="rgb(209,109,2)" fg:x="6476" fg:w="14"/><text x="68.6777%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (41 samples, 0.43%)</title><rect x="68.5757%" y="485" width="0.4332%" height="15" fill="rgb(252,216,26)" fg:x="6490" fg:w="41"/><text x="68.8257%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (38 samples, 0.40%)</title><rect x="68.6074%" y="469" width="0.4015%" height="15" fill="rgb(227,173,36)" fg:x="6493" fg:w="38"/><text x="68.8574%" y="479.50"></text></g><g><title>hashbrown::raw::is_full (38 samples, 0.40%)</title><rect x="68.6074%" y="453" width="0.4015%" height="15" fill="rgb(209,90,7)" fg:x="6493" fg:w="38"/><text x="68.8574%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.03%)</title><rect x="69.0089%" y="485" width="0.0317%" height="15" fill="rgb(250,194,11)" fg:x="6531" fg:w="3"/><text x="69.2589%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (80 samples, 0.85%)</title><rect x="68.2904%" y="501" width="0.8453%" height="15" fill="rgb(220,72,50)" fg:x="6463" fg:w="80"/><text x="68.5404%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.10%)</title><rect x="69.0406%" y="485" width="0.0951%" height="15" fill="rgb(222,106,48)" fg:x="6534" fg:w="9"/><text x="69.2906%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.10%)</title><rect x="69.0406%" y="469" width="0.0951%" height="15" fill="rgb(216,220,45)" fg:x="6534" fg:w="9"/><text x="69.2906%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.10%)</title><rect x="69.0406%" y="453" width="0.0951%" height="15" fill="rgb(234,112,18)" fg:x="6534" fg:w="9"/><text x="69.2906%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (88 samples, 0.93%)</title><rect x="68.2904%" y="517" width="0.9298%" height="15" fill="rgb(206,179,9)" fg:x="6463" fg:w="88"/><text x="68.5404%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (8 samples, 0.08%)</title><rect x="69.1357%" y="501" width="0.0845%" height="15" fill="rgb(215,115,40)" fg:x="6543" fg:w="8"/><text x="69.3857%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (8 samples, 0.08%)</title><rect x="69.1357%" y="485" width="0.0845%" height="15" fill="rgb(222,69,34)" fg:x="6543" fg:w="8"/><text x="69.3857%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (8 samples, 0.08%)</title><rect x="69.2202%" y="485" width="0.0845%" height="15" fill="rgb(209,161,10)" fg:x="6551" fg:w="8"/><text x="69.4702%" y="495.50"></text></g><g><title>core::intrinsics::write_bytes (8 samples, 0.08%)</title><rect x="69.2202%" y="469" width="0.0845%" height="15" fill="rgb(217,6,38)" fg:x="6551" fg:w="8"/><text x="69.4702%" y="479.50"></text></g><g><title>__memset_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="69.2519%" y="453" width="0.0528%" height="15" fill="rgb(229,229,48)" fg:x="6554" fg:w="5"/><text x="69.5019%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="69.3047%" y="485" width="0.0106%" height="15" fill="rgb(225,21,28)" fg:x="6559" fg:w="1"/><text x="69.5547%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.05%)</title><rect x="69.3470%" y="453" width="0.0528%" height="15" fill="rgb(206,33,13)" fg:x="6563" fg:w="5"/><text x="69.5970%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.05%)</title><rect x="69.3470%" y="437" width="0.0528%" height="15" fill="rgb(242,178,17)" fg:x="6563" fg:w="5"/><text x="69.5970%" y="447.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (7 samples, 0.07%)</title><rect x="69.3364%" y="469" width="0.0740%" height="15" fill="rgb(220,162,5)" fg:x="6562" fg:w="7"/><text x="69.5864%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="69.3998%" y="453" width="0.0106%" height="15" fill="rgb(210,33,43)" fg:x="6568" fg:w="1"/><text x="69.6498%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="69.3998%" y="437" width="0.0106%" height="15" fill="rgb(216,116,54)" fg:x="6568" fg:w="1"/><text x="69.6498%" y="447.50"></text></g><g><title>checked_request2size (7 samples, 0.07%)</title><rect x="69.6217%" y="389" width="0.0740%" height="15" fill="rgb(249,92,24)" fg:x="6589" fg:w="7"/><text x="69.8717%" y="399.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.33%)</title><rect x="69.4949%" y="405" width="0.3276%" height="15" fill="rgb(231,189,14)" fg:x="6577" fg:w="31"/><text x="69.7449%" y="415.50"></text></g><g><title>tcache_get (12 samples, 0.13%)</title><rect x="69.6957%" y="389" width="0.1268%" height="15" fill="rgb(230,8,41)" fg:x="6596" fg:w="12"/><text x="69.9457%" y="399.50"></text></g><g><title>__rdl_alloc (5 samples, 0.05%)</title><rect x="69.8225%" y="405" width="0.0528%" height="15" fill="rgb(249,7,27)" fg:x="6608" fg:w="5"/><text x="70.0725%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.05%)</title><rect x="69.8225%" y="389" width="0.0528%" height="15" fill="rgb(232,86,5)" fg:x="6608" fg:w="5"/><text x="70.0725%" y="399.50"></text></g><g><title>__rust_alloc (3 samples, 0.03%)</title><rect x="69.8753%" y="405" width="0.0317%" height="15" fill="rgb(224,175,18)" fg:x="6613" fg:w="3"/><text x="70.1253%" y="415.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (48 samples, 0.51%)</title><rect x="69.4104%" y="469" width="0.5072%" height="15" fill="rgb(220,129,12)" fg:x="6569" fg:w="48"/><text x="69.6604%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.51%)</title><rect x="69.4104%" y="453" width="0.5072%" height="15" fill="rgb(210,19,36)" fg:x="6569" fg:w="48"/><text x="69.6604%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.51%)</title><rect x="69.4104%" y="437" width="0.5072%" height="15" fill="rgb(219,96,14)" fg:x="6569" fg:w="48"/><text x="69.6604%" y="447.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.48%)</title><rect x="69.4421%" y="421" width="0.4755%" height="15" fill="rgb(249,106,1)" fg:x="6572" fg:w="45"/><text x="69.6921%" y="431.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="69.9070%" y="405" width="0.0106%" height="15" fill="rgb(249,155,20)" fg:x="6616" fg:w="1"/><text x="70.1570%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (63 samples, 0.67%)</title><rect x="69.3153%" y="485" width="0.6657%" height="15" fill="rgb(244,168,9)" fg:x="6560" fg:w="63"/><text x="69.5653%" y="495.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (6 samples, 0.06%)</title><rect x="69.9176%" y="469" width="0.0634%" height="15" fill="rgb(216,23,50)" fg:x="6617" fg:w="6"/><text x="70.1676%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (294 samples, 3.11%)</title><rect x="66.9273%" y="533" width="3.1065%" height="15" fill="rgb(224,219,20)" fg:x="6334" fg:w="294"/><text x="67.1773%" y="543.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (77 samples, 0.81%)</title><rect x="69.2202%" y="517" width="0.8136%" height="15" fill="rgb(222,156,15)" fg:x="6551" fg:w="77"/><text x="69.4702%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (77 samples, 0.81%)</title><rect x="69.2202%" y="501" width="0.8136%" height="15" fill="rgb(231,97,17)" fg:x="6551" fg:w="77"/><text x="69.4702%" y="511.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (5 samples, 0.05%)</title><rect x="69.9810%" y="485" width="0.0528%" height="15" fill="rgb(218,70,48)" fg:x="6623" fg:w="5"/><text x="70.2310%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (343 samples, 3.62%)</title><rect x="66.4624%" y="597" width="3.6243%" height="15" fill="rgb(212,196,52)" fg:x="6290" fg:w="343"/><text x="66.7124%" y="607.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (343 samples, 3.62%)</title><rect x="66.4624%" y="581" width="3.6243%" height="15" fill="rgb(243,203,18)" fg:x="6290" fg:w="343"/><text x="66.7124%" y="591.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (329 samples, 3.48%)</title><rect x="66.6103%" y="565" width="3.4763%" height="15" fill="rgb(252,125,41)" fg:x="6304" fg:w="329"/><text x="66.8603%" y="575.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (329 samples, 3.48%)</title><rect x="66.6103%" y="549" width="3.4763%" height="15" fill="rgb(223,180,33)" fg:x="6304" fg:w="329"/><text x="66.8603%" y="559.50">has..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (5 samples, 0.05%)</title><rect x="70.0338%" y="533" width="0.0528%" height="15" fill="rgb(254,159,46)" fg:x="6628" fg:w="5"/><text x="70.2838%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (39 samples, 0.41%)</title><rect x="71.1221%" y="501" width="0.4121%" height="15" fill="rgb(254,38,10)" fg:x="6731" fg:w="39"/><text x="71.3721%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (60 samples, 0.63%)</title><rect x="71.1221%" y="517" width="0.6340%" height="15" fill="rgb(208,217,32)" fg:x="6731" fg:w="60"/><text x="71.3721%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (21 samples, 0.22%)</title><rect x="71.5342%" y="501" width="0.2219%" height="15" fill="rgb(221,120,13)" fg:x="6770" fg:w="21"/><text x="71.7842%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (97 samples, 1.02%)</title><rect x="72.2633%" y="501" width="1.0249%" height="15" fill="rgb(246,54,52)" fg:x="6839" fg:w="97"/><text x="72.5133%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47 samples, 0.50%)</title><rect x="73.2883%" y="501" width="0.4966%" height="15" fill="rgb(242,34,25)" fg:x="6936" fg:w="47"/><text x="73.5383%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (339 samples, 3.58%)</title><rect x="70.2980%" y="565" width="3.5820%" height="15" fill="rgb(247,209,9)" fg:x="6653" fg:w="339"/><text x="70.5480%" y="575.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (339 samples, 3.58%)</title><rect x="70.2980%" y="549" width="3.5820%" height="15" fill="rgb(228,71,26)" fg:x="6653" fg:w="339"/><text x="70.5480%" y="559.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (339 samples, 3.58%)</title><rect x="70.2980%" y="533" width="3.5820%" height="15" fill="rgb(222,145,49)" fg:x="6653" fg:w="339"/><text x="70.5480%" y="543.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (201 samples, 2.12%)</title><rect x="71.7561%" y="517" width="2.1238%" height="15" fill="rgb(218,121,17)" fg:x="6791" fg:w="201"/><text x="72.0061%" y="527.50">&lt;..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.10%)</title><rect x="73.7849%" y="501" width="0.0951%" height="15" fill="rgb(244,50,7)" fg:x="6983" fg:w="9"/><text x="74.0349%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (22 samples, 0.23%)</title><rect x="73.8800%" y="565" width="0.2325%" height="15" fill="rgb(246,229,37)" fg:x="6992" fg:w="22"/><text x="74.1300%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (22 samples, 0.23%)</title><rect x="73.8800%" y="549" width="0.2325%" height="15" fill="rgb(225,18,5)" fg:x="6992" fg:w="22"/><text x="74.1300%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (22 samples, 0.23%)</title><rect x="73.8800%" y="533" width="0.2325%" height="15" fill="rgb(213,204,8)" fg:x="6992" fg:w="22"/><text x="74.1300%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (22 samples, 0.23%)</title><rect x="73.8800%" y="517" width="0.2325%" height="15" fill="rgb(238,103,6)" fg:x="6992" fg:w="22"/><text x="74.1300%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (404 samples, 4.27%)</title><rect x="70.0866%" y="597" width="4.2688%" height="15" fill="rgb(222,25,35)" fg:x="6633" fg:w="404"/><text x="70.3366%" y="607.50">hashb..</text></g><g><title>core::hash::BuildHasher::hash_one (404 samples, 4.27%)</title><rect x="70.0866%" y="581" width="4.2688%" height="15" fill="rgb(213,203,35)" fg:x="6633" fg:w="404"/><text x="70.3366%" y="591.50">core:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (23 samples, 0.24%)</title><rect x="74.1124%" y="565" width="0.2430%" height="15" fill="rgb(221,79,53)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (23 samples, 0.24%)</title><rect x="74.1124%" y="549" width="0.2430%" height="15" fill="rgb(243,200,35)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u32 (23 samples, 0.24%)</title><rect x="74.1124%" y="533" width="0.2430%" height="15" fill="rgb(248,60,25)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.24%)</title><rect x="74.1124%" y="517" width="0.2430%" height="15" fill="rgb(227,53,46)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (23 samples, 0.24%)</title><rect x="74.1124%" y="501" width="0.2430%" height="15" fill="rgb(216,120,32)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.24%)</title><rect x="74.1124%" y="485" width="0.2430%" height="15" fill="rgb(220,134,1)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (23 samples, 0.24%)</title><rect x="74.1124%" y="469" width="0.2430%" height="15" fill="rgb(237,168,5)" fg:x="7014" fg:w="23"/><text x="74.3624%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.06%)</title><rect x="75.0000%" y="549" width="0.0634%" height="15" fill="rgb(231,100,33)" fg:x="7098" fg:w="6"/><text x="75.2500%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.68%)</title><rect x="74.8626%" y="565" width="0.6762%" height="15" fill="rgb(236,177,47)" fg:x="7085" fg:w="64"/><text x="75.1126%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (45 samples, 0.48%)</title><rect x="75.0634%" y="549" width="0.4755%" height="15" fill="rgb(235,7,49)" fg:x="7104" fg:w="45"/><text x="75.3134%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (77 samples, 0.81%)</title><rect x="75.5389%" y="565" width="0.8136%" height="15" fill="rgb(232,119,22)" fg:x="7149" fg:w="77"/><text x="75.7889%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (55 samples, 0.58%)</title><rect x="75.7713%" y="549" width="0.5811%" height="15" fill="rgb(254,73,53)" fg:x="7171" fg:w="55"/><text x="76.0213%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (55 samples, 0.58%)</title><rect x="75.7713%" y="533" width="0.5811%" height="15" fill="rgb(251,35,20)" fg:x="7171" fg:w="55"/><text x="76.0213%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (83 samples, 0.88%)</title><rect x="76.3525%" y="565" width="0.8770%" height="15" fill="rgb(241,119,20)" fg:x="7226" fg:w="83"/><text x="76.6025%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="77.2295%" y="565" width="0.0106%" height="15" fill="rgb(207,102,14)" fg:x="7309" fg:w="1"/><text x="77.4795%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="77.2295%" y="549" width="0.0106%" height="15" fill="rgb(248,201,50)" fg:x="7309" fg:w="1"/><text x="77.4795%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="77.2295%" y="533" width="0.0106%" height="15" fill="rgb(222,185,44)" fg:x="7309" fg:w="1"/><text x="77.4795%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (39 samples, 0.41%)</title><rect x="77.2401%" y="565" width="0.4121%" height="15" fill="rgb(218,107,18)" fg:x="7310" fg:w="39"/><text x="77.4901%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (39 samples, 0.41%)</title><rect x="77.2401%" y="549" width="0.4121%" height="15" fill="rgb(237,177,39)" fg:x="7310" fg:w="39"/><text x="77.4901%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1,140 samples, 12.05%)</title><rect x="66.0186%" y="613" width="12.0456%" height="15" fill="rgb(246,69,6)" fg:x="6248" fg:w="1140"/><text x="66.2686%" y="623.50">hashbrown::rustc_e..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (351 samples, 3.71%)</title><rect x="74.3555%" y="597" width="3.7088%" height="15" fill="rgb(234,208,37)" fg:x="7037" fg:w="351"/><text x="74.6055%" y="607.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (351 samples, 3.71%)</title><rect x="74.3555%" y="581" width="3.7088%" height="15" fill="rgb(225,4,6)" fg:x="7037" fg:w="351"/><text x="74.6055%" y="591.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (39 samples, 0.41%)</title><rect x="77.6522%" y="565" width="0.4121%" height="15" fill="rgb(233,45,0)" fg:x="7349" fg:w="39"/><text x="77.9022%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (39 samples, 0.41%)</title><rect x="77.6522%" y="549" width="0.4121%" height="15" fill="rgb(226,136,5)" fg:x="7349" fg:w="39"/><text x="77.9022%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (39 samples, 0.41%)</title><rect x="77.6522%" y="533" width="0.4121%" height="15" fill="rgb(211,91,47)" fg:x="7349" fg:w="39"/><text x="77.9022%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.0537%" y="517" width="0.0106%" height="15" fill="rgb(242,88,51)" fg:x="7387" fg:w="1"/><text x="78.3037%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.0537%" y="501" width="0.0106%" height="15" fill="rgb(230,91,28)" fg:x="7387" fg:w="1"/><text x="78.3037%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.0537%" y="485" width="0.0106%" height="15" fill="rgb(254,186,29)" fg:x="7387" fg:w="1"/><text x="78.3037%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.0537%" y="469" width="0.0106%" height="15" fill="rgb(238,6,4)" fg:x="7387" fg:w="1"/><text x="78.3037%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.0537%" y="453" width="0.0106%" height="15" fill="rgb(221,151,16)" fg:x="7387" fg:w="1"/><text x="78.3037%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,164 samples, 12.30%)</title><rect x="66.0186%" y="629" width="12.2992%" height="15" fill="rgb(251,143,52)" fg:x="6248" fg:w="1164"/><text x="66.2686%" y="639.50">std::collections::..</text></g><g><title>std::collections::hash::map::map_entry (24 samples, 0.25%)</title><rect x="78.0642%" y="613" width="0.2536%" height="15" fill="rgb(206,90,15)" fg:x="7388" fg:w="24"/><text x="78.3142%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="78.3601%" y="565" width="0.0106%" height="15" fill="rgb(218,35,8)" fg:x="7416" fg:w="1"/><text x="78.6101%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (7 samples, 0.07%)</title><rect x="78.3707%" y="565" width="0.0740%" height="15" fill="rgb(239,215,6)" fg:x="7417" fg:w="7"/><text x="78.6207%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (7 samples, 0.07%)</title><rect x="78.3707%" y="549" width="0.0740%" height="15" fill="rgb(245,116,39)" fg:x="7417" fg:w="7"/><text x="78.6207%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (9 samples, 0.10%)</title><rect x="78.4446%" y="549" width="0.0951%" height="15" fill="rgb(242,65,28)" fg:x="7424" fg:w="9"/><text x="78.6946%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (4 samples, 0.04%)</title><rect x="78.5397%" y="549" width="0.0423%" height="15" fill="rgb(252,132,53)" fg:x="7433" fg:w="4"/><text x="78.7897%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (34 samples, 0.36%)</title><rect x="78.3601%" y="581" width="0.3593%" height="15" fill="rgb(224,159,50)" fg:x="7416" fg:w="34"/><text x="78.6101%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (26 samples, 0.27%)</title><rect x="78.4446%" y="565" width="0.2747%" height="15" fill="rgb(224,93,4)" fg:x="7424" fg:w="26"/><text x="78.6946%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.14%)</title><rect x="78.5820%" y="549" width="0.1374%" height="15" fill="rgb(208,81,34)" fg:x="7437" fg:w="13"/><text x="78.8320%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.14%)</title><rect x="78.5820%" y="533" width="0.1374%" height="15" fill="rgb(233,92,54)" fg:x="7437" fg:w="13"/><text x="78.8320%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::merge (1,485 samples, 15.69%)</title><rect x="63.0600%" y="645" width="15.6910%" height="15" fill="rgb(237,21,14)" fg:x="5968" fg:w="1485"/><text x="63.3100%" y="655.50">&lt;std::collections::hash:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (41 samples, 0.43%)</title><rect x="78.3178%" y="629" width="0.4332%" height="15" fill="rgb(249,128,51)" fg:x="7412" fg:w="41"/><text x="78.5678%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (41 samples, 0.43%)</title><rect x="78.3178%" y="613" width="0.4332%" height="15" fill="rgb(223,129,24)" fg:x="7412" fg:w="41"/><text x="78.5678%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (41 samples, 0.43%)</title><rect x="78.3178%" y="597" width="0.4332%" height="15" fill="rgb(231,168,25)" fg:x="7412" fg:w="41"/><text x="78.5678%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (3 samples, 0.03%)</title><rect x="78.7194%" y="581" width="0.0317%" height="15" fill="rgb(224,39,20)" fg:x="7450" fg:w="3"/><text x="78.9694%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,542 samples, 16.29%)</title><rect x="62.5317%" y="677" width="16.2933%" height="15" fill="rgb(225,152,53)" fg:x="5918" fg:w="1542"/><text x="62.7817%" y="687.50">&lt;core::slice::iter::Iter&lt;..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}}::{{closure}} (1,501 samples, 15.86%)</title><rect x="62.9649%" y="661" width="15.8601%" height="15" fill="rgb(252,17,24)" fg:x="5959" fg:w="1501"/><text x="63.2149%" y="671.50">paranagram::Paranagram::..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.07%)</title><rect x="78.7511%" y="645" width="0.0740%" height="15" fill="rgb(250,114,30)" fg:x="7453" fg:w="7"/><text x="79.0011%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="78.8250%" y="677" width="0.0106%" height="15" fill="rgb(229,5,4)" fg:x="7460" fg:w="1"/><text x="79.0750%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.8462%" y="613" width="0.0106%" height="15" fill="rgb(225,176,49)" fg:x="7462" fg:w="1"/><text x="79.0962%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.8462%" y="597" width="0.0106%" height="15" fill="rgb(224,221,49)" fg:x="7462" fg:w="1"/><text x="79.0962%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.8462%" y="581" width="0.0106%" height="15" fill="rgb(253,169,27)" fg:x="7462" fg:w="1"/><text x="79.0962%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="78.8673%" y="453" width="0.0211%" height="15" fill="rgb(211,206,16)" fg:x="7464" fg:w="2"/><text x="79.1173%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="78.8779%" y="437" width="0.0106%" height="15" fill="rgb(244,87,35)" fg:x="7465" fg:w="1"/><text x="79.1279%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="78.8567%" y="533" width="0.0423%" height="15" fill="rgb(246,28,10)" fg:x="7463" fg:w="4"/><text x="79.1067%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="78.8567%" y="517" width="0.0423%" height="15" fill="rgb(229,12,44)" fg:x="7463" fg:w="4"/><text x="79.1067%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="78.8567%" y="501" width="0.0423%" height="15" fill="rgb(210,145,37)" fg:x="7463" fg:w="4"/><text x="79.1067%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="78.8567%" y="485" width="0.0423%" height="15" fill="rgb(227,112,52)" fg:x="7463" fg:w="4"/><text x="79.1067%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="78.8567%" y="469" width="0.0423%" height="15" fill="rgb(238,155,34)" fg:x="7463" fg:w="4"/><text x="79.1067%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="78.8884%" y="453" width="0.0106%" height="15" fill="rgb(239,226,36)" fg:x="7466" fg:w="1"/><text x="79.1384%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="78.8884%" y="437" width="0.0106%" height="15" fill="rgb(230,16,23)" fg:x="7466" fg:w="1"/><text x="79.1384%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="78.8990%" y="485" width="0.0106%" height="15" fill="rgb(236,171,36)" fg:x="7467" fg:w="1"/><text x="79.1490%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="78.8990%" y="469" width="0.0106%" height="15" fill="rgb(221,22,14)" fg:x="7467" fg:w="1"/><text x="79.1490%" y="479.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="78.8990%" y="453" width="0.0106%" height="15" fill="rgb(242,43,11)" fg:x="7467" fg:w="1"/><text x="79.1490%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="78.8990%" y="437" width="0.0106%" height="15" fill="rgb(232,69,23)" fg:x="7467" fg:w="1"/><text x="79.1490%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (1 samples, 0.01%)</title><rect x="78.8990%" y="421" width="0.0106%" height="15" fill="rgb(216,180,54)" fg:x="7467" fg:w="1"/><text x="79.1490%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.07%)</title><rect x="78.8462%" y="645" width="0.0740%" height="15" fill="rgb(216,5,24)" fg:x="7462" fg:w="7"/><text x="79.0962%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.07%)</title><rect x="78.8462%" y="629" width="0.0740%" height="15" fill="rgb(225,89,9)" fg:x="7462" fg:w="7"/><text x="79.0962%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (6 samples, 0.06%)</title><rect x="78.8567%" y="613" width="0.0634%" height="15" fill="rgb(243,75,33)" fg:x="7463" fg:w="6"/><text x="79.1067%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (6 samples, 0.06%)</title><rect x="78.8567%" y="597" width="0.0634%" height="15" fill="rgb(247,141,45)" fg:x="7463" fg:w="6"/><text x="79.1067%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="78.8567%" y="581" width="0.0634%" height="15" fill="rgb(232,177,36)" fg:x="7463" fg:w="6"/><text x="79.1067%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.06%)</title><rect x="78.8567%" y="565" width="0.0634%" height="15" fill="rgb(219,125,36)" fg:x="7463" fg:w="6"/><text x="79.1067%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="78.8567%" y="549" width="0.0634%" height="15" fill="rgb(227,94,9)" fg:x="7463" fg:w="6"/><text x="79.1067%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="78.8990%" y="533" width="0.0211%" height="15" fill="rgb(240,34,52)" fg:x="7467" fg:w="2"/><text x="79.1490%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="78.8990%" y="517" width="0.0211%" height="15" fill="rgb(216,45,12)" fg:x="7467" fg:w="2"/><text x="79.1490%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="78.8990%" y="501" width="0.0211%" height="15" fill="rgb(246,21,19)" fg:x="7467" fg:w="2"/><text x="79.1490%" y="511.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="78.9096%" y="485" width="0.0106%" height="15" fill="rgb(213,98,42)" fg:x="7468" fg:w="1"/><text x="79.1596%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.10%)</title><rect x="78.8356%" y="677" width="0.0951%" height="15" fill="rgb(250,136,47)" fg:x="7461" fg:w="9"/><text x="79.0856%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.10%)</title><rect x="78.8356%" y="661" width="0.0951%" height="15" fill="rgb(251,124,27)" fg:x="7461" fg:w="9"/><text x="79.0856%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="78.9201%" y="645" width="0.0106%" height="15" fill="rgb(229,180,14)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="78.9201%" y="629" width="0.0106%" height="15" fill="rgb(245,216,25)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="78.9201%" y="613" width="0.0106%" height="15" fill="rgb(251,43,5)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="78.9201%" y="597" width="0.0106%" height="15" fill="rgb(250,128,24)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="78.9201%" y="581" width="0.0106%" height="15" fill="rgb(217,117,27)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="78.9201%" y="565" width="0.0106%" height="15" fill="rgb(245,147,4)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="78.9201%" y="549" width="0.0106%" height="15" fill="rgb(242,201,35)" fg:x="7469" fg:w="1"/><text x="79.1701%" y="559.50"></text></g><g><title>__GI___libc_free (69 samples, 0.73%)</title><rect x="78.9307%" y="597" width="0.7291%" height="15" fill="rgb(218,181,1)" fg:x="7470" fg:w="69"/><text x="79.1807%" y="607.50"></text></g><g><title>_int_free (64 samples, 0.68%)</title><rect x="78.9835%" y="581" width="0.6762%" height="15" fill="rgb(222,6,29)" fg:x="7475" fg:w="64"/><text x="79.2335%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.74%)</title><rect x="78.9307%" y="629" width="0.7396%" height="15" fill="rgb(208,186,3)" fg:x="7470" fg:w="70"/><text x="79.1807%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.74%)</title><rect x="78.9307%" y="613" width="0.7396%" height="15" fill="rgb(216,36,26)" fg:x="7470" fg:w="70"/><text x="79.1807%" y="623.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="79.6598%" y="597" width="0.0106%" height="15" fill="rgb(248,201,23)" fg:x="7539" fg:w="1"/><text x="79.9098%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt; (71 samples, 0.75%)</title><rect x="78.9307%" y="677" width="0.7502%" height="15" fill="rgb(251,170,31)" fg:x="7470" fg:w="71"/><text x="79.1807%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::Word&gt;&gt; (71 samples, 0.75%)</title><rect x="78.9307%" y="661" width="0.7502%" height="15" fill="rgb(207,110,25)" fg:x="7470" fg:w="71"/><text x="79.1807%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.75%)</title><rect x="78.9307%" y="645" width="0.7502%" height="15" fill="rgb(250,54,15)" fg:x="7470" fg:w="71"/><text x="79.1807%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="79.6703%" y="629" width="0.0106%" height="15" fill="rgb(227,68,33)" fg:x="7540" fg:w="1"/><text x="79.9203%" y="639.50"></text></g><g><title>_int_free (19 samples, 0.20%)</title><rect x="79.8288%" y="533" width="0.2008%" height="15" fill="rgb(238,34,41)" fg:x="7555" fg:w="19"/><text x="80.0788%" y="543.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="80.0190%" y="517" width="0.0106%" height="15" fill="rgb(220,11,15)" fg:x="7573" fg:w="1"/><text x="80.2690%" y="527.50"></text></g><g><title>__GI___libc_free (30 samples, 0.32%)</title><rect x="79.7549%" y="549" width="0.3170%" height="15" fill="rgb(246,111,35)" fg:x="7548" fg:w="30"/><text x="80.0049%" y="559.50"></text></g><g><title>arena_for_chunk (4 samples, 0.04%)</title><rect x="80.0296%" y="533" width="0.0423%" height="15" fill="rgb(209,88,53)" fg:x="7574" fg:w="4"/><text x="80.2796%" y="543.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="80.0402%" y="517" width="0.0317%" height="15" fill="rgb(231,185,47)" fg:x="7575" fg:w="3"/><text x="80.2902%" y="527.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="80.0613%" y="501" width="0.0106%" height="15" fill="rgb(233,154,1)" fg:x="7577" fg:w="1"/><text x="80.3113%" y="511.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="80.0719%" y="549" width="0.0211%" height="15" fill="rgb(225,15,46)" fg:x="7578" fg:w="2"/><text x="80.3219%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="80.0719%" y="533" width="0.0211%" height="15" fill="rgb(211,135,41)" fg:x="7578" fg:w="2"/><text x="80.3219%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (40 samples, 0.42%)</title><rect x="79.6809%" y="677" width="0.4227%" height="15" fill="rgb(208,54,0)" fg:x="7541" fg:w="40"/><text x="79.9309%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (40 samples, 0.42%)</title><rect x="79.6809%" y="661" width="0.4227%" height="15" fill="rgb(244,136,14)" fg:x="7541" fg:w="40"/><text x="79.9309%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (40 samples, 0.42%)</title><rect x="79.6809%" y="645" width="0.4227%" height="15" fill="rgb(241,56,14)" fg:x="7541" fg:w="40"/><text x="79.9309%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.42%)</title><rect x="79.6809%" y="629" width="0.4227%" height="15" fill="rgb(205,80,24)" fg:x="7541" fg:w="40"/><text x="79.9309%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (35 samples, 0.37%)</title><rect x="79.7337%" y="613" width="0.3698%" height="15" fill="rgb(220,57,4)" fg:x="7546" fg:w="35"/><text x="79.9837%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (35 samples, 0.37%)</title><rect x="79.7337%" y="597" width="0.3698%" height="15" fill="rgb(226,193,50)" fg:x="7546" fg:w="35"/><text x="79.9837%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.37%)</title><rect x="79.7337%" y="581" width="0.3698%" height="15" fill="rgb(231,168,22)" fg:x="7546" fg:w="35"/><text x="79.9837%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.35%)</title><rect x="79.7549%" y="565" width="0.3487%" height="15" fill="rgb(254,215,14)" fg:x="7548" fg:w="33"/><text x="80.0049%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="80.0930%" y="549" width="0.0106%" height="15" fill="rgb(211,115,16)" fg:x="7580" fg:w="1"/><text x="80.3430%" y="559.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.03%)</title><rect x="80.1036%" y="581" width="0.0317%" height="15" fill="rgb(236,210,16)" fg:x="7581" fg:w="3"/><text x="80.3536%" y="591.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="80.1036%" y="565" width="0.0317%" height="15" fill="rgb(221,94,12)" fg:x="7581" fg:w="3"/><text x="80.3536%" y="575.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="80.1141%" y="549" width="0.0211%" height="15" fill="rgb(235,218,49)" fg:x="7582" fg:w="2"/><text x="80.3641%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="80.1141%" y="533" width="0.0211%" height="15" fill="rgb(217,114,14)" fg:x="7582" fg:w="2"/><text x="80.3641%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,681 samples, 17.76%)</title><rect x="62.3943%" y="741" width="17.7620%" height="15" fill="rgb(216,145,22)" fg:x="5905" fg:w="1681"/><text x="62.6443%" y="751.50">&lt;core::iter::adapters::filte..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,681 samples, 17.76%)</title><rect x="62.3943%" y="725" width="17.7620%" height="15" fill="rgb(217,112,39)" fg:x="5905" fg:w="1681"/><text x="62.6443%" y="735.50">core::iter::traits::iterator..</text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (1,676 samples, 17.71%)</title><rect x="62.4472%" y="709" width="17.7092%" height="15" fill="rgb(225,85,32)" fg:x="5910" fg:w="1676"/><text x="62.6972%" y="719.50">core::iter::adapters::filter..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (1,672 samples, 17.67%)</title><rect x="62.4894%" y="693" width="17.6669%" height="15" fill="rgb(245,209,47)" fg:x="5914" fg:w="1672"/><text x="62.7394%" y="703.50">paranagram::Paranagram::gen..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (5 samples, 0.05%)</title><rect x="80.1036%" y="677" width="0.0528%" height="15" fill="rgb(218,220,15)" fg:x="7581" fg:w="5"/><text x="80.3536%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (5 samples, 0.05%)</title><rect x="80.1036%" y="661" width="0.0528%" height="15" fill="rgb(222,202,31)" fg:x="7581" fg:w="5"/><text x="80.3536%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (5 samples, 0.05%)</title><rect x="80.1036%" y="645" width="0.0528%" height="15" fill="rgb(243,203,4)" fg:x="7581" fg:w="5"/><text x="80.3536%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new (5 samples, 0.05%)</title><rect x="80.1036%" y="629" width="0.0528%" height="15" fill="rgb(237,92,17)" fg:x="7581" fg:w="5"/><text x="80.3536%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="80.1036%" y="613" width="0.0528%" height="15" fill="rgb(231,119,7)" fg:x="7581" fg:w="5"/><text x="80.3536%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.05%)</title><rect x="80.1036%" y="597" width="0.0528%" height="15" fill="rgb(237,82,41)" fg:x="7581" fg:w="5"/><text x="80.3536%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (2 samples, 0.02%)</title><rect x="80.1352%" y="581" width="0.0211%" height="15" fill="rgb(226,81,48)" fg:x="7584" fg:w="2"/><text x="80.3852%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="80.1352%" y="565" width="0.0211%" height="15" fill="rgb(234,70,51)" fg:x="7584" fg:w="2"/><text x="80.3852%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="80.1564%" y="725" width="0.0211%" height="15" fill="rgb(251,86,4)" fg:x="7586" fg:w="2"/><text x="80.4064%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="80.1986%" y="709" width="0.0106%" height="15" fill="rgb(244,144,28)" fg:x="7590" fg:w="1"/><text x="80.4486%" y="719.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="80.1986%" y="693" width="0.0106%" height="15" fill="rgb(232,161,39)" fg:x="7590" fg:w="1"/><text x="80.4486%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="80.2092%" y="709" width="0.0106%" height="15" fill="rgb(247,34,51)" fg:x="7591" fg:w="1"/><text x="80.4592%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (2 samples, 0.02%)</title><rect x="80.2198%" y="693" width="0.0211%" height="15" fill="rgb(225,132,2)" fg:x="7592" fg:w="2"/><text x="80.4698%" y="703.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="80.2198%" y="677" width="0.0211%" height="15" fill="rgb(209,159,44)" fg:x="7592" fg:w="2"/><text x="80.4698%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.06%)</title><rect x="80.6953%" y="485" width="0.0634%" height="15" fill="rgb(251,214,1)" fg:x="7637" fg:w="6"/><text x="80.9453%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.06%)</title><rect x="80.6953%" y="469" width="0.0634%" height="15" fill="rgb(247,84,47)" fg:x="7637" fg:w="6"/><text x="80.9453%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.06%)</title><rect x="80.6953%" y="453" width="0.0634%" height="15" fill="rgb(240,111,43)" fg:x="7637" fg:w="6"/><text x="80.9453%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::utils::FromTupleIndex&gt;::from_tuple_index::{{closure}} (9 samples, 0.10%)</title><rect x="80.6953%" y="501" width="0.0951%" height="15" fill="rgb(215,214,35)" fg:x="7637" fg:w="9"/><text x="80.9453%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.03%)</title><rect x="80.7587%" y="485" width="0.0317%" height="15" fill="rgb(248,207,23)" fg:x="7643" fg:w="3"/><text x="81.0087%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.03%)</title><rect x="80.7587%" y="469" width="0.0317%" height="15" fill="rgb(214,186,4)" fg:x="7643" fg:w="3"/><text x="81.0087%" y="479.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (2 samples, 0.02%)</title><rect x="80.7904%" y="469" width="0.0211%" height="15" fill="rgb(220,133,22)" fg:x="7646" fg:w="2"/><text x="81.0404%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (51 samples, 0.54%)</title><rect x="80.2937%" y="597" width="0.5389%" height="15" fill="rgb(239,134,19)" fg:x="7599" fg:w="51"/><text x="80.5437%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (51 samples, 0.54%)</title><rect x="80.2937%" y="581" width="0.5389%" height="15" fill="rgb(250,140,9)" fg:x="7599" fg:w="51"/><text x="80.5437%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (51 samples, 0.54%)</title><rect x="80.2937%" y="565" width="0.5389%" height="15" fill="rgb(225,59,14)" fg:x="7599" fg:w="51"/><text x="80.5437%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.54%)</title><rect x="80.2937%" y="549" width="0.5389%" height="15" fill="rgb(214,152,51)" fg:x="7599" fg:w="51"/><text x="80.5437%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.54%)</title><rect x="80.2937%" y="533" width="0.5389%" height="15" fill="rgb(251,227,43)" fg:x="7599" fg:w="51"/><text x="80.5437%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.14%)</title><rect x="80.6953%" y="517" width="0.1374%" height="15" fill="rgb(241,96,17)" fg:x="7637" fg:w="13"/><text x="80.9453%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.04%)</title><rect x="80.7904%" y="501" width="0.0423%" height="15" fill="rgb(234,198,43)" fg:x="7646" fg:w="4"/><text x="81.0404%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (4 samples, 0.04%)</title><rect x="80.7904%" y="485" width="0.0423%" height="15" fill="rgb(220,108,29)" fg:x="7646" fg:w="4"/><text x="81.0404%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="80.8115%" y="469" width="0.0211%" height="15" fill="rgb(226,163,33)" fg:x="7648" fg:w="2"/><text x="81.0615%" y="479.50"></text></g><g><title>[unknown] (48 samples, 0.51%)</title><rect x="81.7519%" y="453" width="0.5072%" height="15" fill="rgb(205,194,45)" fg:x="7737" fg:w="48"/><text x="82.0019%" y="463.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="81.8047%" y="437" width="0.4544%" height="15" fill="rgb(206,143,44)" fg:x="7742" fg:w="43"/><text x="82.0547%" y="447.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="81.8153%" y="421" width="0.4438%" height="15" fill="rgb(236,136,36)" fg:x="7743" fg:w="42"/><text x="82.0653%" y="431.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="81.8153%" y="405" width="0.4438%" height="15" fill="rgb(249,172,42)" fg:x="7743" fg:w="42"/><text x="82.0653%" y="415.50"></text></g><g><title>[unknown] (40 samples, 0.42%)</title><rect x="81.8364%" y="389" width="0.4227%" height="15" fill="rgb(216,139,23)" fg:x="7745" fg:w="40"/><text x="82.0864%" y="399.50"></text></g><g><title>[unknown] (37 samples, 0.39%)</title><rect x="81.8681%" y="373" width="0.3910%" height="15" fill="rgb(207,166,20)" fg:x="7748" fg:w="37"/><text x="82.1181%" y="383.50"></text></g><g><title>[unknown] (32 samples, 0.34%)</title><rect x="81.9210%" y="357" width="0.3381%" height="15" fill="rgb(210,209,22)" fg:x="7753" fg:w="32"/><text x="82.1710%" y="367.50"></text></g><g><title>[unknown] (30 samples, 0.32%)</title><rect x="81.9421%" y="341" width="0.3170%" height="15" fill="rgb(232,118,20)" fg:x="7755" fg:w="30"/><text x="82.1921%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="82.0055%" y="325" width="0.2536%" height="15" fill="rgb(238,113,42)" fg:x="7761" fg:w="24"/><text x="82.2555%" y="335.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="82.0795%" y="309" width="0.1796%" height="15" fill="rgb(231,42,5)" fg:x="7768" fg:w="17"/><text x="82.3295%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="82.1323%" y="293" width="0.1268%" height="15" fill="rgb(243,166,24)" fg:x="7773" fg:w="12"/><text x="82.3823%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="82.1746%" y="277" width="0.0845%" height="15" fill="rgb(237,226,12)" fg:x="7777" fg:w="8"/><text x="82.4246%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="82.1957%" y="261" width="0.0634%" height="15" fill="rgb(229,133,24)" fg:x="7779" fg:w="6"/><text x="82.4457%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="82.2380%" y="245" width="0.0211%" height="15" fill="rgb(238,33,43)" fg:x="7783" fg:w="2"/><text x="82.4880%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2485%" y="229" width="0.0106%" height="15" fill="rgb(227,59,38)" fg:x="7784" fg:w="1"/><text x="82.4985%" y="239.50"></text></g><g><title>alloc_perturb (2 samples, 0.02%)</title><rect x="82.2591%" y="453" width="0.0211%" height="15" fill="rgb(230,97,0)" fg:x="7785" fg:w="2"/><text x="82.5091%" y="463.50"></text></g><g><title>_int_malloc (82 samples, 0.87%)</title><rect x="81.4243%" y="469" width="0.8664%" height="15" fill="rgb(250,173,50)" fg:x="7706" fg:w="82"/><text x="81.6743%" y="479.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="82.2802%" y="453" width="0.0106%" height="15" fill="rgb(240,15,50)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="463.50"></text></g><g><title>__glibc_morecore (1 samples, 0.01%)</title><rect x="82.2802%" y="437" width="0.0106%" height="15" fill="rgb(221,93,22)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="447.50"></text></g><g><title>__GI___sbrk (1 samples, 0.01%)</title><rect x="82.2802%" y="421" width="0.0106%" height="15" fill="rgb(245,180,53)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="431.50"></text></g><g><title>__GI___sbrk (1 samples, 0.01%)</title><rect x="82.2802%" y="405" width="0.0106%" height="15" fill="rgb(231,88,51)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="415.50"></text></g><g><title>__brk (1 samples, 0.01%)</title><rect x="82.2802%" y="389" width="0.0106%" height="15" fill="rgb(240,58,21)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="373" width="0.0106%" height="15" fill="rgb(237,21,10)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="357" width="0.0106%" height="15" fill="rgb(218,43,11)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="341" width="0.0106%" height="15" fill="rgb(218,221,29)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="325" width="0.0106%" height="15" fill="rgb(214,118,42)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="309" width="0.0106%" height="15" fill="rgb(251,200,26)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="293" width="0.0106%" height="15" fill="rgb(237,101,39)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="277" width="0.0106%" height="15" fill="rgb(251,117,11)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="261" width="0.0106%" height="15" fill="rgb(216,223,23)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.2802%" y="245" width="0.0106%" height="15" fill="rgb(251,54,12)" fg:x="7787" fg:w="1"/><text x="82.5302%" y="255.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="82.2908%" y="469" width="0.0211%" height="15" fill="rgb(254,176,54)" fg:x="7788" fg:w="2"/><text x="82.5408%" y="479.50"></text></g><g><title>__GI___libc_malloc (140 samples, 1.48%)</title><rect x="80.8749%" y="485" width="1.4793%" height="15" fill="rgb(210,32,8)" fg:x="7654" fg:w="140"/><text x="81.1249%" y="495.50"></text></g><g><title>checked_request2size (4 samples, 0.04%)</title><rect x="82.3119%" y="469" width="0.0423%" height="15" fill="rgb(235,52,38)" fg:x="7790" fg:w="4"/><text x="82.5619%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (201 samples, 2.12%)</title><rect x="80.2409%" y="661" width="2.1238%" height="15" fill="rgb(231,4,44)" fg:x="7594" fg:w="201"/><text x="80.4909%" y="671.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (201 samples, 2.12%)</title><rect x="80.2409%" y="645" width="2.1238%" height="15" fill="rgb(249,2,32)" fg:x="7594" fg:w="201"/><text x="80.4909%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (201 samples, 2.12%)</title><rect x="80.2409%" y="629" width="2.1238%" height="15" fill="rgb(224,65,26)" fg:x="7594" fg:w="201"/><text x="80.4909%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (200 samples, 2.11%)</title><rect x="80.2515%" y="613" width="2.1133%" height="15" fill="rgb(250,73,40)" fg:x="7595" fg:w="200"/><text x="80.5015%" y="623.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (145 samples, 1.53%)</title><rect x="80.8326%" y="597" width="1.5321%" height="15" fill="rgb(253,177,16)" fg:x="7650" fg:w="145"/><text x="81.0826%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (145 samples, 1.53%)</title><rect x="80.8326%" y="581" width="1.5321%" height="15" fill="rgb(217,32,34)" fg:x="7650" fg:w="145"/><text x="81.0826%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (144 samples, 1.52%)</title><rect x="80.8432%" y="565" width="1.5216%" height="15" fill="rgb(212,7,10)" fg:x="7651" fg:w="144"/><text x="81.0932%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (144 samples, 1.52%)</title><rect x="80.8432%" y="549" width="1.5216%" height="15" fill="rgb(245,89,8)" fg:x="7651" fg:w="144"/><text x="81.0932%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (143 samples, 1.51%)</title><rect x="80.8538%" y="533" width="1.5110%" height="15" fill="rgb(237,16,53)" fg:x="7652" fg:w="143"/><text x="81.1038%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (143 samples, 1.51%)</title><rect x="80.8538%" y="517" width="1.5110%" height="15" fill="rgb(250,204,30)" fg:x="7652" fg:w="143"/><text x="81.1038%" y="527.50"></text></g><g><title>alloc::alloc::alloc (143 samples, 1.51%)</title><rect x="80.8538%" y="501" width="1.5110%" height="15" fill="rgb(208,77,27)" fg:x="7652" fg:w="143"/><text x="81.1038%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="82.3542%" y="485" width="0.0106%" height="15" fill="rgb(250,204,28)" fg:x="7794" fg:w="1"/><text x="82.6042%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="82.3542%" y="469" width="0.0106%" height="15" fill="rgb(244,63,21)" fg:x="7794" fg:w="1"/><text x="82.6042%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="82.3648%" y="661" width="0.0106%" height="15" fill="rgb(236,85,44)" fg:x="7795" fg:w="1"/><text x="82.6148%" y="671.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.01%)</title><rect x="82.3648%" y="645" width="0.0106%" height="15" fill="rgb(215,98,4)" fg:x="7795" fg:w="1"/><text x="82.6148%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="82.3753%" y="597" width="0.0317%" height="15" fill="rgb(235,38,11)" fg:x="7796" fg:w="3"/><text x="82.6253%" y="607.50"></text></g><g><title>_int_free (313 samples, 3.31%)</title><rect x="82.4493%" y="565" width="3.3073%" height="15" fill="rgb(254,186,25)" fg:x="7803" fg:w="313"/><text x="82.6993%" y="575.50">_in..</text></g><g><title>malloc_consolidate (257 samples, 2.72%)</title><rect x="83.0410%" y="549" width="2.7156%" height="15" fill="rgb(225,55,31)" fg:x="7859" fg:w="257"/><text x="83.2910%" y="559.50">ma..</text></g><g><title>unlink_chunk (72 samples, 0.76%)</title><rect x="84.9958%" y="533" width="0.7608%" height="15" fill="rgb(211,15,21)" fg:x="8044" fg:w="72"/><text x="85.2458%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="517" width="0.0211%" height="15" fill="rgb(215,187,41)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="501" width="0.0211%" height="15" fill="rgb(248,69,32)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="485" width="0.0211%" height="15" fill="rgb(252,102,52)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="469" width="0.0211%" height="15" fill="rgb(253,140,32)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="453" width="0.0211%" height="15" fill="rgb(216,56,42)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="437" width="0.0211%" height="15" fill="rgb(216,184,14)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="421" width="0.0211%" height="15" fill="rgb(237,187,27)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="405" width="0.0211%" height="15" fill="rgb(219,65,3)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="85.7354%" y="389" width="0.0211%" height="15" fill="rgb(245,83,25)" fg:x="8114" fg:w="2"/><text x="85.9854%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.7460%" y="373" width="0.0106%" height="15" fill="rgb(214,205,45)" fg:x="8115" fg:w="1"/><text x="85.9960%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.7460%" y="357" width="0.0106%" height="15" fill="rgb(241,20,18)" fg:x="8115" fg:w="1"/><text x="85.9960%" y="367.50"></text></g><g><title>__GI___libc_free (320 samples, 3.38%)</title><rect x="82.4070%" y="581" width="3.3812%" height="15" fill="rgb(232,163,23)" fg:x="7799" fg:w="320"/><text x="82.6570%" y="591.50">__G..</text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="85.7566%" y="565" width="0.0317%" height="15" fill="rgb(214,5,46)" fg:x="8116" fg:w="3"/><text x="86.0066%" y="575.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="85.7671%" y="549" width="0.0211%" height="15" fill="rgb(229,78,17)" fg:x="8117" fg:w="2"/><text x="86.0171%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,215 samples, 23.40%)</title><rect x="62.3943%" y="805" width="23.4045%" height="15" fill="rgb(248,89,10)" fg:x="5905" fg:w="2215"/><text x="62.6443%" y="815.50">core::iter::traits::iterator::Iterato..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,215 samples, 23.40%)</title><rect x="62.3943%" y="789" width="23.4045%" height="15" fill="rgb(248,54,15)" fg:x="5905" fg:w="2215"/><text x="62.6443%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::tr..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2,215 samples, 23.40%)</title><rect x="62.3943%" y="773" width="23.4045%" height="15" fill="rgb(223,116,6)" fg:x="5905" fg:w="2215"/><text x="62.6443%" y="783.50">alloc::vec::in_place_collect::&lt;impl a..</text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2,215 samples, 23.40%)</title><rect x="62.3943%" y="757" width="23.4045%" height="15" fill="rgb(205,125,38)" fg:x="5905" fg:w="2215"/><text x="62.6443%" y="767.50">&lt;I as alloc::vec::in_place_collect::S..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (534 samples, 5.64%)</title><rect x="80.1564%" y="741" width="5.6424%" height="15" fill="rgb(251,78,38)" fg:x="7586" fg:w="534"/><text x="80.4064%" y="751.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (532 samples, 5.62%)</title><rect x="80.1775%" y="725" width="5.6213%" height="15" fill="rgb(253,78,28)" fg:x="7588" fg:w="532"/><text x="80.4275%" y="735.50">core::i..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (528 samples, 5.58%)</title><rect x="80.2198%" y="709" width="5.5790%" height="15" fill="rgb(209,120,3)" fg:x="7592" fg:w="528"/><text x="80.4698%" y="719.50">core::i..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (526 samples, 5.56%)</title><rect x="80.2409%" y="693" width="5.5579%" height="15" fill="rgb(238,229,9)" fg:x="7594" fg:w="526"/><text x="80.4909%" y="703.50">paranag..</text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::utils::FromTupleIndex&gt;::from_tuple_index (526 samples, 5.56%)</title><rect x="80.2409%" y="677" width="5.5579%" height="15" fill="rgb(253,159,18)" fg:x="7594" fg:w="526"/><text x="80.4909%" y="687.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (324 samples, 3.42%)</title><rect x="82.3753%" y="661" width="3.4235%" height="15" fill="rgb(244,42,34)" fg:x="7796" fg:w="324"/><text x="82.6253%" y="671.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (324 samples, 3.42%)</title><rect x="82.3753%" y="645" width="3.4235%" height="15" fill="rgb(224,8,7)" fg:x="7796" fg:w="324"/><text x="82.6253%" y="655.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (324 samples, 3.42%)</title><rect x="82.3753%" y="629" width="3.4235%" height="15" fill="rgb(210,201,45)" fg:x="7796" fg:w="324"/><text x="82.6253%" y="639.50">&lt;al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (324 samples, 3.42%)</title><rect x="82.3753%" y="613" width="3.4235%" height="15" fill="rgb(252,185,21)" fg:x="7796" fg:w="324"/><text x="82.6253%" y="623.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (321 samples, 3.39%)</title><rect x="82.4070%" y="597" width="3.3918%" height="15" fill="rgb(223,131,1)" fg:x="7799" fg:w="321"/><text x="82.6570%" y="607.50">all..</text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="85.7883%" y="581" width="0.0106%" height="15" fill="rgb(245,141,16)" fg:x="8119" fg:w="1"/><text x="86.0383%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="85.7883%" y="565" width="0.0106%" height="15" fill="rgb(229,55,45)" fg:x="8119" fg:w="1"/><text x="86.0383%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.8094%" y="597" width="0.0211%" height="15" fill="rgb(208,92,15)" fg:x="8121" fg:w="2"/><text x="86.0594%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.8094%" y="581" width="0.0211%" height="15" fill="rgb(234,185,47)" fg:x="8121" fg:w="2"/><text x="86.0594%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.8094%" y="565" width="0.0211%" height="15" fill="rgb(253,104,50)" fg:x="8121" fg:w="2"/><text x="86.0594%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.02%)</title><rect x="85.8094%" y="549" width="0.0211%" height="15" fill="rgb(205,70,7)" fg:x="8121" fg:w="2"/><text x="86.0594%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2 samples, 0.02%)</title><rect x="85.8094%" y="533" width="0.0211%" height="15" fill="rgb(240,178,43)" fg:x="8121" fg:w="2"/><text x="86.0594%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="85.8094%" y="517" width="0.0211%" height="15" fill="rgb(214,112,2)" fg:x="8121" fg:w="2"/><text x="86.0594%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="85.8199%" y="501" width="0.0106%" height="15" fill="rgb(206,46,17)" fg:x="8122" fg:w="1"/><text x="86.0699%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="85.8305%" y="469" width="0.0106%" height="15" fill="rgb(225,220,16)" fg:x="8123" fg:w="1"/><text x="86.0805%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="85.8305%" y="549" width="0.0317%" height="15" fill="rgb(238,65,40)" fg:x="8123" fg:w="3"/><text x="86.0805%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="85.8305%" y="533" width="0.0317%" height="15" fill="rgb(230,151,21)" fg:x="8123" fg:w="3"/><text x="86.0805%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="85.8305%" y="517" width="0.0317%" height="15" fill="rgb(218,58,49)" fg:x="8123" fg:w="3"/><text x="86.0805%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="85.8305%" y="501" width="0.0317%" height="15" fill="rgb(219,179,14)" fg:x="8123" fg:w="3"/><text x="86.0805%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="85.8305%" y="485" width="0.0317%" height="15" fill="rgb(223,72,1)" fg:x="8123" fg:w="3"/><text x="86.0805%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="85.8411%" y="469" width="0.0211%" height="15" fill="rgb(238,126,10)" fg:x="8124" fg:w="2"/><text x="86.0911%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="85.8516%" y="453" width="0.0106%" height="15" fill="rgb(224,206,38)" fg:x="8125" fg:w="1"/><text x="86.1016%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.8622%" y="501" width="0.0106%" height="15" fill="rgb(212,201,54)" fg:x="8126" fg:w="1"/><text x="86.1122%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="85.8622%" y="485" width="0.0106%" height="15" fill="rgb(218,154,48)" fg:x="8126" fg:w="1"/><text x="86.1122%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="85.8728%" y="501" width="0.0106%" height="15" fill="rgb(232,93,24)" fg:x="8127" fg:w="1"/><text x="86.1228%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="85.8728%" y="485" width="0.0106%" height="15" fill="rgb(245,30,21)" fg:x="8127" fg:w="1"/><text x="86.1228%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.07%)</title><rect x="85.8305%" y="597" width="0.0740%" height="15" fill="rgb(242,148,29)" fg:x="8123" fg:w="7"/><text x="86.0805%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.07%)</title><rect x="85.8305%" y="581" width="0.0740%" height="15" fill="rgb(244,153,54)" fg:x="8123" fg:w="7"/><text x="86.0805%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.07%)</title><rect x="85.8305%" y="565" width="0.0740%" height="15" fill="rgb(252,87,22)" fg:x="8123" fg:w="7"/><text x="86.0805%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="85.8622%" y="549" width="0.0423%" height="15" fill="rgb(210,51,29)" fg:x="8126" fg:w="4"/><text x="86.1122%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="85.8622%" y="533" width="0.0423%" height="15" fill="rgb(242,136,47)" fg:x="8126" fg:w="4"/><text x="86.1122%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.04%)</title><rect x="85.8622%" y="517" width="0.0423%" height="15" fill="rgb(238,68,4)" fg:x="8126" fg:w="4"/><text x="86.1122%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.02%)</title><rect x="85.8833%" y="501" width="0.0211%" height="15" fill="rgb(242,161,30)" fg:x="8128" fg:w="2"/><text x="86.1333%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="85.8833%" y="485" width="0.0211%" height="15" fill="rgb(218,58,44)" fg:x="8128" fg:w="2"/><text x="86.1333%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="85.8833%" y="469" width="0.0211%" height="15" fill="rgb(252,125,32)" fg:x="8128" fg:w="2"/><text x="86.1333%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="85.9045%" y="549" width="0.0106%" height="15" fill="rgb(219,178,0)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="85.9045%" y="533" width="0.0106%" height="15" fill="rgb(213,152,7)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="85.9045%" y="517" width="0.0106%" height="15" fill="rgb(249,109,34)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="85.9045%" y="501" width="0.0106%" height="15" fill="rgb(232,96,21)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="85.9045%" y="485" width="0.0106%" height="15" fill="rgb(228,27,39)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="85.9045%" y="469" width="0.0106%" height="15" fill="rgb(211,182,52)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="85.9045%" y="453" width="0.0106%" height="15" fill="rgb(234,178,38)" fg:x="8130" fg:w="1"/><text x="86.1545%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="85.9045%" y="597" width="0.0211%" height="15" fill="rgb(221,111,3)" fg:x="8130" fg:w="2"/><text x="86.1545%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="85.9045%" y="581" width="0.0211%" height="15" fill="rgb(228,175,21)" fg:x="8130" fg:w="2"/><text x="86.1545%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="85.9045%" y="565" width="0.0211%" height="15" fill="rgb(228,174,43)" fg:x="8130" fg:w="2"/><text x="86.1545%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="85.9150%" y="549" width="0.0106%" height="15" fill="rgb(211,191,0)" fg:x="8131" fg:w="1"/><text x="86.1650%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="85.9150%" y="533" width="0.0106%" height="15" fill="rgb(253,117,3)" fg:x="8131" fg:w="1"/><text x="86.1650%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="85.9150%" y="517" width="0.0106%" height="15" fill="rgb(241,127,19)" fg:x="8131" fg:w="1"/><text x="86.1650%" y="527.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams (14 samples, 0.15%)</title><rect x="85.7988%" y="805" width="0.1479%" height="15" fill="rgb(218,103,12)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.15%)</title><rect x="85.7988%" y="789" width="0.1479%" height="15" fill="rgb(236,214,43)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.15%)</title><rect x="85.7988%" y="773" width="0.1479%" height="15" fill="rgb(244,144,19)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.15%)</title><rect x="85.7988%" y="757" width="0.1479%" height="15" fill="rgb(246,188,10)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.15%)</title><rect x="85.7988%" y="741" width="0.1479%" height="15" fill="rgb(212,193,33)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.15%)</title><rect x="85.7988%" y="725" width="0.1479%" height="15" fill="rgb(241,51,29)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14 samples, 0.15%)</title><rect x="85.7988%" y="709" width="0.1479%" height="15" fill="rgb(211,58,19)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.15%)</title><rect x="85.7988%" y="693" width="0.1479%" height="15" fill="rgb(229,111,26)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (14 samples, 0.15%)</title><rect x="85.7988%" y="677" width="0.1479%" height="15" fill="rgb(213,115,40)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.15%)</title><rect x="85.7988%" y="661" width="0.1479%" height="15" fill="rgb(209,56,44)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="671.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (14 samples, 0.15%)</title><rect x="85.7988%" y="645" width="0.1479%" height="15" fill="rgb(230,108,32)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="655.50"></text></g><g><title>paranagram::word::Word::contains (14 samples, 0.15%)</title><rect x="85.7988%" y="629" width="0.1479%" height="15" fill="rgb(216,165,31)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::contains (14 samples, 0.15%)</title><rect x="85.7988%" y="613" width="0.1479%" height="15" fill="rgb(218,122,21)" fg:x="8120" fg:w="14"/><text x="86.0488%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2 samples, 0.02%)</title><rect x="85.9256%" y="597" width="0.0211%" height="15" fill="rgb(223,224,47)" fg:x="8132" fg:w="2"/><text x="86.1756%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="85.9256%" y="581" width="0.0211%" height="15" fill="rgb(238,102,44)" fg:x="8132" fg:w="2"/><text x="86.1756%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="85.9256%" y="565" width="0.0211%" height="15" fill="rgb(236,46,40)" fg:x="8132" fg:w="2"/><text x="86.1756%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="85.9256%" y="549" width="0.0211%" height="15" fill="rgb(247,202,50)" fg:x="8132" fg:w="2"/><text x="86.1756%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.02%)</title><rect x="85.9256%" y="533" width="0.0211%" height="15" fill="rgb(209,99,20)" fg:x="8132" fg:w="2"/><text x="86.1756%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.02%)</title><rect x="85.9256%" y="517" width="0.0211%" height="15" fill="rgb(252,27,34)" fg:x="8132" fg:w="2"/><text x="86.1756%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.10%)</title><rect x="85.9996%" y="693" width="0.0951%" height="15" fill="rgb(215,206,23)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.10%)</title><rect x="85.9996%" y="677" width="0.0951%" height="15" fill="rgb(212,135,36)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.10%)</title><rect x="85.9996%" y="661" width="0.0951%" height="15" fill="rgb(240,189,1)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.10%)</title><rect x="85.9996%" y="645" width="0.0951%" height="15" fill="rgb(242,56,20)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="85.9996%" y="629" width="0.0951%" height="15" fill="rgb(247,132,33)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="639.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="85.9996%" y="613" width="0.0951%" height="15" fill="rgb(208,149,11)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="623.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="85.9996%" y="597" width="0.0951%" height="15" fill="rgb(211,33,11)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="607.50"></text></g><g><title>_int_malloc (9 samples, 0.10%)</title><rect x="85.9996%" y="581" width="0.0951%" height="15" fill="rgb(221,29,38)" fg:x="8139" fg:w="9"/><text x="86.2496%" y="591.50"></text></g><g><title>malloc_consolidate (4 samples, 0.04%)</title><rect x="86.0524%" y="565" width="0.0423%" height="15" fill="rgb(206,182,49)" fg:x="8144" fg:w="4"/><text x="86.3024%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="85.9996%" y="789" width="0.1268%" height="15" fill="rgb(216,140,1)" fg:x="8139" fg:w="12"/><text x="86.2496%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="85.9996%" y="773" width="0.1268%" height="15" fill="rgb(232,57,40)" fg:x="8139" fg:w="12"/><text x="86.2496%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="85.9996%" y="757" width="0.1268%" height="15" fill="rgb(224,186,18)" fg:x="8139" fg:w="12"/><text x="86.2496%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.13%)</title><rect x="85.9996%" y="741" width="0.1268%" height="15" fill="rgb(215,121,11)" fg:x="8139" fg:w="12"/><text x="86.2496%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.13%)</title><rect x="85.9996%" y="725" width="0.1268%" height="15" fill="rgb(245,147,10)" fg:x="8139" fg:w="12"/><text x="86.2496%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.13%)</title><rect x="85.9996%" y="709" width="0.1268%" height="15" fill="rgb(238,153,13)" fg:x="8139" fg:w="12"/><text x="86.2496%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.03%)</title><rect x="86.0947%" y="693" width="0.0317%" height="15" fill="rgb(233,108,0)" fg:x="8148" fg:w="3"/><text x="86.3447%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="86.0947%" y="677" width="0.0317%" height="15" fill="rgb(212,157,17)" fg:x="8148" fg:w="3"/><text x="86.3447%" y="687.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.03%)</title><rect x="86.0947%" y="661" width="0.0317%" height="15" fill="rgb(225,213,38)" fg:x="8148" fg:w="3"/><text x="86.3447%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.1475%" y="709" width="0.0106%" height="15" fill="rgb(248,16,11)" fg:x="8153" fg:w="1"/><text x="86.3975%" y="719.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.06%)</title><rect x="86.1264%" y="725" width="0.0634%" height="15" fill="rgb(241,33,4)" fg:x="8151" fg:w="6"/><text x="86.3764%" y="735.50"></text></g><g><title>tcache_get (3 samples, 0.03%)</title><rect x="86.1581%" y="709" width="0.0317%" height="15" fill="rgb(222,26,43)" fg:x="8154" fg:w="3"/><text x="86.4081%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.07%)</title><rect x="86.1264%" y="789" width="0.0740%" height="15" fill="rgb(243,29,36)" fg:x="8151" fg:w="7"/><text x="86.3764%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.07%)</title><rect x="86.1264%" y="773" width="0.0740%" height="15" fill="rgb(241,9,27)" fg:x="8151" fg:w="7"/><text x="86.3764%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.07%)</title><rect x="86.1264%" y="757" width="0.0740%" height="15" fill="rgb(205,117,26)" fg:x="8151" fg:w="7"/><text x="86.3764%" y="767.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.07%)</title><rect x="86.1264%" y="741" width="0.0740%" height="15" fill="rgb(209,80,39)" fg:x="8151" fg:w="7"/><text x="86.3764%" y="751.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="86.1898%" y="725" width="0.0106%" height="15" fill="rgb(239,155,6)" fg:x="8157" fg:w="1"/><text x="86.4398%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="86.2003%" y="757" width="0.0106%" height="15" fill="rgb(212,104,12)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="86.2003%" y="741" width="0.0106%" height="15" fill="rgb(234,204,3)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="86.2003%" y="725" width="0.0106%" height="15" fill="rgb(251,218,7)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="86.2003%" y="709" width="0.0106%" height="15" fill="rgb(221,81,32)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="86.2003%" y="693" width="0.0106%" height="15" fill="rgb(214,152,26)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="86.2003%" y="677" width="0.0106%" height="15" fill="rgb(223,22,3)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="86.2003%" y="661" width="0.0106%" height="15" fill="rgb(207,174,7)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="86.2003%" y="645" width="0.0106%" height="15" fill="rgb(224,19,52)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="86.2003%" y="629" width="0.0106%" height="15" fill="rgb(228,24,14)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="86.2003%" y="613" width="0.0106%" height="15" fill="rgb(230,153,43)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="623.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="86.2003%" y="597" width="0.0106%" height="15" fill="rgb(231,106,12)" fg:x="8158" fg:w="1"/><text x="86.4503%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (21 samples, 0.22%)</title><rect x="86.2003%" y="789" width="0.2219%" height="15" fill="rgb(215,92,2)" fg:x="8158" fg:w="21"/><text x="86.4503%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.22%)</title><rect x="86.2003%" y="773" width="0.2219%" height="15" fill="rgb(249,143,25)" fg:x="8158" fg:w="21"/><text x="86.4503%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.21%)</title><rect x="86.2109%" y="757" width="0.2113%" height="15" fill="rgb(252,7,35)" fg:x="8159" fg:w="20"/><text x="86.4609%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (20 samples, 0.21%)</title><rect x="86.2109%" y="741" width="0.2113%" height="15" fill="rgb(216,69,40)" fg:x="8159" fg:w="20"/><text x="86.4609%" y="751.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="86.2215%" y="725" width="0.2008%" height="15" fill="rgb(240,36,33)" fg:x="8160" fg:w="19"/><text x="86.4715%" y="735.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="86.2532%" y="709" width="0.1691%" height="15" fill="rgb(231,128,14)" fg:x="8163" fg:w="16"/><text x="86.5032%" y="719.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="86.2532%" y="693" width="0.1691%" height="15" fill="rgb(245,143,14)" fg:x="8163" fg:w="16"/><text x="86.5032%" y="703.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="86.2532%" y="677" width="0.1691%" height="15" fill="rgb(222,130,28)" fg:x="8163" fg:w="16"/><text x="86.5032%" y="687.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="86.2532%" y="661" width="0.1691%" height="15" fill="rgb(212,10,48)" fg:x="8163" fg:w="16"/><text x="86.5032%" y="671.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="86.2532%" y="645" width="0.1691%" height="15" fill="rgb(254,118,45)" fg:x="8163" fg:w="16"/><text x="86.5032%" y="655.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="86.2532%" y="629" width="0.1691%" height="15" fill="rgb(228,6,45)" fg:x="8163" fg:w="16"/><text x="86.5032%" y="639.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="86.2637%" y="613" width="0.1585%" height="15" fill="rgb(241,18,35)" fg:x="8164" fg:w="15"/><text x="86.5137%" y="623.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="86.2637%" y="597" width="0.1585%" height="15" fill="rgb(227,214,53)" fg:x="8164" fg:w="15"/><text x="86.5137%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="86.3060%" y="581" width="0.1162%" height="15" fill="rgb(224,107,51)" fg:x="8168" fg:w="11"/><text x="86.5560%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="86.3271%" y="565" width="0.0951%" height="15" fill="rgb(248,60,28)" fg:x="8170" fg:w="9"/><text x="86.5771%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="86.3483%" y="549" width="0.0740%" height="15" fill="rgb(249,101,23)" fg:x="8172" fg:w="7"/><text x="86.5983%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="86.3588%" y="533" width="0.0634%" height="15" fill="rgb(228,51,19)" fg:x="8173" fg:w="6"/><text x="86.6088%" y="543.50"></text></g><g><title>std::sync::mpmc::list::Block&lt;T&gt;::destroy (1 samples, 0.01%)</title><rect x="86.4222%" y="725" width="0.0106%" height="15" fill="rgb(213,20,6)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="735.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="86.4222%" y="709" width="0.0106%" height="15" fill="rgb(212,124,10)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::sync::mpmc::list::Block&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="86.4222%" y="693" width="0.0106%" height="15" fill="rgb(248,3,40)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="86.4222%" y="677" width="0.0106%" height="15" fill="rgb(223,178,23)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="86.4222%" y="661" width="0.0106%" height="15" fill="rgb(240,132,45)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="86.4222%" y="645" width="0.0106%" height="15" fill="rgb(245,164,36)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="86.4222%" y="629" width="0.0106%" height="15" fill="rgb(231,188,53)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.4222%" y="613" width="0.0106%" height="15" fill="rgb(237,198,39)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="623.50"></text></g><g><title>__GI___lll_lock_wait_private (1 samples, 0.01%)</title><rect x="86.4222%" y="597" width="0.0106%" height="15" fill="rgb(223,120,35)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="607.50"></text></g><g><title>futex_wait (1 samples, 0.01%)</title><rect x="86.4222%" y="581" width="0.0106%" height="15" fill="rgb(253,107,49)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="565" width="0.0106%" height="15" fill="rgb(216,44,31)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="549" width="0.0106%" height="15" fill="rgb(253,87,21)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="533" width="0.0106%" height="15" fill="rgb(226,18,2)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="517" width="0.0106%" height="15" fill="rgb(216,8,46)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="501" width="0.0106%" height="15" fill="rgb(226,140,39)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="485" width="0.0106%" height="15" fill="rgb(221,194,54)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="86.4222%" y="469" width="0.0106%" height="15" fill="rgb(213,92,11)" fg:x="8179" fg:w="1"/><text x="86.6722%" y="479.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::read (3 samples, 0.03%)</title><rect x="86.4222%" y="741" width="0.0317%" height="15" fill="rgb(229,162,46)" fg:x="8179" fg:w="3"/><text x="86.6722%" y="751.50"></text></g><g><title>std::sync::mpmc::list::Slot&lt;T&gt;::wait_write (2 samples, 0.02%)</title><rect x="86.4328%" y="725" width="0.0211%" height="15" fill="rgb(214,111,36)" fg:x="8180" fg:w="2"/><text x="86.6828%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="86.4328%" y="709" width="0.0211%" height="15" fill="rgb(207,6,21)" fg:x="8180" fg:w="2"/><text x="86.6828%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="86.4328%" y="693" width="0.0211%" height="15" fill="rgb(213,127,38)" fg:x="8180" fg:w="2"/><text x="86.6828%" y="703.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (6 samples, 0.06%)</title><rect x="86.4222%" y="789" width="0.0634%" height="15" fill="rgb(238,118,32)" fg:x="8179" fg:w="6"/><text x="86.6722%" y="799.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (6 samples, 0.06%)</title><rect x="86.4222%" y="773" width="0.0634%" height="15" fill="rgb(240,139,39)" fg:x="8179" fg:w="6"/><text x="86.6722%" y="783.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (6 samples, 0.06%)</title><rect x="86.4222%" y="757" width="0.0634%" height="15" fill="rgb(235,10,37)" fg:x="8179" fg:w="6"/><text x="86.6722%" y="767.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (3 samples, 0.03%)</title><rect x="86.4539%" y="741" width="0.0317%" height="15" fill="rgb(249,171,38)" fg:x="8182" fg:w="3"/><text x="86.7039%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="86.4645%" y="725" width="0.0211%" height="15" fill="rgb(242,144,32)" fg:x="8183" fg:w="2"/><text x="86.7145%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="86.4645%" y="709" width="0.0211%" height="15" fill="rgb(217,117,21)" fg:x="8183" fg:w="2"/><text x="86.7145%" y="719.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (3 samples, 0.03%)</title><rect x="86.4856%" y="789" width="0.0317%" height="15" fill="rgb(249,87,1)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="799.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (3 samples, 0.03%)</title><rect x="86.4856%" y="773" width="0.0317%" height="15" fill="rgb(248,196,48)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="783.50"></text></g><g><title>std::sys::unix::thread::Thread::join (3 samples, 0.03%)</title><rect x="86.4856%" y="757" width="0.0317%" height="15" fill="rgb(251,206,33)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="767.50"></text></g><g><title>__pthread_clockjoin_ex (3 samples, 0.03%)</title><rect x="86.4856%" y="741" width="0.0317%" height="15" fill="rgb(232,141,28)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="751.50"></text></g><g><title>__GI___nptl_deallocate_stack (3 samples, 0.03%)</title><rect x="86.4856%" y="725" width="0.0317%" height="15" fill="rgb(209,167,14)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="735.50"></text></g><g><title>queue_stack (3 samples, 0.03%)</title><rect x="86.4856%" y="709" width="0.0317%" height="15" fill="rgb(225,11,50)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="719.50"></text></g><g><title>__nptl_free_stacks (3 samples, 0.03%)</title><rect x="86.4856%" y="693" width="0.0317%" height="15" fill="rgb(209,50,20)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="703.50"></text></g><g><title>__GI___munmap (3 samples, 0.03%)</title><rect x="86.4856%" y="677" width="0.0317%" height="15" fill="rgb(212,17,46)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="661" width="0.0317%" height="15" fill="rgb(216,101,39)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="645" width="0.0317%" height="15" fill="rgb(212,228,48)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="629" width="0.0317%" height="15" fill="rgb(250,6,50)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="613" width="0.0317%" height="15" fill="rgb(250,160,48)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="597" width="0.0317%" height="15" fill="rgb(244,216,33)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="581" width="0.0317%" height="15" fill="rgb(207,157,5)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="565" width="0.0317%" height="15" fill="rgb(228,199,8)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="86.4856%" y="549" width="0.0317%" height="15" fill="rgb(227,80,20)" fg:x="8185" fg:w="3"/><text x="86.7356%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.4962%" y="533" width="0.0211%" height="15" fill="rgb(222,9,33)" fg:x="8186" fg:w="2"/><text x="86.7462%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.4962%" y="517" width="0.0211%" height="15" fill="rgb(239,44,28)" fg:x="8186" fg:w="2"/><text x="86.7462%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.4962%" y="501" width="0.0211%" height="15" fill="rgb(249,187,43)" fg:x="8186" fg:w="2"/><text x="86.7462%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="86.4962%" y="485" width="0.0211%" height="15" fill="rgb(216,141,28)" fg:x="8186" fg:w="2"/><text x="86.7462%" y="495.50"></text></g><g><title>[unknown] (1,041 samples, 11.00%)</title><rect x="86.5279%" y="725" width="10.9996%" height="15" fill="rgb(230,154,53)" fg:x="8189" fg:w="1041"/><text x="86.7779%" y="735.50">[unknown]</text></g><g><title>[unknown] (1,036 samples, 10.95%)</title><rect x="86.5807%" y="709" width="10.9467%" height="15" fill="rgb(227,82,4)" fg:x="8194" fg:w="1036"/><text x="86.8307%" y="719.50">[unknown]</text></g><g><title>[unknown] (1,036 samples, 10.95%)</title><rect x="86.5807%" y="693" width="10.9467%" height="15" fill="rgb(220,107,16)" fg:x="8194" fg:w="1036"/><text x="86.8307%" y="703.50">[unknown]</text></g><g><title>[unknown] (1,034 samples, 10.93%)</title><rect x="86.6019%" y="677" width="10.9256%" height="15" fill="rgb(207,187,2)" fg:x="8196" fg:w="1034"/><text x="86.8519%" y="687.50">[unknown]</text></g><g><title>[unknown] (1,030 samples, 10.88%)</title><rect x="86.6441%" y="661" width="10.8833%" height="15" fill="rgb(210,162,52)" fg:x="8200" fg:w="1030"/><text x="86.8941%" y="671.50">[unknown]</text></g><g><title>[unknown] (1,026 samples, 10.84%)</title><rect x="86.6864%" y="645" width="10.8411%" height="15" fill="rgb(217,216,49)" fg:x="8204" fg:w="1026"/><text x="86.9364%" y="655.50">[unknown]</text></g><g><title>[unknown] (1,018 samples, 10.76%)</title><rect x="86.7709%" y="629" width="10.7566%" height="15" fill="rgb(218,146,49)" fg:x="8212" fg:w="1018"/><text x="87.0209%" y="639.50">[unknown]</text></g><g><title>[unknown] (1,012 samples, 10.69%)</title><rect x="86.8343%" y="613" width="10.6932%" height="15" fill="rgb(216,55,40)" fg:x="8218" fg:w="1012"/><text x="87.0843%" y="623.50">[unknown]</text></g><g><title>[unknown] (1,008 samples, 10.65%)</title><rect x="86.8766%" y="597" width="10.6509%" height="15" fill="rgb(208,196,21)" fg:x="8222" fg:w="1008"/><text x="87.1266%" y="607.50">[unknown]</text></g><g><title>[unknown] (1,003 samples, 10.60%)</title><rect x="86.9294%" y="581" width="10.5981%" height="15" fill="rgb(242,117,42)" fg:x="8227" fg:w="1003"/><text x="87.1794%" y="591.50">[unknown]</text></g><g><title>[unknown] (988 samples, 10.44%)</title><rect x="87.0879%" y="565" width="10.4396%" height="15" fill="rgb(210,11,23)" fg:x="8242" fg:w="988"/><text x="87.3379%" y="575.50">[unknown]</text></g><g><title>[unknown] (975 samples, 10.30%)</title><rect x="87.2253%" y="549" width="10.3022%" height="15" fill="rgb(217,110,2)" fg:x="8255" fg:w="975"/><text x="87.4753%" y="559.50">[unknown]</text></g><g><title>[unknown] (964 samples, 10.19%)</title><rect x="87.3415%" y="533" width="10.1860%" height="15" fill="rgb(229,77,54)" fg:x="8266" fg:w="964"/><text x="87.5915%" y="543.50">[unknown]</text></g><g><title>[unknown] (951 samples, 10.05%)</title><rect x="87.4789%" y="517" width="10.0486%" height="15" fill="rgb(218,53,16)" fg:x="8279" fg:w="951"/><text x="87.7289%" y="527.50">[unknown]</text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.4641%" y="501" width="0.0634%" height="15" fill="rgb(215,38,13)" fg:x="9224" fg:w="6"/><text x="97.7141%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.4958%" y="485" width="0.0317%" height="15" fill="rgb(235,42,18)" fg:x="9227" fg:w="3"/><text x="97.7458%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.4958%" y="469" width="0.0317%" height="15" fill="rgb(219,66,54)" fg:x="9227" fg:w="3"/><text x="97.7458%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.4958%" y="453" width="0.0317%" height="15" fill="rgb(222,205,4)" fg:x="9227" fg:w="3"/><text x="97.7458%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.4958%" y="437" width="0.0317%" height="15" fill="rgb(227,213,46)" fg:x="9227" fg:w="3"/><text x="97.7458%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="421" width="0.0211%" height="15" fill="rgb(250,145,42)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="405" width="0.0211%" height="15" fill="rgb(219,15,2)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="389" width="0.0211%" height="15" fill="rgb(231,181,52)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="373" width="0.0211%" height="15" fill="rgb(235,1,42)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="357" width="0.0211%" height="15" fill="rgb(249,88,27)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="341" width="0.0211%" height="15" fill="rgb(235,145,16)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.5063%" y="325" width="0.0211%" height="15" fill="rgb(237,114,19)" fg:x="9228" fg:w="2"/><text x="97.7563%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.5169%" y="309" width="0.0106%" height="15" fill="rgb(238,51,50)" fg:x="9229" fg:w="1"/><text x="97.7669%" y="319.50"></text></g><g><title>std::thread::sleep (1,048 samples, 11.07%)</title><rect x="86.5173%" y="789" width="11.0735%" height="15" fill="rgb(205,194,25)" fg:x="8188" fg:w="1048"/><text x="86.7673%" y="799.50">std::thread::sle..</text></g><g><title>std::sys::unix::thread::Thread::sleep (1,048 samples, 11.07%)</title><rect x="86.5173%" y="773" width="11.0735%" height="15" fill="rgb(215,203,17)" fg:x="8188" fg:w="1048"/><text x="86.7673%" y="783.50">std::sys::unix::..</text></g><g><title>__GI___nanosleep (1,047 samples, 11.06%)</title><rect x="86.5279%" y="757" width="11.0630%" height="15" fill="rgb(233,112,49)" fg:x="8189" fg:w="1047"/><text x="86.7779%" y="767.50">__GI___nanosleep</text></g><g><title>__GI___clock_nanosleep (1,047 samples, 11.06%)</title><rect x="86.5279%" y="741" width="11.0630%" height="15" fill="rgb(241,130,26)" fg:x="8189" fg:w="1047"/><text x="86.7779%" y="751.50">__GI___clock_nan..</text></g><g><title>__GI___pthread_disable_asynccancel (6 samples, 0.06%)</title><rect x="97.5275%" y="725" width="0.0634%" height="15" fill="rgb(252,223,19)" fg:x="9230" fg:w="6"/><text x="97.7775%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="97.5909%" y="629" width="0.0106%" height="15" fill="rgb(211,95,25)" fg:x="9236" fg:w="1"/><text x="97.8409%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="97.5909%" y="613" width="0.0106%" height="15" fill="rgb(251,182,27)" fg:x="9236" fg:w="1"/><text x="97.8409%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="97.5909%" y="725" width="0.0211%" height="15" fill="rgb(238,24,4)" fg:x="9236" fg:w="2"/><text x="97.8409%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="97.5909%" y="709" width="0.0211%" height="15" fill="rgb(224,220,25)" fg:x="9236" fg:w="2"/><text x="97.8409%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="97.5909%" y="693" width="0.0211%" height="15" fill="rgb(239,133,26)" fg:x="9236" fg:w="2"/><text x="97.8409%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="97.5909%" y="677" width="0.0211%" height="15" fill="rgb(211,94,48)" fg:x="9236" fg:w="2"/><text x="97.8409%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="97.5909%" y="661" width="0.0211%" height="15" fill="rgb(239,87,6)" fg:x="9236" fg:w="2"/><text x="97.8409%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="97.5909%" y="645" width="0.0211%" height="15" fill="rgb(227,62,0)" fg:x="9236" fg:w="2"/><text x="97.8409%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="97.6014%" y="629" width="0.0106%" height="15" fill="rgb(211,226,4)" fg:x="9237" fg:w="1"/><text x="97.8514%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="97.6014%" y="613" width="0.0106%" height="15" fill="rgb(253,38,52)" fg:x="9237" fg:w="1"/><text x="97.8514%" y="623.50"></text></g><g><title>__GI___pthread_attr_init (1 samples, 0.01%)</title><rect x="97.6120%" y="709" width="0.0106%" height="15" fill="rgb(229,126,40)" fg:x="9238" fg:w="1"/><text x="97.8620%" y="719.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.01%)</title><rect x="97.6120%" y="693" width="0.0106%" height="15" fill="rgb(229,165,44)" fg:x="9238" fg:w="1"/><text x="97.8620%" y="703.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="677" width="0.0845%" height="15" fill="rgb(247,95,47)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="661" width="0.0845%" height="15" fill="rgb(216,140,30)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="645" width="0.0845%" height="15" fill="rgb(246,214,8)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="629" width="0.0845%" height="15" fill="rgb(227,224,15)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="613" width="0.0845%" height="15" fill="rgb(233,175,4)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="597" width="0.0845%" height="15" fill="rgb(221,66,45)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="581" width="0.0845%" height="15" fill="rgb(221,178,18)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="565" width="0.0845%" height="15" fill="rgb(213,81,29)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.6331%" y="549" width="0.0845%" height="15" fill="rgb(220,89,49)" fg:x="9240" fg:w="8"/><text x="97.8831%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="97.6437%" y="533" width="0.0740%" height="15" fill="rgb(227,60,33)" fg:x="9241" fg:w="7"/><text x="97.8937%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.6648%" y="517" width="0.0528%" height="15" fill="rgb(205,113,12)" fg:x="9243" fg:w="5"/><text x="97.9148%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.6648%" y="501" width="0.0528%" height="15" fill="rgb(211,32,1)" fg:x="9243" fg:w="5"/><text x="97.9148%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.6648%" y="485" width="0.0528%" height="15" fill="rgb(246,2,12)" fg:x="9243" fg:w="5"/><text x="97.9148%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.6648%" y="469" width="0.0528%" height="15" fill="rgb(243,37,27)" fg:x="9243" fg:w="5"/><text x="97.9148%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.6648%" y="453" width="0.0528%" height="15" fill="rgb(248,211,31)" fg:x="9243" fg:w="5"/><text x="97.9148%" y="463.50"></text></g><g><title>__GI___mmap64 (16 samples, 0.17%)</title><rect x="97.7177%" y="677" width="0.1691%" height="15" fill="rgb(242,146,47)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="687.50"></text></g><g><title>__GI___mmap64 (16 samples, 0.17%)</title><rect x="97.7177%" y="661" width="0.1691%" height="15" fill="rgb(206,70,20)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="671.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="645" width="0.1691%" height="15" fill="rgb(215,10,51)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="655.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="629" width="0.1691%" height="15" fill="rgb(243,178,53)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="639.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="613" width="0.1691%" height="15" fill="rgb(233,221,20)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="597" width="0.1691%" height="15" fill="rgb(218,95,35)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="581" width="0.1691%" height="15" fill="rgb(229,13,5)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="565" width="0.1691%" height="15" fill="rgb(252,164,30)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="575.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.7177%" y="549" width="0.1691%" height="15" fill="rgb(232,68,36)" fg:x="9248" fg:w="16"/><text x="97.9677%" y="559.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="97.7388%" y="533" width="0.1479%" height="15" fill="rgb(219,59,54)" fg:x="9250" fg:w="14"/><text x="97.9888%" y="543.50"></text></g><g><title>[unknown] (13 samples, 0.14%)</title><rect x="97.7494%" y="517" width="0.1374%" height="15" fill="rgb(250,92,33)" fg:x="9251" fg:w="13"/><text x="97.9994%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="97.7811%" y="501" width="0.1057%" height="15" fill="rgb(229,162,54)" fg:x="9254" fg:w="10"/><text x="98.0311%" y="511.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="97.7811%" y="485" width="0.1057%" height="15" fill="rgb(244,114,52)" fg:x="9254" fg:w="10"/><text x="98.0311%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.8550%" y="469" width="0.0317%" height="15" fill="rgb(212,211,43)" fg:x="9261" fg:w="3"/><text x="98.1050%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.8762%" y="453" width="0.0106%" height="15" fill="rgb(226,147,8)" fg:x="9263" fg:w="1"/><text x="98.1262%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.8762%" y="437" width="0.0106%" height="15" fill="rgb(226,23,13)" fg:x="9263" fg:w="1"/><text x="98.1262%" y="447.50"></text></g><g><title>get_cached_stack (1 samples, 0.01%)</title><rect x="97.8867%" y="677" width="0.0106%" height="15" fill="rgb(240,63,4)" fg:x="9264" fg:w="1"/><text x="98.1367%" y="687.50"></text></g><g><title>__pthread_create_2_1 (31 samples, 0.33%)</title><rect x="97.6226%" y="709" width="0.3276%" height="15" fill="rgb(221,1,32)" fg:x="9239" fg:w="31"/><text x="97.8726%" y="719.50"></text></g><g><title>allocate_stack (30 samples, 0.32%)</title><rect x="97.6331%" y="693" width="0.3170%" height="15" fill="rgb(242,117,10)" fg:x="9240" fg:w="30"/><text x="97.8831%" y="703.50"></text></g><g><title>setup_stack_prot (5 samples, 0.05%)</title><rect x="97.8973%" y="677" width="0.0528%" height="15" fill="rgb(249,172,44)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="687.50"></text></g><g><title>__GI___mprotect (5 samples, 0.05%)</title><rect x="97.8973%" y="661" width="0.0528%" height="15" fill="rgb(244,46,45)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="645" width="0.0528%" height="15" fill="rgb(206,43,17)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="629" width="0.0528%" height="15" fill="rgb(239,218,39)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="613" width="0.0528%" height="15" fill="rgb(208,169,54)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="597" width="0.0528%" height="15" fill="rgb(247,25,42)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="581" width="0.0528%" height="15" fill="rgb(226,23,31)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="565" width="0.0528%" height="15" fill="rgb(247,16,28)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="549" width="0.0528%" height="15" fill="rgb(231,147,38)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.8973%" y="533" width="0.0528%" height="15" fill="rgb(253,81,48)" fg:x="9265" fg:w="5"/><text x="98.1473%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="97.9079%" y="517" width="0.0423%" height="15" fill="rgb(249,222,43)" fg:x="9266" fg:w="4"/><text x="98.1579%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="97.9079%" y="501" width="0.0423%" height="15" fill="rgb(221,3,27)" fg:x="9266" fg:w="4"/><text x="98.1579%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="97.9079%" y="485" width="0.0423%" height="15" fill="rgb(228,180,5)" fg:x="9266" fg:w="4"/><text x="98.1579%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="97.9079%" y="469" width="0.0423%" height="15" fill="rgb(227,131,42)" fg:x="9266" fg:w="4"/><text x="98.1579%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.9184%" y="453" width="0.0317%" height="15" fill="rgb(212,3,39)" fg:x="9267" fg:w="3"/><text x="98.1684%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.9396%" y="437" width="0.0106%" height="15" fill="rgb(226,45,5)" fg:x="9269" fg:w="1"/><text x="98.1896%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.9396%" y="421" width="0.0106%" height="15" fill="rgb(215,167,45)" fg:x="9269" fg:w="1"/><text x="98.1896%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.9396%" y="405" width="0.0106%" height="15" fill="rgb(250,218,53)" fg:x="9269" fg:w="1"/><text x="98.1896%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.9396%" y="389" width="0.0106%" height="15" fill="rgb(207,140,0)" fg:x="9269" fg:w="1"/><text x="98.1896%" y="399.50"></text></g><g><title>std::sys::unix::thread::Thread::new (33 samples, 0.35%)</title><rect x="97.6120%" y="725" width="0.3487%" height="15" fill="rgb(238,133,51)" fg:x="9238" fg:w="33"/><text x="97.8620%" y="735.50"></text></g><g><title>std::sys::unix::thread::min_stack_size (1 samples, 0.01%)</title><rect x="97.9501%" y="709" width="0.0106%" height="15" fill="rgb(218,203,53)" fg:x="9270" fg:w="1"/><text x="98.2001%" y="719.50"></text></g><g><title>__GI___pthread_get_minstack (1 samples, 0.01%)</title><rect x="97.9501%" y="693" width="0.0106%" height="15" fill="rgb(226,184,25)" fg:x="9270" fg:w="1"/><text x="98.2001%" y="703.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams (3,367 samples, 35.58%)</title><rect x="62.3943%" y="821" width="35.5769%" height="15" fill="rgb(231,121,21)" fg:x="5905" fg:w="3367"/><text x="62.6443%" y="831.50">paranagram::Paranagram::generate_anagrams</text></g><g><title>paranagram::utils::find_sum (1,138 samples, 12.02%)</title><rect x="85.9467%" y="805" width="12.0245%" height="15" fill="rgb(251,14,34)" fg:x="8134" fg:w="1138"/><text x="86.1967%" y="815.50">paranagram::utils:..</text></g><g><title>std::thread::spawn (36 samples, 0.38%)</title><rect x="97.5909%" y="789" width="0.3804%" height="15" fill="rgb(249,193,11)" fg:x="9236" fg:w="36"/><text x="97.8409%" y="799.50"></text></g><g><title>std::thread::Builder::spawn (36 samples, 0.38%)</title><rect x="97.5909%" y="773" width="0.3804%" height="15" fill="rgb(220,172,37)" fg:x="9236" fg:w="36"/><text x="97.8409%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (36 samples, 0.38%)</title><rect x="97.5909%" y="757" width="0.3804%" height="15" fill="rgb(231,229,43)" fg:x="9236" fg:w="36"/><text x="97.8409%" y="767.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (36 samples, 0.38%)</title><rect x="97.5909%" y="741" width="0.3804%" height="15" fill="rgb(250,161,5)" fg:x="9236" fg:w="36"/><text x="97.8409%" y="751.50"></text></g><g><title>std::thread::Thread::new (1 samples, 0.01%)</title><rect x="97.9607%" y="725" width="0.0106%" height="15" fill="rgb(218,225,18)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (1 samples, 0.01%)</title><rect x="97.9607%" y="709" width="0.0106%" height="15" fill="rgb(245,45,42)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.01%)</title><rect x="97.9607%" y="693" width="0.0106%" height="15" fill="rgb(211,115,1)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="703.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (1 samples, 0.01%)</title><rect x="97.9607%" y="677" width="0.0106%" height="15" fill="rgb(248,133,52)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::extend (1 samples, 0.01%)</title><rect x="97.9607%" y="661" width="0.0106%" height="15" fill="rgb(238,100,21)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="671.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="97.9607%" y="645" width="0.0106%" height="15" fill="rgb(247,144,11)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="655.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="97.9607%" y="629" width="0.0106%" height="15" fill="rgb(206,164,16)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="639.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (1 samples, 0.01%)</title><rect x="97.9607%" y="613" width="0.0106%" height="15" fill="rgb(222,34,3)" fg:x="9271" fg:w="1"/><text x="98.2107%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="98.0241%" y="581" width="0.0106%" height="15" fill="rgb(248,82,4)" fg:x="9277" fg:w="1"/><text x="98.2741%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="98.0241%" y="565" width="0.0106%" height="15" fill="rgb(228,81,46)" fg:x="9277" fg:w="1"/><text x="98.2741%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="98.0241%" y="549" width="0.0106%" height="15" fill="rgb(227,67,47)" fg:x="9277" fg:w="1"/><text x="98.2741%" y="559.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.01%)</title><rect x="98.0241%" y="533" width="0.0106%" height="15" fill="rgb(215,93,53)" fg:x="9277" fg:w="1"/><text x="98.2741%" y="543.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="98.0030%" y="661" width="0.0528%" height="15" fill="rgb(248,194,39)" fg:x="9275" fg:w="5"/><text x="98.2530%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="98.0030%" y="645" width="0.0528%" height="15" fill="rgb(215,5,19)" fg:x="9275" fg:w="5"/><text x="98.2530%" y="655.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="98.0030%" y="629" width="0.0528%" height="15" fill="rgb(226,215,51)" fg:x="9275" fg:w="5"/><text x="98.2530%" y="639.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (5 samples, 0.05%)</title><rect x="98.0030%" y="613" width="0.0528%" height="15" fill="rgb(225,56,26)" fg:x="9275" fg:w="5"/><text x="98.2530%" y="623.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.04%)</title><rect x="98.0135%" y="597" width="0.0423%" height="15" fill="rgb(222,75,29)" fg:x="9276" fg:w="4"/><text x="98.2635%" y="607.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.02%)</title><rect x="98.0347%" y="581" width="0.0211%" height="15" fill="rgb(236,139,6)" fg:x="9278" fg:w="2"/><text x="98.2847%" y="591.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.02%)</title><rect x="98.0347%" y="565" width="0.0211%" height="15" fill="rgb(223,137,36)" fg:x="9278" fg:w="2"/><text x="98.2847%" y="575.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.01%)</title><rect x="98.0452%" y="549" width="0.0106%" height="15" fill="rgb(226,99,2)" fg:x="9279" fg:w="1"/><text x="98.2952%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.03%)</title><rect x="98.0558%" y="613" width="0.0317%" height="15" fill="rgb(206,133,23)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0558%" y="597" width="0.0317%" height="15" fill="rgb(243,173,15)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="98.0558%" y="581" width="0.0317%" height="15" fill="rgb(228,69,28)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.0558%" y="565" width="0.0317%" height="15" fill="rgb(212,51,22)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="98.0558%" y="549" width="0.0317%" height="15" fill="rgb(227,113,0)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="98.0558%" y="533" width="0.0317%" height="15" fill="rgb(252,84,27)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="543.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="98.0558%" y="517" width="0.0317%" height="15" fill="rgb(223,145,39)" fg:x="9280" fg:w="3"/><text x="98.3058%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="98.0769%" y="501" width="0.0106%" height="15" fill="rgb(239,219,30)" fg:x="9282" fg:w="1"/><text x="98.3269%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (1 samples, 0.01%)</title><rect x="98.0875%" y="613" width="0.0106%" height="15" fill="rgb(224,196,39)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="623.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.01%)</title><rect x="98.0875%" y="597" width="0.0106%" height="15" fill="rgb(205,35,43)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="607.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (1 samples, 0.01%)</title><rect x="98.0875%" y="581" width="0.0106%" height="15" fill="rgb(228,201,21)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="591.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.01%)</title><rect x="98.0875%" y="565" width="0.0106%" height="15" fill="rgb(237,118,16)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="575.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.01%)</title><rect x="98.0875%" y="549" width="0.0106%" height="15" fill="rgb(241,17,19)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="559.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="98.0875%" y="533" width="0.0106%" height="15" fill="rgb(214,10,25)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="543.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="98.0875%" y="517" width="0.0106%" height="15" fill="rgb(238,37,29)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.01%)</title><rect x="98.0875%" y="501" width="0.0106%" height="15" fill="rgb(253,83,25)" fg:x="9283" fg:w="1"/><text x="98.3375%" y="511.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (1 samples, 0.01%)</title><rect x="98.1192%" y="565" width="0.0106%" height="15" fill="rgb(234,192,12)" fg:x="9286" fg:w="1"/><text x="98.3692%" y="575.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="98.1298%" y="549" width="0.0211%" height="15" fill="rgb(241,216,45)" fg:x="9287" fg:w="2"/><text x="98.3798%" y="559.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="98.1298%" y="533" width="0.0211%" height="15" fill="rgb(242,22,33)" fg:x="9287" fg:w="2"/><text x="98.3798%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="98.1298%" y="517" width="0.0211%" height="15" fill="rgb(231,105,49)" fg:x="9287" fg:w="2"/><text x="98.3798%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (1 samples, 0.01%)</title><rect x="98.1826%" y="421" width="0.0106%" height="15" fill="rgb(218,204,15)" fg:x="9292" fg:w="1"/><text x="98.4326%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="98.1826%" y="405" width="0.0106%" height="15" fill="rgb(235,138,41)" fg:x="9292" fg:w="1"/><text x="98.4326%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (1 samples, 0.01%)</title><rect x="98.1932%" y="421" width="0.0106%" height="15" fill="rgb(246,0,9)" fg:x="9293" fg:w="1"/><text x="98.4432%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="98.1932%" y="405" width="0.0106%" height="15" fill="rgb(210,74,4)" fg:x="9293" fg:w="1"/><text x="98.4432%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="98.1932%" y="389" width="0.0106%" height="15" fill="rgb(250,60,41)" fg:x="9293" fg:w="1"/><text x="98.4432%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="98.2037%" y="421" width="0.0106%" height="15" fill="rgb(220,115,12)" fg:x="9294" fg:w="1"/><text x="98.4537%" y="431.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (5 samples, 0.05%)</title><rect x="98.1720%" y="517" width="0.0528%" height="15" fill="rgb(237,100,13)" fg:x="9291" fg:w="5"/><text x="98.4220%" y="527.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.05%)</title><rect x="98.1720%" y="501" width="0.0528%" height="15" fill="rgb(213,55,26)" fg:x="9291" fg:w="5"/><text x="98.4220%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.05%)</title><rect x="98.1720%" y="485" width="0.0528%" height="15" fill="rgb(216,17,4)" fg:x="9291" fg:w="5"/><text x="98.4220%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (5 samples, 0.05%)</title><rect x="98.1720%" y="469" width="0.0528%" height="15" fill="rgb(220,153,47)" fg:x="9291" fg:w="5"/><text x="98.4220%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.05%)</title><rect x="98.1720%" y="453" width="0.0528%" height="15" fill="rgb(215,131,9)" fg:x="9291" fg:w="5"/><text x="98.4220%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.05%)</title><rect x="98.1720%" y="437" width="0.0528%" height="15" fill="rgb(233,46,42)" fg:x="9291" fg:w="5"/><text x="98.4220%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="98.2143%" y="421" width="0.0106%" height="15" fill="rgb(226,86,7)" fg:x="9295" fg:w="1"/><text x="98.4643%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="98.2143%" y="405" width="0.0106%" height="15" fill="rgb(239,226,21)" fg:x="9295" fg:w="1"/><text x="98.4643%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="98.2143%" y="389" width="0.0106%" height="15" fill="rgb(244,137,22)" fg:x="9295" fg:w="1"/><text x="98.4643%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.05%)</title><rect x="98.2249%" y="421" width="0.0528%" height="15" fill="rgb(211,139,35)" fg:x="9296" fg:w="5"/><text x="98.4749%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="98.2777%" y="405" width="0.0211%" height="15" fill="rgb(214,62,50)" fg:x="9301" fg:w="2"/><text x="98.5277%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="98.2988%" y="405" width="0.0106%" height="15" fill="rgb(212,113,44)" fg:x="9303" fg:w="1"/><text x="98.5488%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="98.2988%" y="389" width="0.0106%" height="15" fill="rgb(226,150,43)" fg:x="9303" fg:w="1"/><text x="98.5488%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="98.2988%" y="373" width="0.0106%" height="15" fill="rgb(250,71,37)" fg:x="9303" fg:w="1"/><text x="98.5488%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.03%)</title><rect x="98.3094%" y="405" width="0.0317%" height="15" fill="rgb(219,76,19)" fg:x="9304" fg:w="3"/><text x="98.5594%" y="415.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.3094%" y="389" width="0.0317%" height="15" fill="rgb(250,39,11)" fg:x="9304" fg:w="3"/><text x="98.5594%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.03%)</title><rect x="98.3094%" y="373" width="0.0317%" height="15" fill="rgb(230,64,31)" fg:x="9304" fg:w="3"/><text x="98.5594%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.02%)</title><rect x="98.3199%" y="357" width="0.0211%" height="15" fill="rgb(208,222,23)" fg:x="9305" fg:w="2"/><text x="98.5699%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="98.3199%" y="341" width="0.0211%" height="15" fill="rgb(227,125,18)" fg:x="9305" fg:w="2"/><text x="98.5699%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="98.3199%" y="325" width="0.0211%" height="15" fill="rgb(234,210,9)" fg:x="9305" fg:w="2"/><text x="98.5699%" y="335.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="98.3199%" y="309" width="0.0211%" height="15" fill="rgb(217,127,24)" fg:x="9305" fg:w="2"/><text x="98.5699%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="98.3305%" y="293" width="0.0106%" height="15" fill="rgb(239,141,48)" fg:x="9306" fg:w="1"/><text x="98.5805%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="98.3411%" y="293" width="0.0211%" height="15" fill="rgb(227,109,8)" fg:x="9307" fg:w="2"/><text x="98.5911%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="98.3833%" y="277" width="0.0211%" height="15" fill="rgb(235,184,23)" fg:x="9311" fg:w="2"/><text x="98.6333%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.10%)</title><rect x="98.3411%" y="309" width="0.0951%" height="15" fill="rgb(227,226,48)" fg:x="9307" fg:w="9"/><text x="98.5911%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.07%)</title><rect x="98.3622%" y="293" width="0.0740%" height="15" fill="rgb(206,150,11)" fg:x="9309" fg:w="7"/><text x="98.6122%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="98.4045%" y="277" width="0.0317%" height="15" fill="rgb(254,2,33)" fg:x="9313" fg:w="3"/><text x="98.6545%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (11 samples, 0.12%)</title><rect x="98.3411%" y="405" width="0.1162%" height="15" fill="rgb(243,160,20)" fg:x="9307" fg:w="11"/><text x="98.5911%" y="415.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (11 samples, 0.12%)</title><rect x="98.3411%" y="389" width="0.1162%" height="15" fill="rgb(218,208,30)" fg:x="9307" fg:w="11"/><text x="98.5911%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.12%)</title><rect x="98.3411%" y="373" width="0.1162%" height="15" fill="rgb(224,120,49)" fg:x="9307" fg:w="11"/><text x="98.5911%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.12%)</title><rect x="98.3411%" y="357" width="0.1162%" height="15" fill="rgb(246,12,2)" fg:x="9307" fg:w="11"/><text x="98.5911%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="98.3411%" y="341" width="0.1162%" height="15" fill="rgb(236,117,3)" fg:x="9307" fg:w="11"/><text x="98.5911%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="98.3411%" y="325" width="0.1162%" height="15" fill="rgb(216,128,52)" fg:x="9307" fg:w="11"/><text x="98.5911%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="98.4362%" y="309" width="0.0211%" height="15" fill="rgb(246,145,19)" fg:x="9316" fg:w="2"/><text x="98.6862%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (4 samples, 0.04%)</title><rect x="98.4573%" y="373" width="0.0423%" height="15" fill="rgb(222,11,46)" fg:x="9318" fg:w="4"/><text x="98.7073%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.04%)</title><rect x="98.4573%" y="357" width="0.0423%" height="15" fill="rgb(245,82,36)" fg:x="9318" fg:w="4"/><text x="98.7073%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="98.4890%" y="341" width="0.0106%" height="15" fill="rgb(250,73,51)" fg:x="9321" fg:w="1"/><text x="98.7390%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (7 samples, 0.07%)</title><rect x="98.4996%" y="373" width="0.0740%" height="15" fill="rgb(221,189,23)" fg:x="9322" fg:w="7"/><text x="98.7496%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (7 samples, 0.07%)</title><rect x="98.4996%" y="357" width="0.0740%" height="15" fill="rgb(210,33,7)" fg:x="9322" fg:w="7"/><text x="98.7496%" y="367.50"></text></g><g><title>hashbrown::raw::is_full (7 samples, 0.07%)</title><rect x="98.4996%" y="341" width="0.0740%" height="15" fill="rgb(210,107,22)" fg:x="9322" fg:w="7"/><text x="98.7496%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (12 samples, 0.13%)</title><rect x="98.4573%" y="389" width="0.1268%" height="15" fill="rgb(222,116,37)" fg:x="9318" fg:w="12"/><text x="98.7073%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="98.5735%" y="373" width="0.0106%" height="15" fill="rgb(254,17,48)" fg:x="9329" fg:w="1"/><text x="98.8235%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="98.5735%" y="357" width="0.0106%" height="15" fill="rgb(224,36,32)" fg:x="9329" fg:w="1"/><text x="98.8235%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="98.5735%" y="341" width="0.0106%" height="15" fill="rgb(232,90,46)" fg:x="9329" fg:w="1"/><text x="98.8235%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (14 samples, 0.15%)</title><rect x="98.4573%" y="405" width="0.1479%" height="15" fill="rgb(241,66,40)" fg:x="9318" fg:w="14"/><text x="98.7073%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.02%)</title><rect x="98.5841%" y="389" width="0.0211%" height="15" fill="rgb(249,184,29)" fg:x="9330" fg:w="2"/><text x="98.8341%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (2 samples, 0.02%)</title><rect x="98.5841%" y="373" width="0.0211%" height="15" fill="rgb(231,181,1)" fg:x="9330" fg:w="2"/><text x="98.8341%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.13%)</title><rect x="98.6052%" y="373" width="0.1268%" height="15" fill="rgb(224,94,2)" fg:x="9332" fg:w="12"/><text x="98.8552%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.12%)</title><rect x="98.6158%" y="357" width="0.1162%" height="15" fill="rgb(229,170,15)" fg:x="9333" fg:w="11"/><text x="98.8658%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.12%)</title><rect x="98.6158%" y="341" width="0.1162%" height="15" fill="rgb(240,127,35)" fg:x="9333" fg:w="11"/><text x="98.8658%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.12%)</title><rect x="98.6158%" y="325" width="0.1162%" height="15" fill="rgb(248,196,34)" fg:x="9333" fg:w="11"/><text x="98.8658%" y="335.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.12%)</title><rect x="98.6158%" y="309" width="0.1162%" height="15" fill="rgb(236,137,7)" fg:x="9333" fg:w="11"/><text x="98.8658%" y="319.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.12%)</title><rect x="98.6158%" y="293" width="0.1162%" height="15" fill="rgb(235,127,16)" fg:x="9333" fg:w="11"/><text x="98.8658%" y="303.50"></text></g><g><title>_int_malloc (10 samples, 0.11%)</title><rect x="98.6264%" y="277" width="0.1057%" height="15" fill="rgb(250,192,54)" fg:x="9334" fg:w="10"/><text x="98.8764%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="98.6581%" y="261" width="0.0740%" height="15" fill="rgb(218,98,20)" fg:x="9337" fg:w="7"/><text x="98.9081%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.6686%" y="245" width="0.0634%" height="15" fill="rgb(230,176,47)" fg:x="9338" fg:w="6"/><text x="98.9186%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.6792%" y="229" width="0.0528%" height="15" fill="rgb(244,2,33)" fg:x="9339" fg:w="5"/><text x="98.9292%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.6792%" y="213" width="0.0528%" height="15" fill="rgb(231,100,17)" fg:x="9339" fg:w="5"/><text x="98.9292%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.6792%" y="197" width="0.0528%" height="15" fill="rgb(245,23,12)" fg:x="9339" fg:w="5"/><text x="98.9292%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.6792%" y="181" width="0.0528%" height="15" fill="rgb(249,55,22)" fg:x="9339" fg:w="5"/><text x="98.9292%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.6792%" y="165" width="0.0528%" height="15" fill="rgb(207,134,9)" fg:x="9339" fg:w="5"/><text x="98.9292%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.6792%" y="149" width="0.0528%" height="15" fill="rgb(218,134,0)" fg:x="9339" fg:w="5"/><text x="98.9292%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="98.6898%" y="133" width="0.0423%" height="15" fill="rgb(213,212,33)" fg:x="9340" fg:w="4"/><text x="98.9398%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.7109%" y="117" width="0.0211%" height="15" fill="rgb(252,106,18)" fg:x="9342" fg:w="2"/><text x="98.9609%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.7215%" y="101" width="0.0106%" height="15" fill="rgb(208,126,42)" fg:x="9343" fg:w="1"/><text x="98.9715%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.7215%" y="85" width="0.0106%" height="15" fill="rgb(246,175,29)" fg:x="9343" fg:w="1"/><text x="98.9715%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.7215%" y="69" width="0.0106%" height="15" fill="rgb(215,13,50)" fg:x="9343" fg:w="1"/><text x="98.9715%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.7215%" y="53" width="0.0106%" height="15" fill="rgb(216,172,15)" fg:x="9343" fg:w="1"/><text x="98.9715%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.7215%" y="37" width="0.0106%" height="15" fill="rgb(212,103,13)" fg:x="9343" fg:w="1"/><text x="98.9715%" y="47.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (50 samples, 0.53%)</title><rect x="98.2249%" y="485" width="0.5283%" height="15" fill="rgb(231,171,36)" fg:x="9296" fg:w="50"/><text x="98.4749%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (50 samples, 0.53%)</title><rect x="98.2249%" y="469" width="0.5283%" height="15" fill="rgb(250,123,20)" fg:x="9296" fg:w="50"/><text x="98.4749%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (50 samples, 0.53%)</title><rect x="98.2249%" y="453" width="0.5283%" height="15" fill="rgb(212,53,50)" fg:x="9296" fg:w="50"/><text x="98.4749%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (50 samples, 0.53%)</title><rect x="98.2249%" y="437" width="0.5283%" height="15" fill="rgb(243,54,12)" fg:x="9296" fg:w="50"/><text x="98.4749%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (45 samples, 0.48%)</title><rect x="98.2777%" y="421" width="0.4755%" height="15" fill="rgb(234,101,34)" fg:x="9301" fg:w="45"/><text x="98.5277%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (14 samples, 0.15%)</title><rect x="98.6052%" y="405" width="0.1479%" height="15" fill="rgb(254,67,22)" fg:x="9332" fg:w="14"/><text x="98.8552%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (14 samples, 0.15%)</title><rect x="98.6052%" y="389" width="0.1479%" height="15" fill="rgb(250,35,47)" fg:x="9332" fg:w="14"/><text x="98.8552%" y="399.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2 samples, 0.02%)</title><rect x="98.7320%" y="373" width="0.0211%" height="15" fill="rgb(226,126,38)" fg:x="9344" fg:w="2"/><text x="98.9820%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="98.7849%" y="389" width="0.0106%" height="15" fill="rgb(216,138,53)" fg:x="9349" fg:w="1"/><text x="99.0349%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="98.7849%" y="405" width="0.0211%" height="15" fill="rgb(246,199,43)" fg:x="9349" fg:w="2"/><text x="99.0349%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="98.7954%" y="389" width="0.0106%" height="15" fill="rgb(232,125,11)" fg:x="9350" fg:w="1"/><text x="99.0454%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="98.7743%" y="453" width="0.0845%" height="15" fill="rgb(218,219,45)" fg:x="9348" fg:w="8"/><text x="99.0243%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="98.7743%" y="437" width="0.0845%" height="15" fill="rgb(216,102,54)" fg:x="9348" fg:w="8"/><text x="99.0243%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="98.7743%" y="421" width="0.0845%" height="15" fill="rgb(250,228,7)" fg:x="9348" fg:w="8"/><text x="99.0243%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.05%)</title><rect x="98.8060%" y="405" width="0.0528%" height="15" fill="rgb(226,125,25)" fg:x="9351" fg:w="5"/><text x="99.0560%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="98.8271%" y="389" width="0.0317%" height="15" fill="rgb(224,165,27)" fg:x="9353" fg:w="3"/><text x="99.0771%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.13%)</title><rect x="98.7532%" y="485" width="0.1268%" height="15" fill="rgb(233,86,3)" fg:x="9346" fg:w="12"/><text x="99.0032%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.13%)</title><rect x="98.7532%" y="469" width="0.1268%" height="15" fill="rgb(228,116,20)" fg:x="9346" fg:w="12"/><text x="99.0032%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="98.8588%" y="453" width="0.0211%" height="15" fill="rgb(209,192,17)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (2 samples, 0.02%)</title><rect x="98.8588%" y="437" width="0.0211%" height="15" fill="rgb(224,88,34)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="98.8588%" y="421" width="0.0211%" height="15" fill="rgb(233,38,6)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="98.8588%" y="405" width="0.0211%" height="15" fill="rgb(212,59,30)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="98.8588%" y="389" width="0.0211%" height="15" fill="rgb(213,80,3)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="98.8588%" y="373" width="0.0211%" height="15" fill="rgb(251,178,7)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="98.8588%" y="357" width="0.0211%" height="15" fill="rgb(213,154,26)" fg:x="9356" fg:w="2"/><text x="99.1088%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="98.9011%" y="453" width="0.0106%" height="15" fill="rgb(238,165,49)" fg:x="9360" fg:w="1"/><text x="99.1511%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="98.9011%" y="437" width="0.0106%" height="15" fill="rgb(248,91,46)" fg:x="9360" fg:w="1"/><text x="99.1511%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="98.9117%" y="453" width="0.0211%" height="15" fill="rgb(244,21,52)" fg:x="9361" fg:w="2"/><text x="99.1617%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.01%)</title><rect x="98.9222%" y="437" width="0.0106%" height="15" fill="rgb(247,122,20)" fg:x="9362" fg:w="1"/><text x="99.1722%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (1 samples, 0.01%)</title><rect x="98.9222%" y="421" width="0.0106%" height="15" fill="rgb(218,27,9)" fg:x="9362" fg:w="1"/><text x="99.1722%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.03%)</title><rect x="98.9328%" y="453" width="0.0317%" height="15" fill="rgb(246,7,6)" fg:x="9363" fg:w="3"/><text x="99.1828%" y="463.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (82 samples, 0.87%)</title><rect x="98.1192%" y="597" width="0.8664%" height="15" fill="rgb(227,135,54)" fg:x="9286" fg:w="82"/><text x="98.3692%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (82 samples, 0.87%)</title><rect x="98.1192%" y="581" width="0.8664%" height="15" fill="rgb(247,14,11)" fg:x="9286" fg:w="82"/><text x="98.3692%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (81 samples, 0.86%)</title><rect x="98.1298%" y="565" width="0.8559%" height="15" fill="rgb(206,149,34)" fg:x="9287" fg:w="81"/><text x="98.3798%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (79 samples, 0.83%)</title><rect x="98.1509%" y="549" width="0.8347%" height="15" fill="rgb(227,228,4)" fg:x="9289" fg:w="79"/><text x="98.4009%" y="559.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (79 samples, 0.83%)</title><rect x="98.1509%" y="533" width="0.8347%" height="15" fill="rgb(238,218,28)" fg:x="9289" fg:w="79"/><text x="98.4009%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (72 samples, 0.76%)</title><rect x="98.2249%" y="517" width="0.7608%" height="15" fill="rgb(252,86,40)" fg:x="9296" fg:w="72"/><text x="98.4749%" y="527.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (72 samples, 0.76%)</title><rect x="98.2249%" y="501" width="0.7608%" height="15" fill="rgb(251,225,11)" fg:x="9296" fg:w="72"/><text x="98.4749%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.11%)</title><rect x="98.8800%" y="485" width="0.1057%" height="15" fill="rgb(206,46,49)" fg:x="9358" fg:w="10"/><text x="99.1300%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.11%)</title><rect x="98.8800%" y="469" width="0.1057%" height="15" fill="rgb(245,128,24)" fg:x="9358" fg:w="10"/><text x="99.1300%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="98.9645%" y="453" width="0.0211%" height="15" fill="rgb(219,177,34)" fg:x="9366" fg:w="2"/><text x="99.2145%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="98.9645%" y="437" width="0.0211%" height="15" fill="rgb(218,60,48)" fg:x="9366" fg:w="2"/><text x="99.2145%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="98.9962%" y="501" width="0.0106%" height="15" fill="rgb(221,11,5)" fg:x="9369" fg:w="1"/><text x="99.2462%" y="511.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.01%)</title><rect x="98.9962%" y="485" width="0.0106%" height="15" fill="rgb(220,148,13)" fg:x="9369" fg:w="1"/><text x="99.2462%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="99.0385%" y="373" width="0.0106%" height="15" fill="rgb(210,16,3)" fg:x="9373" fg:w="1"/><text x="99.2885%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="99.0385%" y="357" width="0.0106%" height="15" fill="rgb(236,80,2)" fg:x="9373" fg:w="1"/><text x="99.2885%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="99.0385%" y="341" width="0.0106%" height="15" fill="rgb(239,129,19)" fg:x="9373" fg:w="1"/><text x="99.2885%" y="351.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="99.0385%" y="325" width="0.0106%" height="15" fill="rgb(220,106,35)" fg:x="9373" fg:w="1"/><text x="99.2885%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.04%)</title><rect x="99.0279%" y="421" width="0.0423%" height="15" fill="rgb(252,139,45)" fg:x="9372" fg:w="4"/><text x="99.2779%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="99.0279%" y="405" width="0.0423%" height="15" fill="rgb(229,8,36)" fg:x="9372" fg:w="4"/><text x="99.2779%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="99.0279%" y="389" width="0.0423%" height="15" fill="rgb(230,126,33)" fg:x="9372" fg:w="4"/><text x="99.2779%" y="399.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="99.0490%" y="373" width="0.0211%" height="15" fill="rgb(239,140,21)" fg:x="9374" fg:w="2"/><text x="99.2990%" y="383.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="99.0490%" y="357" width="0.0211%" height="15" fill="rgb(254,104,9)" fg:x="9374" fg:w="2"/><text x="99.2990%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.07%)</title><rect x="99.0068%" y="437" width="0.0740%" height="15" fill="rgb(239,52,14)" fg:x="9370" fg:w="7"/><text x="99.2568%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="99.0702%" y="421" width="0.0106%" height="15" fill="rgb(208,227,44)" fg:x="9376" fg:w="1"/><text x="99.3202%" y="431.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.01%)</title><rect x="99.0807%" y="437" width="0.0106%" height="15" fill="rgb(246,18,19)" fg:x="9377" fg:w="1"/><text x="99.3307%" y="447.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.01%)</title><rect x="99.0807%" y="421" width="0.0106%" height="15" fill="rgb(235,228,25)" fg:x="9377" fg:w="1"/><text x="99.3307%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.10%)</title><rect x="99.0068%" y="485" width="0.0951%" height="15" fill="rgb(240,156,20)" fg:x="9370" fg:w="9"/><text x="99.2568%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (9 samples, 0.10%)</title><rect x="99.0068%" y="469" width="0.0951%" height="15" fill="rgb(224,8,20)" fg:x="9370" fg:w="9"/><text x="99.2568%" y="479.50"></text></g><g><title>alloc::string::String::push (9 samples, 0.10%)</title><rect x="99.0068%" y="453" width="0.0951%" height="15" fill="rgb(214,12,52)" fg:x="9370" fg:w="9"/><text x="99.2568%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.01%)</title><rect x="99.0913%" y="437" width="0.0106%" height="15" fill="rgb(211,220,47)" fg:x="9378" fg:w="1"/><text x="99.3413%" y="447.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="99.0913%" y="421" width="0.0106%" height="15" fill="rgb(250,173,5)" fg:x="9378" fg:w="1"/><text x="99.3413%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="99.1230%" y="421" width="0.0211%" height="15" fill="rgb(250,125,52)" fg:x="9381" fg:w="2"/><text x="99.3730%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="99.1230%" y="405" width="0.0211%" height="15" fill="rgb(209,133,18)" fg:x="9381" fg:w="2"/><text x="99.3730%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.17%)</title><rect x="98.9962%" y="533" width="0.1691%" height="15" fill="rgb(216,173,22)" fg:x="9369" fg:w="16"/><text x="99.2462%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.17%)</title><rect x="98.9962%" y="517" width="0.1691%" height="15" fill="rgb(205,3,22)" fg:x="9369" fg:w="16"/><text x="99.2462%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (15 samples, 0.16%)</title><rect x="99.0068%" y="501" width="0.1585%" height="15" fill="rgb(248,22,20)" fg:x="9370" fg:w="15"/><text x="99.2568%" y="511.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (6 samples, 0.06%)</title><rect x="99.1019%" y="485" width="0.0634%" height="15" fill="rgb(233,6,29)" fg:x="9379" fg:w="6"/><text x="99.3519%" y="495.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_alphabetic (6 samples, 0.06%)</title><rect x="99.1019%" y="469" width="0.0634%" height="15" fill="rgb(240,22,54)" fg:x="9379" fg:w="6"/><text x="99.3519%" y="479.50"></text></g><g><title>core::unicode::unicode_data::alphabetic::lookup (5 samples, 0.05%)</title><rect x="99.1124%" y="453" width="0.0528%" height="15" fill="rgb(231,133,32)" fg:x="9380" fg:w="5"/><text x="99.3624%" y="463.50"></text></g><g><title>core::unicode::unicode_data::skip_search (5 samples, 0.05%)</title><rect x="99.1124%" y="437" width="0.0528%" height="15" fill="rgb(248,193,4)" fg:x="9380" fg:w="5"/><text x="99.3624%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (2 samples, 0.02%)</title><rect x="99.1441%" y="421" width="0.0211%" height="15" fill="rgb(211,178,46)" fg:x="9383" fg:w="2"/><text x="99.3941%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.02%)</title><rect x="99.1441%" y="405" width="0.0211%" height="15" fill="rgb(224,5,42)" fg:x="9383" fg:w="2"/><text x="99.3941%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.01%)</title><rect x="99.1547%" y="389" width="0.0106%" height="15" fill="rgb(239,176,25)" fg:x="9384" fg:w="1"/><text x="99.4047%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="99.1547%" y="373" width="0.0106%" height="15" fill="rgb(245,187,50)" fg:x="9384" fg:w="1"/><text x="99.4047%" y="383.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="99.1653%" y="485" width="0.0211%" height="15" fill="rgb(248,24,15)" fg:x="9385" fg:w="2"/><text x="99.4153%" y="495.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="99.1653%" y="469" width="0.0211%" height="15" fill="rgb(205,166,13)" fg:x="9385" fg:w="2"/><text x="99.4153%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="99.1653%" y="453" width="0.0211%" height="15" fill="rgb(208,114,23)" fg:x="9385" fg:w="2"/><text x="99.4153%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="99.1653%" y="437" width="0.0211%" height="15" fill="rgb(239,127,18)" fg:x="9385" fg:w="2"/><text x="99.4153%" y="447.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="99.2392%" y="293" width="0.0317%" height="15" fill="rgb(219,154,28)" fg:x="9392" fg:w="3"/><text x="99.4892%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.04%)</title><rect x="99.2392%" y="341" width="0.0423%" height="15" fill="rgb(225,157,23)" fg:x="9392" fg:w="4"/><text x="99.4892%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.04%)</title><rect x="99.2392%" y="325" width="0.0423%" height="15" fill="rgb(219,8,6)" fg:x="9392" fg:w="4"/><text x="99.4892%" y="335.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.04%)</title><rect x="99.2392%" y="309" width="0.0423%" height="15" fill="rgb(212,47,6)" fg:x="9392" fg:w="4"/><text x="99.4892%" y="319.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="99.2709%" y="293" width="0.0106%" height="15" fill="rgb(224,190,4)" fg:x="9395" fg:w="1"/><text x="99.5209%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="99.2709%" y="277" width="0.0106%" height="15" fill="rgb(239,183,29)" fg:x="9395" fg:w="1"/><text x="99.5209%" y="287.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="99.2921%" y="325" width="0.0211%" height="15" fill="rgb(213,57,7)" fg:x="9397" fg:w="2"/><text x="99.5421%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.2921%" y="309" width="0.0211%" height="15" fill="rgb(216,148,1)" fg:x="9397" fg:w="2"/><text x="99.5421%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3026%" y="293" width="0.0106%" height="15" fill="rgb(236,182,29)" fg:x="9398" fg:w="1"/><text x="99.5526%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3026%" y="277" width="0.0106%" height="15" fill="rgb(244,120,48)" fg:x="9398" fg:w="1"/><text x="99.5526%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3026%" y="261" width="0.0106%" height="15" fill="rgb(206,71,34)" fg:x="9398" fg:w="1"/><text x="99.5526%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3026%" y="245" width="0.0106%" height="15" fill="rgb(242,32,6)" fg:x="9398" fg:w="1"/><text x="99.5526%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.12%)</title><rect x="99.2075%" y="453" width="0.1162%" height="15" fill="rgb(241,35,3)" fg:x="9389" fg:w="11"/><text x="99.4575%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (11 samples, 0.12%)</title><rect x="99.2075%" y="437" width="0.1162%" height="15" fill="rgb(222,62,19)" fg:x="9389" fg:w="11"/><text x="99.4575%" y="447.50"></text></g><g><title>alloc::string::String::push (11 samples, 0.12%)</title><rect x="99.2075%" y="421" width="0.1162%" height="15" fill="rgb(223,110,41)" fg:x="9389" fg:w="11"/><text x="99.4575%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.12%)</title><rect x="99.2075%" y="405" width="0.1162%" height="15" fill="rgb(208,224,4)" fg:x="9389" fg:w="11"/><text x="99.4575%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.11%)</title><rect x="99.2181%" y="389" width="0.1057%" height="15" fill="rgb(241,137,19)" fg:x="9390" fg:w="10"/><text x="99.4681%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.11%)</title><rect x="99.2181%" y="373" width="0.1057%" height="15" fill="rgb(244,24,17)" fg:x="9390" fg:w="10"/><text x="99.4681%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.11%)</title><rect x="99.2181%" y="357" width="0.1057%" height="15" fill="rgb(245,178,49)" fg:x="9390" fg:w="10"/><text x="99.4681%" y="367.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="99.2815%" y="341" width="0.0423%" height="15" fill="rgb(219,160,38)" fg:x="9396" fg:w="4"/><text x="99.5315%" y="351.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="99.3132%" y="325" width="0.0106%" height="15" fill="rgb(228,137,14)" fg:x="9399" fg:w="1"/><text x="99.5632%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (32 samples, 0.34%)</title><rect x="98.9962%" y="565" width="0.3381%" height="15" fill="rgb(237,134,11)" fg:x="9369" fg:w="32"/><text x="99.2462%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (32 samples, 0.34%)</title><rect x="98.9962%" y="549" width="0.3381%" height="15" fill="rgb(211,126,44)" fg:x="9369" fg:w="32"/><text x="99.2462%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.17%)</title><rect x="99.1653%" y="533" width="0.1691%" height="15" fill="rgb(226,171,33)" fg:x="9385" fg:w="16"/><text x="99.4153%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.17%)</title><rect x="99.1653%" y="517" width="0.1691%" height="15" fill="rgb(253,99,13)" fg:x="9385" fg:w="16"/><text x="99.4153%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.17%)</title><rect x="99.1653%" y="501" width="0.1691%" height="15" fill="rgb(244,48,7)" fg:x="9385" fg:w="16"/><text x="99.4153%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (14 samples, 0.15%)</title><rect x="99.1864%" y="485" width="0.1479%" height="15" fill="rgb(244,217,54)" fg:x="9387" fg:w="14"/><text x="99.4364%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.13%)</title><rect x="99.2075%" y="469" width="0.1268%" height="15" fill="rgb(224,15,18)" fg:x="9389" fg:w="12"/><text x="99.4575%" y="479.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.01%)</title><rect x="99.3238%" y="453" width="0.0106%" height="15" fill="rgb(244,99,12)" fg:x="9400" fg:w="1"/><text x="99.5738%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_ascii_lowercase (1 samples, 0.01%)</title><rect x="99.3238%" y="437" width="0.0106%" height="15" fill="rgb(233,226,8)" fg:x="9400" fg:w="1"/><text x="99.5738%" y="447.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_uppercase (1 samples, 0.01%)</title><rect x="99.3238%" y="421" width="0.0106%" height="15" fill="rgb(229,211,3)" fg:x="9400" fg:w="1"/><text x="99.5738%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.36%)</title><rect x="98.9856%" y="597" width="0.3593%" height="15" fill="rgb(216,140,21)" fg:x="9368" fg:w="34"/><text x="99.2356%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (34 samples, 0.36%)</title><rect x="98.9856%" y="581" width="0.3593%" height="15" fill="rgb(234,122,30)" fg:x="9368" fg:w="34"/><text x="99.2356%" y="591.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.01%)</title><rect x="99.3343%" y="565" width="0.0106%" height="15" fill="rgb(236,25,46)" fg:x="9401" fg:w="1"/><text x="99.5843%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="99.3449%" y="597" width="0.0106%" height="15" fill="rgb(217,52,54)" fg:x="9402" fg:w="1"/><text x="99.5949%" y="607.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="99.3449%" y="581" width="0.0106%" height="15" fill="rgb(222,29,26)" fg:x="9402" fg:w="1"/><text x="99.5949%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="99.3449%" y="565" width="0.0106%" height="15" fill="rgb(216,177,29)" fg:x="9402" fg:w="1"/><text x="99.5949%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="99.3449%" y="549" width="0.0106%" height="15" fill="rgb(247,136,51)" fg:x="9402" fg:w="1"/><text x="99.5949%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="99.3449%" y="533" width="0.0106%" height="15" fill="rgb(231,47,47)" fg:x="9402" fg:w="1"/><text x="99.5949%" y="543.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.01%)</title><rect x="99.3449%" y="517" width="0.0106%" height="15" fill="rgb(211,192,36)" fg:x="9402" fg:w="1"/><text x="99.5949%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.06%)</title><rect x="99.3555%" y="597" width="0.0634%" height="15" fill="rgb(229,156,32)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.06%)</title><rect x="99.3555%" y="581" width="0.0634%" height="15" fill="rgb(248,213,20)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.06%)</title><rect x="99.3555%" y="565" width="0.0634%" height="15" fill="rgb(217,64,7)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="99.3555%" y="549" width="0.0634%" height="15" fill="rgb(232,142,8)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="99.3555%" y="533" width="0.0634%" height="15" fill="rgb(224,92,44)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="99.3555%" y="517" width="0.0634%" height="15" fill="rgb(214,169,17)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="527.50"></text></g><g><title>__GI___libc_free (6 samples, 0.06%)</title><rect x="99.3555%" y="501" width="0.0634%" height="15" fill="rgb(210,59,37)" fg:x="9403" fg:w="6"/><text x="99.6055%" y="511.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="99.3766%" y="485" width="0.0423%" height="15" fill="rgb(214,116,48)" fg:x="9405" fg:w="4"/><text x="99.6266%" y="495.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="99.4505%" y="469" width="0.0211%" height="15" fill="rgb(244,191,6)" fg:x="9412" fg:w="2"/><text x="99.7005%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.4611%" y="453" width="0.0106%" height="15" fill="rgb(241,50,52)" fg:x="9413" fg:w="1"/><text x="99.7111%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="99.4611%" y="437" width="0.0106%" height="15" fill="rgb(236,75,39)" fg:x="9413" fg:w="1"/><text x="99.7111%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="99.4505%" y="485" width="0.0317%" height="15" fill="rgb(236,99,0)" fg:x="9412" fg:w="3"/><text x="99.7005%" y="495.50"></text></g><g><title>unidecode::unidecode (1 samples, 0.01%)</title><rect x="99.4717%" y="469" width="0.0106%" height="15" fill="rgb(207,202,15)" fg:x="9414" fg:w="1"/><text x="99.7217%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="99.5139%" y="309" width="0.0528%" height="15" fill="rgb(233,207,14)" fg:x="9418" fg:w="5"/><text x="99.7639%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.03%)</title><rect x="99.5351%" y="293" width="0.0317%" height="15" fill="rgb(226,27,51)" fg:x="9420" fg:w="3"/><text x="99.7851%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.03%)</title><rect x="99.5351%" y="277" width="0.0317%" height="15" fill="rgb(206,104,42)" fg:x="9420" fg:w="3"/><text x="99.7851%" y="287.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.03%)</title><rect x="99.5351%" y="261" width="0.0317%" height="15" fill="rgb(212,225,4)" fg:x="9420" fg:w="3"/><text x="99.7851%" y="271.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="99.5456%" y="245" width="0.0211%" height="15" fill="rgb(233,96,42)" fg:x="9421" fg:w="2"/><text x="99.7956%" y="255.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="99.5562%" y="229" width="0.0106%" height="15" fill="rgb(229,21,32)" fg:x="9422" fg:w="1"/><text x="99.8062%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="99.4822%" y="373" width="0.0951%" height="15" fill="rgb(226,216,24)" fg:x="9415" fg:w="9"/><text x="99.7322%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="99.4822%" y="357" width="0.0951%" height="15" fill="rgb(221,163,17)" fg:x="9415" fg:w="9"/><text x="99.7322%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="99.5139%" y="341" width="0.0634%" height="15" fill="rgb(216,216,42)" fg:x="9418" fg:w="6"/><text x="99.7639%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.06%)</title><rect x="99.5139%" y="325" width="0.0634%" height="15" fill="rgb(240,118,7)" fg:x="9418" fg:w="6"/><text x="99.7639%" y="335.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="99.5668%" y="309" width="0.0106%" height="15" fill="rgb(221,67,37)" fg:x="9423" fg:w="1"/><text x="99.8168%" y="319.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="99.5668%" y="293" width="0.0106%" height="15" fill="rgb(241,32,44)" fg:x="9423" fg:w="1"/><text x="99.8168%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="99.5668%" y="277" width="0.0106%" height="15" fill="rgb(235,204,43)" fg:x="9423" fg:w="1"/><text x="99.8168%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="99.5773%" y="373" width="0.0317%" height="15" fill="rgb(213,116,10)" fg:x="9424" fg:w="3"/><text x="99.8273%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.03%)</title><rect x="99.5773%" y="357" width="0.0317%" height="15" fill="rgb(239,15,48)" fg:x="9424" fg:w="3"/><text x="99.8273%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (15 samples, 0.16%)</title><rect x="99.4822%" y="469" width="0.1585%" height="15" fill="rgb(207,123,36)" fg:x="9415" fg:w="15"/><text x="99.7322%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (15 samples, 0.16%)</title><rect x="99.4822%" y="453" width="0.1585%" height="15" fill="rgb(209,103,30)" fg:x="9415" fg:w="15"/><text x="99.7322%" y="463.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.16%)</title><rect x="99.4822%" y="437" width="0.1585%" height="15" fill="rgb(238,100,19)" fg:x="9415" fg:w="15"/><text x="99.7322%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.16%)</title><rect x="99.4822%" y="421" width="0.1585%" height="15" fill="rgb(244,30,14)" fg:x="9415" fg:w="15"/><text x="99.7322%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.16%)</title><rect x="99.4822%" y="405" width="0.1585%" height="15" fill="rgb(249,174,6)" fg:x="9415" fg:w="15"/><text x="99.7322%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.16%)</title><rect x="99.4822%" y="389" width="0.1585%" height="15" fill="rgb(235,213,41)" fg:x="9415" fg:w="15"/><text x="99.7322%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.03%)</title><rect x="99.6090%" y="373" width="0.0317%" height="15" fill="rgb(213,118,6)" fg:x="9427" fg:w="3"/><text x="99.8590%" y="383.50"></text></g><g><title>unidecode::unidecode (1 samples, 0.01%)</title><rect x="99.6407%" y="453" width="0.0106%" height="15" fill="rgb(235,44,51)" fg:x="9430" fg:w="1"/><text x="99.8907%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="99.6513%" y="437" width="0.0106%" height="15" fill="rgb(217,9,53)" fg:x="9431" fg:w="1"/><text x="99.9013%" y="447.50"></text></g><g><title>unidecode::unidecode_char::{{closure}} (1 samples, 0.01%)</title><rect x="99.6513%" y="421" width="0.0106%" height="15" fill="rgb(237,172,34)" fg:x="9431" fg:w="1"/><text x="99.9013%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (158 samples, 1.67%)</title><rect x="98.0030%" y="709" width="1.6695%" height="15" fill="rgb(206,206,11)" fg:x="9275" fg:w="158"/><text x="98.2530%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (158 samples, 1.67%)</title><rect x="98.0030%" y="693" width="1.6695%" height="15" fill="rgb(214,149,29)" fg:x="9275" fg:w="158"/><text x="98.2530%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (158 samples, 1.67%)</title><rect x="98.0030%" y="677" width="1.6695%" height="15" fill="rgb(208,123,3)" fg:x="9275" fg:w="158"/><text x="98.2530%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (153 samples, 1.62%)</title><rect x="98.0558%" y="661" width="1.6167%" height="15" fill="rgb(229,126,4)" fg:x="9280" fg:w="153"/><text x="98.3058%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (153 samples, 1.62%)</title><rect x="98.0558%" y="645" width="1.6167%" height="15" fill="rgb(222,92,36)" fg:x="9280" fg:w="153"/><text x="98.3058%" y="655.50"></text></g><g><title>paranagram::Paranagram::new::{{closure}} (153 samples, 1.62%)</title><rect x="98.0558%" y="629" width="1.6167%" height="15" fill="rgb(216,39,41)" fg:x="9280" fg:w="153"/><text x="98.3058%" y="639.50"></text></g><g><title>paranagram::word::Word::new (149 samples, 1.57%)</title><rect x="98.0981%" y="613" width="1.5744%" height="15" fill="rgb(253,127,28)" fg:x="9284" fg:w="149"/><text x="98.3481%" y="623.50"></text></g><g><title>unidecode::unidecode (24 samples, 0.25%)</title><rect x="99.4189%" y="597" width="0.2536%" height="15" fill="rgb(249,152,51)" fg:x="9409" fg:w="24"/><text x="99.6689%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.24%)</title><rect x="99.4294%" y="581" width="0.2430%" height="15" fill="rgb(209,123,42)" fg:x="9410" fg:w="23"/><text x="99.6794%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (23 samples, 0.24%)</title><rect x="99.4294%" y="565" width="0.2430%" height="15" fill="rgb(241,118,22)" fg:x="9410" fg:w="23"/><text x="99.6794%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (21 samples, 0.22%)</title><rect x="99.4505%" y="549" width="0.2219%" height="15" fill="rgb(208,25,7)" fg:x="9412" fg:w="21"/><text x="99.7005%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 0.22%)</title><rect x="99.4505%" y="533" width="0.2219%" height="15" fill="rgb(243,144,39)" fg:x="9412" fg:w="21"/><text x="99.7005%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.22%)</title><rect x="99.4505%" y="517" width="0.2219%" height="15" fill="rgb(250,50,5)" fg:x="9412" fg:w="21"/><text x="99.7005%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.22%)</title><rect x="99.4505%" y="501" width="0.2219%" height="15" fill="rgb(207,67,11)" fg:x="9412" fg:w="21"/><text x="99.7005%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 0.19%)</title><rect x="99.4822%" y="485" width="0.1902%" height="15" fill="rgb(245,204,40)" fg:x="9415" fg:w="18"/><text x="99.7322%" y="495.50"></text></g><g><title>unidecode::unidecode::{{closure}} (3 samples, 0.03%)</title><rect x="99.6407%" y="469" width="0.0317%" height="15" fill="rgb(238,228,24)" fg:x="9430" fg:w="3"/><text x="99.8907%" y="479.50"></text></g><g><title>unidecode::unidecode_char (2 samples, 0.02%)</title><rect x="99.6513%" y="453" width="0.0211%" height="15" fill="rgb(217,116,22)" fg:x="9431" fg:w="2"/><text x="99.9013%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.01%)</title><rect x="99.6619%" y="437" width="0.0106%" height="15" fill="rgb(234,98,12)" fg:x="9432" fg:w="1"/><text x="99.9119%" y="447.50"></text></g><g><title>__libc_start_main_impl (3,643 samples, 38.49%)</title><rect x="61.2320%" y="1093" width="38.4932%" height="15" fill="rgb(242,170,50)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1103.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,643 samples, 38.49%)</title><rect x="61.2320%" y="1077" width="38.4932%" height="15" fill="rgb(235,7,5)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1087.50">__libc_start_call_main</text></g><g><title>main (3,643 samples, 38.49%)</title><rect x="61.2320%" y="1061" width="38.4932%" height="15" fill="rgb(241,114,28)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (3,643 samples, 38.49%)</title><rect x="61.2320%" y="1045" width="38.4932%" height="15" fill="rgb(246,112,42)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,643 samples, 38.49%)</title><rect x="61.2320%" y="1029" width="38.4932%" height="15" fill="rgb(248,228,14)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,643 samples, 38.49%)</title><rect x="61.2320%" y="1013" width="38.4932%" height="15" fill="rgb(208,133,18)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,643 samples, 38.49%)</title><rect x="61.2320%" y="997" width="38.4932%" height="15" fill="rgb(207,35,49)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (3,643 samples, 38.49%)</title><rect x="61.2320%" y="981" width="38.4932%" height="15" fill="rgb(205,68,36)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (3,643 samples, 38.49%)</title><rect x="61.2320%" y="965" width="38.4932%" height="15" fill="rgb(245,62,40)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,643 samples, 38.49%)</title><rect x="61.2320%" y="949" width="38.4932%" height="15" fill="rgb(228,27,24)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,643 samples, 38.49%)</title><rect x="61.2320%" y="933" width="38.4932%" height="15" fill="rgb(253,19,12)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,643 samples, 38.49%)</title><rect x="61.2320%" y="917" width="38.4932%" height="15" fill="rgb(232,28,20)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A..</text></g><g><title>std::rt::lang_start::{{closure}} (3,643 samples, 38.49%)</title><rect x="61.2320%" y="901" width="38.4932%" height="15" fill="rgb(218,35,51)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,643 samples, 38.49%)</title><rect x="61.2320%" y="885" width="38.4932%" height="15" fill="rgb(212,90,40)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,643 samples, 38.49%)</title><rect x="61.2320%" y="869" width="38.4932%" height="15" fill="rgb(220,172,12)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="879.50">core::ops::function::FnOnce::call_once</text></g><g><title>para::main (3,643 samples, 38.49%)</title><rect x="61.2320%" y="853" width="38.4932%" height="15" fill="rgb(226,159,20)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="863.50">para::main</text></g><g><title>para::dbg_main (3,643 samples, 38.49%)</title><rect x="61.2320%" y="837" width="38.4932%" height="15" fill="rgb(234,205,16)" fg:x="5795" fg:w="3643"/><text x="61.4820%" y="847.50">para::dbg_main</text></g><g><title>paranagram::Paranagram::new (166 samples, 1.75%)</title><rect x="97.9713%" y="821" width="1.7540%" height="15" fill="rgb(207,9,39)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (166 samples, 1.75%)</title><rect x="97.9713%" y="805" width="1.7540%" height="15" fill="rgb(249,143,15)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (166 samples, 1.75%)</title><rect x="97.9713%" y="789" width="1.7540%" height="15" fill="rgb(253,133,29)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (166 samples, 1.75%)</title><rect x="97.9713%" y="773" width="1.7540%" height="15" fill="rgb(221,187,0)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (166 samples, 1.75%)</title><rect x="97.9713%" y="757" width="1.7540%" height="15" fill="rgb(205,204,26)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (166 samples, 1.75%)</title><rect x="97.9713%" y="741" width="1.7540%" height="15" fill="rgb(224,68,54)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (166 samples, 1.75%)</title><rect x="97.9713%" y="725" width="1.7540%" height="15" fill="rgb(209,67,4)" fg:x="9272" fg:w="166"/><text x="98.2213%" y="735.50"></text></g><g><title>core::ptr::write (5 samples, 0.05%)</title><rect x="99.6724%" y="709" width="0.0528%" height="15" fill="rgb(228,229,18)" fg:x="9433" fg:w="5"/><text x="99.9224%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="693" width="0.0423%" height="15" fill="rgb(231,89,13)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="677" width="0.0423%" height="15" fill="rgb(210,182,18)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="661" width="0.0423%" height="15" fill="rgb(240,105,2)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="645" width="0.0423%" height="15" fill="rgb(207,170,50)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="629" width="0.0423%" height="15" fill="rgb(232,133,24)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="613" width="0.0423%" height="15" fill="rgb(235,166,27)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.6830%" y="597" width="0.0423%" height="15" fill="rgb(209,19,13)" fg:x="9434" fg:w="4"/><text x="99.9330%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.6936%" y="581" width="0.0317%" height="15" fill="rgb(226,79,39)" fg:x="9435" fg:w="3"/><text x="99.9436%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.6936%" y="565" width="0.0317%" height="15" fill="rgb(222,163,10)" fg:x="9435" fg:w="3"/><text x="99.9436%" y="575.50"></text></g><g><title>_start (3,644 samples, 38.50%)</title><rect x="61.2320%" y="1109" width="38.5038%" height="15" fill="rgb(214,44,19)" fg:x="5795" fg:w="3644"/><text x="61.4820%" y="1119.50">_start</text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.7253%" y="1093" width="0.0106%" height="15" fill="rgb(210,217,13)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1103.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="99.7253%" y="1077" width="0.0106%" height="15" fill="rgb(237,61,54)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1087.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.7253%" y="1061" width="0.0106%" height="15" fill="rgb(226,184,24)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1071.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.7253%" y="1045" width="0.0106%" height="15" fill="rgb(223,226,4)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1055.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="99.7253%" y="1029" width="0.0106%" height="15" fill="rgb(210,26,41)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1039.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="99.7253%" y="1013" width="0.0106%" height="15" fill="rgb(220,221,6)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1023.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.01%)</title><rect x="99.7253%" y="997" width="0.0106%" height="15" fill="rgb(225,89,49)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="981" width="0.0106%" height="15" fill="rgb(218,70,45)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="965" width="0.0106%" height="15" fill="rgb(238,166,21)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="949" width="0.0106%" height="15" fill="rgb(224,141,44)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="933" width="0.0106%" height="15" fill="rgb(230,12,49)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="917" width="0.0106%" height="15" fill="rgb(212,174,12)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="901" width="0.0106%" height="15" fill="rgb(246,67,9)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="885" width="0.0106%" height="15" fill="rgb(239,35,23)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="869" width="0.0106%" height="15" fill="rgb(211,167,0)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="853" width="0.0106%" height="15" fill="rgb(225,119,45)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="837" width="0.0106%" height="15" fill="rgb(210,162,6)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7253%" y="821" width="0.0106%" height="15" fill="rgb(208,118,35)" fg:x="9438" fg:w="1"/><text x="99.9753%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="99.7358%" y="1109" width="0.0317%" height="15" fill="rgb(239,4,53)" fg:x="9439" fg:w="3"/><text x="99.9858%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="99.7358%" y="1093" width="0.0317%" height="15" fill="rgb(213,130,21)" fg:x="9439" fg:w="3"/><text x="99.9858%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.03%)</title><rect x="99.7358%" y="1077" width="0.0317%" height="15" fill="rgb(235,148,0)" fg:x="9439" fg:w="3"/><text x="99.9858%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.03%)</title><rect x="99.7358%" y="1061" width="0.0317%" height="15" fill="rgb(244,224,18)" fg:x="9439" fg:w="3"/><text x="99.9858%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="99.7675%" y="1109" width="0.0106%" height="15" fill="rgb(211,214,4)" fg:x="9442" fg:w="1"/><text x="100.0175%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="99.7675%" y="1093" width="0.0106%" height="15" fill="rgb(206,119,25)" fg:x="9442" fg:w="1"/><text x="100.0175%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="99.7675%" y="1077" width="0.0106%" height="15" fill="rgb(243,93,47)" fg:x="9442" fg:w="1"/><text x="100.0175%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="99.7675%" y="1061" width="0.0106%" height="15" fill="rgb(224,194,6)" fg:x="9442" fg:w="1"/><text x="100.0175%" y="1071.50"></text></g><g><title>get_free_list (1 samples, 0.01%)</title><rect x="99.7781%" y="1109" width="0.0106%" height="15" fill="rgb(243,229,6)" fg:x="9443" fg:w="1"/><text x="100.0281%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.03%)</title><rect x="99.7887%" y="1109" width="0.0317%" height="15" fill="rgb(207,23,50)" fg:x="9444" fg:w="3"/><text x="100.0387%" y="1119.50"></text></g><g><title>main_arena (1 samples, 0.01%)</title><rect x="99.8204%" y="1109" width="0.0106%" height="15" fill="rgb(253,192,32)" fg:x="9447" fg:w="1"/><text x="100.0704%" y="1119.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="99.8204%" y="1093" width="0.0106%" height="15" fill="rgb(213,21,6)" fg:x="9447" fg:w="1"/><text x="100.0704%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="99.8415%" y="1093" width="0.0211%" height="15" fill="rgb(243,151,13)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="99.8415%" y="1077" width="0.0211%" height="15" fill="rgb(233,165,41)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="99.8415%" y="1061" width="0.0211%" height="15" fill="rgb(246,176,45)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="99.8415%" y="1045" width="0.0211%" height="15" fill="rgb(217,170,52)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="99.8415%" y="1029" width="0.0211%" height="15" fill="rgb(214,203,54)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="99.8415%" y="1013" width="0.0211%" height="15" fill="rgb(248,215,49)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="99.8415%" y="997" width="0.0211%" height="15" fill="rgb(208,46,10)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="99.8415%" y="981" width="0.0211%" height="15" fill="rgb(254,5,31)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="99.8415%" y="965" width="0.0211%" height="15" fill="rgb(222,104,33)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="99.8415%" y="949" width="0.0211%" height="15" fill="rgb(248,49,16)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="99.8415%" y="933" width="0.0211%" height="15" fill="rgb(232,198,41)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="99.8415%" y="917" width="0.0211%" height="15" fill="rgb(214,125,3)" fg:x="9449" fg:w="2"/><text x="100.0915%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="99.8626%" y="1093" width="0.0317%" height="15" fill="rgb(229,220,28)" fg:x="9451" fg:w="3"/><text x="100.1126%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="99.8626%" y="1077" width="0.0317%" height="15" fill="rgb(222,64,37)" fg:x="9451" fg:w="3"/><text x="100.1126%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="99.8626%" y="1061" width="0.0317%" height="15" fill="rgb(249,184,13)" fg:x="9451" fg:w="3"/><text x="100.1126%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="99.8626%" y="1045" width="0.0317%" height="15" fill="rgb(252,176,6)" fg:x="9451" fg:w="3"/><text x="100.1126%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="99.8943%" y="1093" width="0.0106%" height="15" fill="rgb(228,153,7)" fg:x="9454" fg:w="1"/><text x="100.1443%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="99.8943%" y="1077" width="0.0106%" height="15" fill="rgb(242,193,5)" fg:x="9454" fg:w="1"/><text x="100.1443%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="99.8943%" y="1061" width="0.0106%" height="15" fill="rgb(232,140,9)" fg:x="9454" fg:w="1"/><text x="100.1443%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="99.8943%" y="1045" width="0.0106%" height="15" fill="rgb(213,222,16)" fg:x="9454" fg:w="1"/><text x="100.1443%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="99.9049%" y="1093" width="0.0106%" height="15" fill="rgb(222,75,50)" fg:x="9455" fg:w="1"/><text x="100.1549%" y="1103.50"></text></g><g><title>para (9,459 samples, 99.95%)</title><rect x="0.0000%" y="1125" width="99.9472%" height="15" fill="rgb(205,180,2)" fg:x="0" fg:w="9459"/><text x="0.2500%" y="1135.50">para</text></g><g><title>paranagram::utils::find_sum_rec (11 samples, 0.12%)</title><rect x="99.8309%" y="1109" width="0.1162%" height="15" fill="rgb(216,34,7)" fg:x="9448" fg:w="11"/><text x="100.0809%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9155%" y="1093" width="0.0317%" height="15" fill="rgb(253,16,32)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9155%" y="1077" width="0.0317%" height="15" fill="rgb(208,97,28)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9155%" y="1061" width="0.0317%" height="15" fill="rgb(225,92,11)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.9155%" y="1045" width="0.0317%" height="15" fill="rgb(243,38,12)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9155%" y="1029" width="0.0317%" height="15" fill="rgb(208,139,16)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1039.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.9155%" y="1013" width="0.0317%" height="15" fill="rgb(227,24,9)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9155%" y="997" width="0.0317%" height="15" fill="rgb(206,62,11)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.9155%" y="981" width="0.0317%" height="15" fill="rgb(228,134,27)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="99.9155%" y="965" width="0.0317%" height="15" fill="rgb(205,55,33)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="99.9155%" y="949" width="0.0317%" height="15" fill="rgb(243,75,43)" fg:x="9456" fg:w="3"/><text x="100.1655%" y="959.50"></text></g><g><title>all (9,464 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(223,27,42)" fg:x="0" fg:w="9464"/><text x="0.2500%" y="1151.50"></text></g><g><title>perf-exec (5 samples, 0.05%)</title><rect x="99.9472%" y="1125" width="0.0528%" height="15" fill="rgb(232,189,33)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1109" width="0.0528%" height="15" fill="rgb(210,9,39)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1093" width="0.0528%" height="15" fill="rgb(242,85,26)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1077" width="0.0528%" height="15" fill="rgb(248,44,4)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1061" width="0.0528%" height="15" fill="rgb(250,96,46)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1045" width="0.0528%" height="15" fill="rgb(229,116,26)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1029" width="0.0528%" height="15" fill="rgb(246,94,34)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="1013" width="0.0528%" height="15" fill="rgb(251,73,21)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="997" width="0.0528%" height="15" fill="rgb(254,121,25)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="981" width="0.0528%" height="15" fill="rgb(215,161,49)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="965" width="0.0528%" height="15" fill="rgb(221,43,13)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="949" width="0.0528%" height="15" fill="rgb(249,5,37)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="933" width="0.0528%" height="15" fill="rgb(226,25,44)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="917" width="0.0528%" height="15" fill="rgb(238,189,16)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="901" width="0.0528%" height="15" fill="rgb(251,186,8)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="885" width="0.0528%" height="15" fill="rgb(254,34,31)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="869" width="0.0528%" height="15" fill="rgb(225,215,27)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9472%" y="853" width="0.0528%" height="15" fill="rgb(221,192,48)" fg:x="9459" fg:w="5"/><text x="100.1972%" y="863.50"></text></g></svg></svg>