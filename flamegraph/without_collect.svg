<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1141.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1141.00"> </text><svg id="frames" x="10" width="1180" total_samples="9650"><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="0.0000%" y="1061" width="0.0104%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (30 samples, 0.31%)</title><rect x="0.0104%" y="1061" width="0.3109%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="30"/><text x="0.2604%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (10 samples, 0.10%)</title><rect x="0.2176%" y="1045" width="0.1036%" height="15" fill="rgb(221,193,54)" fg:x="21" fg:w="10"/><text x="0.4676%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.10%)</title><rect x="0.2176%" y="1029" width="0.1036%" height="15" fill="rgb(248,212,6)" fg:x="21" fg:w="10"/><text x="0.4676%" y="1039.50"></text></g><g><title>[[heap]] (33 samples, 0.34%)</title><rect x="0.0000%" y="1077" width="0.3420%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="33"/><text x="0.2500%" y="1087.50"></text></g><g><title>unidecode::unidecode (2 samples, 0.02%)</title><rect x="0.3212%" y="1061" width="0.0207%" height="15" fill="rgb(232,128,0)" fg:x="31" fg:w="2"/><text x="0.5712%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="0.3212%" y="1045" width="0.0207%" height="15" fill="rgb(207,160,47)" fg:x="31" fg:w="2"/><text x="0.5712%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="0.3212%" y="1029" width="0.0207%" height="15" fill="rgb(228,23,34)" fg:x="31" fg:w="2"/><text x="0.5712%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="0.3212%" y="1013" width="0.0207%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="2"/><text x="0.5712%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="0.3212%" y="997" width="0.0207%" height="15" fill="rgb(220,122,19)" fg:x="31" fg:w="2"/><text x="0.5712%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="0.3212%" y="981" width="0.0207%" height="15" fill="rgb(250,228,42)" fg:x="31" fg:w="2"/><text x="0.5712%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="0.3212%" y="965" width="0.0207%" height="15" fill="rgb(240,193,28)" fg:x="31" fg:w="2"/><text x="0.5712%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="0.3212%" y="949" width="0.0207%" height="15" fill="rgb(216,20,37)" fg:x="31" fg:w="2"/><text x="0.5712%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="0.3212%" y="933" width="0.0207%" height="15" fill="rgb(206,188,39)" fg:x="31" fg:w="2"/><text x="0.5712%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (2 samples, 0.02%)</title><rect x="0.3212%" y="917" width="0.0207%" height="15" fill="rgb(217,207,13)" fg:x="31" fg:w="2"/><text x="0.5712%" y="927.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="0.3212%" y="901" width="0.0207%" height="15" fill="rgb(231,73,38)" fg:x="31" fg:w="2"/><text x="0.5712%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="0.3212%" y="885" width="0.0207%" height="15" fill="rgb(225,20,46)" fg:x="31" fg:w="2"/><text x="0.5712%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="0.3212%" y="869" width="0.0207%" height="15" fill="rgb(210,31,41)" fg:x="31" fg:w="2"/><text x="0.5712%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="0.3212%" y="853" width="0.0207%" height="15" fill="rgb(221,200,47)" fg:x="31" fg:w="2"/><text x="0.5712%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="0.3212%" y="837" width="0.0207%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="2"/><text x="0.5712%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="0.3420%" y="1061" width="0.0311%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="3"/><text x="0.5920%" y="1071.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="0.3731%" y="1061" width="0.0415%" height="15" fill="rgb(235,183,28)" fg:x="36" fg:w="4"/><text x="0.6231%" y="1071.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="0.4145%" y="1061" width="0.0104%" height="15" fill="rgb(221,5,38)" fg:x="40" fg:w="1"/><text x="0.6645%" y="1071.50"></text></g><g><title>__memset_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="0.4249%" y="1061" width="0.0104%" height="15" fill="rgb(247,18,42)" fg:x="41" fg:w="1"/><text x="0.6749%" y="1071.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="0.4352%" y="1061" width="0.0207%" height="15" fill="rgb(241,131,45)" fg:x="42" fg:w="2"/><text x="0.6852%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="0.4560%" y="1061" width="0.0104%" height="15" fill="rgb(249,31,29)" fg:x="44" fg:w="1"/><text x="0.7060%" y="1071.50"></text></g><g><title>paranagram::Paranagram::new::{{closure}} (1 samples, 0.01%)</title><rect x="0.4560%" y="1045" width="0.0104%" height="15" fill="rgb(225,111,53)" fg:x="44" fg:w="1"/><text x="0.7060%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::Paranagram&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="1061" width="0.0104%" height="15" fill="rgb(238,160,17)" fg:x="45" fg:w="1"/><text x="0.7163%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;paranagram::word::Word&gt;&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="1045" width="0.0104%" height="15" fill="rgb(214,148,48)" fg:x="45" fg:w="1"/><text x="0.7163%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.4663%" y="1029" width="0.0104%" height="15" fill="rgb(232,36,49)" fg:x="45" fg:w="1"/><text x="0.7163%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[paranagram::word::Word]&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="1013" width="0.0104%" height="15" fill="rgb(209,103,24)" fg:x="45" fg:w="1"/><text x="0.7163%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::word::Word&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="997" width="0.0104%" height="15" fill="rgb(229,88,8)" fg:x="45" fg:w="1"/><text x="0.7163%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="981" width="0.0104%" height="15" fill="rgb(213,181,19)" fg:x="45" fg:w="1"/><text x="0.7163%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="965" width="0.0104%" height="15" fill="rgb(254,191,54)" fg:x="45" fg:w="1"/><text x="0.7163%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="0.4663%" y="949" width="0.0104%" height="15" fill="rgb(241,83,37)" fg:x="45" fg:w="1"/><text x="0.7163%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.4663%" y="933" width="0.0104%" height="15" fill="rgb(233,36,39)" fg:x="45" fg:w="1"/><text x="0.7163%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="0.4663%" y="917" width="0.0104%" height="15" fill="rgb(226,3,54)" fg:x="45" fg:w="1"/><text x="0.7163%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="0.4663%" y="901" width="0.0104%" height="15" fill="rgb(245,192,40)" fg:x="45" fg:w="1"/><text x="0.7163%" y="911.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="0.4870%" y="1045" width="0.0104%" height="15" fill="rgb(238,167,29)" fg:x="47" fg:w="1"/><text x="0.7370%" y="1055.50"></text></g><g><title>[[stack]] (16 samples, 0.17%)</title><rect x="0.3420%" y="1077" width="0.1658%" height="15" fill="rgb(232,182,51)" fg:x="33" fg:w="16"/><text x="0.5920%" y="1087.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (3 samples, 0.03%)</title><rect x="0.4767%" y="1061" width="0.0311%" height="15" fill="rgb(231,60,39)" fg:x="46" fg:w="3"/><text x="0.7267%" y="1071.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (1 samples, 0.01%)</title><rect x="0.4974%" y="1045" width="0.0104%" height="15" fill="rgb(208,69,12)" fg:x="48" fg:w="1"/><text x="0.7474%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="0.5078%" y="1061" width="0.0415%" height="15" fill="rgb(235,93,37)" fg:x="49" fg:w="4"/><text x="0.7578%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="0.5285%" y="1045" width="0.0207%" height="15" fill="rgb(213,116,39)" fg:x="51" fg:w="2"/><text x="0.7785%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="0.5285%" y="1029" width="0.0207%" height="15" fill="rgb(222,207,29)" fg:x="51" fg:w="2"/><text x="0.7785%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.5285%" y="1013" width="0.0207%" height="15" fill="rgb(206,96,30)" fg:x="51" fg:w="2"/><text x="0.7785%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.5285%" y="997" width="0.0207%" height="15" fill="rgb(218,138,4)" fg:x="51" fg:w="2"/><text x="0.7785%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="0.5285%" y="981" width="0.0207%" height="15" fill="rgb(250,191,14)" fg:x="51" fg:w="2"/><text x="0.7785%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="0.5285%" y="965" width="0.0207%" height="15" fill="rgb(239,60,40)" fg:x="51" fg:w="2"/><text x="0.7785%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="0.5285%" y="949" width="0.0207%" height="15" fill="rgb(206,27,48)" fg:x="51" fg:w="2"/><text x="0.7785%" y="959.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="0.5285%" y="933" width="0.0207%" height="15" fill="rgb(225,35,8)" fg:x="51" fg:w="2"/><text x="0.7785%" y="943.50"></text></g><g><title>[para] (1 samples, 0.01%)</title><rect x="0.5492%" y="1061" width="0.0104%" height="15" fill="rgb(250,213,24)" fg:x="53" fg:w="1"/><text x="0.7992%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.5492%" y="1045" width="0.0104%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="1"/><text x="0.7992%" y="1055.50"></text></g><g><title>__GI___libc_free (11 samples, 0.11%)</title><rect x="0.5596%" y="1061" width="0.1140%" height="15" fill="rgb(231,138,38)" fg:x="54" fg:w="11"/><text x="0.8096%" y="1071.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.15%)</title><rect x="0.6736%" y="1061" width="0.1451%" height="15" fill="rgb(231,145,46)" fg:x="65" fg:w="14"/><text x="0.9236%" y="1071.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.17%)</title><rect x="0.8187%" y="1061" width="0.1658%" height="15" fill="rgb(251,118,11)" fg:x="79" fg:w="16"/><text x="1.0687%" y="1071.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12 samples, 0.12%)</title><rect x="0.9845%" y="1061" width="0.1244%" height="15" fill="rgb(217,147,25)" fg:x="95" fg:w="12"/><text x="1.2345%" y="1071.50"></text></g><g><title>__rdl_realloc (6 samples, 0.06%)</title><rect x="1.1088%" y="1061" width="0.0622%" height="15" fill="rgb(247,81,37)" fg:x="107" fg:w="6"/><text x="1.3588%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.06%)</title><rect x="1.1088%" y="1045" width="0.0622%" height="15" fill="rgb(209,12,38)" fg:x="107" fg:w="6"/><text x="1.3588%" y="1055.50"></text></g><g><title>_int_free (24 samples, 0.25%)</title><rect x="1.1710%" y="1061" width="0.2487%" height="15" fill="rgb(227,1,9)" fg:x="113" fg:w="24"/><text x="1.4210%" y="1071.50"></text></g><g><title>_int_malloc (13 samples, 0.13%)</title><rect x="1.4197%" y="1061" width="0.1347%" height="15" fill="rgb(248,47,43)" fg:x="137" fg:w="13"/><text x="1.6697%" y="1071.50"></text></g><g><title>_int_realloc (10 samples, 0.10%)</title><rect x="1.5544%" y="1061" width="0.1036%" height="15" fill="rgb(221,10,30)" fg:x="150" fg:w="10"/><text x="1.8044%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.23%)</title><rect x="1.6580%" y="1061" width="0.2280%" height="15" fill="rgb(210,229,1)" fg:x="160" fg:w="22"/><text x="1.9080%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.09%)</title><rect x="1.7927%" y="1045" width="0.0933%" height="15" fill="rgb(222,148,37)" fg:x="173" fg:w="9"/><text x="2.0427%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.10%)</title><rect x="1.8860%" y="1061" width="0.1036%" height="15" fill="rgb(234,67,33)" fg:x="182" fg:w="10"/><text x="2.1360%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.07%)</title><rect x="1.9171%" y="1045" width="0.0725%" height="15" fill="rgb(247,98,35)" fg:x="185" fg:w="7"/><text x="2.1671%" y="1055.50"></text></g><g><title>paranagram::utils::find_sum_rec (16 samples, 0.17%)</title><rect x="1.9896%" y="1061" width="0.1658%" height="15" fill="rgb(247,138,52)" fg:x="192" fg:w="16"/><text x="2.2396%" y="1071.50"></text></g><g><title>[anon] (161 samples, 1.67%)</title><rect x="0.5078%" y="1077" width="1.6684%" height="15" fill="rgb(213,79,30)" fg:x="49" fg:w="161"/><text x="0.7578%" y="1087.50"></text></g><g><title>unlink_chunk (2 samples, 0.02%)</title><rect x="2.1554%" y="1061" width="0.0207%" height="15" fill="rgb(246,177,23)" fg:x="208" fg:w="2"/><text x="2.4054%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="2.1762%" y="1061" width="0.0415%" height="15" fill="rgb(230,62,27)" fg:x="210" fg:w="4"/><text x="2.4262%" y="1071.50"></text></g><g><title>__GI___libc_free (8 samples, 0.08%)</title><rect x="2.2176%" y="1061" width="0.0829%" height="15" fill="rgb(216,154,8)" fg:x="214" fg:w="8"/><text x="2.4676%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (5 samples, 0.05%)</title><rect x="2.3005%" y="1061" width="0.0518%" height="15" fill="rgb(244,35,45)" fg:x="222" fg:w="5"/><text x="2.5505%" y="1071.50"></text></g><g><title>[libc.so.6] (82 samples, 0.85%)</title><rect x="2.1762%" y="1077" width="0.8497%" height="15" fill="rgb(251,115,12)" fg:x="210" fg:w="82"/><text x="2.4262%" y="1087.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (65 samples, 0.67%)</title><rect x="2.3523%" y="1061" width="0.6736%" height="15" fill="rgb(240,54,50)" fg:x="227" fg:w="65"/><text x="2.6023%" y="1071.50"></text></g><g><title>[para] (2 samples, 0.02%)</title><rect x="3.0259%" y="1077" width="0.0207%" height="15" fill="rgb(233,84,52)" fg:x="292" fg:w="2"/><text x="3.2759%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="3.0259%" y="1061" width="0.0207%" height="15" fill="rgb(207,117,47)" fg:x="292" fg:w="2"/><text x="3.2759%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="3.7409%" y="1061" width="0.0104%" height="15" fill="rgb(249,43,39)" fg:x="361" fg:w="1"/><text x="3.9909%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="3.7513%" y="1061" width="0.0104%" height="15" fill="rgb(209,38,44)" fg:x="362" fg:w="1"/><text x="4.0013%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="3.7513%" y="1045" width="0.0104%" height="15" fill="rgb(236,212,23)" fg:x="362" fg:w="1"/><text x="4.0013%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="3.7513%" y="1029" width="0.0104%" height="15" fill="rgb(242,79,21)" fg:x="362" fg:w="1"/><text x="4.0013%" y="1039.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.01%)</title><rect x="3.7513%" y="1013" width="0.0104%" height="15" fill="rgb(211,96,35)" fg:x="362" fg:w="1"/><text x="4.0013%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="3.7513%" y="997" width="0.0104%" height="15" fill="rgb(253,215,40)" fg:x="362" fg:w="1"/><text x="4.0013%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="3.7513%" y="981" width="0.0104%" height="15" fill="rgb(211,81,21)" fg:x="362" fg:w="1"/><text x="4.0013%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1 samples, 0.01%)</title><rect x="3.7513%" y="965" width="0.0104%" height="15" fill="rgb(208,190,38)" fg:x="362" fg:w="1"/><text x="4.0013%" y="975.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.01%)</title><rect x="3.7513%" y="949" width="0.0104%" height="15" fill="rgb(235,213,38)" fg:x="362" fg:w="1"/><text x="4.0013%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="3.7513%" y="933" width="0.0104%" height="15" fill="rgb(237,122,38)" fg:x="362" fg:w="1"/><text x="4.0013%" y="943.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (5 samples, 0.05%)</title><rect x="3.7617%" y="933" width="0.0518%" height="15" fill="rgb(244,218,35)" fg:x="363" fg:w="5"/><text x="4.0117%" y="943.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.05%)</title><rect x="3.7617%" y="917" width="0.0518%" height="15" fill="rgb(240,68,47)" fg:x="363" fg:w="5"/><text x="4.0117%" y="927.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.05%)</title><rect x="3.7617%" y="901" width="0.0518%" height="15" fill="rgb(210,16,53)" fg:x="363" fg:w="5"/><text x="4.0117%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.42%)</title><rect x="3.7617%" y="981" width="0.4249%" height="15" fill="rgb(235,124,12)" fg:x="363" fg:w="41"/><text x="4.0117%" y="991.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}}::{{closure}} (41 samples, 0.42%)</title><rect x="3.7617%" y="965" width="0.4249%" height="15" fill="rgb(224,169,11)" fg:x="363" fg:w="41"/><text x="4.0117%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::merge (41 samples, 0.42%)</title><rect x="3.7617%" y="949" width="0.4249%" height="15" fill="rgb(250,166,2)" fg:x="363" fg:w="41"/><text x="4.0117%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (36 samples, 0.37%)</title><rect x="3.8135%" y="933" width="0.3731%" height="15" fill="rgb(242,216,29)" fg:x="368" fg:w="36"/><text x="4.0635%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="4.1865%" y="981" width="0.0104%" height="15" fill="rgb(230,116,27)" fg:x="404" fg:w="1"/><text x="4.4365%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="4.1865%" y="965" width="0.0104%" height="15" fill="rgb(228,99,48)" fg:x="404" fg:w="1"/><text x="4.4365%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="4.1865%" y="949" width="0.0104%" height="15" fill="rgb(253,11,6)" fg:x="404" fg:w="1"/><text x="4.4365%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="4.1865%" y="933" width="0.0104%" height="15" fill="rgb(247,143,39)" fg:x="404" fg:w="1"/><text x="4.4365%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.01%)</title><rect x="4.1865%" y="917" width="0.0104%" height="15" fill="rgb(236,97,10)" fg:x="404" fg:w="1"/><text x="4.4365%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1 samples, 0.01%)</title><rect x="4.1865%" y="901" width="0.0104%" height="15" fill="rgb(233,208,19)" fg:x="404" fg:w="1"/><text x="4.4365%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="4.1865%" y="885" width="0.0104%" height="15" fill="rgb(216,164,2)" fg:x="404" fg:w="1"/><text x="4.4365%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt; (1 samples, 0.01%)</title><rect x="4.1969%" y="981" width="0.0104%" height="15" fill="rgb(220,129,5)" fg:x="405" fg:w="1"/><text x="4.4469%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::Word&gt;&gt; (1 samples, 0.01%)</title><rect x="4.1969%" y="965" width="0.0104%" height="15" fill="rgb(242,17,10)" fg:x="405" fg:w="1"/><text x="4.4469%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="4.1969%" y="949" width="0.0104%" height="15" fill="rgb(242,107,0)" fg:x="405" fg:w="1"/><text x="4.4469%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="4.1969%" y="933" width="0.0104%" height="15" fill="rgb(251,28,31)" fg:x="405" fg:w="1"/><text x="4.4469%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="4.1969%" y="917" width="0.0104%" height="15" fill="rgb(233,223,10)" fg:x="405" fg:w="1"/><text x="4.4469%" y="927.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (47 samples, 0.49%)</title><rect x="3.7617%" y="1013" width="0.4870%" height="15" fill="rgb(215,21,27)" fg:x="363" fg:w="47"/><text x="4.0117%" y="1023.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (47 samples, 0.49%)</title><rect x="3.7617%" y="997" width="0.4870%" height="15" fill="rgb(232,23,21)" fg:x="363" fg:w="47"/><text x="4.0117%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (4 samples, 0.04%)</title><rect x="4.2073%" y="981" width="0.0415%" height="15" fill="rgb(244,5,23)" fg:x="406" fg:w="4"/><text x="4.4573%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.04%)</title><rect x="4.2073%" y="965" width="0.0415%" height="15" fill="rgb(226,81,46)" fg:x="406" fg:w="4"/><text x="4.4573%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (4 samples, 0.04%)</title><rect x="4.2073%" y="949" width="0.0415%" height="15" fill="rgb(247,70,30)" fg:x="406" fg:w="4"/><text x="4.4573%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="4.2073%" y="933" width="0.0415%" height="15" fill="rgb(212,68,19)" fg:x="406" fg:w="4"/><text x="4.4573%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 0.04%)</title><rect x="4.2073%" y="917" width="0.0415%" height="15" fill="rgb(240,187,13)" fg:x="406" fg:w="4"/><text x="4.4573%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.04%)</title><rect x="4.2073%" y="901" width="0.0415%" height="15" fill="rgb(223,113,26)" fg:x="406" fg:w="4"/><text x="4.4573%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="4.2073%" y="885" width="0.0415%" height="15" fill="rgb(206,192,2)" fg:x="406" fg:w="4"/><text x="4.4573%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="4.2073%" y="869" width="0.0415%" height="15" fill="rgb(241,108,4)" fg:x="406" fg:w="4"/><text x="4.4573%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="4.2487%" y="981" width="0.0104%" height="15" fill="rgb(247,173,49)" fg:x="410" fg:w="1"/><text x="4.4987%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="4.2487%" y="965" width="0.0104%" height="15" fill="rgb(224,114,35)" fg:x="410" fg:w="1"/><text x="4.4987%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 0.52%)</title><rect x="3.7617%" y="1061" width="0.5181%" height="15" fill="rgb(245,159,27)" fg:x="363" fg:w="50"/><text x="4.0117%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50 samples, 0.52%)</title><rect x="3.7617%" y="1045" width="0.5181%" height="15" fill="rgb(245,172,44)" fg:x="363" fg:w="50"/><text x="4.0117%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (50 samples, 0.52%)</title><rect x="3.7617%" y="1029" width="0.5181%" height="15" fill="rgb(236,23,11)" fg:x="363" fg:w="50"/><text x="4.0117%" y="1039.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (3 samples, 0.03%)</title><rect x="4.2487%" y="1013" width="0.0311%" height="15" fill="rgb(205,117,38)" fg:x="410" fg:w="3"/><text x="4.4987%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::utils::FromTupleIndex&gt;::from_tuple_index (3 samples, 0.03%)</title><rect x="4.2487%" y="997" width="0.0311%" height="15" fill="rgb(237,72,25)" fg:x="410" fg:w="3"/><text x="4.4987%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (2 samples, 0.02%)</title><rect x="4.2591%" y="981" width="0.0207%" height="15" fill="rgb(244,70,9)" fg:x="411" fg:w="2"/><text x="4.5091%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (2 samples, 0.02%)</title><rect x="4.2591%" y="965" width="0.0207%" height="15" fill="rgb(217,125,39)" fg:x="411" fg:w="2"/><text x="4.5091%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.2591%" y="949" width="0.0207%" height="15" fill="rgb(235,36,10)" fg:x="411" fg:w="2"/><text x="4.5091%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="4.2591%" y="933" width="0.0207%" height="15" fill="rgb(251,123,47)" fg:x="411" fg:w="2"/><text x="4.5091%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="4.2591%" y="917" width="0.0207%" height="15" fill="rgb(221,13,13)" fg:x="411" fg:w="2"/><text x="4.5091%" y="927.50"></text></g><g><title>[unknown] (2,450 samples, 25.39%)</title><rect x="4.2798%" y="1061" width="25.3886%" height="15" fill="rgb(238,131,9)" fg:x="413" fg:w="2450"/><text x="4.5298%" y="1071.50">[unknown]</text></g><g><title>[unknown] (2,440 samples, 25.28%)</title><rect x="4.3834%" y="1045" width="25.2850%" height="15" fill="rgb(211,50,8)" fg:x="423" fg:w="2440"/><text x="4.6334%" y="1055.50">[unknown]</text></g><g><title>[unknown] (2,376 samples, 24.62%)</title><rect x="5.0466%" y="1029" width="24.6218%" height="15" fill="rgb(245,182,24)" fg:x="487" fg:w="2376"/><text x="5.2966%" y="1039.50">[unknown]</text></g><g><title>[unknown] (2,313 samples, 23.97%)</title><rect x="5.6995%" y="1013" width="23.9689%" height="15" fill="rgb(242,14,37)" fg:x="550" fg:w="2313"/><text x="5.9495%" y="1023.50">[unknown]</text></g><g><title>[unknown] (2,293 samples, 23.76%)</title><rect x="5.9067%" y="997" width="23.7617%" height="15" fill="rgb(246,228,12)" fg:x="570" fg:w="2293"/><text x="6.1567%" y="1007.50">[unknown]</text></g><g><title>[unknown] (2,276 samples, 23.59%)</title><rect x="6.0829%" y="981" width="23.5855%" height="15" fill="rgb(213,55,15)" fg:x="587" fg:w="2276"/><text x="6.3329%" y="991.50">[unknown]</text></g><g><title>[unknown] (2,263 samples, 23.45%)</title><rect x="6.2176%" y="965" width="23.4508%" height="15" fill="rgb(209,9,3)" fg:x="600" fg:w="2263"/><text x="6.4676%" y="975.50">[unknown]</text></g><g><title>[unknown] (58 samples, 0.60%)</title><rect x="29.0674%" y="949" width="0.6010%" height="15" fill="rgb(230,59,30)" fg:x="2805" fg:w="58"/><text x="29.3174%" y="959.50"></text></g><g><title>[unknown] (49 samples, 0.51%)</title><rect x="29.1606%" y="933" width="0.5078%" height="15" fill="rgb(209,121,21)" fg:x="2814" fg:w="49"/><text x="29.4106%" y="943.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="29.2228%" y="917" width="0.4456%" height="15" fill="rgb(220,109,13)" fg:x="2820" fg:w="43"/><text x="29.4728%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.40%)</title><rect x="29.2642%" y="901" width="0.4041%" height="15" fill="rgb(232,18,1)" fg:x="2824" fg:w="39"/><text x="29.5142%" y="911.50"></text></g><g><title>[unknown] (35 samples, 0.36%)</title><rect x="29.3057%" y="885" width="0.3627%" height="15" fill="rgb(215,41,42)" fg:x="2828" fg:w="35"/><text x="29.5557%" y="895.50"></text></g><g><title>[unknown] (35 samples, 0.36%)</title><rect x="29.3057%" y="869" width="0.3627%" height="15" fill="rgb(224,123,36)" fg:x="2828" fg:w="35"/><text x="29.5557%" y="879.50"></text></g><g><title>[unknown] (32 samples, 0.33%)</title><rect x="29.3368%" y="853" width="0.3316%" height="15" fill="rgb(240,125,3)" fg:x="2831" fg:w="32"/><text x="29.5868%" y="863.50"></text></g><g><title>[unknown] (28 samples, 0.29%)</title><rect x="29.3782%" y="837" width="0.2902%" height="15" fill="rgb(205,98,50)" fg:x="2835" fg:w="28"/><text x="29.6282%" y="847.50"></text></g><g><title>[unknown] (27 samples, 0.28%)</title><rect x="29.3886%" y="821" width="0.2798%" height="15" fill="rgb(205,185,37)" fg:x="2836" fg:w="27"/><text x="29.6386%" y="831.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="29.4404%" y="805" width="0.2280%" height="15" fill="rgb(238,207,15)" fg:x="2841" fg:w="22"/><text x="29.6904%" y="815.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="29.4922%" y="789" width="0.1762%" height="15" fill="rgb(213,199,42)" fg:x="2846" fg:w="17"/><text x="29.7422%" y="799.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="29.5544%" y="773" width="0.1140%" height="15" fill="rgb(235,201,11)" fg:x="2852" fg:w="11"/><text x="29.8044%" y="783.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="29.5648%" y="757" width="0.1036%" height="15" fill="rgb(207,46,11)" fg:x="2853" fg:w="10"/><text x="29.8148%" y="767.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="29.5855%" y="741" width="0.0829%" height="15" fill="rgb(241,35,35)" fg:x="2855" fg:w="8"/><text x="29.8355%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="29.6580%" y="725" width="0.0104%" height="15" fill="rgb(243,32,47)" fg:x="2862" fg:w="1"/><text x="29.9080%" y="735.50"></text></g><g><title>__GI___libc_free (17 samples, 0.18%)</title><rect x="29.6684%" y="1061" width="0.1762%" height="15" fill="rgb(247,202,23)" fg:x="2863" fg:w="17"/><text x="29.9184%" y="1071.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="29.8446%" y="1061" width="0.0415%" height="15" fill="rgb(219,102,11)" fg:x="2880" fg:w="4"/><text x="30.0946%" y="1071.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.10%)</title><rect x="29.8860%" y="1061" width="0.1036%" height="15" fill="rgb(243,110,44)" fg:x="2884" fg:w="10"/><text x="30.1360%" y="1071.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="29.9793%" y="1045" width="0.0104%" height="15" fill="rgb(222,74,54)" fg:x="2893" fg:w="1"/><text x="30.2293%" y="1055.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="29.9793%" y="1029" width="0.0104%" height="15" fill="rgb(216,99,12)" fg:x="2893" fg:w="1"/><text x="30.2293%" y="1039.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="29.9793%" y="1013" width="0.0104%" height="15" fill="rgb(226,22,26)" fg:x="2893" fg:w="1"/><text x="30.2293%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="29.9793%" y="997" width="0.0104%" height="15" fill="rgb(217,163,10)" fg:x="2893" fg:w="1"/><text x="30.2293%" y="1007.50"></text></g><g><title>__GI__dl_allocate_tls (1 samples, 0.01%)</title><rect x="29.9896%" y="1061" width="0.0104%" height="15" fill="rgb(213,25,53)" fg:x="2894" fg:w="1"/><text x="30.2396%" y="1071.50"></text></g><g><title>__GI__dl_allocate_tls_init (1 samples, 0.01%)</title><rect x="29.9896%" y="1045" width="0.0104%" height="15" fill="rgb(252,105,26)" fg:x="2894" fg:w="1"/><text x="30.2396%" y="1055.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.01%)</title><rect x="30.0000%" y="1061" width="0.0104%" height="15" fill="rgb(220,39,43)" fg:x="2895" fg:w="1"/><text x="30.2500%" y="1071.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="30.0104%" y="1061" width="0.0518%" height="15" fill="rgb(229,68,48)" fg:x="2896" fg:w="5"/><text x="30.2604%" y="1071.50"></text></g><g><title>__memset_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="30.0622%" y="1061" width="0.0104%" height="15" fill="rgb(252,8,32)" fg:x="2901" fg:w="1"/><text x="30.3122%" y="1071.50"></text></g><g><title>__rdl_realloc (4 samples, 0.04%)</title><rect x="30.0725%" y="1061" width="0.0415%" height="15" fill="rgb(223,20,43)" fg:x="2902" fg:w="4"/><text x="30.3225%" y="1071.50"></text></g><g><title>_int_free (73 samples, 0.76%)</title><rect x="30.1140%" y="1061" width="0.7565%" height="15" fill="rgb(229,81,49)" fg:x="2906" fg:w="73"/><text x="30.3640%" y="1071.50"></text></g><g><title>_int_malloc (20 samples, 0.21%)</title><rect x="30.8705%" y="1061" width="0.2073%" height="15" fill="rgb(236,28,36)" fg:x="2979" fg:w="20"/><text x="31.1205%" y="1071.50"></text></g><g><title>_int_realloc (47 samples, 0.49%)</title><rect x="31.0777%" y="1061" width="0.4870%" height="15" fill="rgb(249,185,26)" fg:x="2999" fg:w="47"/><text x="31.3277%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="31.5648%" y="1061" width="0.0622%" height="15" fill="rgb(249,174,33)" fg:x="3046" fg:w="6"/><text x="31.8148%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.05%)</title><rect x="31.5751%" y="1045" width="0.0518%" height="15" fill="rgb(233,201,37)" fg:x="3047" fg:w="5"/><text x="31.8251%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.05%)</title><rect x="31.5751%" y="1029" width="0.0518%" height="15" fill="rgb(221,78,26)" fg:x="3047" fg:w="5"/><text x="31.8251%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.05%)</title><rect x="31.5751%" y="1013" width="0.0518%" height="15" fill="rgb(250,127,30)" fg:x="3047" fg:w="5"/><text x="31.8251%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.24%)</title><rect x="31.6269%" y="1061" width="0.2383%" height="15" fill="rgb(230,49,44)" fg:x="3052" fg:w="23"/><text x="31.8769%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.12%)</title><rect x="31.7409%" y="1045" width="0.1244%" height="15" fill="rgb(229,67,23)" fg:x="3063" fg:w="12"/><text x="31.9909%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.12%)</title><rect x="31.7409%" y="1029" width="0.1244%" height="15" fill="rgb(249,83,47)" fg:x="3063" fg:w="12"/><text x="31.9909%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.12%)</title><rect x="31.7409%" y="1013" width="0.1244%" height="15" fill="rgb(215,43,3)" fg:x="3063" fg:w="12"/><text x="31.9909%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.01%)</title><rect x="31.8653%" y="1061" width="0.0104%" height="15" fill="rgb(238,154,13)" fg:x="3075" fg:w="1"/><text x="32.1153%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.01%)</title><rect x="31.8653%" y="1045" width="0.0104%" height="15" fill="rgb(219,56,2)" fg:x="3075" fg:w="1"/><text x="32.1153%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="32.0622%" y="1013" width="0.0207%" height="15" fill="rgb(233,0,4)" fg:x="3094" fg:w="2"/><text x="32.3122%" y="1023.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.0622%" y="997" width="0.0207%" height="15" fill="rgb(235,30,7)" fg:x="3094" fg:w="2"/><text x="32.3122%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (2 samples, 0.02%)</title><rect x="32.0622%" y="981" width="0.0207%" height="15" fill="rgb(250,79,13)" fg:x="3094" fg:w="2"/><text x="32.3122%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.02%)</title><rect x="32.0622%" y="965" width="0.0207%" height="15" fill="rgb(211,146,34)" fg:x="3094" fg:w="2"/><text x="32.3122%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="32.0622%" y="949" width="0.0207%" height="15" fill="rgb(228,22,38)" fg:x="3094" fg:w="2"/><text x="32.3122%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="32.0622%" y="933" width="0.0207%" height="15" fill="rgb(235,168,5)" fg:x="3094" fg:w="2"/><text x="32.3122%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.03%)</title><rect x="32.0829%" y="981" width="0.0311%" height="15" fill="rgb(221,155,16)" fg:x="3096" fg:w="3"/><text x="32.3329%" y="991.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.03%)</title><rect x="32.0829%" y="965" width="0.0311%" height="15" fill="rgb(215,215,53)" fg:x="3096" fg:w="3"/><text x="32.3329%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (25 samples, 0.26%)</title><rect x="31.8756%" y="1061" width="0.2591%" height="15" fill="rgb(223,4,10)" fg:x="3076" fg:w="25"/><text x="32.1256%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (12 samples, 0.12%)</title><rect x="32.0104%" y="1045" width="0.1244%" height="15" fill="rgb(234,103,6)" fg:x="3089" fg:w="12"/><text x="32.2604%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (7 samples, 0.07%)</title><rect x="32.0622%" y="1029" width="0.0725%" height="15" fill="rgb(227,97,0)" fg:x="3094" fg:w="7"/><text x="32.3122%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (5 samples, 0.05%)</title><rect x="32.0829%" y="1013" width="0.0518%" height="15" fill="rgb(234,150,53)" fg:x="3096" fg:w="5"/><text x="32.3329%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (5 samples, 0.05%)</title><rect x="32.0829%" y="997" width="0.0518%" height="15" fill="rgb(228,201,54)" fg:x="3096" fg:w="5"/><text x="32.3329%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="32.1140%" y="981" width="0.0207%" height="15" fill="rgb(222,22,37)" fg:x="3099" fg:w="2"/><text x="32.3640%" y="991.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="32.1140%" y="965" width="0.0207%" height="15" fill="rgb(237,53,32)" fg:x="3099" fg:w="2"/><text x="32.3640%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="32.1140%" y="949" width="0.0207%" height="15" fill="rgb(233,25,53)" fg:x="3099" fg:w="2"/><text x="32.3640%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="32.1140%" y="933" width="0.0207%" height="15" fill="rgb(210,40,34)" fg:x="3099" fg:w="2"/><text x="32.3640%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="32.1140%" y="917" width="0.0207%" height="15" fill="rgb(241,220,44)" fg:x="3099" fg:w="2"/><text x="32.3640%" y="927.50"></text></g><g><title>malloc_consolidate (5 samples, 0.05%)</title><rect x="32.1347%" y="1061" width="0.0518%" height="15" fill="rgb(235,28,35)" fg:x="3101" fg:w="5"/><text x="32.3847%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.07%)</title><rect x="32.2694%" y="949" width="0.0725%" height="15" fill="rgb(210,56,17)" fg:x="3114" fg:w="7"/><text x="32.5194%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.07%)</title><rect x="32.2694%" y="933" width="0.0725%" height="15" fill="rgb(224,130,29)" fg:x="3114" fg:w="7"/><text x="32.5194%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.07%)</title><rect x="32.2694%" y="917" width="0.0725%" height="15" fill="rgb(235,212,8)" fg:x="3114" fg:w="7"/><text x="32.5194%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.07%)</title><rect x="32.2694%" y="901" width="0.0725%" height="15" fill="rgb(223,33,50)" fg:x="3114" fg:w="7"/><text x="32.5194%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.07%)</title><rect x="32.2694%" y="885" width="0.0725%" height="15" fill="rgb(219,149,13)" fg:x="3114" fg:w="7"/><text x="32.5194%" y="895.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.07%)</title><rect x="32.2694%" y="869" width="0.0725%" height="15" fill="rgb(250,156,29)" fg:x="3114" fg:w="7"/><text x="32.5194%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.11%)</title><rect x="32.2694%" y="1045" width="0.1140%" height="15" fill="rgb(216,193,19)" fg:x="3114" fg:w="11"/><text x="32.5194%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (11 samples, 0.11%)</title><rect x="32.2694%" y="1029" width="0.1140%" height="15" fill="rgb(216,135,14)" fg:x="3114" fg:w="11"/><text x="32.5194%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.11%)</title><rect x="32.2694%" y="1013" width="0.1140%" height="15" fill="rgb(241,47,5)" fg:x="3114" fg:w="11"/><text x="32.5194%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.11%)</title><rect x="32.2694%" y="997" width="0.1140%" height="15" fill="rgb(233,42,35)" fg:x="3114" fg:w="11"/><text x="32.5194%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.11%)</title><rect x="32.2694%" y="981" width="0.1140%" height="15" fill="rgb(231,13,6)" fg:x="3114" fg:w="11"/><text x="32.5194%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.11%)</title><rect x="32.2694%" y="965" width="0.1140%" height="15" fill="rgb(207,181,40)" fg:x="3114" fg:w="11"/><text x="32.5194%" y="975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.04%)</title><rect x="32.3420%" y="949" width="0.0415%" height="15" fill="rgb(254,173,49)" fg:x="3121" fg:w="4"/><text x="32.5920%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="32.3420%" y="933" width="0.0415%" height="15" fill="rgb(221,1,38)" fg:x="3121" fg:w="4"/><text x="32.5920%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.08%)</title><rect x="32.3834%" y="1045" width="0.0829%" height="15" fill="rgb(206,124,46)" fg:x="3125" fg:w="8"/><text x="32.6334%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.08%)</title><rect x="32.3834%" y="1029" width="0.0829%" height="15" fill="rgb(249,21,11)" fg:x="3125" fg:w="8"/><text x="32.6334%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.08%)</title><rect x="32.3834%" y="1013" width="0.0829%" height="15" fill="rgb(222,201,40)" fg:x="3125" fg:w="8"/><text x="32.6334%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.08%)</title><rect x="32.3834%" y="997" width="0.0829%" height="15" fill="rgb(235,61,29)" fg:x="3125" fg:w="8"/><text x="32.6334%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.12%)</title><rect x="32.4663%" y="997" width="0.1244%" height="15" fill="rgb(219,207,3)" fg:x="3133" fg:w="12"/><text x="32.7163%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.12%)</title><rect x="32.4663%" y="981" width="0.1244%" height="15" fill="rgb(222,56,46)" fg:x="3133" fg:w="12"/><text x="32.7163%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.19%)</title><rect x="32.4663%" y="1045" width="0.1865%" height="15" fill="rgb(239,76,54)" fg:x="3133" fg:w="18"/><text x="32.7163%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.19%)</title><rect x="32.4663%" y="1029" width="0.1865%" height="15" fill="rgb(231,124,27)" fg:x="3133" fg:w="18"/><text x="32.7163%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.19%)</title><rect x="32.4663%" y="1013" width="0.1865%" height="15" fill="rgb(249,195,6)" fg:x="3133" fg:w="18"/><text x="32.7163%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="32.5907%" y="997" width="0.0622%" height="15" fill="rgb(237,174,47)" fg:x="3145" fg:w="6"/><text x="32.8407%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.05%)</title><rect x="32.6528%" y="1045" width="0.0518%" height="15" fill="rgb(206,201,31)" fg:x="3151" fg:w="5"/><text x="32.9028%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="32.7047%" y="1013" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="3156" fg:w="1"/><text x="32.9547%" y="1023.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (1 samples, 0.01%)</title><rect x="32.7047%" y="997" width="0.0104%" height="15" fill="rgb(248,177,22)" fg:x="3156" fg:w="1"/><text x="32.9547%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="32.7047%" y="981" width="0.0104%" height="15" fill="rgb(215,211,37)" fg:x="3156" fg:w="1"/><text x="32.9547%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.05%)</title><rect x="32.7047%" y="1045" width="0.0518%" height="15" fill="rgb(241,128,51)" fg:x="3156" fg:w="5"/><text x="32.9547%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.05%)</title><rect x="32.7047%" y="1029" width="0.0518%" height="15" fill="rgb(227,165,31)" fg:x="3156" fg:w="5"/><text x="32.9547%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="32.7150%" y="1013" width="0.0415%" height="15" fill="rgb(228,167,24)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="1023.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="32.7150%" y="997" width="0.0415%" height="15" fill="rgb(228,143,12)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="32.7150%" y="981" width="0.0415%" height="15" fill="rgb(249,149,8)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="991.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="32.7150%" y="965" width="0.0415%" height="15" fill="rgb(243,35,44)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="32.7150%" y="949" width="0.0415%" height="15" fill="rgb(246,89,9)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="32.7150%" y="933" width="0.0415%" height="15" fill="rgb(233,213,13)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="32.7150%" y="917" width="0.0415%" height="15" fill="rgb(233,141,41)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="32.7150%" y="901" width="0.0415%" height="15" fill="rgb(239,167,4)" fg:x="3157" fg:w="4"/><text x="32.9650%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (3 samples, 0.03%)</title><rect x="32.7565%" y="1045" width="0.0311%" height="15" fill="rgb(209,217,16)" fg:x="3161" fg:w="3"/><text x="33.0065%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (3 samples, 0.03%)</title><rect x="32.7565%" y="1029" width="0.0311%" height="15" fill="rgb(219,88,35)" fg:x="3161" fg:w="3"/><text x="33.0065%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="32.7565%" y="1013" width="0.0311%" height="15" fill="rgb(220,193,23)" fg:x="3161" fg:w="3"/><text x="33.0065%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="32.7565%" y="997" width="0.0311%" height="15" fill="rgb(230,90,52)" fg:x="3161" fg:w="3"/><text x="33.0065%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="32.7565%" y="981" width="0.0311%" height="15" fill="rgb(252,106,19)" fg:x="3161" fg:w="3"/><text x="33.0065%" y="991.50"></text></g><g><title>paranagram::utils::find_sum_rec (70 samples, 0.73%)</title><rect x="32.1865%" y="1061" width="0.7254%" height="15" fill="rgb(206,74,20)" fg:x="3106" fg:w="70"/><text x="32.4365%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (12 samples, 0.12%)</title><rect x="32.7876%" y="1045" width="0.1244%" height="15" fill="rgb(230,138,44)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (12 samples, 0.12%)</title><rect x="32.7876%" y="1029" width="0.1244%" height="15" fill="rgb(235,182,43)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (12 samples, 0.12%)</title><rect x="32.7876%" y="1013" width="0.1244%" height="15" fill="rgb(242,16,51)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="1023.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.12%)</title><rect x="32.7876%" y="997" width="0.1244%" height="15" fill="rgb(248,9,4)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (12 samples, 0.12%)</title><rect x="32.7876%" y="981" width="0.1244%" height="15" fill="rgb(210,31,22)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="991.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.12%)</title><rect x="32.7876%" y="965" width="0.1244%" height="15" fill="rgb(239,54,39)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (12 samples, 0.12%)</title><rect x="32.7876%" y="949" width="0.1244%" height="15" fill="rgb(230,99,41)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.12%)</title><rect x="32.7876%" y="933" width="0.1244%" height="15" fill="rgb(253,106,12)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.12%)</title><rect x="32.7876%" y="917" width="0.1244%" height="15" fill="rgb(213,46,41)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.12%)</title><rect x="32.7876%" y="901" width="0.1244%" height="15" fill="rgb(215,133,35)" fg:x="3164" fg:w="12"/><text x="33.0376%" y="911.50"></text></g><g><title>paranagram::word::Word::new (3 samples, 0.03%)</title><rect x="32.9119%" y="1061" width="0.0311%" height="15" fill="rgb(213,28,5)" fg:x="3176" fg:w="3"/><text x="33.1619%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="32.9223%" y="1045" width="0.0207%" height="15" fill="rgb(215,77,49)" fg:x="3177" fg:w="2"/><text x="33.1723%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="32.9223%" y="1029" width="0.0207%" height="15" fill="rgb(248,100,22)" fg:x="3177" fg:w="2"/><text x="33.1723%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="32.9223%" y="1013" width="0.0207%" height="15" fill="rgb(208,67,9)" fg:x="3177" fg:w="2"/><text x="33.1723%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.9223%" y="997" width="0.0207%" height="15" fill="rgb(219,133,21)" fg:x="3177" fg:w="2"/><text x="33.1723%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="32.9223%" y="981" width="0.0207%" height="15" fill="rgb(246,46,29)" fg:x="3177" fg:w="2"/><text x="33.1723%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="32.9223%" y="965" width="0.0207%" height="15" fill="rgb(246,185,52)" fg:x="3177" fg:w="2"/><text x="33.1723%" y="975.50"></text></g><g><title>start_thread (2 samples, 0.02%)</title><rect x="32.9430%" y="1061" width="0.0207%" height="15" fill="rgb(252,136,11)" fg:x="3179" fg:w="2"/><text x="33.1930%" y="1071.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.01%)</title><rect x="32.9637%" y="1061" width="0.0104%" height="15" fill="rgb(219,138,53)" fg:x="3181" fg:w="1"/><text x="33.2137%" y="1071.50"></text></g><g><title>std::thread::sleep (1 samples, 0.01%)</title><rect x="32.9741%" y="1061" width="0.0104%" height="15" fill="rgb(211,51,23)" fg:x="3182" fg:w="1"/><text x="33.2241%" y="1071.50"></text></g><g><title>unidecode::unidecode (4 samples, 0.04%)</title><rect x="32.9845%" y="1061" width="0.0415%" height="15" fill="rgb(247,221,28)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.04%)</title><rect x="32.9845%" y="1045" width="0.0415%" height="15" fill="rgb(251,222,45)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="32.9845%" y="1029" width="0.0415%" height="15" fill="rgb(217,162,53)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (4 samples, 0.04%)</title><rect x="32.9845%" y="1013" width="0.0415%" height="15" fill="rgb(229,93,14)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.04%)</title><rect x="32.9845%" y="997" width="0.0415%" height="15" fill="rgb(209,67,49)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.04%)</title><rect x="32.9845%" y="981" width="0.0415%" height="15" fill="rgb(213,87,29)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.04%)</title><rect x="32.9845%" y="965" width="0.0415%" height="15" fill="rgb(205,151,52)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.04%)</title><rect x="32.9845%" y="949" width="0.0415%" height="15" fill="rgb(253,215,39)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.04%)</title><rect x="32.9845%" y="933" width="0.0415%" height="15" fill="rgb(221,220,41)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (4 samples, 0.04%)</title><rect x="32.9845%" y="917" width="0.0415%" height="15" fill="rgb(218,133,21)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="927.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.04%)</title><rect x="32.9845%" y="901" width="0.0415%" height="15" fill="rgb(221,193,43)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.04%)</title><rect x="32.9845%" y="885" width="0.0415%" height="15" fill="rgb(240,128,52)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="32.9845%" y="869" width="0.0415%" height="15" fill="rgb(253,114,12)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.04%)</title><rect x="32.9845%" y="853" width="0.0415%" height="15" fill="rgb(215,223,47)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="32.9845%" y="837" width="0.0415%" height="15" fill="rgb(248,225,23)" fg:x="3183" fg:w="4"/><text x="33.2345%" y="847.50"></text></g><g><title>[unknown] (2,894 samples, 29.99%)</title><rect x="3.0466%" y="1077" width="29.9896%" height="15" fill="rgb(250,108,0)" fg:x="294" fg:w="2894"/><text x="3.2966%" y="1087.50">[unknown]</text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="33.0259%" y="1061" width="0.0104%" height="15" fill="rgb(228,208,7)" fg:x="3187" fg:w="1"/><text x="33.2759%" y="1071.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="33.1192%" y="1061" width="0.1244%" height="15" fill="rgb(244,45,10)" fg:x="3196" fg:w="12"/><text x="33.3692%" y="1071.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="33.1503%" y="1045" width="0.0933%" height="15" fill="rgb(207,125,25)" fg:x="3199" fg:w="9"/><text x="33.4003%" y="1055.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="33.1503%" y="1029" width="0.0933%" height="15" fill="rgb(210,195,18)" fg:x="3199" fg:w="9"/><text x="33.4003%" y="1039.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="33.1503%" y="1013" width="0.0933%" height="15" fill="rgb(249,80,12)" fg:x="3199" fg:w="9"/><text x="33.4003%" y="1023.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.1606%" y="997" width="0.0829%" height="15" fill="rgb(221,65,9)" fg:x="3200" fg:w="8"/><text x="33.4106%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="33.1710%" y="981" width="0.0725%" height="15" fill="rgb(235,49,36)" fg:x="3201" fg:w="7"/><text x="33.4210%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="33.1710%" y="965" width="0.0725%" height="15" fill="rgb(225,32,20)" fg:x="3201" fg:w="7"/><text x="33.4210%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="33.1813%" y="949" width="0.0622%" height="15" fill="rgb(215,141,46)" fg:x="3202" fg:w="6"/><text x="33.4313%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="33.1917%" y="933" width="0.0518%" height="15" fill="rgb(250,160,47)" fg:x="3203" fg:w="5"/><text x="33.4417%" y="943.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="33.2021%" y="917" width="0.0415%" height="15" fill="rgb(216,222,40)" fg:x="3204" fg:w="4"/><text x="33.4521%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="33.2124%" y="901" width="0.0311%" height="15" fill="rgb(234,217,39)" fg:x="3205" fg:w="3"/><text x="33.4624%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="33.2228%" y="885" width="0.0207%" height="15" fill="rgb(207,178,40)" fg:x="3206" fg:w="2"/><text x="33.4728%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="33.2228%" y="869" width="0.0207%" height="15" fill="rgb(221,136,13)" fg:x="3206" fg:w="2"/><text x="33.4728%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2332%" y="853" width="0.0104%" height="15" fill="rgb(249,199,10)" fg:x="3207" fg:w="1"/><text x="33.4832%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2332%" y="837" width="0.0104%" height="15" fill="rgb(249,222,13)" fg:x="3207" fg:w="1"/><text x="33.4832%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2332%" y="821" width="0.0104%" height="15" fill="rgb(244,185,38)" fg:x="3207" fg:w="1"/><text x="33.4832%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2332%" y="805" width="0.0104%" height="15" fill="rgb(236,202,9)" fg:x="3207" fg:w="1"/><text x="33.4832%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.2332%" y="789" width="0.0104%" height="15" fill="rgb(250,229,37)" fg:x="3207" fg:w="1"/><text x="33.4832%" y="799.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="33.3057%" y="1045" width="0.1865%" height="15" fill="rgb(206,174,23)" fg:x="3214" fg:w="18"/><text x="33.5557%" y="1055.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="33.3057%" y="1029" width="0.1865%" height="15" fill="rgb(211,33,43)" fg:x="3214" fg:w="18"/><text x="33.5557%" y="1039.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="33.3057%" y="1013" width="0.1865%" height="15" fill="rgb(245,58,50)" fg:x="3214" fg:w="18"/><text x="33.5557%" y="1023.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="33.3057%" y="997" width="0.1865%" height="15" fill="rgb(244,68,36)" fg:x="3214" fg:w="18"/><text x="33.5557%" y="1007.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="33.3782%" y="981" width="0.1140%" height="15" fill="rgb(232,229,15)" fg:x="3221" fg:w="11"/><text x="33.6282%" y="991.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="965" width="0.0829%" height="15" fill="rgb(254,30,23)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="975.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="949" width="0.0829%" height="15" fill="rgb(235,160,14)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="959.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="933" width="0.0829%" height="15" fill="rgb(212,155,44)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="917" width="0.0829%" height="15" fill="rgb(226,2,50)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="927.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="901" width="0.0829%" height="15" fill="rgb(234,177,6)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="885" width="0.0829%" height="15" fill="rgb(217,24,9)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="33.4093%" y="869" width="0.0829%" height="15" fill="rgb(220,13,46)" fg:x="3224" fg:w="8"/><text x="33.6593%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="33.4301%" y="853" width="0.0622%" height="15" fill="rgb(239,221,27)" fg:x="3226" fg:w="6"/><text x="33.6801%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="33.4301%" y="837" width="0.0622%" height="15" fill="rgb(222,198,25)" fg:x="3226" fg:w="6"/><text x="33.6801%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="33.4301%" y="821" width="0.0622%" height="15" fill="rgb(211,99,13)" fg:x="3226" fg:w="6"/><text x="33.6801%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="33.4301%" y="805" width="0.0622%" height="15" fill="rgb(232,111,31)" fg:x="3226" fg:w="6"/><text x="33.6801%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.4819%" y="789" width="0.0104%" height="15" fill="rgb(245,82,37)" fg:x="3231" fg:w="1"/><text x="33.7319%" y="799.50"></text></g><g><title>__GI___ctype_init (2 samples, 0.02%)</title><rect x="33.4922%" y="1045" width="0.0207%" height="15" fill="rgb(227,149,46)" fg:x="3232" fg:w="2"/><text x="33.7422%" y="1055.50"></text></g><g><title>__libc_signal_restore_set (1 samples, 0.01%)</title><rect x="33.5130%" y="1045" width="0.0104%" height="15" fill="rgb(218,36,50)" fg:x="3234" fg:w="1"/><text x="33.7630%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="33.5130%" y="1029" width="0.0104%" height="15" fill="rgb(226,80,48)" fg:x="3234" fg:w="1"/><text x="33.7630%" y="1039.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="33.5440%" y="997" width="0.0311%" height="15" fill="rgb(238,224,15)" fg:x="3237" fg:w="3"/><text x="33.7940%" y="1007.50"></text></g><g><title>__malloc_arena_thread_freeres (6 samples, 0.06%)</title><rect x="33.5233%" y="1045" width="0.0622%" height="15" fill="rgb(241,136,10)" fg:x="3235" fg:w="6"/><text x="33.7733%" y="1055.50"></text></g><g><title>tcache_thread_shutdown (6 samples, 0.06%)</title><rect x="33.5233%" y="1029" width="0.0622%" height="15" fill="rgb(208,32,45)" fg:x="3235" fg:w="6"/><text x="33.7733%" y="1039.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="33.5440%" y="1013" width="0.0415%" height="15" fill="rgb(207,135,9)" fg:x="3237" fg:w="4"/><text x="33.7940%" y="1023.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="33.5751%" y="997" width="0.0104%" height="15" fill="rgb(206,86,44)" fg:x="3240" fg:w="1"/><text x="33.8251%" y="1007.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="33.5751%" y="981" width="0.0104%" height="15" fill="rgb(245,177,15)" fg:x="3240" fg:w="1"/><text x="33.8251%" y="991.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="33.5751%" y="965" width="0.0104%" height="15" fill="rgb(206,64,50)" fg:x="3240" fg:w="1"/><text x="33.8251%" y="975.50"></text></g><g><title>rseq_register_current_thread (14 samples, 0.15%)</title><rect x="33.5855%" y="1045" width="0.1451%" height="15" fill="rgb(234,36,40)" fg:x="3241" fg:w="14"/><text x="33.8355%" y="1055.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="33.6062%" y="1029" width="0.1244%" height="15" fill="rgb(213,64,8)" fg:x="3243" fg:w="12"/><text x="33.8562%" y="1039.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="33.6373%" y="1013" width="0.0933%" height="15" fill="rgb(210,75,36)" fg:x="3246" fg:w="9"/><text x="33.8873%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="33.6891%" y="997" width="0.0415%" height="15" fill="rgb(229,88,21)" fg:x="3251" fg:w="4"/><text x="33.9391%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="33.6891%" y="981" width="0.0415%" height="15" fill="rgb(252,204,47)" fg:x="3251" fg:w="4"/><text x="33.9391%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="33.6995%" y="965" width="0.0311%" height="15" fill="rgb(208,77,27)" fg:x="3252" fg:w="3"/><text x="33.9495%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="33.6995%" y="949" width="0.0311%" height="15" fill="rgb(221,76,26)" fg:x="3252" fg:w="3"/><text x="33.9495%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="33.6995%" y="933" width="0.0311%" height="15" fill="rgb(225,139,18)" fg:x="3252" fg:w="3"/><text x="33.9495%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="33.6995%" y="917" width="0.0311%" height="15" fill="rgb(230,137,11)" fg:x="3252" fg:w="3"/><text x="33.9495%" y="927.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="33.7306%" y="965" width="0.0104%" height="15" fill="rgb(212,28,1)" fg:x="3255" fg:w="1"/><text x="33.9806%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Packet&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="33.7306%" y="949" width="0.0104%" height="15" fill="rgb(248,164,17)" fg:x="3255" fg:w="1"/><text x="33.9806%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="33.7306%" y="933" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="3255" fg:w="1"/><text x="33.9806%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="33.7306%" y="917" width="0.0104%" height="15" fill="rgb(243,84,45)" fg:x="3255" fg:w="1"/><text x="33.9806%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="33.7306%" y="901" width="0.0104%" height="15" fill="rgb(252,49,23)" fg:x="3255" fg:w="1"/><text x="33.9806%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="33.7513%" y="837" width="0.0104%" height="15" fill="rgb(215,19,7)" fg:x="3257" fg:w="1"/><text x="34.0013%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="33.7513%" y="821" width="0.0104%" height="15" fill="rgb(238,81,41)" fg:x="3257" fg:w="1"/><text x="34.0013%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="33.7513%" y="805" width="0.0104%" height="15" fill="rgb(210,199,37)" fg:x="3257" fg:w="1"/><text x="34.0013%" y="815.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="33.7513%" y="789" width="0.0104%" height="15" fill="rgb(244,192,49)" fg:x="3257" fg:w="1"/><text x="34.0013%" y="799.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="33.9793%" y="613" width="0.0104%" height="15" fill="rgb(226,211,11)" fg:x="3279" fg:w="1"/><text x="34.2293%" y="623.50"></text></g><g><title>malloc_consolidate (28 samples, 0.29%)</title><rect x="33.9896%" y="613" width="0.2902%" height="15" fill="rgb(236,162,54)" fg:x="3280" fg:w="28"/><text x="34.2396%" y="623.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="34.2694%" y="597" width="0.0104%" height="15" fill="rgb(220,229,9)" fg:x="3307" fg:w="1"/><text x="34.5194%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="34.2798%" y="597" width="0.1140%" height="15" fill="rgb(250,87,22)" fg:x="3308" fg:w="11"/><text x="34.5298%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="34.3109%" y="581" width="0.0829%" height="15" fill="rgb(239,43,17)" fg:x="3311" fg:w="8"/><text x="34.5609%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="34.3109%" y="565" width="0.0829%" height="15" fill="rgb(231,177,25)" fg:x="3311" fg:w="8"/><text x="34.5609%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="34.3109%" y="549" width="0.0829%" height="15" fill="rgb(219,179,1)" fg:x="3311" fg:w="8"/><text x="34.5609%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="34.3109%" y="533" width="0.0829%" height="15" fill="rgb(238,219,53)" fg:x="3311" fg:w="8"/><text x="34.5609%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="34.3109%" y="517" width="0.0829%" height="15" fill="rgb(232,167,36)" fg:x="3311" fg:w="8"/><text x="34.5609%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="34.3212%" y="501" width="0.0725%" height="15" fill="rgb(244,19,51)" fg:x="3312" fg:w="7"/><text x="34.5712%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="34.3212%" y="485" width="0.0725%" height="15" fill="rgb(224,6,22)" fg:x="3312" fg:w="7"/><text x="34.5712%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="34.3212%" y="469" width="0.0725%" height="15" fill="rgb(224,145,5)" fg:x="3312" fg:w="7"/><text x="34.5712%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="34.3627%" y="453" width="0.0311%" height="15" fill="rgb(234,130,49)" fg:x="3316" fg:w="3"/><text x="34.6127%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3834%" y="437" width="0.0104%" height="15" fill="rgb(254,6,2)" fg:x="3318" fg:w="1"/><text x="34.6334%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="34.3834%" y="421" width="0.0104%" height="15" fill="rgb(208,96,46)" fg:x="3318" fg:w="1"/><text x="34.6334%" y="431.50"></text></g><g><title>_int_malloc (80 samples, 0.83%)</title><rect x="33.8342%" y="629" width="0.8290%" height="15" fill="rgb(239,3,39)" fg:x="3265" fg:w="80"/><text x="34.0842%" y="639.50"></text></g><g><title>sysmalloc (37 samples, 0.38%)</title><rect x="34.2798%" y="613" width="0.3834%" height="15" fill="rgb(233,210,1)" fg:x="3308" fg:w="37"/><text x="34.5298%" y="623.50"></text></g><g><title>grow_heap (26 samples, 0.27%)</title><rect x="34.3938%" y="597" width="0.2694%" height="15" fill="rgb(244,137,37)" fg:x="3319" fg:w="26"/><text x="34.6438%" y="607.50"></text></g><g><title>__GI___mprotect (26 samples, 0.27%)</title><rect x="34.3938%" y="581" width="0.2694%" height="15" fill="rgb(240,136,2)" fg:x="3319" fg:w="26"/><text x="34.6438%" y="591.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="34.3938%" y="565" width="0.2694%" height="15" fill="rgb(239,18,37)" fg:x="3319" fg:w="26"/><text x="34.6438%" y="575.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="34.4041%" y="549" width="0.2591%" height="15" fill="rgb(218,185,22)" fg:x="3320" fg:w="25"/><text x="34.6541%" y="559.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="34.4041%" y="533" width="0.2591%" height="15" fill="rgb(225,218,4)" fg:x="3320" fg:w="25"/><text x="34.6541%" y="543.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="34.4041%" y="517" width="0.2591%" height="15" fill="rgb(230,182,32)" fg:x="3320" fg:w="25"/><text x="34.6541%" y="527.50"></text></g><g><title>[unknown] (23 samples, 0.24%)</title><rect x="34.4249%" y="501" width="0.2383%" height="15" fill="rgb(242,56,43)" fg:x="3322" fg:w="23"/><text x="34.6749%" y="511.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="34.4456%" y="485" width="0.2176%" height="15" fill="rgb(233,99,24)" fg:x="3324" fg:w="21"/><text x="34.6956%" y="495.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="34.4560%" y="469" width="0.2073%" height="15" fill="rgb(234,209,42)" fg:x="3325" fg:w="20"/><text x="34.7060%" y="479.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="34.4663%" y="453" width="0.1969%" height="15" fill="rgb(227,7,12)" fg:x="3326" fg:w="19"/><text x="34.7163%" y="463.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="34.4767%" y="437" width="0.1865%" height="15" fill="rgb(245,203,43)" fg:x="3327" fg:w="18"/><text x="34.7267%" y="447.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="34.4974%" y="421" width="0.1658%" height="15" fill="rgb(238,205,33)" fg:x="3329" fg:w="16"/><text x="34.7474%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="34.5285%" y="405" width="0.1347%" height="15" fill="rgb(231,56,7)" fg:x="3332" fg:w="13"/><text x="34.7785%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="34.5596%" y="389" width="0.1036%" height="15" fill="rgb(244,186,29)" fg:x="3335" fg:w="10"/><text x="34.8096%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="34.5803%" y="373" width="0.0829%" height="15" fill="rgb(234,111,31)" fg:x="3337" fg:w="8"/><text x="34.8303%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="34.6010%" y="357" width="0.0622%" height="15" fill="rgb(241,149,10)" fg:x="3339" fg:w="6"/><text x="34.8510%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.90%)</title><rect x="33.7720%" y="741" width="0.9016%" height="15" fill="rgb(249,206,44)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.90%)</title><rect x="33.7720%" y="725" width="0.9016%" height="15" fill="rgb(251,153,30)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.90%)</title><rect x="33.7720%" y="709" width="0.9016%" height="15" fill="rgb(239,152,38)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.90%)</title><rect x="33.7720%" y="693" width="0.9016%" height="15" fill="rgb(249,139,47)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.90%)</title><rect x="33.7720%" y="677" width="0.9016%" height="15" fill="rgb(244,64,35)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="687.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.90%)</title><rect x="33.7720%" y="661" width="0.9016%" height="15" fill="rgb(216,46,15)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="671.50"></text></g><g><title>__GI___libc_malloc (87 samples, 0.90%)</title><rect x="33.7720%" y="645" width="0.9016%" height="15" fill="rgb(250,74,19)" fg:x="3259" fg:w="87"/><text x="34.0220%" y="655.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="34.6632%" y="629" width="0.0104%" height="15" fill="rgb(249,42,33)" fg:x="3345" fg:w="1"/><text x="34.9132%" y="639.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="34.6632%" y="613" width="0.0104%" height="15" fill="rgb(242,149,17)" fg:x="3345" fg:w="1"/><text x="34.9132%" y="623.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="34.6632%" y="597" width="0.0104%" height="15" fill="rgb(244,29,21)" fg:x="3345" fg:w="1"/><text x="34.9132%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (91 samples, 0.94%)</title><rect x="33.7617%" y="837" width="0.9430%" height="15" fill="rgb(220,130,37)" fg:x="3258" fg:w="91"/><text x="34.0117%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (90 samples, 0.93%)</title><rect x="33.7720%" y="821" width="0.9326%" height="15" fill="rgb(211,67,2)" fg:x="3259" fg:w="90"/><text x="34.0220%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (90 samples, 0.93%)</title><rect x="33.7720%" y="805" width="0.9326%" height="15" fill="rgb(235,68,52)" fg:x="3259" fg:w="90"/><text x="34.0220%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (90 samples, 0.93%)</title><rect x="33.7720%" y="789" width="0.9326%" height="15" fill="rgb(246,142,3)" fg:x="3259" fg:w="90"/><text x="34.0220%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (90 samples, 0.93%)</title><rect x="33.7720%" y="773" width="0.9326%" height="15" fill="rgb(241,25,7)" fg:x="3259" fg:w="90"/><text x="34.0220%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (90 samples, 0.93%)</title><rect x="33.7720%" y="757" width="0.9326%" height="15" fill="rgb(242,119,39)" fg:x="3259" fg:w="90"/><text x="34.0220%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.03%)</title><rect x="34.6736%" y="741" width="0.0311%" height="15" fill="rgb(241,98,45)" fg:x="3346" fg:w="3"/><text x="34.9236%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="34.6736%" y="725" width="0.0311%" height="15" fill="rgb(254,28,30)" fg:x="3346" fg:w="3"/><text x="34.9236%" y="735.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.03%)</title><rect x="34.6736%" y="709" width="0.0311%" height="15" fill="rgb(241,142,54)" fg:x="3346" fg:w="3"/><text x="34.9236%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.04%)</title><rect x="34.7047%" y="837" width="0.0415%" height="15" fill="rgb(222,85,15)" fg:x="3349" fg:w="4"/><text x="34.9547%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="34.7047%" y="821" width="0.0415%" height="15" fill="rgb(210,85,47)" fg:x="3349" fg:w="4"/><text x="34.9547%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="34.7047%" y="805" width="0.0415%" height="15" fill="rgb(224,206,25)" fg:x="3349" fg:w="4"/><text x="34.9547%" y="815.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="34.7047%" y="789" width="0.0415%" height="15" fill="rgb(243,201,19)" fg:x="3349" fg:w="4"/><text x="34.9547%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="34.7047%" y="773" width="0.0415%" height="15" fill="rgb(236,59,4)" fg:x="3349" fg:w="4"/><text x="34.9547%" y="783.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="34.7150%" y="757" width="0.0311%" height="15" fill="rgb(254,179,45)" fg:x="3350" fg:w="3"/><text x="34.9650%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="34.7565%" y="725" width="0.0207%" height="15" fill="rgb(226,14,10)" fg:x="3354" fg:w="2"/><text x="35.0065%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="34.7668%" y="709" width="0.0104%" height="15" fill="rgb(244,27,41)" fg:x="3355" fg:w="1"/><text x="35.0168%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="645" width="0.0518%" height="15" fill="rgb(235,35,32)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="629" width="0.0518%" height="15" fill="rgb(218,68,31)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="613" width="0.0518%" height="15" fill="rgb(207,120,37)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="597" width="0.0518%" height="15" fill="rgb(227,98,0)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="581" width="0.0518%" height="15" fill="rgb(207,7,3)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="565" width="0.0518%" height="15" fill="rgb(206,98,19)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="549" width="0.0518%" height="15" fill="rgb(217,5,26)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="533" width="0.0518%" height="15" fill="rgb(235,190,38)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="517" width="0.0518%" height="15" fill="rgb(247,86,24)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="501" width="0.0518%" height="15" fill="rgb(205,101,16)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="485" width="0.0518%" height="15" fill="rgb(246,168,33)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="469" width="0.0518%" height="15" fill="rgb(231,114,1)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="453" width="0.0518%" height="15" fill="rgb(207,184,53)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="34.8912%" y="437" width="0.0518%" height="15" fill="rgb(224,95,51)" fg:x="3367" fg:w="5"/><text x="35.1412%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.9637%" y="629" width="0.0104%" height="15" fill="rgb(212,188,45)" fg:x="3374" fg:w="1"/><text x="35.2137%" y="639.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="34.9637%" y="613" width="0.0104%" height="15" fill="rgb(223,154,38)" fg:x="3374" fg:w="1"/><text x="35.2137%" y="623.50"></text></g><g><title>_int_realloc (10 samples, 0.10%)</title><rect x="34.9430%" y="645" width="0.1036%" height="15" fill="rgb(251,22,52)" fg:x="3372" fg:w="10"/><text x="35.1930%" y="655.50"></text></g><g><title>_int_malloc (7 samples, 0.07%)</title><rect x="34.9741%" y="629" width="0.0725%" height="15" fill="rgb(229,209,22)" fg:x="3375" fg:w="7"/><text x="35.2241%" y="639.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="35.0363%" y="613" width="0.0104%" height="15" fill="rgb(234,138,34)" fg:x="3381" fg:w="1"/><text x="35.2863%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.27%)</title><rect x="34.7876%" y="709" width="0.2694%" height="15" fill="rgb(212,95,11)" fg:x="3357" fg:w="26"/><text x="35.0376%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.27%)</title><rect x="34.7876%" y="693" width="0.2694%" height="15" fill="rgb(240,179,47)" fg:x="3357" fg:w="26"/><text x="35.0376%" y="703.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.27%)</title><rect x="34.7876%" y="677" width="0.2694%" height="15" fill="rgb(240,163,11)" fg:x="3357" fg:w="26"/><text x="35.0376%" y="687.50"></text></g><g><title>__GI___libc_realloc (26 samples, 0.27%)</title><rect x="34.7876%" y="661" width="0.2694%" height="15" fill="rgb(236,37,12)" fg:x="3357" fg:w="26"/><text x="35.0376%" y="671.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="35.0466%" y="645" width="0.0104%" height="15" fill="rgb(232,164,16)" fg:x="3382" fg:w="1"/><text x="35.2966%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.32%)</title><rect x="34.7461%" y="837" width="0.3212%" height="15" fill="rgb(244,205,15)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.32%)</title><rect x="34.7461%" y="821" width="0.3212%" height="15" fill="rgb(223,117,47)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.32%)</title><rect x="34.7461%" y="805" width="0.3212%" height="15" fill="rgb(244,107,35)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.32%)</title><rect x="34.7461%" y="789" width="0.3212%" height="15" fill="rgb(205,140,8)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.32%)</title><rect x="34.7461%" y="773" width="0.3212%" height="15" fill="rgb(228,84,46)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.32%)</title><rect x="34.7461%" y="757" width="0.3212%" height="15" fill="rgb(254,188,9)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.32%)</title><rect x="34.7461%" y="741" width="0.3212%" height="15" fill="rgb(206,112,54)" fg:x="3353" fg:w="31"/><text x="34.9961%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.29%)</title><rect x="34.7772%" y="725" width="0.2902%" height="15" fill="rgb(216,84,49)" fg:x="3356" fg:w="28"/><text x="35.0272%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="35.0570%" y="709" width="0.0104%" height="15" fill="rgb(214,194,35)" fg:x="3383" fg:w="1"/><text x="35.3070%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="35.0674%" y="837" width="0.0104%" height="15" fill="rgb(249,28,3)" fg:x="3384" fg:w="1"/><text x="35.3174%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="35.0674%" y="821" width="0.0104%" height="15" fill="rgb(222,56,52)" fg:x="3384" fg:w="1"/><text x="35.3174%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="35.0674%" y="805" width="0.0104%" height="15" fill="rgb(245,217,50)" fg:x="3384" fg:w="1"/><text x="35.3174%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="35.0674%" y="789" width="0.0104%" height="15" fill="rgb(213,201,24)" fg:x="3384" fg:w="1"/><text x="35.3174%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="35.0674%" y="773" width="0.0104%" height="15" fill="rgb(248,116,28)" fg:x="3384" fg:w="1"/><text x="35.3174%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="35.0674%" y="757" width="0.0104%" height="15" fill="rgb(219,72,43)" fg:x="3384" fg:w="1"/><text x="35.3174%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.02%)</title><rect x="35.0777%" y="837" width="0.0207%" height="15" fill="rgb(209,138,14)" fg:x="3385" fg:w="2"/><text x="35.3277%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="35.0984%" y="805" width="0.0415%" height="15" fill="rgb(222,18,33)" fg:x="3387" fg:w="4"/><text x="35.3484%" y="815.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="35.1088%" y="789" width="0.0311%" height="15" fill="rgb(213,199,7)" fg:x="3388" fg:w="3"/><text x="35.3588%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="35.2228%" y="629" width="0.0104%" height="15" fill="rgb(250,110,10)" fg:x="3399" fg:w="1"/><text x="35.4728%" y="639.50"></text></g><g><title>__memcpy_evex_unaligned_erms (67 samples, 0.69%)</title><rect x="35.2332%" y="629" width="0.6943%" height="15" fill="rgb(248,123,6)" fg:x="3400" fg:w="67"/><text x="35.4832%" y="639.50"></text></g><g><title>[unknown] (62 samples, 0.64%)</title><rect x="35.2850%" y="613" width="0.6425%" height="15" fill="rgb(206,91,31)" fg:x="3405" fg:w="62"/><text x="35.5350%" y="623.50"></text></g><g><title>[unknown] (56 samples, 0.58%)</title><rect x="35.3472%" y="597" width="0.5803%" height="15" fill="rgb(211,154,13)" fg:x="3411" fg:w="56"/><text x="35.5972%" y="607.50"></text></g><g><title>[unknown] (56 samples, 0.58%)</title><rect x="35.3472%" y="581" width="0.5803%" height="15" fill="rgb(225,148,7)" fg:x="3411" fg:w="56"/><text x="35.5972%" y="591.50"></text></g><g><title>[unknown] (55 samples, 0.57%)</title><rect x="35.3575%" y="565" width="0.5699%" height="15" fill="rgb(220,160,43)" fg:x="3412" fg:w="55"/><text x="35.6075%" y="575.50"></text></g><g><title>[unknown] (48 samples, 0.50%)</title><rect x="35.4301%" y="549" width="0.4974%" height="15" fill="rgb(213,52,39)" fg:x="3419" fg:w="48"/><text x="35.6801%" y="559.50"></text></g><g><title>[unknown] (47 samples, 0.49%)</title><rect x="35.4404%" y="533" width="0.4870%" height="15" fill="rgb(243,137,7)" fg:x="3420" fg:w="47"/><text x="35.6904%" y="543.50"></text></g><g><title>[unknown] (46 samples, 0.48%)</title><rect x="35.4508%" y="517" width="0.4767%" height="15" fill="rgb(230,79,13)" fg:x="3421" fg:w="46"/><text x="35.7008%" y="527.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="35.4715%" y="501" width="0.4560%" height="15" fill="rgb(247,105,23)" fg:x="3423" fg:w="44"/><text x="35.7215%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="35.4819%" y="485" width="0.4456%" height="15" fill="rgb(223,179,41)" fg:x="3424" fg:w="43"/><text x="35.7319%" y="495.50"></text></g><g><title>[unknown] (41 samples, 0.42%)</title><rect x="35.5026%" y="469" width="0.4249%" height="15" fill="rgb(218,9,34)" fg:x="3426" fg:w="41"/><text x="35.7526%" y="479.50"></text></g><g><title>[unknown] (36 samples, 0.37%)</title><rect x="35.5544%" y="453" width="0.3731%" height="15" fill="rgb(222,106,8)" fg:x="3431" fg:w="36"/><text x="35.8044%" y="463.50"></text></g><g><title>[unknown] (30 samples, 0.31%)</title><rect x="35.6166%" y="437" width="0.3109%" height="15" fill="rgb(211,220,0)" fg:x="3437" fg:w="30"/><text x="35.8666%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="35.7098%" y="421" width="0.2176%" height="15" fill="rgb(229,52,16)" fg:x="3446" fg:w="21"/><text x="35.9598%" y="431.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="35.7306%" y="405" width="0.1969%" height="15" fill="rgb(212,155,18)" fg:x="3448" fg:w="19"/><text x="35.9806%" y="415.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="35.7306%" y="389" width="0.1969%" height="15" fill="rgb(242,21,14)" fg:x="3448" fg:w="19"/><text x="35.9806%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="35.9275%" y="629" width="0.0207%" height="15" fill="rgb(222,19,48)" fg:x="3467" fg:w="2"/><text x="36.1775%" y="639.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="35.9378%" y="613" width="0.0104%" height="15" fill="rgb(232,45,27)" fg:x="3468" fg:w="1"/><text x="36.1878%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="597" width="0.0829%" height="15" fill="rgb(249,103,42)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="581" width="0.0829%" height="15" fill="rgb(246,81,33)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="565" width="0.0829%" height="15" fill="rgb(252,33,42)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="549" width="0.0829%" height="15" fill="rgb(209,212,41)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="533" width="0.0829%" height="15" fill="rgb(207,154,6)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="517" width="0.0829%" height="15" fill="rgb(223,64,47)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="501" width="0.0829%" height="15" fill="rgb(211,161,38)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="485" width="0.0829%" height="15" fill="rgb(219,138,40)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="35.9585%" y="469" width="0.0829%" height="15" fill="rgb(241,228,46)" fg:x="3470" fg:w="8"/><text x="36.2085%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="35.9793%" y="453" width="0.0622%" height="15" fill="rgb(223,209,38)" fg:x="3472" fg:w="6"/><text x="36.2293%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="35.9793%" y="437" width="0.0622%" height="15" fill="rgb(236,164,45)" fg:x="3472" fg:w="6"/><text x="36.2293%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="35.9896%" y="421" width="0.0518%" height="15" fill="rgb(231,15,5)" fg:x="3473" fg:w="5"/><text x="36.2396%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="35.9896%" y="405" width="0.0518%" height="15" fill="rgb(252,35,15)" fg:x="3473" fg:w="5"/><text x="36.2396%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="35.9896%" y="389" width="0.0518%" height="15" fill="rgb(248,181,18)" fg:x="3473" fg:w="5"/><text x="36.2396%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="35.9896%" y="373" width="0.0518%" height="15" fill="rgb(233,39,42)" fg:x="3473" fg:w="5"/><text x="36.2396%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 1.02%)</title><rect x="35.2124%" y="725" width="1.0155%" height="15" fill="rgb(238,110,33)" fg:x="3398" fg:w="98"/><text x="35.4624%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 1.02%)</title><rect x="35.2124%" y="709" width="1.0155%" height="15" fill="rgb(233,195,10)" fg:x="3398" fg:w="98"/><text x="35.4624%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 1.02%)</title><rect x="35.2124%" y="693" width="1.0155%" height="15" fill="rgb(254,105,3)" fg:x="3398" fg:w="98"/><text x="35.4624%" y="703.50"></text></g><g><title>alloc::alloc::realloc (98 samples, 1.02%)</title><rect x="35.2124%" y="677" width="1.0155%" height="15" fill="rgb(221,225,9)" fg:x="3398" fg:w="98"/><text x="35.4624%" y="687.50"></text></g><g><title>__GI___libc_realloc (98 samples, 1.02%)</title><rect x="35.2124%" y="661" width="1.0155%" height="15" fill="rgb(224,227,45)" fg:x="3398" fg:w="98"/><text x="35.4624%" y="671.50"></text></g><g><title>_int_realloc (98 samples, 1.02%)</title><rect x="35.2124%" y="645" width="1.0155%" height="15" fill="rgb(229,198,43)" fg:x="3398" fg:w="98"/><text x="35.4624%" y="655.50"></text></g><g><title>_int_malloc (27 samples, 0.28%)</title><rect x="35.9482%" y="629" width="0.2798%" height="15" fill="rgb(206,209,35)" fg:x="3469" fg:w="27"/><text x="36.1982%" y="639.50"></text></g><g><title>sysmalloc (27 samples, 0.28%)</title><rect x="35.9482%" y="613" width="0.2798%" height="15" fill="rgb(245,195,53)" fg:x="3469" fg:w="27"/><text x="36.1982%" y="623.50"></text></g><g><title>grow_heap (18 samples, 0.19%)</title><rect x="36.0415%" y="597" width="0.1865%" height="15" fill="rgb(240,92,26)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="607.50"></text></g><g><title>__GI___mprotect (18 samples, 0.19%)</title><rect x="36.0415%" y="581" width="0.1865%" height="15" fill="rgb(207,40,23)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="591.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="36.0415%" y="565" width="0.1865%" height="15" fill="rgb(223,111,35)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="36.0415%" y="549" width="0.1865%" height="15" fill="rgb(229,147,28)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="36.0415%" y="533" width="0.1865%" height="15" fill="rgb(211,29,28)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="543.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="36.0415%" y="517" width="0.1865%" height="15" fill="rgb(228,72,33)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="36.0415%" y="501" width="0.1865%" height="15" fill="rgb(205,214,31)" fg:x="3478" fg:w="18"/><text x="36.2915%" y="511.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="36.0518%" y="485" width="0.1762%" height="15" fill="rgb(224,111,15)" fg:x="3479" fg:w="17"/><text x="36.3018%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="36.0518%" y="469" width="0.1762%" height="15" fill="rgb(253,21,26)" fg:x="3479" fg:w="17"/><text x="36.3018%" y="479.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="36.0518%" y="453" width="0.1762%" height="15" fill="rgb(245,139,43)" fg:x="3479" fg:w="17"/><text x="36.3018%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="36.0622%" y="437" width="0.1658%" height="15" fill="rgb(252,170,7)" fg:x="3480" fg:w="16"/><text x="36.3122%" y="447.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="36.0829%" y="421" width="0.1451%" height="15" fill="rgb(231,118,14)" fg:x="3482" fg:w="14"/><text x="36.3329%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="36.0933%" y="405" width="0.1347%" height="15" fill="rgb(238,83,0)" fg:x="3483" fg:w="13"/><text x="36.3433%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="36.1140%" y="389" width="0.1140%" height="15" fill="rgb(221,39,39)" fg:x="3485" fg:w="11"/><text x="36.3640%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="36.1244%" y="373" width="0.1036%" height="15" fill="rgb(222,119,46)" fg:x="3486" fg:w="10"/><text x="36.3744%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="36.1762%" y="357" width="0.0518%" height="15" fill="rgb(222,165,49)" fg:x="3491" fg:w="5"/><text x="36.4262%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (99 samples, 1.03%)</title><rect x="35.2124%" y="757" width="1.0259%" height="15" fill="rgb(219,113,52)" fg:x="3398" fg:w="99"/><text x="35.4624%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (99 samples, 1.03%)</title><rect x="35.2124%" y="741" width="1.0259%" height="15" fill="rgb(214,7,15)" fg:x="3398" fg:w="99"/><text x="35.4624%" y="751.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="36.2280%" y="725" width="0.0104%" height="15" fill="rgb(235,32,4)" fg:x="3496" fg:w="1"/><text x="36.4780%" y="735.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="36.2280%" y="709" width="0.0104%" height="15" fill="rgb(238,90,54)" fg:x="3496" fg:w="1"/><text x="36.4780%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="36.2280%" y="693" width="0.0104%" height="15" fill="rgb(213,208,19)" fg:x="3496" fg:w="1"/><text x="36.4780%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (208 samples, 2.16%)</title><rect x="35.1399%" y="805" width="2.1554%" height="15" fill="rgb(233,156,4)" fg:x="3391" fg:w="208"/><text x="35.3899%" y="815.50">c..</text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (208 samples, 2.16%)</title><rect x="35.1399%" y="789" width="2.1554%" height="15" fill="rgb(207,194,5)" fg:x="3391" fg:w="208"/><text x="35.3899%" y="799.50">p..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (208 samples, 2.16%)</title><rect x="35.1399%" y="773" width="2.1554%" height="15" fill="rgb(206,111,30)" fg:x="3391" fg:w="208"/><text x="35.3899%" y="783.50">a..</text></g><g><title>core::ptr::write (102 samples, 1.06%)</title><rect x="36.2383%" y="757" width="1.0570%" height="15" fill="rgb(243,70,54)" fg:x="3497" fg:w="102"/><text x="36.4883%" y="767.50"></text></g><g><title>[unknown] (94 samples, 0.97%)</title><rect x="36.3212%" y="741" width="0.9741%" height="15" fill="rgb(242,28,8)" fg:x="3505" fg:w="94"/><text x="36.5712%" y="751.50"></text></g><g><title>[unknown] (88 samples, 0.91%)</title><rect x="36.3834%" y="725" width="0.9119%" height="15" fill="rgb(219,106,18)" fg:x="3511" fg:w="88"/><text x="36.6334%" y="735.50"></text></g><g><title>[unknown] (88 samples, 0.91%)</title><rect x="36.3834%" y="709" width="0.9119%" height="15" fill="rgb(244,222,10)" fg:x="3511" fg:w="88"/><text x="36.6334%" y="719.50"></text></g><g><title>[unknown] (88 samples, 0.91%)</title><rect x="36.3834%" y="693" width="0.9119%" height="15" fill="rgb(236,179,52)" fg:x="3511" fg:w="88"/><text x="36.6334%" y="703.50"></text></g><g><title>[unknown] (87 samples, 0.90%)</title><rect x="36.3938%" y="677" width="0.9016%" height="15" fill="rgb(213,23,39)" fg:x="3512" fg:w="87"/><text x="36.6438%" y="687.50"></text></g><g><title>[unknown] (83 samples, 0.86%)</title><rect x="36.4352%" y="661" width="0.8601%" height="15" fill="rgb(238,48,10)" fg:x="3516" fg:w="83"/><text x="36.6852%" y="671.50"></text></g><g><title>[unknown] (78 samples, 0.81%)</title><rect x="36.4870%" y="645" width="0.8083%" height="15" fill="rgb(251,196,23)" fg:x="3521" fg:w="78"/><text x="36.7370%" y="655.50"></text></g><g><title>[unknown] (76 samples, 0.79%)</title><rect x="36.5078%" y="629" width="0.7876%" height="15" fill="rgb(250,152,24)" fg:x="3523" fg:w="76"/><text x="36.7578%" y="639.50"></text></g><g><title>[unknown] (74 samples, 0.77%)</title><rect x="36.5285%" y="613" width="0.7668%" height="15" fill="rgb(209,150,17)" fg:x="3525" fg:w="74"/><text x="36.7785%" y="623.50"></text></g><g><title>[unknown] (71 samples, 0.74%)</title><rect x="36.5596%" y="597" width="0.7358%" height="15" fill="rgb(234,202,34)" fg:x="3528" fg:w="71"/><text x="36.8096%" y="607.50"></text></g><g><title>[unknown] (67 samples, 0.69%)</title><rect x="36.6010%" y="581" width="0.6943%" height="15" fill="rgb(253,148,53)" fg:x="3532" fg:w="67"/><text x="36.8510%" y="591.50"></text></g><g><title>[unknown] (64 samples, 0.66%)</title><rect x="36.6321%" y="565" width="0.6632%" height="15" fill="rgb(218,129,16)" fg:x="3535" fg:w="64"/><text x="36.8821%" y="575.50"></text></g><g><title>[unknown] (62 samples, 0.64%)</title><rect x="36.6528%" y="549" width="0.6425%" height="15" fill="rgb(216,85,19)" fg:x="3537" fg:w="62"/><text x="36.9028%" y="559.50"></text></g><g><title>[unknown] (61 samples, 0.63%)</title><rect x="36.6632%" y="533" width="0.6321%" height="15" fill="rgb(235,228,7)" fg:x="3538" fg:w="61"/><text x="36.9132%" y="543.50"></text></g><g><title>[unknown] (60 samples, 0.62%)</title><rect x="36.6736%" y="517" width="0.6218%" height="15" fill="rgb(245,175,0)" fg:x="3539" fg:w="60"/><text x="36.9236%" y="527.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="37.3264%" y="645" width="0.0104%" height="15" fill="rgb(208,168,36)" fg:x="3602" fg:w="1"/><text x="37.5764%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (217 samples, 2.25%)</title><rect x="35.0984%" y="837" width="2.2487%" height="15" fill="rgb(246,171,24)" fg:x="3387" fg:w="217"/><text x="35.3484%" y="847.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (217 samples, 2.25%)</title><rect x="35.0984%" y="821" width="2.2487%" height="15" fill="rgb(215,142,24)" fg:x="3387" fg:w="217"/><text x="35.3484%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="37.2953%" y="805" width="0.0518%" height="15" fill="rgb(250,187,7)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="37.2953%" y="789" width="0.0518%" height="15" fill="rgb(228,66,33)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (5 samples, 0.05%)</title><rect x="37.2953%" y="773" width="0.0518%" height="15" fill="rgb(234,215,21)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="37.2953%" y="757" width="0.0518%" height="15" fill="rgb(222,191,20)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="37.2953%" y="741" width="0.0518%" height="15" fill="rgb(245,79,54)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="37.2953%" y="725" width="0.0518%" height="15" fill="rgb(240,10,37)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="37.2953%" y="709" width="0.0518%" height="15" fill="rgb(214,192,32)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="37.2953%" y="693" width="0.0518%" height="15" fill="rgb(209,36,54)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="703.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="37.2953%" y="677" width="0.0518%" height="15" fill="rgb(220,10,11)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="687.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="37.2953%" y="661" width="0.0518%" height="15" fill="rgb(221,106,17)" fg:x="3599" fg:w="5"/><text x="37.5453%" y="671.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="37.3368%" y="645" width="0.0104%" height="15" fill="rgb(251,142,44)" fg:x="3603" fg:w="1"/><text x="37.5868%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="37.7202%" y="821" width="0.0104%" height="15" fill="rgb(238,13,15)" fg:x="3640" fg:w="1"/><text x="37.9702%" y="831.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="37.7202%" y="805" width="0.0104%" height="15" fill="rgb(208,107,27)" fg:x="3640" fg:w="1"/><text x="37.9702%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (15 samples, 0.16%)</title><rect x="37.7306%" y="789" width="0.1554%" height="15" fill="rgb(205,136,37)" fg:x="3641" fg:w="15"/><text x="37.9806%" y="799.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="37.8756%" y="773" width="0.0104%" height="15" fill="rgb(250,205,27)" fg:x="3655" fg:w="1"/><text x="38.1256%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.18%)</title><rect x="37.7306%" y="821" width="0.1762%" height="15" fill="rgb(210,80,43)" fg:x="3641" fg:w="17"/><text x="37.9806%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (17 samples, 0.18%)</title><rect x="37.7306%" y="805" width="0.1762%" height="15" fill="rgb(247,160,36)" fg:x="3641" fg:w="17"/><text x="37.9806%" y="815.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="37.8860%" y="789" width="0.0207%" height="15" fill="rgb(234,13,49)" fg:x="3656" fg:w="2"/><text x="38.1360%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="37.8860%" y="773" width="0.0207%" height="15" fill="rgb(234,122,0)" fg:x="3656" fg:w="2"/><text x="38.1360%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="37.8860%" y="757" width="0.0207%" height="15" fill="rgb(207,146,38)" fg:x="3656" fg:w="2"/><text x="38.1360%" y="767.50"></text></g><g><title>malloc_consolidate (4 samples, 0.04%)</title><rect x="38.1036%" y="597" width="0.0415%" height="15" fill="rgb(207,177,25)" fg:x="3677" fg:w="4"/><text x="38.3536%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="38.1554%" y="581" width="0.0311%" height="15" fill="rgb(211,178,42)" fg:x="3682" fg:w="3"/><text x="38.4054%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="38.1554%" y="565" width="0.0311%" height="15" fill="rgb(230,69,54)" fg:x="3682" fg:w="3"/><text x="38.4054%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="38.1554%" y="549" width="0.0311%" height="15" fill="rgb(214,135,41)" fg:x="3682" fg:w="3"/><text x="38.4054%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="533" width="0.0207%" height="15" fill="rgb(237,67,25)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="517" width="0.0207%" height="15" fill="rgb(222,189,50)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="501" width="0.0207%" height="15" fill="rgb(245,148,34)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="485" width="0.0207%" height="15" fill="rgb(222,29,6)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="469" width="0.0207%" height="15" fill="rgb(221,189,43)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="453" width="0.0207%" height="15" fill="rgb(207,36,27)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="437" width="0.0207%" height="15" fill="rgb(217,90,24)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="38.1658%" y="421" width="0.0207%" height="15" fill="rgb(224,66,35)" fg:x="3683" fg:w="2"/><text x="38.4158%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1762%" y="405" width="0.0104%" height="15" fill="rgb(221,13,50)" fg:x="3684" fg:w="1"/><text x="38.4262%" y="415.50"></text></g><g><title>sysmalloc (11 samples, 0.11%)</title><rect x="38.1451%" y="597" width="0.1140%" height="15" fill="rgb(236,68,49)" fg:x="3681" fg:w="11"/><text x="38.3951%" y="607.50"></text></g><g><title>grow_heap (7 samples, 0.07%)</title><rect x="38.1865%" y="581" width="0.0725%" height="15" fill="rgb(229,146,28)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="591.50"></text></g><g><title>__GI___mprotect (7 samples, 0.07%)</title><rect x="38.1865%" y="565" width="0.0725%" height="15" fill="rgb(225,31,38)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="38.1865%" y="549" width="0.0725%" height="15" fill="rgb(250,208,3)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="38.1865%" y="533" width="0.0725%" height="15" fill="rgb(246,54,23)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="38.1865%" y="517" width="0.0725%" height="15" fill="rgb(243,76,11)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="38.1865%" y="501" width="0.0725%" height="15" fill="rgb(245,21,50)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="38.1865%" y="485" width="0.0725%" height="15" fill="rgb(228,9,43)" fg:x="3685" fg:w="7"/><text x="38.4365%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="469" width="0.0622%" height="15" fill="rgb(208,100,47)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="453" width="0.0622%" height="15" fill="rgb(232,26,8)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="437" width="0.0622%" height="15" fill="rgb(216,166,38)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="421" width="0.0622%" height="15" fill="rgb(251,202,51)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="405" width="0.0622%" height="15" fill="rgb(254,216,34)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="389" width="0.0622%" height="15" fill="rgb(251,32,27)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="373" width="0.0622%" height="15" fill="rgb(208,127,28)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="357" width="0.0622%" height="15" fill="rgb(224,137,22)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="38.1969%" y="341" width="0.0622%" height="15" fill="rgb(254,70,32)" fg:x="3686" fg:w="6"/><text x="38.4469%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.2487%" y="325" width="0.0104%" height="15" fill="rgb(229,75,37)" fg:x="3691" fg:w="1"/><text x="38.4987%" y="335.50"></text></g><g><title>_int_malloc (25 samples, 0.26%)</title><rect x="38.0104%" y="613" width="0.2591%" height="15" fill="rgb(252,64,23)" fg:x="3668" fg:w="25"/><text x="38.2604%" y="623.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="38.2591%" y="597" width="0.0104%" height="15" fill="rgb(232,162,48)" fg:x="3692" fg:w="1"/><text x="38.5091%" y="607.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="38.2694%" y="613" width="0.0104%" height="15" fill="rgb(246,160,12)" fg:x="3693" fg:w="1"/><text x="38.5194%" y="623.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="38.2694%" y="597" width="0.0104%" height="15" fill="rgb(247,166,0)" fg:x="3693" fg:w="1"/><text x="38.5194%" y="607.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="38.2694%" y="581" width="0.0104%" height="15" fill="rgb(249,219,21)" fg:x="3693" fg:w="1"/><text x="38.5194%" y="591.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="38.2798%" y="613" width="0.0311%" height="15" fill="rgb(205,209,3)" fg:x="3694" fg:w="3"/><text x="38.5298%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 0.42%)</title><rect x="37.9275%" y="725" width="0.4249%" height="15" fill="rgb(243,44,1)" fg:x="3660" fg:w="41"/><text x="38.1775%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (41 samples, 0.42%)</title><rect x="37.9275%" y="709" width="0.4249%" height="15" fill="rgb(206,159,16)" fg:x="3660" fg:w="41"/><text x="38.1775%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (41 samples, 0.42%)</title><rect x="37.9275%" y="693" width="0.4249%" height="15" fill="rgb(244,77,30)" fg:x="3660" fg:w="41"/><text x="38.1775%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.41%)</title><rect x="37.9378%" y="677" width="0.4145%" height="15" fill="rgb(218,69,12)" fg:x="3661" fg:w="40"/><text x="38.1878%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.41%)</title><rect x="37.9378%" y="661" width="0.4145%" height="15" fill="rgb(212,87,7)" fg:x="3661" fg:w="40"/><text x="38.1878%" y="671.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.41%)</title><rect x="37.9378%" y="645" width="0.4145%" height="15" fill="rgb(245,114,25)" fg:x="3661" fg:w="40"/><text x="38.1878%" y="655.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.41%)</title><rect x="37.9378%" y="629" width="0.4145%" height="15" fill="rgb(210,61,42)" fg:x="3661" fg:w="40"/><text x="38.1878%" y="639.50"></text></g><g><title>tcache_get (4 samples, 0.04%)</title><rect x="38.3109%" y="613" width="0.0415%" height="15" fill="rgb(211,52,33)" fg:x="3697" fg:w="4"/><text x="38.5609%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (52 samples, 0.54%)</title><rect x="37.9067%" y="821" width="0.5389%" height="15" fill="rgb(234,58,33)" fg:x="3658" fg:w="52"/><text x="38.1567%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (50 samples, 0.52%)</title><rect x="37.9275%" y="805" width="0.5181%" height="15" fill="rgb(220,115,36)" fg:x="3660" fg:w="50"/><text x="38.1775%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.52%)</title><rect x="37.9275%" y="789" width="0.5181%" height="15" fill="rgb(243,153,54)" fg:x="3660" fg:w="50"/><text x="38.1775%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.52%)</title><rect x="37.9275%" y="773" width="0.5181%" height="15" fill="rgb(251,47,18)" fg:x="3660" fg:w="50"/><text x="38.1775%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.52%)</title><rect x="37.9275%" y="757" width="0.5181%" height="15" fill="rgb(242,102,42)" fg:x="3660" fg:w="50"/><text x="38.1775%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.52%)</title><rect x="37.9275%" y="741" width="0.5181%" height="15" fill="rgb(234,31,38)" fg:x="3660" fg:w="50"/><text x="38.1775%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.09%)</title><rect x="38.3523%" y="725" width="0.0933%" height="15" fill="rgb(221,117,51)" fg:x="3701" fg:w="9"/><text x="38.6023%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.09%)</title><rect x="38.3523%" y="709" width="0.0933%" height="15" fill="rgb(212,20,18)" fg:x="3701" fg:w="9"/><text x="38.6023%" y="719.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.08%)</title><rect x="38.3627%" y="693" width="0.0829%" height="15" fill="rgb(245,133,36)" fg:x="3702" fg:w="8"/><text x="38.6127%" y="703.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="38.4663%" y="741" width="0.0311%" height="15" fill="rgb(212,6,19)" fg:x="3712" fg:w="3"/><text x="38.7163%" y="751.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.09%)</title><rect x="38.4456%" y="757" width="0.0933%" height="15" fill="rgb(218,1,36)" fg:x="3710" fg:w="9"/><text x="38.6956%" y="767.50"></text></g><g><title>tcache_get (4 samples, 0.04%)</title><rect x="38.4974%" y="741" width="0.0415%" height="15" fill="rgb(246,84,54)" fg:x="3715" fg:w="4"/><text x="38.7474%" y="751.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="38.5389%" y="757" width="0.0415%" height="15" fill="rgb(242,110,6)" fg:x="3719" fg:w="4"/><text x="38.7889%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="38.5389%" y="741" width="0.0415%" height="15" fill="rgb(214,47,5)" fg:x="3719" fg:w="4"/><text x="38.7889%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.16%)</title><rect x="38.4456%" y="821" width="0.1554%" height="15" fill="rgb(218,159,25)" fg:x="3710" fg:w="15"/><text x="38.6956%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.16%)</title><rect x="38.4456%" y="805" width="0.1554%" height="15" fill="rgb(215,211,28)" fg:x="3710" fg:w="15"/><text x="38.6956%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.16%)</title><rect x="38.4456%" y="789" width="0.1554%" height="15" fill="rgb(238,59,32)" fg:x="3710" fg:w="15"/><text x="38.6956%" y="799.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.16%)</title><rect x="38.4456%" y="773" width="0.1554%" height="15" fill="rgb(226,82,3)" fg:x="3710" fg:w="15"/><text x="38.6956%" y="783.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="38.5803%" y="757" width="0.0207%" height="15" fill="rgb(240,164,32)" fg:x="3723" fg:w="2"/><text x="38.8303%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (1 samples, 0.01%)</title><rect x="38.6010%" y="821" width="0.0104%" height="15" fill="rgb(232,46,7)" fg:x="3725" fg:w="1"/><text x="38.8510%" y="831.50"></text></g><g><title>alloc::slice::hack::into_vec (1 samples, 0.01%)</title><rect x="38.6010%" y="805" width="0.0104%" height="15" fill="rgb(229,129,53)" fg:x="3725" fg:w="1"/><text x="38.8510%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.01%)</title><rect x="38.6010%" y="789" width="0.0104%" height="15" fill="rgb(234,188,29)" fg:x="3725" fg:w="1"/><text x="38.8510%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="38.6321%" y="709" width="0.0207%" height="15" fill="rgb(246,141,4)" fg:x="3728" fg:w="2"/><text x="38.8821%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="38.6425%" y="693" width="0.0104%" height="15" fill="rgb(229,23,39)" fg:x="3729" fg:w="1"/><text x="38.8925%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="39.0259%" y="613" width="0.0104%" height="15" fill="rgb(206,12,3)" fg:x="3766" fg:w="1"/><text x="39.2759%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="613" width="0.0104%" height="15" fill="rgb(252,226,20)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="597" width="0.0104%" height="15" fill="rgb(216,123,35)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="581" width="0.0104%" height="15" fill="rgb(212,68,40)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="565" width="0.0104%" height="15" fill="rgb(254,125,32)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="549" width="0.0104%" height="15" fill="rgb(253,97,22)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="533" width="0.0104%" height="15" fill="rgb(241,101,14)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="517" width="0.0104%" height="15" fill="rgb(238,103,29)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="501" width="0.0104%" height="15" fill="rgb(233,195,47)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.0363%" y="485" width="0.0104%" height="15" fill="rgb(246,218,30)" fg:x="3767" fg:w="1"/><text x="39.2863%" y="495.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.07%)</title><rect x="39.0466%" y="613" width="0.0725%" height="15" fill="rgb(219,145,47)" fg:x="3768" fg:w="7"/><text x="39.2966%" y="623.50"></text></g><g><title>_int_free (18 samples, 0.19%)</title><rect x="39.1192%" y="613" width="0.1865%" height="15" fill="rgb(243,12,26)" fg:x="3775" fg:w="18"/><text x="39.3692%" y="623.50"></text></g><g><title>tcache_put (6 samples, 0.06%)</title><rect x="39.2435%" y="597" width="0.0622%" height="15" fill="rgb(214,87,16)" fg:x="3787" fg:w="6"/><text x="39.4935%" y="607.50"></text></g><g><title>_int_realloc (67 samples, 0.69%)</title><rect x="38.9534%" y="629" width="0.6943%" height="15" fill="rgb(208,99,42)" fg:x="3759" fg:w="67"/><text x="39.2034%" y="639.50"></text></g><g><title>_int_malloc (33 samples, 0.34%)</title><rect x="39.3057%" y="613" width="0.3420%" height="15" fill="rgb(253,99,2)" fg:x="3793" fg:w="33"/><text x="39.5557%" y="623.50"></text></g><g><title>sysmalloc (2 samples, 0.02%)</title><rect x="39.6269%" y="597" width="0.0207%" height="15" fill="rgb(220,168,23)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="607.50"></text></g><g><title>grow_heap (2 samples, 0.02%)</title><rect x="39.6269%" y="581" width="0.0207%" height="15" fill="rgb(242,38,24)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="591.50"></text></g><g><title>__GI___mprotect (2 samples, 0.02%)</title><rect x="39.6269%" y="565" width="0.0207%" height="15" fill="rgb(225,182,9)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="549" width="0.0207%" height="15" fill="rgb(243,178,37)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="533" width="0.0207%" height="15" fill="rgb(232,139,19)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="517" width="0.0207%" height="15" fill="rgb(225,201,24)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="501" width="0.0207%" height="15" fill="rgb(221,47,46)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="485" width="0.0207%" height="15" fill="rgb(249,23,13)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="469" width="0.0207%" height="15" fill="rgb(219,9,5)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="453" width="0.0207%" height="15" fill="rgb(254,171,16)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="437" width="0.0207%" height="15" fill="rgb(230,171,20)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="421" width="0.0207%" height="15" fill="rgb(210,71,41)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="405" width="0.0207%" height="15" fill="rgb(206,173,20)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="389" width="0.0207%" height="15" fill="rgb(233,88,34)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="373" width="0.0207%" height="15" fill="rgb(223,209,46)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="39.6269%" y="357" width="0.0207%" height="15" fill="rgb(250,43,18)" fg:x="3824" fg:w="2"/><text x="39.8769%" y="367.50"></text></g><g><title>__GI___libc_realloc (95 samples, 0.98%)</title><rect x="38.6839%" y="645" width="0.9845%" height="15" fill="rgb(208,13,10)" fg:x="3733" fg:w="95"/><text x="38.9339%" y="655.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="39.6477%" y="629" width="0.0207%" height="15" fill="rgb(212,200,36)" fg:x="3826" fg:w="2"/><text x="39.8977%" y="639.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="39.6580%" y="613" width="0.0104%" height="15" fill="rgb(225,90,30)" fg:x="3827" fg:w="1"/><text x="39.9080%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 1.02%)</title><rect x="38.6839%" y="693" width="1.0155%" height="15" fill="rgb(236,182,39)" fg:x="3733" fg:w="98"/><text x="38.9339%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 1.02%)</title><rect x="38.6839%" y="677" width="1.0155%" height="15" fill="rgb(212,144,35)" fg:x="3733" fg:w="98"/><text x="38.9339%" y="687.50"></text></g><g><title>alloc::alloc::realloc (98 samples, 1.02%)</title><rect x="38.6839%" y="661" width="1.0155%" height="15" fill="rgb(228,63,44)" fg:x="3733" fg:w="98"/><text x="38.9339%" y="671.50"></text></g><g><title>__rdl_realloc (3 samples, 0.03%)</title><rect x="39.6684%" y="645" width="0.0311%" height="15" fill="rgb(228,109,6)" fg:x="3828" fg:w="3"/><text x="39.9184%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="39.6788%" y="629" width="0.0207%" height="15" fill="rgb(238,117,24)" fg:x="3829" fg:w="2"/><text x="39.9288%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="39.6995%" y="693" width="0.0104%" height="15" fill="rgb(242,26,26)" fg:x="3831" fg:w="1"/><text x="39.9495%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (109 samples, 1.13%)</title><rect x="38.6114%" y="773" width="1.1295%" height="15" fill="rgb(221,92,48)" fg:x="3726" fg:w="109"/><text x="38.8614%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (109 samples, 1.13%)</title><rect x="38.6114%" y="757" width="1.1295%" height="15" fill="rgb(209,209,32)" fg:x="3726" fg:w="109"/><text x="38.8614%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (109 samples, 1.13%)</title><rect x="38.6114%" y="741" width="1.1295%" height="15" fill="rgb(221,70,22)" fg:x="3726" fg:w="109"/><text x="38.8614%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (109 samples, 1.13%)</title><rect x="38.6114%" y="725" width="1.1295%" height="15" fill="rgb(248,145,5)" fg:x="3726" fg:w="109"/><text x="38.8614%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 samples, 1.09%)</title><rect x="38.6528%" y="709" width="1.0881%" height="15" fill="rgb(226,116,26)" fg:x="3730" fg:w="105"/><text x="38.9028%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.03%)</title><rect x="39.7098%" y="693" width="0.0311%" height="15" fill="rgb(244,5,17)" fg:x="3832" fg:w="3"/><text x="39.9598%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (117 samples, 1.21%)</title><rect x="38.6114%" y="821" width="1.2124%" height="15" fill="rgb(252,159,33)" fg:x="3726" fg:w="117"/><text x="38.8614%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (117 samples, 1.21%)</title><rect x="38.6114%" y="805" width="1.2124%" height="15" fill="rgb(206,71,0)" fg:x="3726" fg:w="117"/><text x="38.8614%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (117 samples, 1.21%)</title><rect x="38.6114%" y="789" width="1.2124%" height="15" fill="rgb(233,118,54)" fg:x="3726" fg:w="117"/><text x="38.8614%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.08%)</title><rect x="39.7409%" y="773" width="0.0829%" height="15" fill="rgb(234,83,48)" fg:x="3835" fg:w="8"/><text x="39.9909%" y="783.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.08%)</title><rect x="39.7409%" y="757" width="0.0829%" height="15" fill="rgb(228,3,54)" fg:x="3835" fg:w="8"/><text x="39.9909%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8135%" y="741" width="0.0104%" height="15" fill="rgb(226,155,13)" fg:x="3842" fg:w="1"/><text x="40.0635%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8135%" y="725" width="0.0104%" height="15" fill="rgb(241,28,37)" fg:x="3842" fg:w="1"/><text x="40.0635%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8135%" y="709" width="0.0104%" height="15" fill="rgb(233,93,10)" fg:x="3842" fg:w="1"/><text x="40.0635%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8135%" y="693" width="0.0104%" height="15" fill="rgb(225,113,19)" fg:x="3842" fg:w="1"/><text x="40.0635%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="39.8238%" y="757" width="0.0104%" height="15" fill="rgb(241,2,18)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="39.8238%" y="741" width="0.0104%" height="15" fill="rgb(228,207,21)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="39.8238%" y="725" width="0.0104%" height="15" fill="rgb(213,211,35)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="735.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="39.8238%" y="709" width="0.0104%" height="15" fill="rgb(209,83,10)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="719.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="39.8238%" y="693" width="0.0104%" height="15" fill="rgb(209,164,1)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="39.8238%" y="677" width="0.0104%" height="15" fill="rgb(213,184,43)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="687.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="39.8238%" y="661" width="0.0104%" height="15" fill="rgb(231,61,34)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="671.50"></text></g><g><title>grow_heap (1 samples, 0.01%)</title><rect x="39.8238%" y="645" width="0.0104%" height="15" fill="rgb(235,75,3)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="655.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="39.8238%" y="629" width="0.0104%" height="15" fill="rgb(220,106,47)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="613" width="0.0104%" height="15" fill="rgb(210,196,33)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="597" width="0.0104%" height="15" fill="rgb(229,154,42)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="581" width="0.0104%" height="15" fill="rgb(228,114,26)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="565" width="0.0104%" height="15" fill="rgb(208,144,1)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="549" width="0.0104%" height="15" fill="rgb(239,112,37)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="533" width="0.0104%" height="15" fill="rgb(210,96,50)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="517" width="0.0104%" height="15" fill="rgb(222,178,2)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="501" width="0.0104%" height="15" fill="rgb(226,74,18)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="485" width="0.0104%" height="15" fill="rgb(225,67,54)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="469" width="0.0104%" height="15" fill="rgb(251,92,32)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="453" width="0.0104%" height="15" fill="rgb(228,149,22)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="437" width="0.0104%" height="15" fill="rgb(243,54,13)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="39.8238%" y="421" width="0.0104%" height="15" fill="rgb(243,180,28)" fg:x="3843" fg:w="1"/><text x="40.0738%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.04%)</title><rect x="39.8238%" y="821" width="0.0415%" height="15" fill="rgb(208,167,24)" fg:x="3843" fg:w="4"/><text x="40.0738%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.04%)</title><rect x="39.8238%" y="805" width="0.0415%" height="15" fill="rgb(245,73,45)" fg:x="3843" fg:w="4"/><text x="40.0738%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="39.8238%" y="789" width="0.0415%" height="15" fill="rgb(237,203,48)" fg:x="3843" fg:w="4"/><text x="40.0738%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="39.8238%" y="773" width="0.0415%" height="15" fill="rgb(211,197,16)" fg:x="3843" fg:w="4"/><text x="40.0738%" y="783.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="39.8342%" y="757" width="0.0311%" height="15" fill="rgb(243,99,51)" fg:x="3844" fg:w="3"/><text x="40.0842%" y="767.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="39.8549%" y="741" width="0.0104%" height="15" fill="rgb(215,123,29)" fg:x="3846" fg:w="1"/><text x="40.1049%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (32 samples, 0.33%)</title><rect x="39.8653%" y="821" width="0.3316%" height="15" fill="rgb(239,186,37)" fg:x="3847" fg:w="32"/><text x="40.1153%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="805" width="0.0518%" height="15" fill="rgb(252,136,39)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="789" width="0.0518%" height="15" fill="rgb(223,213,32)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="773" width="0.0518%" height="15" fill="rgb(233,115,5)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="757" width="0.0518%" height="15" fill="rgb(207,226,44)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="741" width="0.0518%" height="15" fill="rgb(208,126,0)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="725" width="0.0518%" height="15" fill="rgb(244,66,21)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="709" width="0.0518%" height="15" fill="rgb(222,97,12)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="693" width="0.0518%" height="15" fill="rgb(219,213,19)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="677" width="0.0518%" height="15" fill="rgb(252,169,30)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="661" width="0.0518%" height="15" fill="rgb(206,32,51)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="645" width="0.0518%" height="15" fill="rgb(250,172,42)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="629" width="0.0518%" height="15" fill="rgb(209,34,43)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="613" width="0.0518%" height="15" fill="rgb(223,11,35)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.1451%" y="597" width="0.0518%" height="15" fill="rgb(251,219,26)" fg:x="3874" fg:w="5"/><text x="40.3951%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="40.2176%" y="789" width="0.0207%" height="15" fill="rgb(231,119,3)" fg:x="3881" fg:w="2"/><text x="40.4676%" y="799.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="40.2280%" y="773" width="0.0104%" height="15" fill="rgb(216,97,11)" fg:x="3882" fg:w="1"/><text x="40.4780%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="40.2902%" y="709" width="0.0104%" height="15" fill="rgb(223,59,9)" fg:x="3888" fg:w="1"/><text x="40.5402%" y="719.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14 samples, 0.15%)</title><rect x="40.3627%" y="613" width="0.1451%" height="15" fill="rgb(233,93,31)" fg:x="3895" fg:w="14"/><text x="40.6127%" y="623.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="40.3938%" y="597" width="0.1140%" height="15" fill="rgb(239,81,33)" fg:x="3898" fg:w="11"/><text x="40.6438%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="40.3938%" y="581" width="0.1140%" height="15" fill="rgb(213,120,34)" fg:x="3898" fg:w="11"/><text x="40.6438%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="40.3938%" y="565" width="0.1140%" height="15" fill="rgb(243,49,53)" fg:x="3898" fg:w="11"/><text x="40.6438%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="40.3938%" y="549" width="0.1140%" height="15" fill="rgb(247,216,33)" fg:x="3898" fg:w="11"/><text x="40.6438%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="40.4041%" y="533" width="0.1036%" height="15" fill="rgb(226,26,14)" fg:x="3899" fg:w="10"/><text x="40.6541%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="40.4145%" y="517" width="0.0933%" height="15" fill="rgb(215,49,53)" fg:x="3900" fg:w="9"/><text x="40.6645%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="40.4145%" y="501" width="0.0933%" height="15" fill="rgb(245,162,40)" fg:x="3900" fg:w="9"/><text x="40.6645%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="40.4145%" y="485" width="0.0933%" height="15" fill="rgb(229,68,17)" fg:x="3900" fg:w="9"/><text x="40.6645%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="40.4249%" y="469" width="0.0829%" height="15" fill="rgb(213,182,10)" fg:x="3901" fg:w="8"/><text x="40.6749%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="40.4560%" y="453" width="0.0518%" height="15" fill="rgb(245,125,30)" fg:x="3904" fg:w="5"/><text x="40.7060%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="40.4663%" y="437" width="0.0415%" height="15" fill="rgb(232,202,2)" fg:x="3905" fg:w="4"/><text x="40.7163%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="40.4767%" y="421" width="0.0311%" height="15" fill="rgb(237,140,51)" fg:x="3906" fg:w="3"/><text x="40.7267%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.4870%" y="405" width="0.0207%" height="15" fill="rgb(236,157,25)" fg:x="3907" fg:w="2"/><text x="40.7370%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4974%" y="389" width="0.0104%" height="15" fill="rgb(219,209,0)" fg:x="3908" fg:w="1"/><text x="40.7474%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4974%" y="373" width="0.0104%" height="15" fill="rgb(240,116,54)" fg:x="3908" fg:w="1"/><text x="40.7474%" y="383.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="40.5078%" y="613" width="0.0207%" height="15" fill="rgb(216,10,36)" fg:x="3909" fg:w="2"/><text x="40.7578%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="597" width="0.0207%" height="15" fill="rgb(222,72,44)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="581" width="0.0207%" height="15" fill="rgb(232,159,9)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="565" width="0.0207%" height="15" fill="rgb(210,39,32)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="549" width="0.0207%" height="15" fill="rgb(216,194,45)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="533" width="0.0207%" height="15" fill="rgb(218,18,35)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="517" width="0.0207%" height="15" fill="rgb(207,83,51)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="501" width="0.0207%" height="15" fill="rgb(225,63,43)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="485" width="0.0207%" height="15" fill="rgb(207,57,36)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="469" width="0.0207%" height="15" fill="rgb(216,99,33)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="453" width="0.0207%" height="15" fill="rgb(225,42,16)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="40.5596%" y="437" width="0.0207%" height="15" fill="rgb(220,201,45)" fg:x="3914" fg:w="2"/><text x="40.8096%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.5699%" y="421" width="0.0104%" height="15" fill="rgb(225,33,4)" fg:x="3915" fg:w="1"/><text x="40.8199%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.5699%" y="405" width="0.0104%" height="15" fill="rgb(224,33,50)" fg:x="3915" fg:w="1"/><text x="40.8199%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.5699%" y="389" width="0.0104%" height="15" fill="rgb(246,198,51)" fg:x="3915" fg:w="1"/><text x="40.8199%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.5699%" y="373" width="0.0104%" height="15" fill="rgb(205,22,4)" fg:x="3915" fg:w="1"/><text x="40.8199%" y="383.50"></text></g><g><title>malloc_consolidate (6 samples, 0.06%)</title><rect x="40.5803%" y="597" width="0.0622%" height="15" fill="rgb(206,3,8)" fg:x="3916" fg:w="6"/><text x="40.8303%" y="607.50"></text></g><g><title>[unknown] (82 samples, 0.85%)</title><rect x="40.6736%" y="581" width="0.8497%" height="15" fill="rgb(251,23,15)" fg:x="3925" fg:w="82"/><text x="40.9236%" y="591.50"></text></g><g><title>[unknown] (77 samples, 0.80%)</title><rect x="40.7254%" y="565" width="0.7979%" height="15" fill="rgb(252,88,28)" fg:x="3930" fg:w="77"/><text x="40.9754%" y="575.50"></text></g><g><title>[unknown] (77 samples, 0.80%)</title><rect x="40.7254%" y="549" width="0.7979%" height="15" fill="rgb(212,127,14)" fg:x="3930" fg:w="77"/><text x="40.9754%" y="559.50"></text></g><g><title>[unknown] (77 samples, 0.80%)</title><rect x="40.7254%" y="533" width="0.7979%" height="15" fill="rgb(247,145,37)" fg:x="3930" fg:w="77"/><text x="40.9754%" y="543.50"></text></g><g><title>[unknown] (74 samples, 0.77%)</title><rect x="40.7565%" y="517" width="0.7668%" height="15" fill="rgb(209,117,53)" fg:x="3933" fg:w="74"/><text x="41.0065%" y="527.50"></text></g><g><title>[unknown] (72 samples, 0.75%)</title><rect x="40.7772%" y="501" width="0.7461%" height="15" fill="rgb(212,90,42)" fg:x="3935" fg:w="72"/><text x="41.0272%" y="511.50"></text></g><g><title>[unknown] (68 samples, 0.70%)</title><rect x="40.8187%" y="485" width="0.7047%" height="15" fill="rgb(218,164,37)" fg:x="3939" fg:w="68"/><text x="41.0687%" y="495.50"></text></g><g><title>[unknown] (68 samples, 0.70%)</title><rect x="40.8187%" y="469" width="0.7047%" height="15" fill="rgb(246,65,34)" fg:x="3939" fg:w="68"/><text x="41.0687%" y="479.50"></text></g><g><title>[unknown] (64 samples, 0.66%)</title><rect x="40.8601%" y="453" width="0.6632%" height="15" fill="rgb(231,100,33)" fg:x="3943" fg:w="64"/><text x="41.1101%" y="463.50"></text></g><g><title>[unknown] (61 samples, 0.63%)</title><rect x="40.8912%" y="437" width="0.6321%" height="15" fill="rgb(228,126,14)" fg:x="3946" fg:w="61"/><text x="41.1412%" y="447.50"></text></g><g><title>[unknown] (56 samples, 0.58%)</title><rect x="40.9430%" y="421" width="0.5803%" height="15" fill="rgb(215,173,21)" fg:x="3951" fg:w="56"/><text x="41.1930%" y="431.50"></text></g><g><title>[unknown] (50 samples, 0.52%)</title><rect x="41.0052%" y="405" width="0.5181%" height="15" fill="rgb(210,6,40)" fg:x="3957" fg:w="50"/><text x="41.2552%" y="415.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="41.0777%" y="389" width="0.4456%" height="15" fill="rgb(212,48,18)" fg:x="3964" fg:w="43"/><text x="41.3277%" y="399.50"></text></g><g><title>[unknown] (41 samples, 0.42%)</title><rect x="41.0984%" y="373" width="0.4249%" height="15" fill="rgb(230,214,11)" fg:x="3966" fg:w="41"/><text x="41.3484%" y="383.50"></text></g><g><title>[unknown] (40 samples, 0.41%)</title><rect x="41.1088%" y="357" width="0.4145%" height="15" fill="rgb(254,105,39)" fg:x="3967" fg:w="40"/><text x="41.3588%" y="367.50"></text></g><g><title>sysmalloc (218 samples, 2.26%)</title><rect x="40.6425%" y="597" width="2.2591%" height="15" fill="rgb(245,158,5)" fg:x="3922" fg:w="218"/><text x="40.8925%" y="607.50">s..</text></g><g><title>grow_heap (133 samples, 1.38%)</title><rect x="41.5233%" y="581" width="1.3782%" height="15" fill="rgb(249,208,11)" fg:x="4007" fg:w="133"/><text x="41.7733%" y="591.50"></text></g><g><title>__GI___mprotect (132 samples, 1.37%)</title><rect x="41.5337%" y="565" width="1.3679%" height="15" fill="rgb(210,39,28)" fg:x="4008" fg:w="132"/><text x="41.7837%" y="575.50"></text></g><g><title>[unknown] (131 samples, 1.36%)</title><rect x="41.5440%" y="549" width="1.3575%" height="15" fill="rgb(211,56,53)" fg:x="4009" fg:w="131"/><text x="41.7940%" y="559.50"></text></g><g><title>[unknown] (131 samples, 1.36%)</title><rect x="41.5440%" y="533" width="1.3575%" height="15" fill="rgb(226,201,30)" fg:x="4009" fg:w="131"/><text x="41.7940%" y="543.50"></text></g><g><title>[unknown] (131 samples, 1.36%)</title><rect x="41.5440%" y="517" width="1.3575%" height="15" fill="rgb(239,101,34)" fg:x="4009" fg:w="131"/><text x="41.7940%" y="527.50"></text></g><g><title>[unknown] (131 samples, 1.36%)</title><rect x="41.5440%" y="501" width="1.3575%" height="15" fill="rgb(226,209,5)" fg:x="4009" fg:w="131"/><text x="41.7940%" y="511.50"></text></g><g><title>[unknown] (130 samples, 1.35%)</title><rect x="41.5544%" y="485" width="1.3472%" height="15" fill="rgb(250,105,47)" fg:x="4010" fg:w="130"/><text x="41.8044%" y="495.50"></text></g><g><title>[unknown] (127 samples, 1.32%)</title><rect x="41.5855%" y="469" width="1.3161%" height="15" fill="rgb(230,72,3)" fg:x="4013" fg:w="127"/><text x="41.8355%" y="479.50"></text></g><g><title>[unknown] (121 samples, 1.25%)</title><rect x="41.6477%" y="453" width="1.2539%" height="15" fill="rgb(232,218,39)" fg:x="4019" fg:w="121"/><text x="41.8977%" y="463.50"></text></g><g><title>[unknown] (112 samples, 1.16%)</title><rect x="41.7409%" y="437" width="1.1606%" height="15" fill="rgb(248,166,6)" fg:x="4028" fg:w="112"/><text x="41.9909%" y="447.50"></text></g><g><title>[unknown] (109 samples, 1.13%)</title><rect x="41.7720%" y="421" width="1.1295%" height="15" fill="rgb(247,89,20)" fg:x="4031" fg:w="109"/><text x="42.0220%" y="431.50"></text></g><g><title>[unknown] (106 samples, 1.10%)</title><rect x="41.8031%" y="405" width="1.0984%" height="15" fill="rgb(248,130,54)" fg:x="4034" fg:w="106"/><text x="42.0531%" y="415.50"></text></g><g><title>[unknown] (95 samples, 0.98%)</title><rect x="41.9171%" y="389" width="0.9845%" height="15" fill="rgb(234,196,4)" fg:x="4045" fg:w="95"/><text x="42.1671%" y="399.50"></text></g><g><title>[unknown] (87 samples, 0.90%)</title><rect x="42.0000%" y="373" width="0.9016%" height="15" fill="rgb(250,143,31)" fg:x="4053" fg:w="87"/><text x="42.2500%" y="383.50"></text></g><g><title>[unknown] (82 samples, 0.85%)</title><rect x="42.0518%" y="357" width="0.8497%" height="15" fill="rgb(211,110,34)" fg:x="4058" fg:w="82"/><text x="42.3018%" y="367.50"></text></g><g><title>[unknown] (77 samples, 0.80%)</title><rect x="42.1036%" y="341" width="0.7979%" height="15" fill="rgb(215,124,48)" fg:x="4063" fg:w="77"/><text x="42.3536%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="325" width="0.0104%" height="15" fill="rgb(216,46,13)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="309" width="0.0104%" height="15" fill="rgb(205,184,25)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="293" width="0.0104%" height="15" fill="rgb(228,1,10)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="277" width="0.0104%" height="15" fill="rgb(213,116,27)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="261" width="0.0104%" height="15" fill="rgb(241,95,50)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="245" width="0.0104%" height="15" fill="rgb(238,48,32)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="229" width="0.0104%" height="15" fill="rgb(235,113,49)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="213" width="0.0104%" height="15" fill="rgb(205,127,43)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="197" width="0.0104%" height="15" fill="rgb(250,162,2)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="181" width="0.0104%" height="15" fill="rgb(220,13,41)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="42.8912%" y="165" width="0.0104%" height="15" fill="rgb(249,221,25)" fg:x="4139" fg:w="1"/><text x="43.1412%" y="175.50"></text></g><g><title>_int_realloc (247 samples, 2.56%)</title><rect x="40.3523%" y="629" width="2.5596%" height="15" fill="rgb(215,208,19)" fg:x="3894" fg:w="247"/><text x="40.6023%" y="639.50">_i..</text></g><g><title>_int_malloc (230 samples, 2.38%)</title><rect x="40.5285%" y="613" width="2.3834%" height="15" fill="rgb(236,175,2)" fg:x="3911" fg:w="230"/><text x="40.7785%" y="623.50">_i..</text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="42.9016%" y="597" width="0.0104%" height="15" fill="rgb(241,52,2)" fg:x="4140" fg:w="1"/><text x="43.1516%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (253 samples, 2.62%)</title><rect x="40.3109%" y="693" width="2.6218%" height="15" fill="rgb(248,140,14)" fg:x="3890" fg:w="253"/><text x="40.5609%" y="703.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (253 samples, 2.62%)</title><rect x="40.3109%" y="677" width="2.6218%" height="15" fill="rgb(253,22,42)" fg:x="3890" fg:w="253"/><text x="40.5609%" y="687.50">al..</text></g><g><title>alloc::alloc::realloc (253 samples, 2.62%)</title><rect x="40.3109%" y="661" width="2.6218%" height="15" fill="rgb(234,61,47)" fg:x="3890" fg:w="253"/><text x="40.5609%" y="671.50">al..</text></g><g><title>__GI___libc_realloc (253 samples, 2.62%)</title><rect x="40.3109%" y="645" width="2.6218%" height="15" fill="rgb(208,226,15)" fg:x="3890" fg:w="253"/><text x="40.5609%" y="655.50">__..</text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="42.9119%" y="629" width="0.0207%" height="15" fill="rgb(217,221,4)" fg:x="4141" fg:w="2"/><text x="43.1619%" y="639.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="42.9119%" y="613" width="0.0207%" height="15" fill="rgb(212,174,34)" fg:x="4141" fg:w="2"/><text x="43.1619%" y="623.50"></text></g><g><title>heap_for_ptr (2 samples, 0.02%)</title><rect x="42.9119%" y="597" width="0.0207%" height="15" fill="rgb(253,83,4)" fg:x="4141" fg:w="2"/><text x="43.1619%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="42.9326%" y="693" width="0.0207%" height="15" fill="rgb(250,195,49)" fg:x="4143" fg:w="2"/><text x="43.1826%" y="703.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="42.9430%" y="677" width="0.0104%" height="15" fill="rgb(241,192,25)" fg:x="4144" fg:w="1"/><text x="43.1930%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (257 samples, 2.66%)</title><rect x="40.3005%" y="709" width="2.6632%" height="15" fill="rgb(208,124,10)" fg:x="3889" fg:w="257"/><text x="40.5505%" y="719.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="42.9534%" y="693" width="0.0104%" height="15" fill="rgb(222,33,0)" fg:x="4145" fg:w="1"/><text x="43.2034%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (259 samples, 2.68%)</title><rect x="40.2902%" y="741" width="2.6839%" height="15" fill="rgb(234,209,28)" fg:x="3888" fg:w="259"/><text x="40.5402%" y="751.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (259 samples, 2.68%)</title><rect x="40.2902%" y="725" width="2.6839%" height="15" fill="rgb(224,11,23)" fg:x="3888" fg:w="259"/><text x="40.5402%" y="735.50">al..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="42.9637%" y="709" width="0.0104%" height="15" fill="rgb(232,99,1)" fg:x="4146" fg:w="1"/><text x="43.2137%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="42.9637%" y="693" width="0.0104%" height="15" fill="rgb(237,95,45)" fg:x="4146" fg:w="1"/><text x="43.2137%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (274 samples, 2.84%)</title><rect x="40.2383%" y="789" width="2.8394%" height="15" fill="rgb(208,109,11)" fg:x="3883" fg:w="274"/><text x="40.4883%" y="799.50">co..</text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (274 samples, 2.84%)</title><rect x="40.2383%" y="773" width="2.8394%" height="15" fill="rgb(216,190,48)" fg:x="3883" fg:w="274"/><text x="40.4883%" y="783.50">pa..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (274 samples, 2.84%)</title><rect x="40.2383%" y="757" width="2.8394%" height="15" fill="rgb(251,171,36)" fg:x="3883" fg:w="274"/><text x="40.4883%" y="767.50">al..</text></g><g><title>core::ptr::write (10 samples, 0.10%)</title><rect x="42.9741%" y="741" width="0.1036%" height="15" fill="rgb(230,62,22)" fg:x="4147" fg:w="10"/><text x="43.2241%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="43.0052%" y="725" width="0.0725%" height="15" fill="rgb(225,114,35)" fg:x="4150" fg:w="7"/><text x="43.2552%" y="735.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="43.0052%" y="709" width="0.0725%" height="15" fill="rgb(215,118,42)" fg:x="4150" fg:w="7"/><text x="43.2552%" y="719.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="43.0052%" y="693" width="0.0725%" height="15" fill="rgb(243,119,21)" fg:x="4150" fg:w="7"/><text x="43.2552%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="43.0052%" y="677" width="0.0725%" height="15" fill="rgb(252,177,53)" fg:x="4150" fg:w="7"/><text x="43.2552%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="43.0052%" y="661" width="0.0725%" height="15" fill="rgb(237,209,29)" fg:x="4150" fg:w="7"/><text x="43.2552%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="43.0155%" y="645" width="0.0622%" height="15" fill="rgb(212,65,23)" fg:x="4151" fg:w="6"/><text x="43.2655%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="43.0155%" y="629" width="0.0622%" height="15" fill="rgb(230,222,46)" fg:x="4151" fg:w="6"/><text x="43.2655%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="43.0155%" y="613" width="0.0622%" height="15" fill="rgb(215,135,32)" fg:x="4151" fg:w="6"/><text x="43.2655%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="43.0155%" y="597" width="0.0622%" height="15" fill="rgb(246,101,22)" fg:x="4151" fg:w="6"/><text x="43.2655%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="43.0155%" y="581" width="0.0622%" height="15" fill="rgb(206,107,13)" fg:x="4151" fg:w="6"/><text x="43.2655%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="43.0259%" y="565" width="0.0518%" height="15" fill="rgb(250,100,44)" fg:x="4152" fg:w="5"/><text x="43.2759%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="43.0259%" y="549" width="0.0518%" height="15" fill="rgb(231,147,38)" fg:x="4152" fg:w="5"/><text x="43.2759%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="43.0259%" y="533" width="0.0518%" height="15" fill="rgb(229,8,40)" fg:x="4152" fg:w="5"/><text x="43.2759%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="43.0259%" y="517" width="0.0518%" height="15" fill="rgb(221,135,30)" fg:x="4152" fg:w="5"/><text x="43.2759%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="43.0259%" y="501" width="0.0518%" height="15" fill="rgb(249,193,18)" fg:x="4152" fg:w="5"/><text x="43.2759%" y="511.50"></text></g><g><title>_int_free (11 samples, 0.11%)</title><rect x="43.0881%" y="645" width="0.1140%" height="15" fill="rgb(209,133,39)" fg:x="4158" fg:w="11"/><text x="43.3381%" y="655.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="43.1917%" y="629" width="0.0104%" height="15" fill="rgb(232,100,14)" fg:x="4168" fg:w="1"/><text x="43.4417%" y="639.50"></text></g><g><title>__GI___libc_free (14 samples, 0.15%)</title><rect x="43.0777%" y="661" width="0.1451%" height="15" fill="rgb(224,185,1)" fg:x="4157" fg:w="14"/><text x="43.3277%" y="671.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="43.2021%" y="645" width="0.0207%" height="15" fill="rgb(223,139,8)" fg:x="4169" fg:w="2"/><text x="43.4521%" y="655.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="43.2021%" y="629" width="0.0207%" height="15" fill="rgb(232,213,38)" fg:x="4169" fg:w="2"/><text x="43.4521%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.16%)</title><rect x="43.0777%" y="693" width="0.1554%" height="15" fill="rgb(207,94,22)" fg:x="4157" fg:w="15"/><text x="43.3277%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.16%)</title><rect x="43.0777%" y="677" width="0.1554%" height="15" fill="rgb(219,183,54)" fg:x="4157" fg:w="15"/><text x="43.3277%" y="687.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="43.2228%" y="661" width="0.0104%" height="15" fill="rgb(216,185,54)" fg:x="4171" fg:w="1"/><text x="43.4728%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="43.2228%" y="645" width="0.0104%" height="15" fill="rgb(254,217,39)" fg:x="4171" fg:w="1"/><text x="43.4728%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (16 samples, 0.17%)</title><rect x="43.0777%" y="757" width="0.1658%" height="15" fill="rgb(240,178,23)" fg:x="4157" fg:w="16"/><text x="43.3277%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="43.0777%" y="741" width="0.1658%" height="15" fill="rgb(218,11,47)" fg:x="4157" fg:w="16"/><text x="43.3277%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (16 samples, 0.17%)</title><rect x="43.0777%" y="725" width="0.1658%" height="15" fill="rgb(218,51,51)" fg:x="4157" fg:w="16"/><text x="43.3277%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="43.0777%" y="709" width="0.1658%" height="15" fill="rgb(238,126,27)" fg:x="4157" fg:w="16"/><text x="43.3277%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="43.2332%" y="693" width="0.0104%" height="15" fill="rgb(249,202,22)" fg:x="4172" fg:w="1"/><text x="43.4832%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (295 samples, 3.06%)</title><rect x="40.2073%" y="805" width="3.0570%" height="15" fill="rgb(254,195,49)" fg:x="3880" fg:w="295"/><text x="40.4573%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (18 samples, 0.19%)</title><rect x="43.0777%" y="789" width="0.1865%" height="15" fill="rgb(208,123,14)" fg:x="4157" fg:w="18"/><text x="43.3277%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.19%)</title><rect x="43.0777%" y="773" width="0.1865%" height="15" fill="rgb(224,200,8)" fg:x="4157" fg:w="18"/><text x="43.3277%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,usize)&gt;]&gt; (2 samples, 0.02%)</title><rect x="43.2435%" y="757" width="0.0207%" height="15" fill="rgb(217,61,36)" fg:x="4173" fg:w="2"/><text x="43.4935%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (299 samples, 3.10%)</title><rect x="40.1969%" y="821" width="3.0984%" height="15" fill="rgb(206,35,45)" fg:x="3879" fg:w="299"/><text x="40.4469%" y="831.50">cor..</text></g><g><title>paranagram::utils::find_sum_rec (3 samples, 0.03%)</title><rect x="43.2642%" y="805" width="0.0311%" height="15" fill="rgb(217,65,33)" fg:x="4175" fg:w="3"/><text x="43.5142%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="43.2953%" y="821" width="0.0207%" height="15" fill="rgb(222,158,48)" fg:x="4178" fg:w="2"/><text x="43.5453%" y="831.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="43.2953%" y="805" width="0.0207%" height="15" fill="rgb(254,2,54)" fg:x="4178" fg:w="2"/><text x="43.5453%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="43.2953%" y="789" width="0.0207%" height="15" fill="rgb(250,143,38)" fg:x="4178" fg:w="2"/><text x="43.5453%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="43.2953%" y="773" width="0.0207%" height="15" fill="rgb(248,25,0)" fg:x="4178" fg:w="2"/><text x="43.5453%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="43.3368%" y="725" width="0.0207%" height="15" fill="rgb(206,152,27)" fg:x="4182" fg:w="2"/><text x="43.5868%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3161%" y="821" width="0.0518%" height="15" fill="rgb(240,77,30)" fg:x="4180" fg:w="5"/><text x="43.5661%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3161%" y="805" width="0.0518%" height="15" fill="rgb(231,5,3)" fg:x="4180" fg:w="5"/><text x="43.5661%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="43.3161%" y="789" width="0.0518%" height="15" fill="rgb(207,226,32)" fg:x="4180" fg:w="5"/><text x="43.5661%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="43.3161%" y="773" width="0.0518%" height="15" fill="rgb(222,207,47)" fg:x="4180" fg:w="5"/><text x="43.5661%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="43.3161%" y="757" width="0.0518%" height="15" fill="rgb(229,115,45)" fg:x="4180" fg:w="5"/><text x="43.5661%" y="767.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="43.3161%" y="741" width="0.0518%" height="15" fill="rgb(224,191,6)" fg:x="4180" fg:w="5"/><text x="43.5661%" y="751.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="43.3575%" y="725" width="0.0104%" height="15" fill="rgb(230,227,24)" fg:x="4184" fg:w="1"/><text x="43.6075%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3679%" y="821" width="0.0518%" height="15" fill="rgb(228,80,19)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3679%" y="805" width="0.0518%" height="15" fill="rgb(247,229,0)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3679%" y="789" width="0.0518%" height="15" fill="rgb(237,194,15)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="43.3679%" y="773" width="0.0518%" height="15" fill="rgb(219,203,20)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3679%" y="757" width="0.0518%" height="15" fill="rgb(234,128,8)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="43.3679%" y="741" width="0.0518%" height="15" fill="rgb(248,202,8)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (5 samples, 0.05%)</title><rect x="43.3679%" y="725" width="0.0518%" height="15" fill="rgb(206,104,37)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="43.3679%" y="709" width="0.0518%" height="15" fill="rgb(223,8,27)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="43.3679%" y="693" width="0.0518%" height="15" fill="rgb(216,217,28)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="43.3679%" y="677" width="0.0518%" height="15" fill="rgb(249,199,1)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="687.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="43.3679%" y="661" width="0.0518%" height="15" fill="rgb(240,85,17)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="671.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="43.3679%" y="645" width="0.0518%" height="15" fill="rgb(206,108,45)" fg:x="4185" fg:w="5"/><text x="43.6179%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.03%)</title><rect x="43.9689%" y="805" width="0.0311%" height="15" fill="rgb(245,210,41)" fg:x="4243" fg:w="3"/><text x="44.2189%" y="815.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="43.9689%" y="789" width="0.0311%" height="15" fill="rgb(206,13,37)" fg:x="4243" fg:w="3"/><text x="44.2189%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="44.0000%" y="805" width="0.0207%" height="15" fill="rgb(250,61,18)" fg:x="4246" fg:w="2"/><text x="44.2500%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (27 samples, 0.28%)</title><rect x="44.0207%" y="773" width="0.2798%" height="15" fill="rgb(235,172,48)" fg:x="4248" fg:w="27"/><text x="44.2707%" y="783.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="44.2694%" y="757" width="0.0311%" height="15" fill="rgb(249,201,17)" fg:x="4272" fg:w="3"/><text x="44.5194%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.34%)</title><rect x="44.0207%" y="805" width="0.3420%" height="15" fill="rgb(219,208,6)" fg:x="4248" fg:w="33"/><text x="44.2707%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (33 samples, 0.34%)</title><rect x="44.0207%" y="789" width="0.3420%" height="15" fill="rgb(248,31,23)" fg:x="4248" fg:w="33"/><text x="44.2707%" y="799.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (6 samples, 0.06%)</title><rect x="44.3005%" y="773" width="0.0622%" height="15" fill="rgb(245,15,42)" fg:x="4275" fg:w="6"/><text x="44.5505%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.06%)</title><rect x="44.3005%" y="757" width="0.0622%" height="15" fill="rgb(222,217,39)" fg:x="4275" fg:w="6"/><text x="44.5505%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (6 samples, 0.06%)</title><rect x="44.3005%" y="741" width="0.0622%" height="15" fill="rgb(210,219,27)" fg:x="4275" fg:w="6"/><text x="44.5505%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="44.4974%" y="597" width="0.0104%" height="15" fill="rgb(252,166,36)" fg:x="4294" fg:w="1"/><text x="44.7474%" y="607.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.28%)</title><rect x="44.4041%" y="613" width="0.2798%" height="15" fill="rgb(245,132,34)" fg:x="4285" fg:w="27"/><text x="44.6541%" y="623.50"></text></g><g><title>tcache_get (17 samples, 0.18%)</title><rect x="44.5078%" y="597" width="0.1762%" height="15" fill="rgb(236,54,3)" fg:x="4295" fg:w="17"/><text x="44.7578%" y="607.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="44.6839%" y="613" width="0.0311%" height="15" fill="rgb(241,173,43)" fg:x="4312" fg:w="3"/><text x="44.9339%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.03%)</title><rect x="44.6839%" y="597" width="0.0311%" height="15" fill="rgb(215,190,9)" fg:x="4312" fg:w="3"/><text x="44.9339%" y="607.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="44.7150%" y="613" width="0.0104%" height="15" fill="rgb(242,101,16)" fg:x="4315" fg:w="1"/><text x="44.9650%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.38%)</title><rect x="44.3731%" y="709" width="0.3834%" height="15" fill="rgb(223,190,21)" fg:x="4282" fg:w="37"/><text x="44.6231%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.38%)</title><rect x="44.3731%" y="693" width="0.3834%" height="15" fill="rgb(215,228,25)" fg:x="4282" fg:w="37"/><text x="44.6231%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.38%)</title><rect x="44.3731%" y="677" width="0.3834%" height="15" fill="rgb(225,36,22)" fg:x="4282" fg:w="37"/><text x="44.6231%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.35%)</title><rect x="44.4041%" y="661" width="0.3523%" height="15" fill="rgb(251,106,46)" fg:x="4285" fg:w="34"/><text x="44.6541%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.35%)</title><rect x="44.4041%" y="645" width="0.3523%" height="15" fill="rgb(208,90,1)" fg:x="4285" fg:w="34"/><text x="44.6541%" y="655.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.35%)</title><rect x="44.4041%" y="629" width="0.3523%" height="15" fill="rgb(243,10,4)" fg:x="4285" fg:w="34"/><text x="44.6541%" y="639.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.03%)</title><rect x="44.7254%" y="613" width="0.0311%" height="15" fill="rgb(212,137,27)" fg:x="4316" fg:w="3"/><text x="44.9754%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (46 samples, 0.48%)</title><rect x="44.3627%" y="805" width="0.4767%" height="15" fill="rgb(231,220,49)" fg:x="4281" fg:w="46"/><text x="44.6127%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (45 samples, 0.47%)</title><rect x="44.3731%" y="789" width="0.4663%" height="15" fill="rgb(237,96,20)" fg:x="4282" fg:w="45"/><text x="44.6231%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.47%)</title><rect x="44.3731%" y="773" width="0.4663%" height="15" fill="rgb(239,229,30)" fg:x="4282" fg:w="45"/><text x="44.6231%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.47%)</title><rect x="44.3731%" y="757" width="0.4663%" height="15" fill="rgb(219,65,33)" fg:x="4282" fg:w="45"/><text x="44.6231%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.47%)</title><rect x="44.3731%" y="741" width="0.4663%" height="15" fill="rgb(243,134,7)" fg:x="4282" fg:w="45"/><text x="44.6231%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.47%)</title><rect x="44.3731%" y="725" width="0.4663%" height="15" fill="rgb(216,177,54)" fg:x="4282" fg:w="45"/><text x="44.6231%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.08%)</title><rect x="44.7565%" y="709" width="0.0829%" height="15" fill="rgb(211,160,20)" fg:x="4319" fg:w="8"/><text x="45.0065%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.08%)</title><rect x="44.7565%" y="693" width="0.0829%" height="15" fill="rgb(239,85,39)" fg:x="4319" fg:w="8"/><text x="45.0065%" y="703.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.07%)</title><rect x="44.7668%" y="677" width="0.0725%" height="15" fill="rgb(232,125,22)" fg:x="4320" fg:w="7"/><text x="45.0168%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="44.8394%" y="805" width="0.0207%" height="15" fill="rgb(244,57,34)" fg:x="4327" fg:w="2"/><text x="45.0894%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="789" width="0.0104%" height="15" fill="rgb(214,203,32)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="773" width="0.0104%" height="15" fill="rgb(207,58,43)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="757" width="0.0104%" height="15" fill="rgb(215,193,15)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="741" width="0.0104%" height="15" fill="rgb(232,15,44)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="725" width="0.0104%" height="15" fill="rgb(212,3,48)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="709" width="0.0104%" height="15" fill="rgb(218,128,7)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.8497%" y="693" width="0.0104%" height="15" fill="rgb(226,216,39)" fg:x="4328" fg:w="1"/><text x="45.0997%" y="703.50"></text></g><g><title>checked_request2size (6 samples, 0.06%)</title><rect x="44.9637%" y="725" width="0.0622%" height="15" fill="rgb(243,47,51)" fg:x="4339" fg:w="6"/><text x="45.2137%" y="735.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.30%)</title><rect x="44.8601%" y="741" width="0.3005%" height="15" fill="rgb(241,183,40)" fg:x="4329" fg:w="29"/><text x="45.1101%" y="751.50"></text></g><g><title>tcache_get (13 samples, 0.13%)</title><rect x="45.0259%" y="725" width="0.1347%" height="15" fill="rgb(231,217,32)" fg:x="4345" fg:w="13"/><text x="45.2759%" y="735.50"></text></g><g><title>__rdl_alloc (6 samples, 0.06%)</title><rect x="45.1606%" y="741" width="0.0622%" height="15" fill="rgb(229,61,38)" fg:x="4358" fg:w="6"/><text x="45.4106%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.06%)</title><rect x="45.1606%" y="725" width="0.0622%" height="15" fill="rgb(225,210,5)" fg:x="4358" fg:w="6"/><text x="45.4106%" y="735.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="45.2228%" y="741" width="0.0207%" height="15" fill="rgb(231,79,45)" fg:x="4364" fg:w="2"/><text x="45.4728%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.41%)</title><rect x="44.8601%" y="805" width="0.4145%" height="15" fill="rgb(224,100,7)" fg:x="4329" fg:w="40"/><text x="45.1101%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.41%)</title><rect x="44.8601%" y="789" width="0.4145%" height="15" fill="rgb(241,198,18)" fg:x="4329" fg:w="40"/><text x="45.1101%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.41%)</title><rect x="44.8601%" y="773" width="0.4145%" height="15" fill="rgb(252,97,53)" fg:x="4329" fg:w="40"/><text x="45.1101%" y="783.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.41%)</title><rect x="44.8601%" y="757" width="0.4145%" height="15" fill="rgb(220,88,7)" fg:x="4329" fg:w="40"/><text x="45.1101%" y="767.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.03%)</title><rect x="45.2435%" y="741" width="0.0311%" height="15" fill="rgb(213,176,14)" fg:x="4366" fg:w="3"/><text x="45.4935%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (3 samples, 0.03%)</title><rect x="45.2746%" y="805" width="0.0311%" height="15" fill="rgb(246,73,7)" fg:x="4369" fg:w="3"/><text x="45.5246%" y="815.50"></text></g><g><title>alloc::slice::hack::into_vec (3 samples, 0.03%)</title><rect x="45.2746%" y="789" width="0.0311%" height="15" fill="rgb(245,64,36)" fg:x="4369" fg:w="3"/><text x="45.5246%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (3 samples, 0.03%)</title><rect x="45.2746%" y="773" width="0.0311%" height="15" fill="rgb(245,80,10)" fg:x="4369" fg:w="3"/><text x="45.5246%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="45.3057%" y="757" width="0.0104%" height="15" fill="rgb(232,107,50)" fg:x="4372" fg:w="1"/><text x="45.5557%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="45.3679%" y="693" width="0.0104%" height="15" fill="rgb(253,3,0)" fg:x="4378" fg:w="1"/><text x="45.6179%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.06%)</title><rect x="45.3782%" y="693" width="0.0622%" height="15" fill="rgb(212,99,53)" fg:x="4379" fg:w="6"/><text x="45.6282%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="45.4301%" y="677" width="0.0104%" height="15" fill="rgb(249,111,54)" fg:x="4384" fg:w="1"/><text x="45.6801%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="613" width="0.0518%" height="15" fill="rgb(249,55,30)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="597" width="0.0518%" height="15" fill="rgb(237,47,42)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="581" width="0.0518%" height="15" fill="rgb(211,20,18)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="565" width="0.0518%" height="15" fill="rgb(231,203,46)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="549" width="0.0518%" height="15" fill="rgb(237,142,3)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="533" width="0.0518%" height="15" fill="rgb(241,107,1)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="517" width="0.0518%" height="15" fill="rgb(229,83,13)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="501" width="0.0518%" height="15" fill="rgb(241,91,40)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="485" width="0.0518%" height="15" fill="rgb(225,3,45)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="469" width="0.0518%" height="15" fill="rgb(244,223,14)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="453" width="0.0518%" height="15" fill="rgb(224,124,37)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="437" width="0.0518%" height="15" fill="rgb(251,171,30)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="421" width="0.0518%" height="15" fill="rgb(236,46,54)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.2176%" y="405" width="0.0518%" height="15" fill="rgb(245,213,5)" fg:x="4460" fg:w="5"/><text x="46.4676%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="46.4456%" y="597" width="0.0104%" height="15" fill="rgb(230,144,27)" fg:x="4482" fg:w="1"/><text x="46.6956%" y="607.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13 samples, 0.13%)</title><rect x="46.4560%" y="597" width="0.1347%" height="15" fill="rgb(220,86,6)" fg:x="4483" fg:w="13"/><text x="46.7060%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="581" width="0.0518%" height="15" fill="rgb(240,20,13)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="565" width="0.0518%" height="15" fill="rgb(217,89,34)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="549" width="0.0518%" height="15" fill="rgb(229,13,5)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="533" width="0.0518%" height="15" fill="rgb(244,67,35)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="517" width="0.0518%" height="15" fill="rgb(221,40,2)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="501" width="0.0518%" height="15" fill="rgb(237,157,21)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="485" width="0.0518%" height="15" fill="rgb(222,94,11)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="469" width="0.0518%" height="15" fill="rgb(249,113,6)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="453" width="0.0518%" height="15" fill="rgb(238,137,36)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="437" width="0.0518%" height="15" fill="rgb(210,102,26)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="421" width="0.0518%" height="15" fill="rgb(218,30,30)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="405" width="0.0518%" height="15" fill="rgb(214,67,26)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="389" width="0.0518%" height="15" fill="rgb(251,9,53)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="46.5389%" y="373" width="0.0518%" height="15" fill="rgb(228,204,25)" fg:x="4491" fg:w="5"/><text x="46.7889%" y="383.50"></text></g><g><title>_int_free (27 samples, 0.28%)</title><rect x="46.5907%" y="597" width="0.2798%" height="15" fill="rgb(207,153,8)" fg:x="4496" fg:w="27"/><text x="46.8407%" y="607.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="46.8497%" y="581" width="0.0207%" height="15" fill="rgb(242,9,16)" fg:x="4521" fg:w="2"/><text x="47.0997%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="47.5751%" y="581" width="0.0104%" height="15" fill="rgb(217,211,10)" fg:x="4591" fg:w="1"/><text x="47.8251%" y="591.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="47.5855%" y="581" width="0.0207%" height="15" fill="rgb(219,228,52)" fg:x="4592" fg:w="2"/><text x="47.8355%" y="591.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="47.6062%" y="581" width="0.0104%" height="15" fill="rgb(231,92,29)" fg:x="4594" fg:w="1"/><text x="47.8562%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="47.6166%" y="565" width="0.0311%" height="15" fill="rgb(232,8,23)" fg:x="4595" fg:w="3"/><text x="47.8666%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="47.6269%" y="549" width="0.0207%" height="15" fill="rgb(216,211,34)" fg:x="4596" fg:w="2"/><text x="47.8769%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="47.6269%" y="533" width="0.0207%" height="15" fill="rgb(236,151,0)" fg:x="4596" fg:w="2"/><text x="47.8769%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="47.6269%" y="517" width="0.0207%" height="15" fill="rgb(209,168,3)" fg:x="4596" fg:w="2"/><text x="47.8769%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="47.6269%" y="501" width="0.0207%" height="15" fill="rgb(208,129,28)" fg:x="4596" fg:w="2"/><text x="47.8769%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="47.6269%" y="485" width="0.0207%" height="15" fill="rgb(229,78,22)" fg:x="4596" fg:w="2"/><text x="47.8769%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="47.6269%" y="469" width="0.0207%" height="15" fill="rgb(228,187,13)" fg:x="4596" fg:w="2"/><text x="47.8769%" y="479.50"></text></g><g><title>_int_realloc (142 samples, 1.47%)</title><rect x="46.2694%" y="613" width="1.4715%" height="15" fill="rgb(240,119,24)" fg:x="4465" fg:w="142"/><text x="46.5194%" y="623.50"></text></g><g><title>_int_malloc (84 samples, 0.87%)</title><rect x="46.8705%" y="597" width="0.8705%" height="15" fill="rgb(209,194,42)" fg:x="4523" fg:w="84"/><text x="47.1205%" y="607.50"></text></g><g><title>sysmalloc (12 samples, 0.12%)</title><rect x="47.6166%" y="581" width="0.1244%" height="15" fill="rgb(247,200,46)" fg:x="4595" fg:w="12"/><text x="47.8666%" y="591.50"></text></g><g><title>grow_heap (9 samples, 0.09%)</title><rect x="47.6477%" y="565" width="0.0933%" height="15" fill="rgb(218,76,16)" fg:x="4598" fg:w="9"/><text x="47.8977%" y="575.50"></text></g><g><title>__GI___mprotect (9 samples, 0.09%)</title><rect x="47.6477%" y="549" width="0.0933%" height="15" fill="rgb(225,21,48)" fg:x="4598" fg:w="9"/><text x="47.8977%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="47.6477%" y="533" width="0.0933%" height="15" fill="rgb(239,223,50)" fg:x="4598" fg:w="9"/><text x="47.8977%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="47.6477%" y="517" width="0.0933%" height="15" fill="rgb(244,45,21)" fg:x="4598" fg:w="9"/><text x="47.8977%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.09%)</title><rect x="47.6477%" y="501" width="0.0933%" height="15" fill="rgb(232,33,43)" fg:x="4598" fg:w="9"/><text x="47.8977%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="47.6580%" y="485" width="0.0829%" height="15" fill="rgb(209,8,3)" fg:x="4599" fg:w="8"/><text x="47.9080%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="47.6580%" y="469" width="0.0829%" height="15" fill="rgb(214,25,53)" fg:x="4599" fg:w="8"/><text x="47.9080%" y="479.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="47.6580%" y="453" width="0.0829%" height="15" fill="rgb(254,186,54)" fg:x="4599" fg:w="8"/><text x="47.9080%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="47.6684%" y="437" width="0.0725%" height="15" fill="rgb(208,174,49)" fg:x="4600" fg:w="7"/><text x="47.9184%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="47.6788%" y="421" width="0.0622%" height="15" fill="rgb(233,191,51)" fg:x="4601" fg:w="6"/><text x="47.9288%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="47.6788%" y="405" width="0.0622%" height="15" fill="rgb(222,134,10)" fg:x="4601" fg:w="6"/><text x="47.9288%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="47.6788%" y="389" width="0.0622%" height="15" fill="rgb(230,226,20)" fg:x="4601" fg:w="6"/><text x="47.9288%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="47.6788%" y="373" width="0.0622%" height="15" fill="rgb(251,111,25)" fg:x="4601" fg:w="6"/><text x="47.9288%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="47.6891%" y="357" width="0.0518%" height="15" fill="rgb(224,40,46)" fg:x="4602" fg:w="5"/><text x="47.9391%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="47.6891%" y="341" width="0.0518%" height="15" fill="rgb(236,108,47)" fg:x="4602" fg:w="5"/><text x="47.9391%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="47.6891%" y="325" width="0.0518%" height="15" fill="rgb(234,93,0)" fg:x="4602" fg:w="5"/><text x="47.9391%" y="335.50"></text></g><g><title>arena_for_chunk (7 samples, 0.07%)</title><rect x="47.7409%" y="613" width="0.0725%" height="15" fill="rgb(224,213,32)" fg:x="4607" fg:w="7"/><text x="47.9909%" y="623.50"></text></g><g><title>arena_for_chunk (7 samples, 0.07%)</title><rect x="47.7409%" y="597" width="0.0725%" height="15" fill="rgb(251,11,48)" fg:x="4607" fg:w="7"/><text x="47.9909%" y="607.50"></text></g><g><title>heap_for_ptr (3 samples, 0.03%)</title><rect x="47.7824%" y="581" width="0.0311%" height="15" fill="rgb(236,173,5)" fg:x="4611" fg:w="3"/><text x="48.0324%" y="591.50"></text></g><g><title>__GI___libc_realloc (228 samples, 2.36%)</title><rect x="45.4819%" y="629" width="2.3627%" height="15" fill="rgb(230,95,12)" fg:x="4389" fg:w="228"/><text x="45.7319%" y="639.50">__..</text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="47.8135%" y="613" width="0.0311%" height="15" fill="rgb(232,209,1)" fg:x="4614" fg:w="3"/><text x="48.0635%" y="623.50"></text></g><g><title>__rdl_realloc (7 samples, 0.07%)</title><rect x="47.8446%" y="629" width="0.0725%" height="15" fill="rgb(232,6,1)" fg:x="4617" fg:w="7"/><text x="48.0946%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.05%)</title><rect x="47.8653%" y="613" width="0.0518%" height="15" fill="rgb(210,224,50)" fg:x="4619" fg:w="5"/><text x="48.1153%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (236 samples, 2.45%)</title><rect x="45.4819%" y="677" width="2.4456%" height="15" fill="rgb(228,127,35)" fg:x="4389" fg:w="236"/><text x="45.7319%" y="687.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (236 samples, 2.45%)</title><rect x="45.4819%" y="661" width="2.4456%" height="15" fill="rgb(245,102,45)" fg:x="4389" fg:w="236"/><text x="45.7319%" y="671.50">al..</text></g><g><title>alloc::alloc::realloc (236 samples, 2.45%)</title><rect x="45.4819%" y="645" width="2.4456%" height="15" fill="rgb(214,1,49)" fg:x="4389" fg:w="236"/><text x="45.7319%" y="655.50">al..</text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="47.9171%" y="629" width="0.0104%" height="15" fill="rgb(226,163,40)" fg:x="4624" fg:w="1"/><text x="48.1671%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="47.9275%" y="677" width="0.0104%" height="15" fill="rgb(239,212,28)" fg:x="4625" fg:w="1"/><text x="48.1775%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (242 samples, 2.51%)</title><rect x="45.4404%" y="693" width="2.5078%" height="15" fill="rgb(220,20,13)" fg:x="4385" fg:w="242"/><text x="45.6904%" y="703.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="47.9378%" y="677" width="0.0104%" height="15" fill="rgb(210,164,35)" fg:x="4626" fg:w="1"/><text x="48.1878%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.04%)</title><rect x="47.9482%" y="693" width="0.0415%" height="15" fill="rgb(248,109,41)" fg:x="4627" fg:w="4"/><text x="48.1982%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.04%)</title><rect x="47.9482%" y="677" width="0.0415%" height="15" fill="rgb(238,23,50)" fg:x="4627" fg:w="4"/><text x="48.1982%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (260 samples, 2.69%)</title><rect x="45.3161%" y="757" width="2.6943%" height="15" fill="rgb(211,48,49)" fg:x="4373" fg:w="260"/><text x="45.5661%" y="767.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (260 samples, 2.69%)</title><rect x="45.3161%" y="741" width="2.6943%" height="15" fill="rgb(223,36,21)" fg:x="4373" fg:w="260"/><text x="45.5661%" y="751.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (258 samples, 2.67%)</title><rect x="45.3368%" y="725" width="2.6736%" height="15" fill="rgb(207,123,46)" fg:x="4375" fg:w="258"/><text x="45.5868%" y="735.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (258 samples, 2.67%)</title><rect x="45.3368%" y="709" width="2.6736%" height="15" fill="rgb(240,218,32)" fg:x="4375" fg:w="258"/><text x="45.5868%" y="719.50">al..</text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="47.9896%" y="693" width="0.0207%" height="15" fill="rgb(252,5,43)" fg:x="4631" fg:w="2"/><text x="48.2396%" y="703.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="47.9896%" y="677" width="0.0207%" height="15" fill="rgb(252,84,19)" fg:x="4631" fg:w="2"/><text x="48.2396%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="47.9896%" y="661" width="0.0207%" height="15" fill="rgb(243,152,39)" fg:x="4631" fg:w="2"/><text x="48.2396%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="48.0104%" y="757" width="0.0415%" height="15" fill="rgb(234,160,15)" fg:x="4633" fg:w="4"/><text x="48.2604%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.04%)</title><rect x="48.0104%" y="741" width="0.0415%" height="15" fill="rgb(237,34,20)" fg:x="4633" fg:w="4"/><text x="48.2604%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (266 samples, 2.76%)</title><rect x="45.3057%" y="773" width="2.7565%" height="15" fill="rgb(229,97,13)" fg:x="4372" fg:w="266"/><text x="45.5557%" y="783.50">al..</text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="48.0518%" y="757" width="0.0104%" height="15" fill="rgb(234,71,50)" fg:x="4637" fg:w="1"/><text x="48.3018%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (268 samples, 2.78%)</title><rect x="45.3057%" y="805" width="2.7772%" height="15" fill="rgb(253,155,4)" fg:x="4372" fg:w="268"/><text x="45.5557%" y="815.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (268 samples, 2.78%)</title><rect x="45.3057%" y="789" width="2.7772%" height="15" fill="rgb(222,185,37)" fg:x="4372" fg:w="268"/><text x="45.5557%" y="799.50">&lt;a..</text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="48.0622%" y="773" width="0.0207%" height="15" fill="rgb(251,177,13)" fg:x="4638" fg:w="2"/><text x="48.3122%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="48.0933%" y="757" width="0.0104%" height="15" fill="rgb(250,179,40)" fg:x="4641" fg:w="1"/><text x="48.3433%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="629" width="0.0518%" height="15" fill="rgb(242,44,2)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="613" width="0.0518%" height="15" fill="rgb(216,177,13)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="597" width="0.0518%" height="15" fill="rgb(216,106,43)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="581" width="0.0518%" height="15" fill="rgb(216,183,2)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="565" width="0.0518%" height="15" fill="rgb(249,75,3)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="549" width="0.0518%" height="15" fill="rgb(219,67,39)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="533" width="0.0518%" height="15" fill="rgb(253,228,2)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="517" width="0.0518%" height="15" fill="rgb(235,138,27)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="501" width="0.0518%" height="15" fill="rgb(236,97,51)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="485" width="0.0518%" height="15" fill="rgb(240,80,30)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="469" width="0.0518%" height="15" fill="rgb(230,178,19)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="453" width="0.0518%" height="15" fill="rgb(210,190,27)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="437" width="0.0518%" height="15" fill="rgb(222,107,31)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="421" width="0.0518%" height="15" fill="rgb(216,127,34)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="48.1347%" y="405" width="0.0518%" height="15" fill="rgb(234,116,52)" fg:x="4645" fg:w="5"/><text x="48.3847%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.10%)</title><rect x="48.1036%" y="741" width="0.1036%" height="15" fill="rgb(222,124,15)" fg:x="4642" fg:w="10"/><text x="48.3536%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.10%)</title><rect x="48.1036%" y="725" width="0.1036%" height="15" fill="rgb(231,179,28)" fg:x="4642" fg:w="10"/><text x="48.3536%" y="735.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.10%)</title><rect x="48.1036%" y="709" width="0.1036%" height="15" fill="rgb(226,93,45)" fg:x="4642" fg:w="10"/><text x="48.3536%" y="719.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.10%)</title><rect x="48.1036%" y="693" width="0.1036%" height="15" fill="rgb(215,8,51)" fg:x="4642" fg:w="10"/><text x="48.3536%" y="703.50"></text></g><g><title>_int_realloc (8 samples, 0.08%)</title><rect x="48.1244%" y="677" width="0.0829%" height="15" fill="rgb(223,106,5)" fg:x="4644" fg:w="8"/><text x="48.3744%" y="687.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="48.1244%" y="661" width="0.0829%" height="15" fill="rgb(250,191,5)" fg:x="4644" fg:w="8"/><text x="48.3744%" y="671.50"></text></g><g><title>sysmalloc (7 samples, 0.07%)</title><rect x="48.1347%" y="645" width="0.0725%" height="15" fill="rgb(242,132,44)" fg:x="4645" fg:w="7"/><text x="48.3847%" y="655.50"></text></g><g><title>grow_heap (2 samples, 0.02%)</title><rect x="48.1865%" y="629" width="0.0207%" height="15" fill="rgb(251,152,29)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="639.50"></text></g><g><title>__GI___mprotect (2 samples, 0.02%)</title><rect x="48.1865%" y="613" width="0.0207%" height="15" fill="rgb(218,179,5)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="597" width="0.0207%" height="15" fill="rgb(227,67,19)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="581" width="0.0207%" height="15" fill="rgb(233,119,31)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="565" width="0.0207%" height="15" fill="rgb(241,120,22)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="549" width="0.0207%" height="15" fill="rgb(224,102,30)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="533" width="0.0207%" height="15" fill="rgb(210,164,37)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="517" width="0.0207%" height="15" fill="rgb(226,191,16)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="501" width="0.0207%" height="15" fill="rgb(214,40,45)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="48.1865%" y="485" width="0.0207%" height="15" fill="rgb(244,29,26)" fg:x="4650" fg:w="2"/><text x="48.4365%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.1969%" y="469" width="0.0104%" height="15" fill="rgb(216,16,5)" fg:x="4651" fg:w="1"/><text x="48.4469%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.1969%" y="453" width="0.0104%" height="15" fill="rgb(249,76,35)" fg:x="4651" fg:w="1"/><text x="48.4469%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.1969%" y="437" width="0.0104%" height="15" fill="rgb(207,11,44)" fg:x="4651" fg:w="1"/><text x="48.4469%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.1969%" y="421" width="0.0104%" height="15" fill="rgb(228,190,49)" fg:x="4651" fg:w="1"/><text x="48.4469%" y="431.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="48.2280%" y="725" width="0.0104%" height="15" fill="rgb(214,173,12)" fg:x="4654" fg:w="1"/><text x="48.4780%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.17%)</title><rect x="48.0829%" y="805" width="0.1658%" height="15" fill="rgb(218,26,35)" fg:x="4640" fg:w="16"/><text x="48.3329%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.17%)</title><rect x="48.0829%" y="789" width="0.1658%" height="15" fill="rgb(220,200,19)" fg:x="4640" fg:w="16"/><text x="48.3329%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.17%)</title><rect x="48.0829%" y="773" width="0.1658%" height="15" fill="rgb(239,95,49)" fg:x="4640" fg:w="16"/><text x="48.3329%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.15%)</title><rect x="48.1036%" y="757" width="0.1451%" height="15" fill="rgb(235,85,53)" fg:x="4642" fg:w="14"/><text x="48.3536%" y="767.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="48.2073%" y="741" width="0.0415%" height="15" fill="rgb(233,133,31)" fg:x="4652" fg:w="4"/><text x="48.4573%" y="751.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="48.2383%" y="725" width="0.0104%" height="15" fill="rgb(218,25,20)" fg:x="4655" fg:w="1"/><text x="48.4883%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (33 samples, 0.34%)</title><rect x="48.2487%" y="805" width="0.3420%" height="15" fill="rgb(252,210,38)" fg:x="4656" fg:w="33"/><text x="48.4987%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="789" width="0.0104%" height="15" fill="rgb(242,134,21)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="773" width="0.0104%" height="15" fill="rgb(213,28,48)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="757" width="0.0104%" height="15" fill="rgb(250,196,2)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="741" width="0.0104%" height="15" fill="rgb(227,5,17)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="725" width="0.0104%" height="15" fill="rgb(221,226,24)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="709" width="0.0104%" height="15" fill="rgb(211,5,48)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="693" width="0.0104%" height="15" fill="rgb(219,150,6)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="677" width="0.0104%" height="15" fill="rgb(251,46,16)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="661" width="0.0104%" height="15" fill="rgb(220,204,40)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="48.6010%" y="645" width="0.0104%" height="15" fill="rgb(211,85,2)" fg:x="4690" fg:w="1"/><text x="48.8510%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="48.6218%" y="773" width="0.0415%" height="15" fill="rgb(229,17,7)" fg:x="4692" fg:w="4"/><text x="48.8718%" y="783.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="48.6528%" y="757" width="0.0104%" height="15" fill="rgb(239,72,28)" fg:x="4695" fg:w="1"/><text x="48.9028%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="48.6839%" y="693" width="0.0104%" height="15" fill="rgb(230,47,54)" fg:x="4698" fg:w="1"/><text x="48.9339%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="48.8083%" y="597" width="0.0104%" height="15" fill="rgb(214,50,8)" fg:x="4710" fg:w="1"/><text x="49.0583%" y="607.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.02%)</title><rect x="48.8187%" y="597" width="0.0207%" height="15" fill="rgb(216,198,43)" fg:x="4711" fg:w="2"/><text x="49.0687%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="48.8394%" y="597" width="0.0207%" height="15" fill="rgb(234,20,35)" fg:x="4713" fg:w="2"/><text x="49.0894%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="581" width="0.0518%" height="15" fill="rgb(254,45,19)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="565" width="0.0518%" height="15" fill="rgb(219,14,44)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="549" width="0.0518%" height="15" fill="rgb(217,220,26)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="533" width="0.0518%" height="15" fill="rgb(213,158,28)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="517" width="0.0518%" height="15" fill="rgb(252,51,52)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="501" width="0.0518%" height="15" fill="rgb(246,89,16)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="485" width="0.0518%" height="15" fill="rgb(216,158,49)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="469" width="0.0518%" height="15" fill="rgb(236,107,19)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="453" width="0.0518%" height="15" fill="rgb(228,185,30)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="437" width="0.0518%" height="15" fill="rgb(246,134,8)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="421" width="0.0518%" height="15" fill="rgb(214,143,50)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="405" width="0.0518%" height="15" fill="rgb(228,75,8)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="389" width="0.0518%" height="15" fill="rgb(207,175,4)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="373" width="0.0518%" height="15" fill="rgb(205,108,24)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="49.0363%" y="357" width="0.0518%" height="15" fill="rgb(244,120,49)" fg:x="4732" fg:w="5"/><text x="49.2863%" y="367.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="49.0881%" y="581" width="0.0104%" height="15" fill="rgb(223,47,38)" fg:x="4737" fg:w="1"/><text x="49.3381%" y="591.50"></text></g><g><title>[unknown] (45 samples, 0.47%)</title><rect x="49.0984%" y="565" width="0.4663%" height="15" fill="rgb(229,179,11)" fg:x="4738" fg:w="45"/><text x="49.3484%" y="575.50"></text></g><g><title>[unknown] (45 samples, 0.47%)</title><rect x="49.0984%" y="549" width="0.4663%" height="15" fill="rgb(231,122,1)" fg:x="4738" fg:w="45"/><text x="49.3484%" y="559.50"></text></g><g><title>[unknown] (45 samples, 0.47%)</title><rect x="49.0984%" y="533" width="0.4663%" height="15" fill="rgb(245,119,9)" fg:x="4738" fg:w="45"/><text x="49.3484%" y="543.50"></text></g><g><title>[unknown] (45 samples, 0.47%)</title><rect x="49.0984%" y="517" width="0.4663%" height="15" fill="rgb(241,163,25)" fg:x="4738" fg:w="45"/><text x="49.3484%" y="527.50"></text></g><g><title>[unknown] (45 samples, 0.47%)</title><rect x="49.0984%" y="501" width="0.4663%" height="15" fill="rgb(217,214,3)" fg:x="4738" fg:w="45"/><text x="49.3484%" y="511.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="49.1088%" y="485" width="0.4560%" height="15" fill="rgb(240,86,28)" fg:x="4739" fg:w="44"/><text x="49.3588%" y="495.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="49.1192%" y="469" width="0.4456%" height="15" fill="rgb(215,47,9)" fg:x="4740" fg:w="43"/><text x="49.3692%" y="479.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="49.1295%" y="453" width="0.4352%" height="15" fill="rgb(252,25,45)" fg:x="4741" fg:w="42"/><text x="49.3795%" y="463.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="49.1295%" y="437" width="0.4352%" height="15" fill="rgb(251,164,9)" fg:x="4741" fg:w="42"/><text x="49.3795%" y="447.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="49.1710%" y="421" width="0.3938%" height="15" fill="rgb(233,194,0)" fg:x="4745" fg:w="38"/><text x="49.4210%" y="431.50"></text></g><g><title>[unknown] (35 samples, 0.36%)</title><rect x="49.2021%" y="405" width="0.3627%" height="15" fill="rgb(249,111,24)" fg:x="4748" fg:w="35"/><text x="49.4521%" y="415.50"></text></g><g><title>[unknown] (31 samples, 0.32%)</title><rect x="49.2435%" y="389" width="0.3212%" height="15" fill="rgb(250,223,3)" fg:x="4752" fg:w="31"/><text x="49.4935%" y="399.50"></text></g><g><title>[unknown] (27 samples, 0.28%)</title><rect x="49.2850%" y="373" width="0.2798%" height="15" fill="rgb(236,178,37)" fg:x="4756" fg:w="27"/><text x="49.5350%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="49.2953%" y="357" width="0.2694%" height="15" fill="rgb(241,158,50)" fg:x="4757" fg:w="26"/><text x="49.5453%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="49.3057%" y="341" width="0.2591%" height="15" fill="rgb(213,121,41)" fg:x="4758" fg:w="25"/><text x="49.5557%" y="351.50"></text></g><g><title>_int_realloc (130 samples, 1.35%)</title><rect x="48.7876%" y="613" width="1.3472%" height="15" fill="rgb(240,92,3)" fg:x="4708" fg:w="130"/><text x="49.0376%" y="623.50"></text></g><g><title>_int_malloc (123 samples, 1.27%)</title><rect x="48.8601%" y="597" width="1.2746%" height="15" fill="rgb(205,123,3)" fg:x="4715" fg:w="123"/><text x="49.1101%" y="607.50"></text></g><g><title>sysmalloc (100 samples, 1.04%)</title><rect x="49.0984%" y="581" width="1.0363%" height="15" fill="rgb(205,97,47)" fg:x="4738" fg:w="100"/><text x="49.3484%" y="591.50"></text></g><g><title>grow_heap (55 samples, 0.57%)</title><rect x="49.5648%" y="565" width="0.5699%" height="15" fill="rgb(247,152,14)" fg:x="4783" fg:w="55"/><text x="49.8148%" y="575.50"></text></g><g><title>__GI___mprotect (55 samples, 0.57%)</title><rect x="49.5648%" y="549" width="0.5699%" height="15" fill="rgb(248,195,53)" fg:x="4783" fg:w="55"/><text x="49.8148%" y="559.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="49.5751%" y="533" width="0.5596%" height="15" fill="rgb(226,201,16)" fg:x="4784" fg:w="54"/><text x="49.8251%" y="543.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="49.5751%" y="517" width="0.5596%" height="15" fill="rgb(205,98,0)" fg:x="4784" fg:w="54"/><text x="49.8251%" y="527.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="49.5751%" y="501" width="0.5596%" height="15" fill="rgb(214,191,48)" fg:x="4784" fg:w="54"/><text x="49.8251%" y="511.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="49.5751%" y="485" width="0.5596%" height="15" fill="rgb(237,112,39)" fg:x="4784" fg:w="54"/><text x="49.8251%" y="495.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="49.5751%" y="469" width="0.5596%" height="15" fill="rgb(247,203,27)" fg:x="4784" fg:w="54"/><text x="49.8251%" y="479.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="49.5751%" y="453" width="0.5596%" height="15" fill="rgb(235,124,28)" fg:x="4784" fg:w="54"/><text x="49.8251%" y="463.50"></text></g><g><title>[unknown] (51 samples, 0.53%)</title><rect x="49.6062%" y="437" width="0.5285%" height="15" fill="rgb(208,207,46)" fg:x="4787" fg:w="51"/><text x="49.8562%" y="447.50"></text></g><g><title>[unknown] (43 samples, 0.45%)</title><rect x="49.6891%" y="421" width="0.4456%" height="15" fill="rgb(234,176,4)" fg:x="4795" fg:w="43"/><text x="49.9391%" y="431.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="49.7409%" y="405" width="0.3938%" height="15" fill="rgb(230,133,28)" fg:x="4800" fg:w="38"/><text x="49.9909%" y="415.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="49.7409%" y="389" width="0.3938%" height="15" fill="rgb(211,137,40)" fg:x="4800" fg:w="38"/><text x="49.9909%" y="399.50"></text></g><g><title>[unknown] (33 samples, 0.34%)</title><rect x="49.7927%" y="373" width="0.3420%" height="15" fill="rgb(254,35,13)" fg:x="4805" fg:w="33"/><text x="50.0427%" y="383.50"></text></g><g><title>[unknown] (28 samples, 0.29%)</title><rect x="49.8446%" y="357" width="0.2902%" height="15" fill="rgb(225,49,51)" fg:x="4810" fg:w="28"/><text x="50.0946%" y="367.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="49.9067%" y="341" width="0.2280%" height="15" fill="rgb(251,10,15)" fg:x="4816" fg:w="22"/><text x="50.1567%" y="351.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="49.9378%" y="325" width="0.1969%" height="15" fill="rgb(228,207,15)" fg:x="4819" fg:w="19"/><text x="50.1878%" y="335.50"></text></g><g><title>__GI___libc_realloc (142 samples, 1.47%)</title><rect x="48.7150%" y="629" width="1.4715%" height="15" fill="rgb(241,99,19)" fg:x="4701" fg:w="142"/><text x="48.9650%" y="639.50"></text></g><g><title>arena_for_chunk (5 samples, 0.05%)</title><rect x="50.1347%" y="613" width="0.0518%" height="15" fill="rgb(207,104,49)" fg:x="4838" fg:w="5"/><text x="50.3847%" y="623.50"></text></g><g><title>arena_for_chunk (5 samples, 0.05%)</title><rect x="50.1347%" y="597" width="0.0518%" height="15" fill="rgb(234,99,18)" fg:x="4838" fg:w="5"/><text x="50.3847%" y="607.50"></text></g><g><title>heap_for_ptr (2 samples, 0.02%)</title><rect x="50.1658%" y="581" width="0.0207%" height="15" fill="rgb(213,191,49)" fg:x="4841" fg:w="2"/><text x="50.4158%" y="591.50"></text></g><g><title>heap_max_size (1 samples, 0.01%)</title><rect x="50.1762%" y="565" width="0.0104%" height="15" fill="rgb(210,226,19)" fg:x="4842" fg:w="1"/><text x="50.4262%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (143 samples, 1.48%)</title><rect x="48.7150%" y="677" width="1.4819%" height="15" fill="rgb(229,97,18)" fg:x="4701" fg:w="143"/><text x="48.9650%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (143 samples, 1.48%)</title><rect x="48.7150%" y="661" width="1.4819%" height="15" fill="rgb(211,167,15)" fg:x="4701" fg:w="143"/><text x="48.9650%" y="671.50"></text></g><g><title>alloc::alloc::realloc (143 samples, 1.48%)</title><rect x="48.7150%" y="645" width="1.4819%" height="15" fill="rgb(210,169,34)" fg:x="4701" fg:w="143"/><text x="48.9650%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="50.1865%" y="629" width="0.0104%" height="15" fill="rgb(241,121,31)" fg:x="4843" fg:w="1"/><text x="50.4365%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="50.1865%" y="613" width="0.0104%" height="15" fill="rgb(232,40,11)" fg:x="4843" fg:w="1"/><text x="50.4365%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (147 samples, 1.52%)</title><rect x="48.6943%" y="693" width="1.5233%" height="15" fill="rgb(205,86,26)" fg:x="4699" fg:w="147"/><text x="48.9443%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="50.1969%" y="677" width="0.0207%" height="15" fill="rgb(231,126,28)" fg:x="4844" fg:w="2"/><text x="50.4469%" y="687.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="50.2073%" y="661" width="0.0104%" height="15" fill="rgb(219,221,18)" fg:x="4845" fg:w="1"/><text x="50.4573%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="50.2176%" y="693" width="0.0207%" height="15" fill="rgb(211,40,0)" fg:x="4846" fg:w="2"/><text x="50.4676%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="50.2176%" y="677" width="0.0207%" height="15" fill="rgb(239,85,43)" fg:x="4846" fg:w="2"/><text x="50.4676%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (152 samples, 1.58%)</title><rect x="48.6736%" y="725" width="1.5751%" height="15" fill="rgb(231,55,21)" fg:x="4697" fg:w="152"/><text x="48.9236%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (152 samples, 1.58%)</title><rect x="48.6736%" y="709" width="1.5751%" height="15" fill="rgb(225,184,43)" fg:x="4697" fg:w="152"/><text x="48.9236%" y="719.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="50.2383%" y="693" width="0.0104%" height="15" fill="rgb(251,158,41)" fg:x="4848" fg:w="1"/><text x="50.4883%" y="703.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="50.2383%" y="677" width="0.0104%" height="15" fill="rgb(234,159,37)" fg:x="4848" fg:w="1"/><text x="50.4883%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="50.2383%" y="661" width="0.0104%" height="15" fill="rgb(216,204,22)" fg:x="4848" fg:w="1"/><text x="50.4883%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (155 samples, 1.61%)</title><rect x="48.6632%" y="773" width="1.6062%" height="15" fill="rgb(214,17,3)" fg:x="4696" fg:w="155"/><text x="48.9132%" y="783.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (155 samples, 1.61%)</title><rect x="48.6632%" y="757" width="1.6062%" height="15" fill="rgb(212,111,17)" fg:x="4696" fg:w="155"/><text x="48.9132%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (155 samples, 1.61%)</title><rect x="48.6632%" y="741" width="1.6062%" height="15" fill="rgb(221,157,24)" fg:x="4696" fg:w="155"/><text x="48.9132%" y="751.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="50.2487%" y="725" width="0.0207%" height="15" fill="rgb(252,16,13)" fg:x="4849" fg:w="2"/><text x="50.4987%" y="735.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.01%)</title><rect x="50.2694%" y="741" width="0.0104%" height="15" fill="rgb(221,62,2)" fg:x="4851" fg:w="1"/><text x="50.5194%" y="751.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.01%)</title><rect x="50.2694%" y="725" width="0.0104%" height="15" fill="rgb(247,87,22)" fg:x="4851" fg:w="1"/><text x="50.5194%" y="735.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.01%)</title><rect x="50.2694%" y="709" width="0.0104%" height="15" fill="rgb(215,73,9)" fg:x="4851" fg:w="1"/><text x="50.5194%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="50.2694%" y="693" width="0.0104%" height="15" fill="rgb(207,175,33)" fg:x="4851" fg:w="1"/><text x="50.5194%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="50.2694%" y="677" width="0.0104%" height="15" fill="rgb(243,129,54)" fg:x="4851" fg:w="1"/><text x="50.5194%" y="687.50"></text></g><g><title>_int_free (11 samples, 0.11%)</title><rect x="50.3316%" y="629" width="0.1140%" height="15" fill="rgb(227,119,45)" fg:x="4857" fg:w="11"/><text x="50.5816%" y="639.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="50.4249%" y="613" width="0.0207%" height="15" fill="rgb(205,109,36)" fg:x="4866" fg:w="2"/><text x="50.6749%" y="623.50"></text></g><g><title>__GI___libc_free (19 samples, 0.20%)</title><rect x="50.2798%" y="645" width="0.1969%" height="15" fill="rgb(205,6,39)" fg:x="4852" fg:w="19"/><text x="50.5298%" y="655.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="50.4456%" y="629" width="0.0311%" height="15" fill="rgb(221,32,16)" fg:x="4868" fg:w="3"/><text x="50.6956%" y="639.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="50.4560%" y="613" width="0.0207%" height="15" fill="rgb(228,144,50)" fg:x="4869" fg:w="2"/><text x="50.7060%" y="623.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="50.4663%" y="597" width="0.0104%" height="15" fill="rgb(229,201,53)" fg:x="4870" fg:w="1"/><text x="50.7163%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.21%)</title><rect x="50.2798%" y="677" width="0.2073%" height="15" fill="rgb(249,153,27)" fg:x="4852" fg:w="20"/><text x="50.5298%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.21%)</title><rect x="50.2798%" y="661" width="0.2073%" height="15" fill="rgb(227,106,25)" fg:x="4852" fg:w="20"/><text x="50.5298%" y="671.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="50.4767%" y="645" width="0.0104%" height="15" fill="rgb(230,65,29)" fg:x="4871" fg:w="1"/><text x="50.7267%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="50.4767%" y="629" width="0.0104%" height="15" fill="rgb(221,57,46)" fg:x="4871" fg:w="1"/><text x="50.7267%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (23 samples, 0.24%)</title><rect x="50.2798%" y="741" width="0.2383%" height="15" fill="rgb(229,161,17)" fg:x="4852" fg:w="23"/><text x="50.5298%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.24%)</title><rect x="50.2798%" y="725" width="0.2383%" height="15" fill="rgb(222,213,11)" fg:x="4852" fg:w="23"/><text x="50.5298%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (23 samples, 0.24%)</title><rect x="50.2798%" y="709" width="0.2383%" height="15" fill="rgb(235,35,13)" fg:x="4852" fg:w="23"/><text x="50.5298%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.24%)</title><rect x="50.2798%" y="693" width="0.2383%" height="15" fill="rgb(233,158,34)" fg:x="4852" fg:w="23"/><text x="50.5298%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.03%)</title><rect x="50.4870%" y="677" width="0.0311%" height="15" fill="rgb(215,151,48)" fg:x="4872" fg:w="3"/><text x="50.7370%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="50.5078%" y="661" width="0.0104%" height="15" fill="rgb(229,84,14)" fg:x="4874" fg:w="1"/><text x="50.7578%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.26%)</title><rect x="50.2694%" y="757" width="0.2591%" height="15" fill="rgb(229,68,14)" fg:x="4851" fg:w="25"/><text x="50.5194%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,usize)&gt;]&gt; (1 samples, 0.01%)</title><rect x="50.5181%" y="741" width="0.0104%" height="15" fill="rgb(243,106,26)" fg:x="4875" fg:w="1"/><text x="50.7681%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (186 samples, 1.93%)</title><rect x="48.6114%" y="789" width="1.9275%" height="15" fill="rgb(206,45,38)" fg:x="4691" fg:w="186"/><text x="48.8614%" y="799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (26 samples, 0.27%)</title><rect x="50.2694%" y="773" width="0.2694%" height="15" fill="rgb(226,6,15)" fg:x="4851" fg:w="26"/><text x="50.5194%" y="783.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="50.5285%" y="757" width="0.0104%" height="15" fill="rgb(232,22,54)" fg:x="4876" fg:w="1"/><text x="50.7785%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (189 samples, 1.96%)</title><rect x="48.5907%" y="805" width="1.9585%" height="15" fill="rgb(229,222,32)" fg:x="4689" fg:w="189"/><text x="48.8407%" y="815.50">c..</text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="50.5389%" y="789" width="0.0104%" height="15" fill="rgb(228,62,29)" fg:x="4877" fg:w="1"/><text x="50.7889%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="50.5492%" y="741" width="0.0104%" height="15" fill="rgb(251,103,34)" fg:x="4878" fg:w="1"/><text x="50.7992%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.01%)</title><rect x="50.5492%" y="725" width="0.0104%" height="15" fill="rgb(233,12,30)" fg:x="4878" fg:w="1"/><text x="50.7992%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.03%)</title><rect x="50.5492%" y="805" width="0.0311%" height="15" fill="rgb(238,52,0)" fg:x="4878" fg:w="3"/><text x="50.7992%" y="815.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.03%)</title><rect x="50.5492%" y="789" width="0.0311%" height="15" fill="rgb(223,98,5)" fg:x="4878" fg:w="3"/><text x="50.7992%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="50.5492%" y="773" width="0.0311%" height="15" fill="rgb(228,75,37)" fg:x="4878" fg:w="3"/><text x="50.7992%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="50.5492%" y="757" width="0.0311%" height="15" fill="rgb(205,115,49)" fg:x="4878" fg:w="3"/><text x="50.7992%" y="767.50"></text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="50.5596%" y="741" width="0.0207%" height="15" fill="rgb(250,154,43)" fg:x="4879" fg:w="2"/><text x="50.8096%" y="751.50"></text></g><g><title>_int_free (31 samples, 0.32%)</title><rect x="50.6218%" y="709" width="0.3212%" height="15" fill="rgb(226,43,29)" fg:x="4885" fg:w="31"/><text x="50.8718%" y="719.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="50.9326%" y="693" width="0.0104%" height="15" fill="rgb(249,228,39)" fg:x="4915" fg:w="1"/><text x="51.1826%" y="703.50"></text></g><g><title>__GI___libc_free (36 samples, 0.37%)</title><rect x="50.5907%" y="725" width="0.3731%" height="15" fill="rgb(216,79,43)" fg:x="4882" fg:w="36"/><text x="50.8407%" y="735.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="50.9430%" y="709" width="0.0207%" height="15" fill="rgb(228,95,12)" fg:x="4916" fg:w="2"/><text x="51.1930%" y="719.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="50.9430%" y="693" width="0.0207%" height="15" fill="rgb(249,221,15)" fg:x="4916" fg:w="2"/><text x="51.1930%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (38 samples, 0.39%)</title><rect x="50.5803%" y="805" width="0.3938%" height="15" fill="rgb(233,34,13)" fg:x="4881" fg:w="38"/><text x="50.8303%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (38 samples, 0.39%)</title><rect x="50.5803%" y="789" width="0.3938%" height="15" fill="rgb(214,103,39)" fg:x="4881" fg:w="38"/><text x="50.8303%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.39%)</title><rect x="50.5803%" y="773" width="0.3938%" height="15" fill="rgb(251,126,39)" fg:x="4881" fg:w="38"/><text x="50.8303%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.39%)</title><rect x="50.5803%" y="757" width="0.3938%" height="15" fill="rgb(214,216,36)" fg:x="4881" fg:w="38"/><text x="50.8303%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.39%)</title><rect x="50.5803%" y="741" width="0.3938%" height="15" fill="rgb(220,221,8)" fg:x="4881" fg:w="38"/><text x="50.8303%" y="751.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="50.9637%" y="725" width="0.0104%" height="15" fill="rgb(240,216,3)" fg:x="4918" fg:w="1"/><text x="51.2137%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="50.9637%" y="709" width="0.0104%" height="15" fill="rgb(232,218,17)" fg:x="4918" fg:w="1"/><text x="51.2137%" y="719.50"></text></g><g><title>_int_free (10 samples, 0.10%)</title><rect x="51.0155%" y="629" width="0.1036%" height="15" fill="rgb(229,163,45)" fg:x="4923" fg:w="10"/><text x="51.2655%" y="639.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="51.1088%" y="613" width="0.0104%" height="15" fill="rgb(231,110,42)" fg:x="4932" fg:w="1"/><text x="51.3588%" y="623.50"></text></g><g><title>__GI___libc_free (15 samples, 0.16%)</title><rect x="50.9741%" y="645" width="0.1554%" height="15" fill="rgb(208,170,48)" fg:x="4919" fg:w="15"/><text x="51.2241%" y="655.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="51.1192%" y="629" width="0.0104%" height="15" fill="rgb(239,116,25)" fg:x="4933" fg:w="1"/><text x="51.3692%" y="639.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="51.1192%" y="613" width="0.0104%" height="15" fill="rgb(219,200,50)" fg:x="4933" fg:w="1"/><text x="51.3692%" y="623.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="51.1192%" y="597" width="0.0104%" height="15" fill="rgb(245,200,0)" fg:x="4933" fg:w="1"/><text x="51.3692%" y="607.50"></text></g><g><title>heap_max_size (1 samples, 0.01%)</title><rect x="51.1192%" y="581" width="0.0104%" height="15" fill="rgb(245,119,33)" fg:x="4933" fg:w="1"/><text x="51.3692%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (17 samples, 0.18%)</title><rect x="50.9741%" y="805" width="0.1762%" height="15" fill="rgb(231,125,12)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (17 samples, 0.18%)</title><rect x="50.9741%" y="789" width="0.1762%" height="15" fill="rgb(216,96,41)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (17 samples, 0.18%)</title><rect x="50.9741%" y="773" width="0.1762%" height="15" fill="rgb(248,43,45)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="50.9741%" y="757" width="0.1762%" height="15" fill="rgb(217,222,7)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (17 samples, 0.18%)</title><rect x="50.9741%" y="741" width="0.1762%" height="15" fill="rgb(233,28,6)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="50.9741%" y="725" width="0.1762%" height="15" fill="rgb(231,218,15)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (17 samples, 0.18%)</title><rect x="50.9741%" y="709" width="0.1762%" height="15" fill="rgb(226,171,48)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="50.9741%" y="693" width="0.1762%" height="15" fill="rgb(235,201,9)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.18%)</title><rect x="50.9741%" y="677" width="0.1762%" height="15" fill="rgb(217,80,15)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.18%)</title><rect x="50.9741%" y="661" width="0.1762%" height="15" fill="rgb(219,152,8)" fg:x="4919" fg:w="17"/><text x="51.2241%" y="671.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="51.1295%" y="645" width="0.0207%" height="15" fill="rgb(243,107,38)" fg:x="4934" fg:w="2"/><text x="51.3795%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="51.5959%" y="789" width="0.0104%" height="15" fill="rgb(231,17,5)" fg:x="4979" fg:w="1"/><text x="51.8459%" y="799.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="51.5959%" y="773" width="0.0104%" height="15" fill="rgb(209,25,54)" fg:x="4979" fg:w="1"/><text x="51.8459%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (26 samples, 0.27%)</title><rect x="51.6062%" y="757" width="0.2694%" height="15" fill="rgb(219,0,2)" fg:x="4980" fg:w="26"/><text x="51.8562%" y="767.50"></text></g><g><title>core::ptr::read (6 samples, 0.06%)</title><rect x="51.8135%" y="741" width="0.0622%" height="15" fill="rgb(246,9,5)" fg:x="5000" fg:w="6"/><text x="52.0635%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.33%)</title><rect x="51.6062%" y="789" width="0.3316%" height="15" fill="rgb(226,159,4)" fg:x="4980" fg:w="32"/><text x="51.8562%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (32 samples, 0.33%)</title><rect x="51.6062%" y="773" width="0.3316%" height="15" fill="rgb(219,175,34)" fg:x="4980" fg:w="32"/><text x="51.8562%" y="783.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (6 samples, 0.06%)</title><rect x="51.8756%" y="757" width="0.0622%" height="15" fill="rgb(236,10,46)" fg:x="5006" fg:w="6"/><text x="52.1256%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.06%)</title><rect x="51.8756%" y="741" width="0.0622%" height="15" fill="rgb(240,211,16)" fg:x="5006" fg:w="6"/><text x="52.1256%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (6 samples, 0.06%)</title><rect x="51.8756%" y="725" width="0.0622%" height="15" fill="rgb(205,3,43)" fg:x="5006" fg:w="6"/><text x="52.1256%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9896%" y="581" width="0.0104%" height="15" fill="rgb(245,7,22)" fg:x="5017" fg:w="1"/><text x="52.2396%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9896%" y="565" width="0.0104%" height="15" fill="rgb(239,132,32)" fg:x="5017" fg:w="1"/><text x="52.2396%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9896%" y="549" width="0.0104%" height="15" fill="rgb(228,202,34)" fg:x="5017" fg:w="1"/><text x="52.2396%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9896%" y="533" width="0.0104%" height="15" fill="rgb(254,200,22)" fg:x="5017" fg:w="1"/><text x="52.2396%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9896%" y="517" width="0.0104%" height="15" fill="rgb(219,10,39)" fg:x="5017" fg:w="1"/><text x="52.2396%" y="527.50"></text></g><g><title>checked_request2size (5 samples, 0.05%)</title><rect x="52.0000%" y="581" width="0.0518%" height="15" fill="rgb(226,210,39)" fg:x="5018" fg:w="5"/><text x="52.2500%" y="591.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.13%)</title><rect x="51.9585%" y="597" width="0.1347%" height="15" fill="rgb(208,219,16)" fg:x="5014" fg:w="13"/><text x="52.2085%" y="607.50"></text></g><g><title>tcache_get (4 samples, 0.04%)</title><rect x="52.0518%" y="581" width="0.0415%" height="15" fill="rgb(216,158,51)" fg:x="5023" fg:w="4"/><text x="52.3018%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="52.0933%" y="597" width="0.0104%" height="15" fill="rgb(233,14,44)" fg:x="5027" fg:w="1"/><text x="52.3433%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="52.0933%" y="581" width="0.0104%" height="15" fill="rgb(237,97,39)" fg:x="5027" fg:w="1"/><text x="52.3433%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="52.1036%" y="597" width="0.0104%" height="15" fill="rgb(218,198,43)" fg:x="5028" fg:w="1"/><text x="52.3536%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.21%)</title><rect x="51.9482%" y="693" width="0.2073%" height="15" fill="rgb(231,104,20)" fg:x="5013" fg:w="20"/><text x="52.1982%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.21%)</title><rect x="51.9482%" y="677" width="0.2073%" height="15" fill="rgb(254,36,13)" fg:x="5013" fg:w="20"/><text x="52.1982%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.21%)</title><rect x="51.9482%" y="661" width="0.2073%" height="15" fill="rgb(248,14,50)" fg:x="5013" fg:w="20"/><text x="52.1982%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.20%)</title><rect x="51.9585%" y="645" width="0.1969%" height="15" fill="rgb(217,107,29)" fg:x="5014" fg:w="19"/><text x="52.2085%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.20%)</title><rect x="51.9585%" y="629" width="0.1969%" height="15" fill="rgb(251,169,33)" fg:x="5014" fg:w="19"/><text x="52.2085%" y="639.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.20%)</title><rect x="51.9585%" y="613" width="0.1969%" height="15" fill="rgb(217,108,32)" fg:x="5014" fg:w="19"/><text x="52.2085%" y="623.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.04%)</title><rect x="52.1140%" y="597" width="0.0415%" height="15" fill="rgb(219,66,42)" fg:x="5029" fg:w="4"/><text x="52.3640%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.27%)</title><rect x="51.9378%" y="789" width="0.2694%" height="15" fill="rgb(206,180,7)" fg:x="5012" fg:w="26"/><text x="52.1878%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (25 samples, 0.26%)</title><rect x="51.9482%" y="773" width="0.2591%" height="15" fill="rgb(208,226,31)" fg:x="5013" fg:w="25"/><text x="52.1982%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.26%)</title><rect x="51.9482%" y="757" width="0.2591%" height="15" fill="rgb(218,26,49)" fg:x="5013" fg:w="25"/><text x="52.1982%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.26%)</title><rect x="51.9482%" y="741" width="0.2591%" height="15" fill="rgb(233,197,48)" fg:x="5013" fg:w="25"/><text x="52.1982%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.26%)</title><rect x="51.9482%" y="725" width="0.2591%" height="15" fill="rgb(252,181,51)" fg:x="5013" fg:w="25"/><text x="52.1982%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.26%)</title><rect x="51.9482%" y="709" width="0.2591%" height="15" fill="rgb(253,90,19)" fg:x="5013" fg:w="25"/><text x="52.1982%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.05%)</title><rect x="52.1554%" y="693" width="0.0518%" height="15" fill="rgb(215,171,30)" fg:x="5033" fg:w="5"/><text x="52.4054%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="52.1554%" y="677" width="0.0518%" height="15" fill="rgb(214,222,9)" fg:x="5033" fg:w="5"/><text x="52.4054%" y="687.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="52.1554%" y="661" width="0.0518%" height="15" fill="rgb(223,3,22)" fg:x="5033" fg:w="5"/><text x="52.4054%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="789" width="0.0518%" height="15" fill="rgb(225,196,46)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="773" width="0.0518%" height="15" fill="rgb(209,110,37)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="757" width="0.0518%" height="15" fill="rgb(249,89,12)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="741" width="0.0518%" height="15" fill="rgb(226,27,33)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="725" width="0.0518%" height="15" fill="rgb(213,82,22)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="709" width="0.0518%" height="15" fill="rgb(248,140,0)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="693" width="0.0518%" height="15" fill="rgb(228,106,3)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="677" width="0.0518%" height="15" fill="rgb(209,23,37)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="661" width="0.0518%" height="15" fill="rgb(241,93,50)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="645" width="0.0518%" height="15" fill="rgb(253,46,43)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="629" width="0.0518%" height="15" fill="rgb(226,206,43)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="613" width="0.0518%" height="15" fill="rgb(217,54,7)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="597" width="0.0518%" height="15" fill="rgb(223,5,52)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="52.2073%" y="581" width="0.0518%" height="15" fill="rgb(206,52,46)" fg:x="5038" fg:w="5"/><text x="52.4573%" y="591.50"></text></g><g><title>checked_request2size (7 samples, 0.07%)</title><rect x="52.4249%" y="709" width="0.0725%" height="15" fill="rgb(253,136,11)" fg:x="5059" fg:w="7"/><text x="52.6749%" y="719.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.33%)</title><rect x="52.2694%" y="725" width="0.3316%" height="15" fill="rgb(208,106,33)" fg:x="5044" fg:w="32"/><text x="52.5194%" y="735.50"></text></g><g><title>tcache_get (10 samples, 0.10%)</title><rect x="52.4974%" y="709" width="0.1036%" height="15" fill="rgb(206,54,4)" fg:x="5066" fg:w="10"/><text x="52.7474%" y="719.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="52.6010%" y="725" width="0.0207%" height="15" fill="rgb(213,3,15)" fg:x="5076" fg:w="2"/><text x="52.8510%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="52.6010%" y="709" width="0.0207%" height="15" fill="rgb(252,211,39)" fg:x="5076" fg:w="2"/><text x="52.8510%" y="719.50"></text></g><g><title>__rust_alloc (3 samples, 0.03%)</title><rect x="52.6218%" y="725" width="0.0311%" height="15" fill="rgb(223,6,36)" fg:x="5078" fg:w="3"/><text x="52.8718%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (43 samples, 0.45%)</title><rect x="52.2591%" y="789" width="0.4456%" height="15" fill="rgb(252,169,45)" fg:x="5043" fg:w="43"/><text x="52.5091%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.45%)</title><rect x="52.2591%" y="773" width="0.4456%" height="15" fill="rgb(212,48,26)" fg:x="5043" fg:w="43"/><text x="52.5091%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.45%)</title><rect x="52.2591%" y="757" width="0.4456%" height="15" fill="rgb(251,102,48)" fg:x="5043" fg:w="43"/><text x="52.5091%" y="767.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.45%)</title><rect x="52.2591%" y="741" width="0.4456%" height="15" fill="rgb(243,208,16)" fg:x="5043" fg:w="43"/><text x="52.5091%" y="751.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.05%)</title><rect x="52.6528%" y="725" width="0.0518%" height="15" fill="rgb(219,96,24)" fg:x="5081" fg:w="5"/><text x="52.9028%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (1 samples, 0.01%)</title><rect x="52.7047%" y="789" width="0.0104%" height="15" fill="rgb(219,33,29)" fg:x="5086" fg:w="1"/><text x="52.9547%" y="799.50"></text></g><g><title>alloc::slice::hack::into_vec (1 samples, 0.01%)</title><rect x="52.7047%" y="773" width="0.0104%" height="15" fill="rgb(223,176,5)" fg:x="5086" fg:w="1"/><text x="52.9547%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.01%)</title><rect x="52.7047%" y="757" width="0.0104%" height="15" fill="rgb(228,140,14)" fg:x="5086" fg:w="1"/><text x="52.9547%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="52.7565%" y="677" width="0.0104%" height="15" fill="rgb(217,179,31)" fg:x="5091" fg:w="1"/><text x="53.0065%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.04%)</title><rect x="52.7668%" y="677" width="0.0415%" height="15" fill="rgb(230,9,30)" fg:x="5092" fg:w="4"/><text x="53.0168%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="52.7979%" y="661" width="0.0104%" height="15" fill="rgb(230,136,20)" fg:x="5095" fg:w="1"/><text x="53.0479%" y="671.50"></text></g><g><title>[libc.so.6] (5 samples, 0.05%)</title><rect x="53.7927%" y="581" width="0.0518%" height="15" fill="rgb(215,210,22)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="565" width="0.0518%" height="15" fill="rgb(218,43,5)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="549" width="0.0518%" height="15" fill="rgb(216,11,5)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="533" width="0.0518%" height="15" fill="rgb(209,82,29)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="517" width="0.0518%" height="15" fill="rgb(244,115,12)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="501" width="0.0518%" height="15" fill="rgb(222,82,18)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="485" width="0.0518%" height="15" fill="rgb(249,227,8)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="469" width="0.0518%" height="15" fill="rgb(253,141,45)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="453" width="0.0518%" height="15" fill="rgb(234,184,4)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="437" width="0.0518%" height="15" fill="rgb(218,194,23)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="421" width="0.0518%" height="15" fill="rgb(235,66,41)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="405" width="0.0518%" height="15" fill="rgb(245,217,1)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="389" width="0.0518%" height="15" fill="rgb(229,91,1)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="373" width="0.0518%" height="15" fill="rgb(207,101,30)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="53.7927%" y="357" width="0.0518%" height="15" fill="rgb(223,82,49)" fg:x="5191" fg:w="5"/><text x="54.0427%" y="367.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.04%)</title><rect x="53.8446%" y="581" width="0.0415%" height="15" fill="rgb(218,167,17)" fg:x="5196" fg:w="4"/><text x="54.0946%" y="591.50"></text></g><g><title>_int_free (22 samples, 0.23%)</title><rect x="53.8860%" y="581" width="0.2280%" height="15" fill="rgb(208,103,14)" fg:x="5200" fg:w="22"/><text x="54.1360%" y="591.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="54.0829%" y="565" width="0.0311%" height="15" fill="rgb(238,20,8)" fg:x="5219" fg:w="3"/><text x="54.3329%" y="575.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="565" width="0.1244%" height="15" fill="rgb(218,80,54)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="575.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="549" width="0.1244%" height="15" fill="rgb(240,144,17)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="533" width="0.1244%" height="15" fill="rgb(245,27,50)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="517" width="0.1244%" height="15" fill="rgb(251,51,7)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="501" width="0.1244%" height="15" fill="rgb(245,217,29)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="485" width="0.1244%" height="15" fill="rgb(221,176,29)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="469" width="0.1244%" height="15" fill="rgb(212,180,24)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="54.9948%" y="453" width="0.1244%" height="15" fill="rgb(254,24,2)" fg:x="5307" fg:w="12"/><text x="55.2448%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="55.0052%" y="437" width="0.1140%" height="15" fill="rgb(230,100,2)" fg:x="5308" fg:w="11"/><text x="55.2552%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.0155%" y="421" width="0.1036%" height="15" fill="rgb(219,142,25)" fg:x="5309" fg:w="10"/><text x="55.2655%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.0155%" y="405" width="0.1036%" height="15" fill="rgb(240,73,43)" fg:x="5309" fg:w="10"/><text x="55.2655%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.0155%" y="389" width="0.1036%" height="15" fill="rgb(214,114,15)" fg:x="5309" fg:w="10"/><text x="55.2655%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.0155%" y="373" width="0.1036%" height="15" fill="rgb(207,130,4)" fg:x="5309" fg:w="10"/><text x="55.2655%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.0155%" y="357" width="0.1036%" height="15" fill="rgb(221,25,40)" fg:x="5309" fg:w="10"/><text x="55.2655%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.0155%" y="341" width="0.1036%" height="15" fill="rgb(241,184,7)" fg:x="5309" fg:w="10"/><text x="55.2655%" y="351.50"></text></g><g><title>alloc_perturb (1 samples, 0.01%)</title><rect x="55.1192%" y="565" width="0.0104%" height="15" fill="rgb(235,159,4)" fg:x="5319" fg:w="1"/><text x="55.3692%" y="575.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="55.1295%" y="565" width="0.0207%" height="15" fill="rgb(214,87,48)" fg:x="5320" fg:w="2"/><text x="55.3795%" y="575.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="55.1503%" y="565" width="0.0207%" height="15" fill="rgb(246,198,24)" fg:x="5322" fg:w="2"/><text x="55.4003%" y="575.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="55.1813%" y="549" width="0.1969%" height="15" fill="rgb(209,66,40)" fg:x="5325" fg:w="19"/><text x="55.4313%" y="559.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="55.1813%" y="533" width="0.1969%" height="15" fill="rgb(233,147,39)" fg:x="5325" fg:w="19"/><text x="55.4313%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="55.1813%" y="517" width="0.1969%" height="15" fill="rgb(231,145,52)" fg:x="5325" fg:w="19"/><text x="55.4313%" y="527.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="55.1813%" y="501" width="0.1969%" height="15" fill="rgb(206,20,26)" fg:x="5325" fg:w="19"/><text x="55.4313%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="55.1917%" y="485" width="0.1865%" height="15" fill="rgb(238,220,4)" fg:x="5326" fg:w="18"/><text x="55.4417%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="55.2021%" y="469" width="0.1762%" height="15" fill="rgb(252,195,42)" fg:x="5327" fg:w="17"/><text x="55.4521%" y="479.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="55.2124%" y="453" width="0.1658%" height="15" fill="rgb(209,10,6)" fg:x="5328" fg:w="16"/><text x="55.4624%" y="463.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="55.2228%" y="437" width="0.1554%" height="15" fill="rgb(229,3,52)" fg:x="5329" fg:w="15"/><text x="55.4728%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="55.2228%" y="421" width="0.1554%" height="15" fill="rgb(253,49,37)" fg:x="5329" fg:w="15"/><text x="55.4728%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="55.2332%" y="405" width="0.1451%" height="15" fill="rgb(240,103,49)" fg:x="5330" fg:w="14"/><text x="55.4832%" y="415.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="55.2332%" y="389" width="0.1451%" height="15" fill="rgb(250,182,30)" fg:x="5330" fg:w="14"/><text x="55.4832%" y="399.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="55.2435%" y="373" width="0.1347%" height="15" fill="rgb(248,8,30)" fg:x="5331" fg:w="13"/><text x="55.4935%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="55.2539%" y="357" width="0.1244%" height="15" fill="rgb(237,120,30)" fg:x="5332" fg:w="12"/><text x="55.5039%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.2746%" y="341" width="0.1036%" height="15" fill="rgb(221,146,34)" fg:x="5334" fg:w="10"/><text x="55.5246%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.10%)</title><rect x="55.2746%" y="325" width="0.1036%" height="15" fill="rgb(242,55,13)" fg:x="5334" fg:w="10"/><text x="55.5246%" y="335.50"></text></g><g><title>sysmalloc (59 samples, 0.61%)</title><rect x="55.1710%" y="565" width="0.6114%" height="15" fill="rgb(242,112,31)" fg:x="5324" fg:w="59"/><text x="55.4210%" y="575.50"></text></g><g><title>grow_heap (39 samples, 0.40%)</title><rect x="55.3782%" y="549" width="0.4041%" height="15" fill="rgb(249,192,27)" fg:x="5344" fg:w="39"/><text x="55.6282%" y="559.50"></text></g><g><title>__GI___mprotect (39 samples, 0.40%)</title><rect x="55.3782%" y="533" width="0.4041%" height="15" fill="rgb(208,204,44)" fg:x="5344" fg:w="39"/><text x="55.6282%" y="543.50"></text></g><g><title>[unknown] (39 samples, 0.40%)</title><rect x="55.3782%" y="517" width="0.4041%" height="15" fill="rgb(208,93,54)" fg:x="5344" fg:w="39"/><text x="55.6282%" y="527.50"></text></g><g><title>[unknown] (39 samples, 0.40%)</title><rect x="55.3782%" y="501" width="0.4041%" height="15" fill="rgb(242,1,31)" fg:x="5344" fg:w="39"/><text x="55.6282%" y="511.50"></text></g><g><title>[unknown] (39 samples, 0.40%)</title><rect x="55.3782%" y="485" width="0.4041%" height="15" fill="rgb(241,83,25)" fg:x="5344" fg:w="39"/><text x="55.6282%" y="495.50"></text></g><g><title>[unknown] (39 samples, 0.40%)</title><rect x="55.3782%" y="469" width="0.4041%" height="15" fill="rgb(205,169,50)" fg:x="5344" fg:w="39"/><text x="55.6282%" y="479.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="55.3886%" y="453" width="0.3938%" height="15" fill="rgb(239,186,37)" fg:x="5345" fg:w="38"/><text x="55.6386%" y="463.50"></text></g><g><title>[unknown] (37 samples, 0.38%)</title><rect x="55.3990%" y="437" width="0.3834%" height="15" fill="rgb(205,221,10)" fg:x="5346" fg:w="37"/><text x="55.6490%" y="447.50"></text></g><g><title>[unknown] (35 samples, 0.36%)</title><rect x="55.4197%" y="421" width="0.3627%" height="15" fill="rgb(218,196,15)" fg:x="5348" fg:w="35"/><text x="55.6697%" y="431.50"></text></g><g><title>[unknown] (32 samples, 0.33%)</title><rect x="55.4508%" y="405" width="0.3316%" height="15" fill="rgb(218,196,35)" fg:x="5351" fg:w="32"/><text x="55.7008%" y="415.50"></text></g><g><title>[unknown] (29 samples, 0.30%)</title><rect x="55.4819%" y="389" width="0.3005%" height="15" fill="rgb(233,63,24)" fg:x="5354" fg:w="29"/><text x="55.7319%" y="399.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="55.5130%" y="373" width="0.2694%" height="15" fill="rgb(225,8,4)" fg:x="5357" fg:w="26"/><text x="55.7630%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.27%)</title><rect x="55.5130%" y="357" width="0.2694%" height="15" fill="rgb(234,105,35)" fg:x="5357" fg:w="26"/><text x="55.7630%" y="367.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="55.5544%" y="341" width="0.2280%" height="15" fill="rgb(236,21,32)" fg:x="5361" fg:w="22"/><text x="55.8044%" y="351.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="55.5751%" y="325" width="0.2073%" height="15" fill="rgb(228,109,6)" fg:x="5363" fg:w="20"/><text x="55.8251%" y="335.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="55.5751%" y="309" width="0.2073%" height="15" fill="rgb(229,215,31)" fg:x="5363" fg:w="20"/><text x="55.8251%" y="319.50"></text></g><g><title>_int_realloc (214 samples, 2.22%)</title><rect x="53.5959%" y="597" width="2.2176%" height="15" fill="rgb(221,52,54)" fg:x="5172" fg:w="214"/><text x="53.8459%" y="607.50">_..</text></g><g><title>_int_malloc (164 samples, 1.70%)</title><rect x="54.1140%" y="581" width="1.6995%" height="15" fill="rgb(252,129,43)" fg:x="5222" fg:w="164"/><text x="54.3640%" y="591.50"></text></g><g><title>unlink_chunk (3 samples, 0.03%)</title><rect x="55.7824%" y="565" width="0.0311%" height="15" fill="rgb(248,183,27)" fg:x="5383" fg:w="3"/><text x="56.0324%" y="575.50"></text></g><g><title>arena_for_chunk (9 samples, 0.09%)</title><rect x="55.8135%" y="597" width="0.0933%" height="15" fill="rgb(250,0,22)" fg:x="5386" fg:w="9"/><text x="56.0635%" y="607.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="55.8756%" y="581" width="0.0311%" height="15" fill="rgb(213,166,10)" fg:x="5392" fg:w="3"/><text x="56.1256%" y="591.50"></text></g><g><title>heap_for_ptr (3 samples, 0.03%)</title><rect x="55.8756%" y="565" width="0.0311%" height="15" fill="rgb(207,163,36)" fg:x="5392" fg:w="3"/><text x="56.1256%" y="575.50"></text></g><g><title>__GI___libc_realloc (298 samples, 3.09%)</title><rect x="52.8497%" y="613" width="3.0881%" height="15" fill="rgb(208,122,22)" fg:x="5100" fg:w="298"/><text x="53.0997%" y="623.50">__G..</text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="55.9067%" y="597" width="0.0311%" height="15" fill="rgb(207,104,49)" fg:x="5395" fg:w="3"/><text x="56.1567%" y="607.50"></text></g><g><title>__rdl_realloc (6 samples, 0.06%)</title><rect x="55.9378%" y="613" width="0.0622%" height="15" fill="rgb(248,211,50)" fg:x="5398" fg:w="6"/><text x="56.1878%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.03%)</title><rect x="55.9689%" y="597" width="0.0311%" height="15" fill="rgb(217,13,45)" fg:x="5401" fg:w="3"/><text x="56.2189%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (307 samples, 3.18%)</title><rect x="52.8497%" y="661" width="3.1813%" height="15" fill="rgb(211,216,49)" fg:x="5100" fg:w="307"/><text x="53.0997%" y="671.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (307 samples, 3.18%)</title><rect x="52.8497%" y="645" width="3.1813%" height="15" fill="rgb(221,58,53)" fg:x="5100" fg:w="307"/><text x="53.0997%" y="655.50">all..</text></g><g><title>alloc::alloc::realloc (307 samples, 3.18%)</title><rect x="52.8497%" y="629" width="3.1813%" height="15" fill="rgb(220,112,41)" fg:x="5100" fg:w="307"/><text x="53.0997%" y="639.50">all..</text></g><g><title>__rust_realloc (3 samples, 0.03%)</title><rect x="56.0000%" y="613" width="0.0311%" height="15" fill="rgb(236,38,28)" fg:x="5404" fg:w="3"/><text x="56.2500%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="56.0311%" y="661" width="0.0104%" height="15" fill="rgb(227,195,22)" fg:x="5407" fg:w="1"/><text x="56.2811%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (313 samples, 3.24%)</title><rect x="52.8083%" y="677" width="3.2435%" height="15" fill="rgb(214,55,33)" fg:x="5096" fg:w="313"/><text x="53.0583%" y="687.50">all..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="56.0415%" y="661" width="0.0104%" height="15" fill="rgb(248,80,13)" fg:x="5408" fg:w="1"/><text x="56.2915%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="56.0518%" y="677" width="0.0207%" height="15" fill="rgb(238,52,6)" fg:x="5409" fg:w="2"/><text x="56.3018%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="56.0518%" y="661" width="0.0207%" height="15" fill="rgb(224,198,47)" fg:x="5409" fg:w="2"/><text x="56.3018%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (330 samples, 3.42%)</title><rect x="52.7150%" y="741" width="3.4197%" height="15" fill="rgb(233,171,20)" fg:x="5087" fg:w="330"/><text x="52.9650%" y="751.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (330 samples, 3.42%)</title><rect x="52.7150%" y="725" width="3.4197%" height="15" fill="rgb(241,30,25)" fg:x="5087" fg:w="330"/><text x="52.9650%" y="735.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (330 samples, 3.42%)</title><rect x="52.7150%" y="709" width="3.4197%" height="15" fill="rgb(207,171,38)" fg:x="5087" fg:w="330"/><text x="52.9650%" y="719.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (330 samples, 3.42%)</title><rect x="52.7150%" y="693" width="3.4197%" height="15" fill="rgb(234,70,1)" fg:x="5087" fg:w="330"/><text x="52.9650%" y="703.50">all..</text></g><g><title>core::cmp::max (6 samples, 0.06%)</title><rect x="56.0725%" y="677" width="0.0622%" height="15" fill="rgb(232,178,18)" fg:x="5411" fg:w="6"/><text x="56.3225%" y="687.50"></text></g><g><title>core::cmp::Ord::max (6 samples, 0.06%)</title><rect x="56.0725%" y="661" width="0.0622%" height="15" fill="rgb(241,78,40)" fg:x="5411" fg:w="6"/><text x="56.3225%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="56.0725%" y="645" width="0.0622%" height="15" fill="rgb(222,35,25)" fg:x="5411" fg:w="6"/><text x="56.3225%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.10%)</title><rect x="56.1347%" y="741" width="0.1036%" height="15" fill="rgb(207,92,16)" fg:x="5417" fg:w="10"/><text x="56.3847%" y="751.50"></text></g><g><title>__memcpy_evex_unaligned_erms (10 samples, 0.10%)</title><rect x="56.1347%" y="725" width="0.1036%" height="15" fill="rgb(216,59,51)" fg:x="5417" fg:w="10"/><text x="56.3847%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="709" width="0.0104%" height="15" fill="rgb(213,80,28)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="693" width="0.0104%" height="15" fill="rgb(220,93,7)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="677" width="0.0104%" height="15" fill="rgb(225,24,44)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="661" width="0.0104%" height="15" fill="rgb(243,74,40)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="645" width="0.0104%" height="15" fill="rgb(228,39,7)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="629" width="0.0104%" height="15" fill="rgb(227,79,8)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="613" width="0.0104%" height="15" fill="rgb(236,58,11)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="597" width="0.0104%" height="15" fill="rgb(249,63,35)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="581" width="0.0104%" height="15" fill="rgb(252,114,16)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="565" width="0.0104%" height="15" fill="rgb(254,151,24)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="56.2280%" y="549" width="0.0104%" height="15" fill="rgb(253,54,39)" fg:x="5426" fg:w="1"/><text x="56.4780%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (345 samples, 3.58%)</title><rect x="52.7150%" y="789" width="3.5751%" height="15" fill="rgb(243,25,45)" fg:x="5087" fg:w="345"/><text x="52.9650%" y="799.50">allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (345 samples, 3.58%)</title><rect x="52.7150%" y="773" width="3.5751%" height="15" fill="rgb(234,134,9)" fg:x="5087" fg:w="345"/><text x="52.9650%" y="783.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (345 samples, 3.58%)</title><rect x="52.7150%" y="757" width="3.5751%" height="15" fill="rgb(227,166,31)" fg:x="5087" fg:w="345"/><text x="52.9650%" y="767.50">allo..</text></g><g><title>paranagram::utils::find_sum_rec (5 samples, 0.05%)</title><rect x="56.2383%" y="741" width="0.0518%" height="15" fill="rgb(245,143,41)" fg:x="5427" fg:w="5"/><text x="56.4883%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="56.3316%" y="741" width="0.0104%" height="15" fill="rgb(238,181,32)" fg:x="5436" fg:w="1"/><text x="56.5816%" y="751.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="56.3731%" y="725" width="0.0518%" height="15" fill="rgb(224,113,18)" fg:x="5440" fg:w="5"/><text x="56.6231%" y="735.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="56.4145%" y="709" width="0.0104%" height="15" fill="rgb(240,229,28)" fg:x="5444" fg:w="1"/><text x="56.6645%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="56.4249%" y="725" width="0.0104%" height="15" fill="rgb(250,185,3)" fg:x="5445" fg:w="1"/><text x="56.6749%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="56.4249%" y="709" width="0.0104%" height="15" fill="rgb(212,59,25)" fg:x="5445" fg:w="1"/><text x="56.6749%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.10%)</title><rect x="56.3420%" y="741" width="0.1036%" height="15" fill="rgb(221,87,20)" fg:x="5437" fg:w="10"/><text x="56.5920%" y="751.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="56.4352%" y="725" width="0.0104%" height="15" fill="rgb(213,74,28)" fg:x="5446" fg:w="1"/><text x="56.6852%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="56.4456%" y="741" width="0.0104%" height="15" fill="rgb(224,132,34)" fg:x="5447" fg:w="1"/><text x="56.6956%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="56.4456%" y="725" width="0.0104%" height="15" fill="rgb(222,101,24)" fg:x="5447" fg:w="1"/><text x="56.6956%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.15%)</title><rect x="56.3212%" y="773" width="0.1451%" height="15" fill="rgb(254,142,4)" fg:x="5435" fg:w="14"/><text x="56.5712%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.15%)</title><rect x="56.3212%" y="757" width="0.1451%" height="15" fill="rgb(230,229,49)" fg:x="5435" fg:w="14"/><text x="56.5712%" y="767.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="56.4560%" y="741" width="0.0104%" height="15" fill="rgb(238,70,47)" fg:x="5448" fg:w="1"/><text x="56.7060%" y="751.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="56.4560%" y="725" width="0.0104%" height="15" fill="rgb(231,160,17)" fg:x="5448" fg:w="1"/><text x="56.7060%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="56.4560%" y="709" width="0.0104%" height="15" fill="rgb(218,68,53)" fg:x="5448" fg:w="1"/><text x="56.7060%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.19%)</title><rect x="56.2902%" y="789" width="0.1865%" height="15" fill="rgb(236,111,10)" fg:x="5432" fg:w="18"/><text x="56.5402%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="56.4663%" y="773" width="0.0104%" height="15" fill="rgb(224,34,41)" fg:x="5449" fg:w="1"/><text x="56.7163%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="56.4767%" y="789" width="0.0104%" height="15" fill="rgb(241,118,19)" fg:x="5450" fg:w="1"/><text x="56.7267%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.20%)</title><rect x="56.4870%" y="789" width="0.1969%" height="15" fill="rgb(238,129,25)" fg:x="5451" fg:w="19"/><text x="56.7370%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.7047%" y="757" width="0.0104%" height="15" fill="rgb(238,22,31)" fg:x="5472" fg:w="1"/><text x="56.9547%" y="767.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="56.7047%" y="741" width="0.0104%" height="15" fill="rgb(222,174,48)" fg:x="5472" fg:w="1"/><text x="56.9547%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="56.7565%" y="581" width="0.0104%" height="15" fill="rgb(206,152,40)" fg:x="5477" fg:w="1"/><text x="57.0065%" y="591.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="56.7668%" y="581" width="0.0104%" height="15" fill="rgb(218,99,54)" fg:x="5478" fg:w="1"/><text x="57.0168%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.7772%" y="581" width="0.0104%" height="15" fill="rgb(220,174,26)" fg:x="5479" fg:w="1"/><text x="57.0272%" y="591.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="56.7876%" y="565" width="0.0104%" height="15" fill="rgb(245,116,9)" fg:x="5480" fg:w="1"/><text x="57.0376%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.13%)</title><rect x="56.7461%" y="661" width="0.1347%" height="15" fill="rgb(209,72,35)" fg:x="5476" fg:w="13"/><text x="56.9961%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.13%)</title><rect x="56.7461%" y="645" width="0.1347%" height="15" fill="rgb(226,126,21)" fg:x="5476" fg:w="13"/><text x="56.9961%" y="655.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.13%)</title><rect x="56.7461%" y="629" width="0.1347%" height="15" fill="rgb(227,192,1)" fg:x="5476" fg:w="13"/><text x="56.9961%" y="639.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.13%)</title><rect x="56.7461%" y="613" width="0.1347%" height="15" fill="rgb(237,180,29)" fg:x="5476" fg:w="13"/><text x="56.9961%" y="623.50"></text></g><g><title>_int_realloc (12 samples, 0.12%)</title><rect x="56.7565%" y="597" width="0.1244%" height="15" fill="rgb(230,197,35)" fg:x="5477" fg:w="12"/><text x="57.0065%" y="607.50"></text></g><g><title>_int_malloc (9 samples, 0.09%)</title><rect x="56.7876%" y="581" width="0.0933%" height="15" fill="rgb(246,193,31)" fg:x="5480" fg:w="9"/><text x="57.0376%" y="591.50"></text></g><g><title>sysmalloc (8 samples, 0.08%)</title><rect x="56.7979%" y="565" width="0.0829%" height="15" fill="rgb(241,36,4)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="575.50"></text></g><g><title>grow_heap (8 samples, 0.08%)</title><rect x="56.7979%" y="549" width="0.0829%" height="15" fill="rgb(241,130,17)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="559.50"></text></g><g><title>__GI___mprotect (8 samples, 0.08%)</title><rect x="56.7979%" y="533" width="0.0829%" height="15" fill="rgb(206,137,32)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="517" width="0.0829%" height="15" fill="rgb(237,228,51)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="501" width="0.0829%" height="15" fill="rgb(243,6,42)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="485" width="0.0829%" height="15" fill="rgb(251,74,28)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="469" width="0.0829%" height="15" fill="rgb(218,20,49)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="479.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="453" width="0.0829%" height="15" fill="rgb(238,28,14)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="437" width="0.0829%" height="15" fill="rgb(229,40,46)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="56.7979%" y="421" width="0.0829%" height="15" fill="rgb(244,195,20)" fg:x="5481" fg:w="8"/><text x="57.0479%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="56.8083%" y="405" width="0.0725%" height="15" fill="rgb(253,56,35)" fg:x="5482" fg:w="7"/><text x="57.0583%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="56.8187%" y="389" width="0.0622%" height="15" fill="rgb(210,149,44)" fg:x="5483" fg:w="6"/><text x="57.0687%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="56.8187%" y="373" width="0.0622%" height="15" fill="rgb(240,135,12)" fg:x="5483" fg:w="6"/><text x="57.0687%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="56.8187%" y="357" width="0.0622%" height="15" fill="rgb(251,24,50)" fg:x="5483" fg:w="6"/><text x="57.0687%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="56.8290%" y="341" width="0.0518%" height="15" fill="rgb(243,200,47)" fg:x="5484" fg:w="5"/><text x="57.0790%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="56.8290%" y="325" width="0.0518%" height="15" fill="rgb(224,166,26)" fg:x="5484" fg:w="5"/><text x="57.0790%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="56.8290%" y="309" width="0.0518%" height="15" fill="rgb(233,0,47)" fg:x="5484" fg:w="5"/><text x="57.0790%" y="319.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="56.9016%" y="645" width="0.0104%" height="15" fill="rgb(253,80,5)" fg:x="5491" fg:w="1"/><text x="57.1516%" y="655.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="56.8808%" y="661" width="0.0415%" height="15" fill="rgb(214,133,25)" fg:x="5489" fg:w="4"/><text x="57.1308%" y="671.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="56.9119%" y="645" width="0.0104%" height="15" fill="rgb(209,27,14)" fg:x="5492" fg:w="1"/><text x="57.1619%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.21%)</title><rect x="56.7254%" y="677" width="0.2073%" height="15" fill="rgb(219,102,51)" fg:x="5474" fg:w="20"/><text x="56.9754%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="56.9223%" y="661" width="0.0104%" height="15" fill="rgb(237,18,16)" fg:x="5493" fg:w="1"/><text x="57.1723%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.22%)</title><rect x="56.7254%" y="709" width="0.2176%" height="15" fill="rgb(241,85,17)" fg:x="5474" fg:w="21"/><text x="56.9754%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.22%)</title><rect x="56.7254%" y="693" width="0.2176%" height="15" fill="rgb(236,90,42)" fg:x="5474" fg:w="21"/><text x="56.9754%" y="703.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="56.9326%" y="677" width="0.0104%" height="15" fill="rgb(249,57,21)" fg:x="5494" fg:w="1"/><text x="57.1826%" y="687.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="56.9326%" y="661" width="0.0104%" height="15" fill="rgb(243,12,36)" fg:x="5494" fg:w="1"/><text x="57.1826%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="56.9326%" y="645" width="0.0104%" height="15" fill="rgb(253,128,47)" fg:x="5494" fg:w="1"/><text x="57.1826%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (23 samples, 0.24%)</title><rect x="56.7150%" y="757" width="0.2383%" height="15" fill="rgb(207,33,20)" fg:x="5473" fg:w="23"/><text x="56.9650%" y="767.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (23 samples, 0.24%)</title><rect x="56.7150%" y="741" width="0.2383%" height="15" fill="rgb(233,215,35)" fg:x="5473" fg:w="23"/><text x="56.9650%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.24%)</title><rect x="56.7150%" y="725" width="0.2383%" height="15" fill="rgb(249,188,52)" fg:x="5473" fg:w="23"/><text x="56.9650%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="56.9430%" y="709" width="0.0104%" height="15" fill="rgb(225,12,32)" fg:x="5495" fg:w="1"/><text x="57.1930%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="56.9430%" y="693" width="0.0104%" height="15" fill="rgb(247,98,14)" fg:x="5495" fg:w="1"/><text x="57.1930%" y="703.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (2 samples, 0.02%)</title><rect x="56.9534%" y="725" width="0.0207%" height="15" fill="rgb(247,219,48)" fg:x="5496" fg:w="2"/><text x="57.2034%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.02%)</title><rect x="56.9534%" y="709" width="0.0207%" height="15" fill="rgb(253,60,48)" fg:x="5496" fg:w="2"/><text x="57.2034%" y="719.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="56.9534%" y="693" width="0.0207%" height="15" fill="rgb(245,15,52)" fg:x="5496" fg:w="2"/><text x="57.2034%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="56.9534%" y="677" width="0.0207%" height="15" fill="rgb(220,133,28)" fg:x="5496" fg:w="2"/><text x="57.2034%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="56.9534%" y="661" width="0.0207%" height="15" fill="rgb(217,180,4)" fg:x="5496" fg:w="2"/><text x="57.2034%" y="671.50"></text></g><g><title>_int_free (9 samples, 0.09%)</title><rect x="57.0052%" y="613" width="0.0933%" height="15" fill="rgb(251,24,1)" fg:x="5501" fg:w="9"/><text x="57.2552%" y="623.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="57.0777%" y="597" width="0.0207%" height="15" fill="rgb(212,185,49)" fg:x="5508" fg:w="2"/><text x="57.3277%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.13%)</title><rect x="56.9741%" y="661" width="0.1347%" height="15" fill="rgb(215,175,22)" fg:x="5498" fg:w="13"/><text x="57.2241%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.13%)</title><rect x="56.9741%" y="645" width="0.1347%" height="15" fill="rgb(250,205,14)" fg:x="5498" fg:w="13"/><text x="57.2241%" y="655.50"></text></g><g><title>__GI___libc_free (13 samples, 0.13%)</title><rect x="56.9741%" y="629" width="0.1347%" height="15" fill="rgb(225,211,22)" fg:x="5498" fg:w="13"/><text x="57.2241%" y="639.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="57.0984%" y="613" width="0.0104%" height="15" fill="rgb(251,179,42)" fg:x="5510" fg:w="1"/><text x="57.3484%" y="623.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="57.0984%" y="597" width="0.0104%" height="15" fill="rgb(208,216,51)" fg:x="5510" fg:w="1"/><text x="57.3484%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (14 samples, 0.15%)</title><rect x="56.9741%" y="725" width="0.1451%" height="15" fill="rgb(235,36,11)" fg:x="5498" fg:w="14"/><text x="57.2241%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="56.9741%" y="709" width="0.1451%" height="15" fill="rgb(213,189,28)" fg:x="5498" fg:w="14"/><text x="57.2241%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (14 samples, 0.15%)</title><rect x="56.9741%" y="693" width="0.1451%" height="15" fill="rgb(227,203,42)" fg:x="5498" fg:w="14"/><text x="57.2241%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="56.9741%" y="677" width="0.1451%" height="15" fill="rgb(244,72,36)" fg:x="5498" fg:w="14"/><text x="57.2241%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="57.1088%" y="661" width="0.0104%" height="15" fill="rgb(213,53,17)" fg:x="5511" fg:w="1"/><text x="57.3588%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.44%)</title><rect x="56.6943%" y="773" width="0.4352%" height="15" fill="rgb(207,167,3)" fg:x="5471" fg:w="42"/><text x="56.9443%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (17 samples, 0.18%)</title><rect x="56.9534%" y="757" width="0.1762%" height="15" fill="rgb(216,98,30)" fg:x="5496" fg:w="17"/><text x="57.2034%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="56.9534%" y="741" width="0.1762%" height="15" fill="rgb(236,123,15)" fg:x="5496" fg:w="17"/><text x="57.2034%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,usize)&gt;]&gt; (1 samples, 0.01%)</title><rect x="57.1192%" y="725" width="0.0104%" height="15" fill="rgb(248,81,50)" fg:x="5512" fg:w="1"/><text x="57.3692%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (44 samples, 0.46%)</title><rect x="56.6839%" y="789" width="0.4560%" height="15" fill="rgb(214,120,4)" fg:x="5470" fg:w="44"/><text x="56.9339%" y="799.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="57.1295%" y="773" width="0.0104%" height="15" fill="rgb(208,179,34)" fg:x="5513" fg:w="1"/><text x="57.3795%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="57.2539%" y="725" width="0.0207%" height="15" fill="rgb(227,140,7)" fg:x="5525" fg:w="2"/><text x="57.5039%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.02%)</title><rect x="57.2539%" y="709" width="0.0207%" height="15" fill="rgb(214,22,6)" fg:x="5525" fg:w="2"/><text x="57.5039%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.15%)</title><rect x="57.1399%" y="789" width="0.1451%" height="15" fill="rgb(207,137,27)" fg:x="5514" fg:w="14"/><text x="57.3899%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.15%)</title><rect x="57.1399%" y="773" width="0.1451%" height="15" fill="rgb(210,8,46)" fg:x="5514" fg:w="14"/><text x="57.3899%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.15%)</title><rect x="57.1399%" y="757" width="0.1451%" height="15" fill="rgb(240,16,54)" fg:x="5514" fg:w="14"/><text x="57.3899%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.15%)</title><rect x="57.1399%" y="741" width="0.1451%" height="15" fill="rgb(211,209,29)" fg:x="5514" fg:w="14"/><text x="57.3899%" y="751.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="57.2746%" y="725" width="0.0104%" height="15" fill="rgb(226,228,24)" fg:x="5527" fg:w="1"/><text x="57.5246%" y="735.50"></text></g><g><title>free_perturb (2 samples, 0.02%)</title><rect x="58.0207%" y="677" width="0.0207%" height="15" fill="rgb(222,84,9)" fg:x="5599" fg:w="2"/><text x="58.2707%" y="687.50"></text></g><g><title>_int_free (63 samples, 0.65%)</title><rect x="57.3990%" y="693" width="0.6528%" height="15" fill="rgb(234,203,30)" fg:x="5539" fg:w="63"/><text x="57.6490%" y="703.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="58.0415%" y="677" width="0.0104%" height="15" fill="rgb(238,109,14)" fg:x="5601" fg:w="1"/><text x="58.2915%" y="687.50"></text></g><g><title>__GI___libc_free (74 samples, 0.77%)</title><rect x="57.3057%" y="709" width="0.7668%" height="15" fill="rgb(233,206,34)" fg:x="5530" fg:w="74"/><text x="57.5557%" y="719.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="58.0518%" y="693" width="0.0207%" height="15" fill="rgb(220,167,47)" fg:x="5602" fg:w="2"/><text x="58.3018%" y="703.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="58.0518%" y="677" width="0.0207%" height="15" fill="rgb(238,105,10)" fg:x="5602" fg:w="2"/><text x="58.3018%" y="687.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="58.0622%" y="661" width="0.0104%" height="15" fill="rgb(213,227,17)" fg:x="5603" fg:w="1"/><text x="58.3122%" y="671.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.03%)</title><rect x="58.0725%" y="709" width="0.0311%" height="15" fill="rgb(217,132,38)" fg:x="5604" fg:w="3"/><text x="58.3225%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.03%)</title><rect x="58.0725%" y="693" width="0.0311%" height="15" fill="rgb(242,146,4)" fg:x="5604" fg:w="3"/><text x="58.3225%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (80 samples, 0.83%)</title><rect x="57.2850%" y="789" width="0.8290%" height="15" fill="rgb(212,61,9)" fg:x="5528" fg:w="80"/><text x="57.5350%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (80 samples, 0.83%)</title><rect x="57.2850%" y="773" width="0.8290%" height="15" fill="rgb(247,126,22)" fg:x="5528" fg:w="80"/><text x="57.5350%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.83%)</title><rect x="57.2850%" y="757" width="0.8290%" height="15" fill="rgb(220,196,2)" fg:x="5528" fg:w="80"/><text x="57.5350%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (78 samples, 0.81%)</title><rect x="57.3057%" y="741" width="0.8083%" height="15" fill="rgb(208,46,4)" fg:x="5530" fg:w="78"/><text x="57.5557%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (78 samples, 0.81%)</title><rect x="57.3057%" y="725" width="0.8083%" height="15" fill="rgb(252,104,46)" fg:x="5530" fg:w="78"/><text x="57.5557%" y="735.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="58.1036%" y="709" width="0.0104%" height="15" fill="rgb(237,152,48)" fg:x="5607" fg:w="1"/><text x="58.3536%" y="719.50"></text></g><g><title>_int_free (32 samples, 0.33%)</title><rect x="58.1969%" y="613" width="0.3316%" height="15" fill="rgb(221,59,37)" fg:x="5616" fg:w="32"/><text x="58.4469%" y="623.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="58.4974%" y="597" width="0.0311%" height="15" fill="rgb(209,202,51)" fg:x="5645" fg:w="3"/><text x="58.7474%" y="607.50"></text></g><g><title>__GI___libc_free (42 samples, 0.44%)</title><rect x="58.1140%" y="629" width="0.4352%" height="15" fill="rgb(228,81,30)" fg:x="5608" fg:w="42"/><text x="58.3640%" y="639.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="58.5285%" y="613" width="0.0207%" height="15" fill="rgb(227,42,39)" fg:x="5648" fg:w="2"/><text x="58.7785%" y="623.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="58.5389%" y="597" width="0.0104%" height="15" fill="rgb(221,26,2)" fg:x="5649" fg:w="1"/><text x="58.7889%" y="607.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.03%)</title><rect x="58.5492%" y="629" width="0.0311%" height="15" fill="rgb(254,61,31)" fg:x="5650" fg:w="3"/><text x="58.7992%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.03%)</title><rect x="58.5492%" y="613" width="0.0311%" height="15" fill="rgb(222,173,38)" fg:x="5650" fg:w="3"/><text x="58.7992%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (46 samples, 0.48%)</title><rect x="58.1140%" y="661" width="0.4767%" height="15" fill="rgb(218,50,12)" fg:x="5608" fg:w="46"/><text x="58.3640%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (46 samples, 0.48%)</title><rect x="58.1140%" y="645" width="0.4767%" height="15" fill="rgb(223,88,40)" fg:x="5608" fg:w="46"/><text x="58.3640%" y="655.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="58.5803%" y="629" width="0.0104%" height="15" fill="rgb(237,54,19)" fg:x="5653" fg:w="1"/><text x="58.8303%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (49 samples, 0.51%)</title><rect x="58.1140%" y="789" width="0.5078%" height="15" fill="rgb(251,129,25)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (49 samples, 0.51%)</title><rect x="58.1140%" y="773" width="0.5078%" height="15" fill="rgb(238,97,19)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (49 samples, 0.51%)</title><rect x="58.1140%" y="757" width="0.5078%" height="15" fill="rgb(240,169,18)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.51%)</title><rect x="58.1140%" y="741" width="0.5078%" height="15" fill="rgb(230,187,49)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (49 samples, 0.51%)</title><rect x="58.1140%" y="725" width="0.5078%" height="15" fill="rgb(209,44,26)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.51%)</title><rect x="58.1140%" y="709" width="0.5078%" height="15" fill="rgb(244,0,6)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (49 samples, 0.51%)</title><rect x="58.1140%" y="693" width="0.5078%" height="15" fill="rgb(248,18,21)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.51%)</title><rect x="58.1140%" y="677" width="0.5078%" height="15" fill="rgb(245,180,19)" fg:x="5608" fg:w="49"/><text x="58.3640%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.03%)</title><rect x="58.5907%" y="661" width="0.0311%" height="15" fill="rgb(252,118,36)" fg:x="5654" fg:w="3"/><text x="58.8407%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="58.8290%" y="773" width="0.0104%" height="15" fill="rgb(210,224,19)" fg:x="5677" fg:w="1"/><text x="59.0790%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="58.8290%" y="757" width="0.0104%" height="15" fill="rgb(218,30,24)" fg:x="5677" fg:w="1"/><text x="59.0790%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="58.8394%" y="773" width="0.0104%" height="15" fill="rgb(219,75,50)" fg:x="5678" fg:w="1"/><text x="59.0894%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (8 samples, 0.08%)</title><rect x="58.8497%" y="741" width="0.0829%" height="15" fill="rgb(234,72,50)" fg:x="5679" fg:w="8"/><text x="59.0997%" y="751.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="58.9223%" y="725" width="0.0104%" height="15" fill="rgb(219,100,48)" fg:x="5686" fg:w="1"/><text x="59.1723%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.10%)</title><rect x="58.8497%" y="773" width="0.1036%" height="15" fill="rgb(253,5,41)" fg:x="5679" fg:w="10"/><text x="59.0997%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (10 samples, 0.10%)</title><rect x="58.8497%" y="757" width="0.1036%" height="15" fill="rgb(247,181,11)" fg:x="5679" fg:w="10"/><text x="59.0997%" y="767.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="58.9326%" y="741" width="0.0207%" height="15" fill="rgb(222,223,25)" fg:x="5687" fg:w="2"/><text x="59.1826%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="58.9326%" y="725" width="0.0207%" height="15" fill="rgb(214,198,28)" fg:x="5687" fg:w="2"/><text x="59.1826%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.02%)</title><rect x="58.9326%" y="709" width="0.0207%" height="15" fill="rgb(230,46,43)" fg:x="5687" fg:w="2"/><text x="59.1826%" y="719.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="58.9534%" y="581" width="0.0311%" height="15" fill="rgb(233,65,53)" fg:x="5689" fg:w="3"/><text x="59.2034%" y="591.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="58.9741%" y="565" width="0.0104%" height="15" fill="rgb(221,121,27)" fg:x="5691" fg:w="1"/><text x="59.2241%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="58.9534%" y="677" width="0.0415%" height="15" fill="rgb(247,70,47)" fg:x="5689" fg:w="4"/><text x="59.2034%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="58.9534%" y="661" width="0.0415%" height="15" fill="rgb(228,85,35)" fg:x="5689" fg:w="4"/><text x="59.2034%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="58.9534%" y="645" width="0.0415%" height="15" fill="rgb(209,50,18)" fg:x="5689" fg:w="4"/><text x="59.2034%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="58.9534%" y="629" width="0.0415%" height="15" fill="rgb(250,19,35)" fg:x="5689" fg:w="4"/><text x="59.2034%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="58.9534%" y="613" width="0.0415%" height="15" fill="rgb(253,107,29)" fg:x="5689" fg:w="4"/><text x="59.2034%" y="623.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="58.9534%" y="597" width="0.0415%" height="15" fill="rgb(252,179,29)" fg:x="5689" fg:w="4"/><text x="59.2034%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="58.9845%" y="581" width="0.0104%" height="15" fill="rgb(238,194,6)" fg:x="5692" fg:w="1"/><text x="59.2345%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="58.9845%" y="565" width="0.0104%" height="15" fill="rgb(238,164,29)" fg:x="5692" fg:w="1"/><text x="59.2345%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="58.9534%" y="773" width="0.0622%" height="15" fill="rgb(224,25,9)" fg:x="5689" fg:w="6"/><text x="59.2034%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="58.9534%" y="757" width="0.0622%" height="15" fill="rgb(244,153,23)" fg:x="5689" fg:w="6"/><text x="59.2034%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="58.9534%" y="741" width="0.0622%" height="15" fill="rgb(212,203,14)" fg:x="5689" fg:w="6"/><text x="59.2034%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.06%)</title><rect x="58.9534%" y="725" width="0.0622%" height="15" fill="rgb(220,164,20)" fg:x="5689" fg:w="6"/><text x="59.2034%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.06%)</title><rect x="58.9534%" y="709" width="0.0622%" height="15" fill="rgb(222,203,48)" fg:x="5689" fg:w="6"/><text x="59.2034%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.06%)</title><rect x="58.9534%" y="693" width="0.0622%" height="15" fill="rgb(215,159,22)" fg:x="5689" fg:w="6"/><text x="59.2034%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="58.9948%" y="677" width="0.0207%" height="15" fill="rgb(216,183,47)" fg:x="5693" fg:w="2"/><text x="59.2448%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="58.9948%" y="661" width="0.0207%" height="15" fill="rgb(229,195,25)" fg:x="5693" fg:w="2"/><text x="59.2448%" y="671.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.02%)</title><rect x="58.9948%" y="645" width="0.0207%" height="15" fill="rgb(224,132,51)" fg:x="5693" fg:w="2"/><text x="59.2448%" y="655.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="59.0259%" y="693" width="0.0207%" height="15" fill="rgb(240,63,7)" fg:x="5696" fg:w="2"/><text x="59.2759%" y="703.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="59.0155%" y="709" width="0.0518%" height="15" fill="rgb(249,182,41)" fg:x="5695" fg:w="5"/><text x="59.2655%" y="719.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="59.0466%" y="693" width="0.0207%" height="15" fill="rgb(243,47,26)" fg:x="5698" fg:w="2"/><text x="59.2966%" y="703.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="59.0674%" y="709" width="0.0207%" height="15" fill="rgb(233,48,2)" fg:x="5700" fg:w="2"/><text x="59.3174%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.08%)</title><rect x="59.0155%" y="773" width="0.0829%" height="15" fill="rgb(244,165,34)" fg:x="5695" fg:w="8"/><text x="59.2655%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.08%)</title><rect x="59.0155%" y="757" width="0.0829%" height="15" fill="rgb(207,89,7)" fg:x="5695" fg:w="8"/><text x="59.2655%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.08%)</title><rect x="59.0155%" y="741" width="0.0829%" height="15" fill="rgb(244,117,36)" fg:x="5695" fg:w="8"/><text x="59.2655%" y="751.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.08%)</title><rect x="59.0155%" y="725" width="0.0829%" height="15" fill="rgb(226,144,34)" fg:x="5695" fg:w="8"/><text x="59.2655%" y="735.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="59.0881%" y="709" width="0.0104%" height="15" fill="rgb(213,23,19)" fg:x="5702" fg:w="1"/><text x="59.3381%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (2 samples, 0.02%)</title><rect x="59.0984%" y="773" width="0.0207%" height="15" fill="rgb(217,75,12)" fg:x="5703" fg:w="2"/><text x="59.3484%" y="783.50"></text></g><g><title>alloc::slice::hack::into_vec (2 samples, 0.02%)</title><rect x="59.0984%" y="757" width="0.0207%" height="15" fill="rgb(224,159,17)" fg:x="5703" fg:w="2"/><text x="59.3484%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (2 samples, 0.02%)</title><rect x="59.0984%" y="741" width="0.0207%" height="15" fill="rgb(217,118,1)" fg:x="5703" fg:w="2"/><text x="59.3484%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="59.1606%" y="661" width="0.0207%" height="15" fill="rgb(232,180,48)" fg:x="5709" fg:w="2"/><text x="59.4106%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.02%)</title><rect x="59.1606%" y="645" width="0.0207%" height="15" fill="rgb(230,27,33)" fg:x="5709" fg:w="2"/><text x="59.4106%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.05%)</title><rect x="59.6062%" y="565" width="0.0518%" height="15" fill="rgb(205,31,21)" fg:x="5752" fg:w="5"/><text x="59.8562%" y="575.50"></text></g><g><title>_int_free (8 samples, 0.08%)</title><rect x="59.6580%" y="565" width="0.0829%" height="15" fill="rgb(253,59,4)" fg:x="5757" fg:w="8"/><text x="59.9080%" y="575.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="59.7202%" y="549" width="0.0207%" height="15" fill="rgb(224,201,9)" fg:x="5763" fg:w="2"/><text x="59.9702%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.1554%" y="549" width="0.0415%" height="15" fill="rgb(229,206,30)" fg:x="5805" fg:w="4"/><text x="60.4054%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.1554%" y="533" width="0.0415%" height="15" fill="rgb(212,67,47)" fg:x="5805" fg:w="4"/><text x="60.4054%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.1554%" y="517" width="0.0415%" height="15" fill="rgb(211,96,50)" fg:x="5805" fg:w="4"/><text x="60.4054%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.1554%" y="501" width="0.0415%" height="15" fill="rgb(252,114,18)" fg:x="5805" fg:w="4"/><text x="60.4054%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="60.1554%" y="485" width="0.0415%" height="15" fill="rgb(223,58,37)" fg:x="5805" fg:w="4"/><text x="60.4054%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1762%" y="469" width="0.0207%" height="15" fill="rgb(237,70,4)" fg:x="5807" fg:w="2"/><text x="60.4262%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1762%" y="453" width="0.0207%" height="15" fill="rgb(244,85,46)" fg:x="5807" fg:w="2"/><text x="60.4262%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1762%" y="437" width="0.0207%" height="15" fill="rgb(223,39,52)" fg:x="5807" fg:w="2"/><text x="60.4262%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1762%" y="421" width="0.0207%" height="15" fill="rgb(218,200,14)" fg:x="5807" fg:w="2"/><text x="60.4262%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1762%" y="405" width="0.0207%" height="15" fill="rgb(208,171,16)" fg:x="5807" fg:w="2"/><text x="60.4262%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.1762%" y="389" width="0.0207%" height="15" fill="rgb(234,200,18)" fg:x="5807" fg:w="2"/><text x="60.4262%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.1865%" y="373" width="0.0104%" height="15" fill="rgb(228,45,11)" fg:x="5808" fg:w="1"/><text x="60.4365%" y="383.50"></text></g><g><title>alloc_perturb (2 samples, 0.02%)</title><rect x="60.1969%" y="549" width="0.0207%" height="15" fill="rgb(237,182,11)" fg:x="5809" fg:w="2"/><text x="60.4469%" y="559.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="60.2176%" y="549" width="0.0104%" height="15" fill="rgb(241,175,49)" fg:x="5811" fg:w="1"/><text x="60.4676%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="60.2280%" y="549" width="0.0104%" height="15" fill="rgb(247,38,35)" fg:x="5812" fg:w="1"/><text x="60.4780%" y="559.50"></text></g><g><title>[unknown] (31 samples, 0.32%)</title><rect x="60.2383%" y="533" width="0.3212%" height="15" fill="rgb(228,39,49)" fg:x="5813" fg:w="31"/><text x="60.4883%" y="543.50"></text></g><g><title>[unknown] (30 samples, 0.31%)</title><rect x="60.2487%" y="517" width="0.3109%" height="15" fill="rgb(226,101,26)" fg:x="5814" fg:w="30"/><text x="60.4987%" y="527.50"></text></g><g><title>[unknown] (30 samples, 0.31%)</title><rect x="60.2487%" y="501" width="0.3109%" height="15" fill="rgb(206,141,19)" fg:x="5814" fg:w="30"/><text x="60.4987%" y="511.50"></text></g><g><title>[unknown] (30 samples, 0.31%)</title><rect x="60.2487%" y="485" width="0.3109%" height="15" fill="rgb(211,200,13)" fg:x="5814" fg:w="30"/><text x="60.4987%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.30%)</title><rect x="60.2591%" y="469" width="0.3005%" height="15" fill="rgb(241,121,6)" fg:x="5815" fg:w="29"/><text x="60.5091%" y="479.50"></text></g><g><title>[unknown] (28 samples, 0.29%)</title><rect x="60.2694%" y="453" width="0.2902%" height="15" fill="rgb(234,221,29)" fg:x="5816" fg:w="28"/><text x="60.5194%" y="463.50"></text></g><g><title>[unknown] (28 samples, 0.29%)</title><rect x="60.2694%" y="437" width="0.2902%" height="15" fill="rgb(229,136,5)" fg:x="5816" fg:w="28"/><text x="60.5194%" y="447.50"></text></g><g><title>[unknown] (28 samples, 0.29%)</title><rect x="60.2694%" y="421" width="0.2902%" height="15" fill="rgb(238,36,11)" fg:x="5816" fg:w="28"/><text x="60.5194%" y="431.50"></text></g><g><title>[unknown] (28 samples, 0.29%)</title><rect x="60.2694%" y="405" width="0.2902%" height="15" fill="rgb(251,55,41)" fg:x="5816" fg:w="28"/><text x="60.5194%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="60.3005%" y="389" width="0.2591%" height="15" fill="rgb(242,34,40)" fg:x="5819" fg:w="25"/><text x="60.5505%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="60.3316%" y="373" width="0.2280%" height="15" fill="rgb(215,42,17)" fg:x="5822" fg:w="22"/><text x="60.5816%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="60.3316%" y="357" width="0.2280%" height="15" fill="rgb(207,44,46)" fg:x="5822" fg:w="22"/><text x="60.5816%" y="367.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="60.3420%" y="341" width="0.2176%" height="15" fill="rgb(211,206,28)" fg:x="5823" fg:w="21"/><text x="60.5920%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="60.3420%" y="325" width="0.2176%" height="15" fill="rgb(237,167,16)" fg:x="5823" fg:w="21"/><text x="60.5920%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="60.4041%" y="309" width="0.1554%" height="15" fill="rgb(233,66,6)" fg:x="5829" fg:w="15"/><text x="60.6541%" y="319.50"></text></g><g><title>sysmalloc (86 samples, 0.89%)</title><rect x="60.2383%" y="549" width="0.8912%" height="15" fill="rgb(246,123,29)" fg:x="5813" fg:w="86"/><text x="60.4883%" y="559.50"></text></g><g><title>grow_heap (55 samples, 0.57%)</title><rect x="60.5596%" y="533" width="0.5699%" height="15" fill="rgb(209,62,40)" fg:x="5844" fg:w="55"/><text x="60.8096%" y="543.50"></text></g><g><title>__GI___mprotect (55 samples, 0.57%)</title><rect x="60.5596%" y="517" width="0.5699%" height="15" fill="rgb(218,4,25)" fg:x="5844" fg:w="55"/><text x="60.8096%" y="527.50"></text></g><g><title>[unknown] (55 samples, 0.57%)</title><rect x="60.5596%" y="501" width="0.5699%" height="15" fill="rgb(253,91,49)" fg:x="5844" fg:w="55"/><text x="60.8096%" y="511.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="60.5699%" y="485" width="0.5596%" height="15" fill="rgb(228,155,29)" fg:x="5845" fg:w="54"/><text x="60.8199%" y="495.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="60.5699%" y="469" width="0.5596%" height="15" fill="rgb(243,57,37)" fg:x="5845" fg:w="54"/><text x="60.8199%" y="479.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="60.5699%" y="453" width="0.5596%" height="15" fill="rgb(244,167,17)" fg:x="5845" fg:w="54"/><text x="60.8199%" y="463.50"></text></g><g><title>[unknown] (54 samples, 0.56%)</title><rect x="60.5699%" y="437" width="0.5596%" height="15" fill="rgb(207,181,38)" fg:x="5845" fg:w="54"/><text x="60.8199%" y="447.50"></text></g><g><title>[unknown] (53 samples, 0.55%)</title><rect x="60.5803%" y="421" width="0.5492%" height="15" fill="rgb(211,8,23)" fg:x="5846" fg:w="53"/><text x="60.8303%" y="431.50"></text></g><g><title>[unknown] (49 samples, 0.51%)</title><rect x="60.6218%" y="405" width="0.5078%" height="15" fill="rgb(235,11,44)" fg:x="5850" fg:w="49"/><text x="60.8718%" y="415.50"></text></g><g><title>[unknown] (49 samples, 0.51%)</title><rect x="60.6218%" y="389" width="0.5078%" height="15" fill="rgb(248,18,52)" fg:x="5850" fg:w="49"/><text x="60.8718%" y="399.50"></text></g><g><title>[unknown] (46 samples, 0.48%)</title><rect x="60.6528%" y="373" width="0.4767%" height="15" fill="rgb(208,4,7)" fg:x="5853" fg:w="46"/><text x="60.9028%" y="383.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="60.6943%" y="357" width="0.4352%" height="15" fill="rgb(240,17,39)" fg:x="5857" fg:w="42"/><text x="60.9443%" y="367.50"></text></g><g><title>[unknown] (40 samples, 0.41%)</title><rect x="60.7150%" y="341" width="0.4145%" height="15" fill="rgb(207,170,3)" fg:x="5859" fg:w="40"/><text x="60.9650%" y="351.50"></text></g><g><title>[unknown] (37 samples, 0.38%)</title><rect x="60.7461%" y="325" width="0.3834%" height="15" fill="rgb(236,100,52)" fg:x="5862" fg:w="37"/><text x="60.9961%" y="335.50"></text></g><g><title>[unknown] (33 samples, 0.34%)</title><rect x="60.7876%" y="309" width="0.3420%" height="15" fill="rgb(246,78,51)" fg:x="5866" fg:w="33"/><text x="61.0376%" y="319.50"></text></g><g><title>[unknown] (30 samples, 0.31%)</title><rect x="60.8187%" y="293" width="0.3109%" height="15" fill="rgb(211,17,15)" fg:x="5869" fg:w="30"/><text x="61.0687%" y="303.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="61.1295%" y="549" width="0.0104%" height="15" fill="rgb(209,59,46)" fg:x="5899" fg:w="1"/><text x="61.3795%" y="559.50"></text></g><g><title>_int_realloc (152 samples, 1.58%)</title><rect x="59.5751%" y="581" width="1.5751%" height="15" fill="rgb(210,92,25)" fg:x="5749" fg:w="152"/><text x="59.8251%" y="591.50"></text></g><g><title>_int_malloc (136 samples, 1.41%)</title><rect x="59.7409%" y="565" width="1.4093%" height="15" fill="rgb(238,174,52)" fg:x="5765" fg:w="136"/><text x="59.9909%" y="575.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="61.1399%" y="549" width="0.0104%" height="15" fill="rgb(230,73,7)" fg:x="5900" fg:w="1"/><text x="61.3899%" y="559.50"></text></g><g><title>arena_for_chunk (4 samples, 0.04%)</title><rect x="61.1503%" y="581" width="0.0415%" height="15" fill="rgb(243,124,40)" fg:x="5901" fg:w="4"/><text x="61.4003%" y="591.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="61.1606%" y="565" width="0.0311%" height="15" fill="rgb(244,170,11)" fg:x="5902" fg:w="3"/><text x="61.4106%" y="575.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="61.1813%" y="549" width="0.0104%" height="15" fill="rgb(207,114,54)" fg:x="5904" fg:w="1"/><text x="61.4313%" y="559.50"></text></g><g><title>__GI___libc_realloc (195 samples, 2.02%)</title><rect x="59.1813%" y="597" width="2.0207%" height="15" fill="rgb(205,42,20)" fg:x="5711" fg:w="195"/><text x="59.4313%" y="607.50">_..</text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="61.1917%" y="581" width="0.0104%" height="15" fill="rgb(230,30,28)" fg:x="5905" fg:w="1"/><text x="61.4417%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (197 samples, 2.04%)</title><rect x="59.1813%" y="645" width="2.0415%" height="15" fill="rgb(205,73,54)" fg:x="5711" fg:w="197"/><text x="59.4313%" y="655.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (197 samples, 2.04%)</title><rect x="59.1813%" y="629" width="2.0415%" height="15" fill="rgb(254,227,23)" fg:x="5711" fg:w="197"/><text x="59.4313%" y="639.50">a..</text></g><g><title>alloc::alloc::realloc (197 samples, 2.04%)</title><rect x="59.1813%" y="613" width="2.0415%" height="15" fill="rgb(228,202,34)" fg:x="5711" fg:w="197"/><text x="59.4313%" y="623.50">a..</text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="61.2021%" y="597" width="0.0207%" height="15" fill="rgb(222,225,37)" fg:x="5906" fg:w="2"/><text x="61.4521%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="61.2228%" y="645" width="0.0104%" height="15" fill="rgb(221,14,54)" fg:x="5908" fg:w="1"/><text x="61.4728%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (199 samples, 2.06%)</title><rect x="59.1813%" y="661" width="2.0622%" height="15" fill="rgb(254,102,2)" fg:x="5711" fg:w="199"/><text x="59.4313%" y="671.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="61.2332%" y="645" width="0.0104%" height="15" fill="rgb(232,104,17)" fg:x="5909" fg:w="1"/><text x="61.4832%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (206 samples, 2.13%)</title><rect x="59.1192%" y="725" width="2.1347%" height="15" fill="rgb(250,220,14)" fg:x="5705" fg:w="206"/><text x="59.3692%" y="735.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (206 samples, 2.13%)</title><rect x="59.1192%" y="709" width="2.1347%" height="15" fill="rgb(241,158,9)" fg:x="5705" fg:w="206"/><text x="59.3692%" y="719.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 samples, 2.13%)</title><rect x="59.1192%" y="693" width="2.1347%" height="15" fill="rgb(246,9,43)" fg:x="5705" fg:w="206"/><text x="59.3692%" y="703.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (206 samples, 2.13%)</title><rect x="59.1192%" y="677" width="2.1347%" height="15" fill="rgb(206,73,33)" fg:x="5705" fg:w="206"/><text x="59.3692%" y="687.50">a..</text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="61.2435%" y="661" width="0.0104%" height="15" fill="rgb(222,79,8)" fg:x="5910" fg:w="1"/><text x="61.4935%" y="671.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="61.2435%" y="645" width="0.0104%" height="15" fill="rgb(234,8,54)" fg:x="5910" fg:w="1"/><text x="61.4935%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="61.2435%" y="629" width="0.0104%" height="15" fill="rgb(209,134,38)" fg:x="5910" fg:w="1"/><text x="61.4935%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (213 samples, 2.21%)</title><rect x="59.1192%" y="773" width="2.2073%" height="15" fill="rgb(230,127,29)" fg:x="5705" fg:w="213"/><text x="59.3692%" y="783.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (213 samples, 2.21%)</title><rect x="59.1192%" y="757" width="2.2073%" height="15" fill="rgb(242,44,41)" fg:x="5705" fg:w="213"/><text x="59.3692%" y="767.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (213 samples, 2.21%)</title><rect x="59.1192%" y="741" width="2.2073%" height="15" fill="rgb(222,56,43)" fg:x="5705" fg:w="213"/><text x="59.3692%" y="751.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.07%)</title><rect x="61.2539%" y="725" width="0.0725%" height="15" fill="rgb(238,39,47)" fg:x="5911" fg:w="7"/><text x="61.5039%" y="735.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.07%)</title><rect x="61.2539%" y="709" width="0.0725%" height="15" fill="rgb(226,79,43)" fg:x="5911" fg:w="7"/><text x="61.5039%" y="719.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="61.3886%" y="693" width="0.0104%" height="15" fill="rgb(242,105,53)" fg:x="5924" fg:w="1"/><text x="61.6386%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="61.3782%" y="709" width="0.0311%" height="15" fill="rgb(251,132,46)" fg:x="5923" fg:w="3"/><text x="61.6282%" y="719.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="61.3990%" y="693" width="0.0104%" height="15" fill="rgb(231,77,14)" fg:x="5925" fg:w="1"/><text x="61.6490%" y="703.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="61.4093%" y="709" width="0.0207%" height="15" fill="rgb(240,135,9)" fg:x="5926" fg:w="2"/><text x="61.6593%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="61.4093%" y="693" width="0.0207%" height="15" fill="rgb(248,109,14)" fg:x="5926" fg:w="2"/><text x="61.6593%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="61.4301%" y="709" width="0.0104%" height="15" fill="rgb(227,146,52)" fg:x="5928" fg:w="1"/><text x="61.6801%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.08%)</title><rect x="61.3679%" y="725" width="0.0829%" height="15" fill="rgb(232,54,3)" fg:x="5922" fg:w="8"/><text x="61.6179%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="61.4404%" y="709" width="0.0104%" height="15" fill="rgb(229,201,43)" fg:x="5929" fg:w="1"/><text x="61.6904%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.13%)</title><rect x="61.3264%" y="773" width="0.1347%" height="15" fill="rgb(252,161,33)" fg:x="5918" fg:w="13"/><text x="61.5764%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.10%)</title><rect x="61.3575%" y="757" width="0.1036%" height="15" fill="rgb(226,146,40)" fg:x="5921" fg:w="10"/><text x="61.6075%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.10%)</title><rect x="61.3575%" y="741" width="0.1036%" height="15" fill="rgb(219,47,25)" fg:x="5921" fg:w="10"/><text x="61.6075%" y="751.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="61.4508%" y="725" width="0.0104%" height="15" fill="rgb(250,135,13)" fg:x="5930" fg:w="1"/><text x="61.7008%" y="735.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="61.4508%" y="709" width="0.0104%" height="15" fill="rgb(219,229,18)" fg:x="5930" fg:w="1"/><text x="61.7008%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="61.4508%" y="693" width="0.0104%" height="15" fill="rgb(217,152,27)" fg:x="5930" fg:w="1"/><text x="61.7008%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="61.4611%" y="773" width="0.0311%" height="15" fill="rgb(225,71,47)" fg:x="5931" fg:w="3"/><text x="61.7111%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.04%)</title><rect x="61.4922%" y="773" width="0.0415%" height="15" fill="rgb(220,139,14)" fg:x="5934" fg:w="4"/><text x="61.7422%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="61.5544%" y="693" width="0.0104%" height="15" fill="rgb(247,54,32)" fg:x="5940" fg:w="1"/><text x="61.8044%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="61.5544%" y="677" width="0.0104%" height="15" fill="rgb(252,131,39)" fg:x="5940" fg:w="1"/><text x="61.8044%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="61.5544%" y="661" width="0.0104%" height="15" fill="rgb(210,108,39)" fg:x="5940" fg:w="1"/><text x="61.8044%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="61.5544%" y="645" width="0.0104%" height="15" fill="rgb(205,23,29)" fg:x="5940" fg:w="1"/><text x="61.8044%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="61.5544%" y="741" width="0.0207%" height="15" fill="rgb(246,139,46)" fg:x="5940" fg:w="2"/><text x="61.8044%" y="751.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (2 samples, 0.02%)</title><rect x="61.5544%" y="725" width="0.0207%" height="15" fill="rgb(250,81,26)" fg:x="5940" fg:w="2"/><text x="61.8044%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="61.5544%" y="709" width="0.0207%" height="15" fill="rgb(214,104,7)" fg:x="5940" fg:w="2"/><text x="61.8044%" y="719.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="61.5648%" y="693" width="0.0104%" height="15" fill="rgb(233,189,8)" fg:x="5941" fg:w="1"/><text x="61.8148%" y="703.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.01%)</title><rect x="61.5751%" y="709" width="0.0104%" height="15" fill="rgb(228,141,17)" fg:x="5942" fg:w="1"/><text x="61.8251%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.01%)</title><rect x="61.5751%" y="693" width="0.0104%" height="15" fill="rgb(247,157,1)" fg:x="5942" fg:w="1"/><text x="61.8251%" y="703.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.01%)</title><rect x="61.5751%" y="677" width="0.0104%" height="15" fill="rgb(249,225,5)" fg:x="5942" fg:w="1"/><text x="61.8251%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="61.5751%" y="661" width="0.0104%" height="15" fill="rgb(242,55,13)" fg:x="5942" fg:w="1"/><text x="61.8251%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="61.5751%" y="645" width="0.0104%" height="15" fill="rgb(230,49,50)" fg:x="5942" fg:w="1"/><text x="61.8251%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="61.5855%" y="645" width="0.0207%" height="15" fill="rgb(241,111,38)" fg:x="5943" fg:w="2"/><text x="61.8355%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="61.5855%" y="629" width="0.0207%" height="15" fill="rgb(252,155,4)" fg:x="5943" fg:w="2"/><text x="61.8355%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="61.5855%" y="613" width="0.0207%" height="15" fill="rgb(212,69,32)" fg:x="5943" fg:w="2"/><text x="61.8355%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="61.5855%" y="597" width="0.0207%" height="15" fill="rgb(243,107,47)" fg:x="5943" fg:w="2"/><text x="61.8355%" y="607.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="61.5959%" y="581" width="0.0104%" height="15" fill="rgb(247,130,12)" fg:x="5944" fg:w="1"/><text x="61.8459%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.09%)</title><rect x="61.5337%" y="773" width="0.0933%" height="15" fill="rgb(233,74,16)" fg:x="5938" fg:w="9"/><text x="61.7837%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.08%)</title><rect x="61.5440%" y="757" width="0.0829%" height="15" fill="rgb(208,58,18)" fg:x="5939" fg:w="8"/><text x="61.7940%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="61.5751%" y="741" width="0.0518%" height="15" fill="rgb(242,225,1)" fg:x="5942" fg:w="5"/><text x="61.8251%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="61.5751%" y="725" width="0.0518%" height="15" fill="rgb(249,39,40)" fg:x="5942" fg:w="5"/><text x="61.8251%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="61.5855%" y="709" width="0.0415%" height="15" fill="rgb(207,72,44)" fg:x="5943" fg:w="4"/><text x="61.8355%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="61.5855%" y="693" width="0.0415%" height="15" fill="rgb(215,193,12)" fg:x="5943" fg:w="4"/><text x="61.8355%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="61.5855%" y="677" width="0.0415%" height="15" fill="rgb(248,41,39)" fg:x="5943" fg:w="4"/><text x="61.8355%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="61.5855%" y="661" width="0.0415%" height="15" fill="rgb(253,85,4)" fg:x="5943" fg:w="4"/><text x="61.8355%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="61.6062%" y="645" width="0.0207%" height="15" fill="rgb(243,70,31)" fg:x="5945" fg:w="2"/><text x="61.8562%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="61.6166%" y="629" width="0.0104%" height="15" fill="rgb(253,195,26)" fg:x="5946" fg:w="1"/><text x="61.8666%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="61.7617%" y="709" width="0.0104%" height="15" fill="rgb(243,42,11)" fg:x="5960" fg:w="1"/><text x="62.0117%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="709" width="0.0104%" height="15" fill="rgb(239,66,17)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="693" width="0.0104%" height="15" fill="rgb(217,132,21)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="677" width="0.0104%" height="15" fill="rgb(252,202,21)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="661" width="0.0104%" height="15" fill="rgb(233,98,36)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="645" width="0.0104%" height="15" fill="rgb(216,153,54)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="629" width="0.0104%" height="15" fill="rgb(250,99,7)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="613" width="0.0104%" height="15" fill="rgb(207,56,50)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="597" width="0.0104%" height="15" fill="rgb(244,61,34)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="581" width="0.0104%" height="15" fill="rgb(241,50,38)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="565" width="0.0104%" height="15" fill="rgb(212,166,30)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7720%" y="549" width="0.0104%" height="15" fill="rgb(249,127,32)" fg:x="5961" fg:w="1"/><text x="62.0220%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.07%)</title><rect x="61.7824%" y="709" width="0.0725%" height="15" fill="rgb(209,103,0)" fg:x="5962" fg:w="7"/><text x="62.0324%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (7 samples, 0.07%)</title><rect x="61.7824%" y="693" width="0.0725%" height="15" fill="rgb(238,209,51)" fg:x="5962" fg:w="7"/><text x="62.0324%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (23 samples, 0.24%)</title><rect x="61.6269%" y="773" width="0.2383%" height="15" fill="rgb(237,56,23)" fg:x="5947" fg:w="23"/><text x="61.8769%" y="783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (23 samples, 0.24%)</title><rect x="61.6269%" y="757" width="0.2383%" height="15" fill="rgb(215,153,46)" fg:x="5947" fg:w="23"/><text x="61.8769%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.24%)</title><rect x="61.6269%" y="741" width="0.2383%" height="15" fill="rgb(224,49,31)" fg:x="5947" fg:w="23"/><text x="61.8769%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.24%)</title><rect x="61.6269%" y="725" width="0.2383%" height="15" fill="rgb(250,18,42)" fg:x="5947" fg:w="23"/><text x="61.8769%" y="735.50"></text></g><g><title>paranagram::utils::find_sum_rec (1 samples, 0.01%)</title><rect x="61.8549%" y="709" width="0.0104%" height="15" fill="rgb(215,176,39)" fg:x="5969" fg:w="1"/><text x="62.1049%" y="719.50"></text></g><g><title>_int_free (38 samples, 0.39%)</title><rect x="61.9171%" y="677" width="0.3938%" height="15" fill="rgb(223,77,29)" fg:x="5975" fg:w="38"/><text x="62.1671%" y="687.50"></text></g><g><title>__GI___libc_free (49 samples, 0.51%)</title><rect x="61.8756%" y="693" width="0.5078%" height="15" fill="rgb(234,94,52)" fg:x="5971" fg:w="49"/><text x="62.1256%" y="703.50"></text></g><g><title>arena_for_chunk (7 samples, 0.07%)</title><rect x="62.3109%" y="677" width="0.0725%" height="15" fill="rgb(220,154,50)" fg:x="6013" fg:w="7"/><text x="62.5609%" y="687.50"></text></g><g><title>arena_for_chunk (6 samples, 0.06%)</title><rect x="62.3212%" y="661" width="0.0622%" height="15" fill="rgb(212,11,10)" fg:x="6014" fg:w="6"/><text x="62.5712%" y="671.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="62.3731%" y="645" width="0.0104%" height="15" fill="rgb(205,166,19)" fg:x="6019" fg:w="1"/><text x="62.6231%" y="655.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="62.3834%" y="693" width="0.0104%" height="15" fill="rgb(244,198,16)" fg:x="6020" fg:w="1"/><text x="62.6334%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="62.3834%" y="677" width="0.0104%" height="15" fill="rgb(219,69,12)" fg:x="6020" fg:w="1"/><text x="62.6334%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.54%)</title><rect x="61.8756%" y="725" width="0.5389%" height="15" fill="rgb(245,30,7)" fg:x="5971" fg:w="52"/><text x="62.1256%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.54%)</title><rect x="61.8756%" y="709" width="0.5389%" height="15" fill="rgb(218,221,48)" fg:x="5971" fg:w="52"/><text x="62.1256%" y="719.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="62.3938%" y="693" width="0.0207%" height="15" fill="rgb(216,66,15)" fg:x="6021" fg:w="2"/><text x="62.6438%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (55 samples, 0.57%)</title><rect x="61.8653%" y="773" width="0.5699%" height="15" fill="rgb(226,122,50)" fg:x="5970" fg:w="55"/><text x="62.1153%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (55 samples, 0.57%)</title><rect x="61.8653%" y="757" width="0.5699%" height="15" fill="rgb(239,156,16)" fg:x="5970" fg:w="55"/><text x="62.1153%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.57%)</title><rect x="61.8653%" y="741" width="0.5699%" height="15" fill="rgb(224,27,38)" fg:x="5970" fg:w="55"/><text x="62.1153%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="62.4145%" y="725" width="0.0207%" height="15" fill="rgb(224,39,27)" fg:x="6023" fg:w="2"/><text x="62.6645%" y="735.50"></text></g><g><title>_int_free (14 samples, 0.15%)</title><rect x="62.5078%" y="597" width="0.1451%" height="15" fill="rgb(215,92,29)" fg:x="6032" fg:w="14"/><text x="62.7578%" y="607.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="62.6321%" y="581" width="0.0207%" height="15" fill="rgb(207,159,16)" fg:x="6044" fg:w="2"/><text x="62.8821%" y="591.50"></text></g><g><title>__GI___libc_free (23 samples, 0.24%)</title><rect x="62.4352%" y="613" width="0.2383%" height="15" fill="rgb(238,163,47)" fg:x="6025" fg:w="23"/><text x="62.6852%" y="623.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="62.6528%" y="597" width="0.0207%" height="15" fill="rgb(219,91,49)" fg:x="6046" fg:w="2"/><text x="62.9028%" y="607.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="62.6528%" y="581" width="0.0207%" height="15" fill="rgb(227,167,31)" fg:x="6046" fg:w="2"/><text x="62.9028%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.25%)</title><rect x="62.4352%" y="645" width="0.2487%" height="15" fill="rgb(234,80,54)" fg:x="6025" fg:w="24"/><text x="62.6852%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.25%)</title><rect x="62.4352%" y="629" width="0.2487%" height="15" fill="rgb(212,114,2)" fg:x="6025" fg:w="24"/><text x="62.6852%" y="639.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="62.6736%" y="613" width="0.0104%" height="15" fill="rgb(234,50,24)" fg:x="6048" fg:w="1"/><text x="62.9236%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (25 samples, 0.26%)</title><rect x="62.4352%" y="773" width="0.2591%" height="15" fill="rgb(221,68,8)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (25 samples, 0.26%)</title><rect x="62.4352%" y="757" width="0.2591%" height="15" fill="rgb(254,180,31)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (25 samples, 0.26%)</title><rect x="62.4352%" y="741" width="0.2591%" height="15" fill="rgb(247,130,50)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.26%)</title><rect x="62.4352%" y="725" width="0.2591%" height="15" fill="rgb(211,109,4)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (25 samples, 0.26%)</title><rect x="62.4352%" y="709" width="0.2591%" height="15" fill="rgb(238,50,21)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.26%)</title><rect x="62.4352%" y="693" width="0.2591%" height="15" fill="rgb(225,57,45)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (25 samples, 0.26%)</title><rect x="62.4352%" y="677" width="0.2591%" height="15" fill="rgb(209,196,50)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.26%)</title><rect x="62.4352%" y="661" width="0.2591%" height="15" fill="rgb(242,140,13)" fg:x="6025" fg:w="25"/><text x="62.6852%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="62.6839%" y="645" width="0.0104%" height="15" fill="rgb(217,111,7)" fg:x="6049" fg:w="1"/><text x="62.9339%" y="655.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="62.7461%" y="677" width="0.0104%" height="15" fill="rgb(253,193,51)" fg:x="6055" fg:w="1"/><text x="62.9961%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="62.7358%" y="693" width="0.0311%" height="15" fill="rgb(252,70,29)" fg:x="6054" fg:w="3"/><text x="62.9858%" y="703.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="62.7565%" y="677" width="0.0104%" height="15" fill="rgb(232,127,12)" fg:x="6056" fg:w="1"/><text x="63.0065%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="62.7668%" y="693" width="0.0104%" height="15" fill="rgb(211,180,21)" fg:x="6057" fg:w="1"/><text x="63.0168%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="62.7668%" y="677" width="0.0104%" height="15" fill="rgb(229,72,13)" fg:x="6057" fg:w="1"/><text x="63.0168%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.05%)</title><rect x="62.7358%" y="757" width="0.0518%" height="15" fill="rgb(240,211,49)" fg:x="6054" fg:w="5"/><text x="62.9858%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="62.7358%" y="741" width="0.0518%" height="15" fill="rgb(219,149,40)" fg:x="6054" fg:w="5"/><text x="62.9858%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="62.7358%" y="725" width="0.0518%" height="15" fill="rgb(210,127,46)" fg:x="6054" fg:w="5"/><text x="62.9858%" y="735.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="62.7358%" y="709" width="0.0518%" height="15" fill="rgb(220,106,7)" fg:x="6054" fg:w="5"/><text x="62.9858%" y="719.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="62.7772%" y="693" width="0.0104%" height="15" fill="rgb(249,31,22)" fg:x="6058" fg:w="1"/><text x="63.0272%" y="703.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="62.9016%" y="549" width="0.0104%" height="15" fill="rgb(253,1,49)" fg:x="6070" fg:w="1"/><text x="63.1516%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="62.9119%" y="549" width="0.0207%" height="15" fill="rgb(227,144,33)" fg:x="6071" fg:w="2"/><text x="63.1619%" y="559.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="62.9119%" y="533" width="0.0207%" height="15" fill="rgb(249,163,44)" fg:x="6071" fg:w="2"/><text x="63.1619%" y="543.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="63.0777%" y="533" width="0.0104%" height="15" fill="rgb(234,15,39)" fg:x="6087" fg:w="1"/><text x="63.3277%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.0881%" y="517" width="0.0311%" height="15" fill="rgb(207,66,16)" fg:x="6088" fg:w="3"/><text x="63.3381%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.0881%" y="501" width="0.0311%" height="15" fill="rgb(233,112,24)" fg:x="6088" fg:w="3"/><text x="63.3381%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="485" width="0.0207%" height="15" fill="rgb(230,90,22)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="469" width="0.0207%" height="15" fill="rgb(229,61,13)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="453" width="0.0207%" height="15" fill="rgb(225,57,24)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="437" width="0.0207%" height="15" fill="rgb(208,169,48)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="421" width="0.0207%" height="15" fill="rgb(244,218,51)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="405" width="0.0207%" height="15" fill="rgb(214,148,10)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="389" width="0.0207%" height="15" fill="rgb(225,174,27)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.0984%" y="373" width="0.0207%" height="15" fill="rgb(230,96,26)" fg:x="6089" fg:w="2"/><text x="63.3484%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.1088%" y="357" width="0.0104%" height="15" fill="rgb(232,10,30)" fg:x="6090" fg:w="1"/><text x="63.3588%" y="367.50"></text></g><g><title>sysmalloc (37 samples, 0.38%)</title><rect x="63.0881%" y="533" width="0.3834%" height="15" fill="rgb(222,8,50)" fg:x="6088" fg:w="37"/><text x="63.3381%" y="543.50"></text></g><g><title>grow_heap (34 samples, 0.35%)</title><rect x="63.1192%" y="517" width="0.3523%" height="15" fill="rgb(213,81,27)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="527.50"></text></g><g><title>__GI___mprotect (34 samples, 0.35%)</title><rect x="63.1192%" y="501" width="0.3523%" height="15" fill="rgb(245,50,10)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="511.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="485" width="0.3523%" height="15" fill="rgb(216,100,18)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="495.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="469" width="0.3523%" height="15" fill="rgb(236,147,54)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="479.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="453" width="0.3523%" height="15" fill="rgb(205,143,26)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="463.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="437" width="0.3523%" height="15" fill="rgb(236,26,9)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="447.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="421" width="0.3523%" height="15" fill="rgb(221,165,53)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="431.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="405" width="0.3523%" height="15" fill="rgb(214,110,17)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="415.50"></text></g><g><title>[unknown] (34 samples, 0.35%)</title><rect x="63.1192%" y="389" width="0.3523%" height="15" fill="rgb(237,197,12)" fg:x="6091" fg:w="34"/><text x="63.3692%" y="399.50"></text></g><g><title>[unknown] (32 samples, 0.33%)</title><rect x="63.1399%" y="373" width="0.3316%" height="15" fill="rgb(205,84,17)" fg:x="6093" fg:w="32"/><text x="63.3899%" y="383.50"></text></g><g><title>[unknown] (31 samples, 0.32%)</title><rect x="63.1503%" y="357" width="0.3212%" height="15" fill="rgb(237,18,45)" fg:x="6094" fg:w="31"/><text x="63.4003%" y="367.50"></text></g><g><title>[unknown] (29 samples, 0.30%)</title><rect x="63.1710%" y="341" width="0.3005%" height="15" fill="rgb(221,87,14)" fg:x="6096" fg:w="29"/><text x="63.4210%" y="351.50"></text></g><g><title>[unknown] (29 samples, 0.30%)</title><rect x="63.1710%" y="325" width="0.3005%" height="15" fill="rgb(238,186,15)" fg:x="6096" fg:w="29"/><text x="63.4210%" y="335.50"></text></g><g><title>[unknown] (27 samples, 0.28%)</title><rect x="63.1917%" y="309" width="0.2798%" height="15" fill="rgb(208,115,11)" fg:x="6098" fg:w="27"/><text x="63.4417%" y="319.50"></text></g><g><title>[unknown] (25 samples, 0.26%)</title><rect x="63.2124%" y="293" width="0.2591%" height="15" fill="rgb(254,175,0)" fg:x="6100" fg:w="25"/><text x="63.4624%" y="303.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="63.2435%" y="277" width="0.2280%" height="15" fill="rgb(227,24,42)" fg:x="6103" fg:w="22"/><text x="63.4935%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="63.4093%" y="261" width="0.0622%" height="15" fill="rgb(223,211,37)" fg:x="6119" fg:w="6"/><text x="63.6593%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="63.4197%" y="245" width="0.0518%" height="15" fill="rgb(235,49,27)" fg:x="6120" fg:w="5"/><text x="63.6697%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="63.4197%" y="229" width="0.0518%" height="15" fill="rgb(254,97,51)" fg:x="6120" fg:w="5"/><text x="63.6697%" y="239.50"></text></g><g><title>_int_realloc (58 samples, 0.60%)</title><rect x="62.8808%" y="565" width="0.6010%" height="15" fill="rgb(249,51,40)" fg:x="6068" fg:w="58"/><text x="63.1308%" y="575.50"></text></g><g><title>_int_malloc (53 samples, 0.55%)</title><rect x="62.9326%" y="549" width="0.5492%" height="15" fill="rgb(210,128,45)" fg:x="6073" fg:w="53"/><text x="63.1826%" y="559.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="63.4715%" y="533" width="0.0104%" height="15" fill="rgb(224,137,50)" fg:x="6125" fg:w="1"/><text x="63.7215%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (67 samples, 0.69%)</title><rect x="62.7979%" y="629" width="0.6943%" height="15" fill="rgb(242,15,9)" fg:x="6060" fg:w="67"/><text x="63.0479%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (67 samples, 0.69%)</title><rect x="62.7979%" y="613" width="0.6943%" height="15" fill="rgb(233,187,41)" fg:x="6060" fg:w="67"/><text x="63.0479%" y="623.50"></text></g><g><title>alloc::alloc::realloc (67 samples, 0.69%)</title><rect x="62.7979%" y="597" width="0.6943%" height="15" fill="rgb(227,2,29)" fg:x="6060" fg:w="67"/><text x="63.0479%" y="607.50"></text></g><g><title>__GI___libc_realloc (67 samples, 0.69%)</title><rect x="62.7979%" y="581" width="0.6943%" height="15" fill="rgb(222,70,3)" fg:x="6060" fg:w="67"/><text x="63.0479%" y="591.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="63.4819%" y="565" width="0.0104%" height="15" fill="rgb(213,11,42)" fg:x="6126" fg:w="1"/><text x="63.7319%" y="575.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="63.4819%" y="549" width="0.0104%" height="15" fill="rgb(225,150,9)" fg:x="6126" fg:w="1"/><text x="63.7319%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (68 samples, 0.70%)</title><rect x="62.7979%" y="645" width="0.7047%" height="15" fill="rgb(230,162,45)" fg:x="6060" fg:w="68"/><text x="63.0479%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="63.4922%" y="629" width="0.0104%" height="15" fill="rgb(222,14,52)" fg:x="6127" fg:w="1"/><text x="63.7422%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (70 samples, 0.73%)</title><rect x="62.7876%" y="709" width="0.7254%" height="15" fill="rgb(254,198,14)" fg:x="6059" fg:w="70"/><text x="63.0376%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.73%)</title><rect x="62.7876%" y="693" width="0.7254%" height="15" fill="rgb(220,217,30)" fg:x="6059" fg:w="70"/><text x="63.0376%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (70 samples, 0.73%)</title><rect x="62.7876%" y="677" width="0.7254%" height="15" fill="rgb(215,146,41)" fg:x="6059" fg:w="70"/><text x="63.0376%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (70 samples, 0.73%)</title><rect x="62.7876%" y="661" width="0.7254%" height="15" fill="rgb(217,27,36)" fg:x="6059" fg:w="70"/><text x="63.0376%" y="671.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="63.5026%" y="645" width="0.0104%" height="15" fill="rgb(219,218,39)" fg:x="6128" fg:w="1"/><text x="63.7526%" y="655.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="63.5026%" y="629" width="0.0104%" height="15" fill="rgb(219,4,42)" fg:x="6128" fg:w="1"/><text x="63.7526%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="63.5026%" y="613" width="0.0104%" height="15" fill="rgb(249,119,36)" fg:x="6128" fg:w="1"/><text x="63.7526%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (72 samples, 0.75%)</title><rect x="62.7876%" y="757" width="0.7461%" height="15" fill="rgb(209,23,33)" fg:x="6059" fg:w="72"/><text x="63.0376%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (72 samples, 0.75%)</title><rect x="62.7876%" y="741" width="0.7461%" height="15" fill="rgb(211,10,0)" fg:x="6059" fg:w="72"/><text x="63.0376%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (72 samples, 0.75%)</title><rect x="62.7876%" y="725" width="0.7461%" height="15" fill="rgb(208,99,37)" fg:x="6059" fg:w="72"/><text x="63.0376%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="63.5130%" y="709" width="0.0207%" height="15" fill="rgb(213,132,31)" fg:x="6129" fg:w="2"/><text x="63.7630%" y="719.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.02%)</title><rect x="63.5130%" y="693" width="0.0207%" height="15" fill="rgb(243,129,40)" fg:x="6129" fg:w="2"/><text x="63.7630%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="677" width="0.0104%" height="15" fill="rgb(210,66,33)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="661" width="0.0104%" height="15" fill="rgb(209,189,4)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="645" width="0.0104%" height="15" fill="rgb(214,107,37)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="629" width="0.0104%" height="15" fill="rgb(245,88,54)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="613" width="0.0104%" height="15" fill="rgb(205,146,20)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="597" width="0.0104%" height="15" fill="rgb(220,161,25)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="581" width="0.0104%" height="15" fill="rgb(215,152,15)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="565" width="0.0104%" height="15" fill="rgb(233,192,44)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.5440%" y="549" width="0.0104%" height="15" fill="rgb(240,170,46)" fg:x="6132" fg:w="1"/><text x="63.7940%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="63.5337%" y="693" width="0.0311%" height="15" fill="rgb(207,104,33)" fg:x="6131" fg:w="3"/><text x="63.7837%" y="703.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="63.5544%" y="677" width="0.0104%" height="15" fill="rgb(219,21,39)" fg:x="6133" fg:w="1"/><text x="63.8044%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.04%)</title><rect x="63.5337%" y="757" width="0.0415%" height="15" fill="rgb(214,133,29)" fg:x="6131" fg:w="4"/><text x="63.7837%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.04%)</title><rect x="63.5337%" y="741" width="0.0415%" height="15" fill="rgb(226,93,6)" fg:x="6131" fg:w="4"/><text x="63.7837%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="63.5337%" y="725" width="0.0415%" height="15" fill="rgb(252,222,34)" fg:x="6131" fg:w="4"/><text x="63.7837%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="63.5337%" y="709" width="0.0415%" height="15" fill="rgb(252,92,48)" fg:x="6131" fg:w="4"/><text x="63.7837%" y="719.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="63.5648%" y="693" width="0.0104%" height="15" fill="rgb(245,223,24)" fg:x="6134" fg:w="1"/><text x="63.8148%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="63.5751%" y="757" width="0.0104%" height="15" fill="rgb(205,176,3)" fg:x="6135" fg:w="1"/><text x="63.8251%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="63.5855%" y="757" width="0.0104%" height="15" fill="rgb(235,151,15)" fg:x="6136" fg:w="1"/><text x="63.8355%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.5959%" y="725" width="0.0104%" height="15" fill="rgb(237,209,11)" fg:x="6137" fg:w="1"/><text x="63.8459%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.03%)</title><rect x="63.5959%" y="757" width="0.0311%" height="15" fill="rgb(243,227,24)" fg:x="6137" fg:w="3"/><text x="63.8459%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="63.5959%" y="741" width="0.0311%" height="15" fill="rgb(239,193,16)" fg:x="6137" fg:w="3"/><text x="63.8459%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="63.6062%" y="725" width="0.0207%" height="15" fill="rgb(231,27,9)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="63.6062%" y="709" width="0.0207%" height="15" fill="rgb(219,169,10)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;(usize,usize)&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="63.6062%" y="693" width="0.0207%" height="15" fill="rgb(244,229,43)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="63.6062%" y="677" width="0.0207%" height="15" fill="rgb(254,38,20)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="63.6062%" y="661" width="0.0207%" height="15" fill="rgb(250,47,30)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="63.6062%" y="645" width="0.0207%" height="15" fill="rgb(224,124,36)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="63.6062%" y="629" width="0.0207%" height="15" fill="rgb(246,68,51)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="63.6062%" y="613" width="0.0207%" height="15" fill="rgb(253,43,49)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="63.6062%" y="597" width="0.0207%" height="15" fill="rgb(219,54,36)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="63.6062%" y="581" width="0.0207%" height="15" fill="rgb(227,133,34)" fg:x="6138" fg:w="2"/><text x="63.8562%" y="591.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="63.6166%" y="565" width="0.0104%" height="15" fill="rgb(247,227,15)" fg:x="6139" fg:w="1"/><text x="63.8666%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="63.6269%" y="757" width="0.0207%" height="15" fill="rgb(229,96,14)" fg:x="6140" fg:w="2"/><text x="63.8769%" y="767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="63.6269%" y="741" width="0.0207%" height="15" fill="rgb(220,79,17)" fg:x="6140" fg:w="2"/><text x="63.8769%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="63.6269%" y="725" width="0.0207%" height="15" fill="rgb(205,131,53)" fg:x="6140" fg:w="2"/><text x="63.8769%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="63.6269%" y="709" width="0.0207%" height="15" fill="rgb(209,50,29)" fg:x="6140" fg:w="2"/><text x="63.8769%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="63.6373%" y="693" width="0.0104%" height="15" fill="rgb(245,86,46)" fg:x="6141" fg:w="1"/><text x="63.8873%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.01%)</title><rect x="63.6373%" y="677" width="0.0104%" height="15" fill="rgb(235,66,46)" fg:x="6141" fg:w="1"/><text x="63.8873%" y="687.50"></text></g><g><title>_int_free (8 samples, 0.08%)</title><rect x="63.6477%" y="661" width="0.0829%" height="15" fill="rgb(232,148,31)" fg:x="6142" fg:w="8"/><text x="63.8977%" y="671.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="63.7098%" y="645" width="0.0207%" height="15" fill="rgb(217,149,8)" fg:x="6148" fg:w="2"/><text x="63.9598%" y="655.50"></text></g><g><title>__GI___libc_free (9 samples, 0.09%)</title><rect x="63.6477%" y="677" width="0.0933%" height="15" fill="rgb(209,183,11)" fg:x="6142" fg:w="9"/><text x="63.8977%" y="687.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="63.7306%" y="661" width="0.0104%" height="15" fill="rgb(208,55,20)" fg:x="6150" fg:w="1"/><text x="63.9806%" y="671.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="63.7306%" y="645" width="0.0104%" height="15" fill="rgb(218,39,14)" fg:x="6150" fg:w="1"/><text x="63.9806%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (10 samples, 0.10%)</title><rect x="63.6477%" y="757" width="0.1036%" height="15" fill="rgb(216,169,33)" fg:x="6142" fg:w="10"/><text x="63.8977%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (10 samples, 0.10%)</title><rect x="63.6477%" y="741" width="0.1036%" height="15" fill="rgb(233,80,24)" fg:x="6142" fg:w="10"/><text x="63.8977%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.10%)</title><rect x="63.6477%" y="725" width="0.1036%" height="15" fill="rgb(213,179,31)" fg:x="6142" fg:w="10"/><text x="63.8977%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.10%)</title><rect x="63.6477%" y="709" width="0.1036%" height="15" fill="rgb(209,19,5)" fg:x="6142" fg:w="10"/><text x="63.8977%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.10%)</title><rect x="63.6477%" y="693" width="0.1036%" height="15" fill="rgb(219,18,35)" fg:x="6142" fg:w="10"/><text x="63.8977%" y="703.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="63.7409%" y="677" width="0.0104%" height="15" fill="rgb(209,169,16)" fg:x="6151" fg:w="1"/><text x="63.9909%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="63.7409%" y="661" width="0.0104%" height="15" fill="rgb(245,90,51)" fg:x="6151" fg:w="1"/><text x="63.9909%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="581" width="0.0104%" height="15" fill="rgb(220,99,45)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="565" width="0.0104%" height="15" fill="rgb(249,89,25)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="549" width="0.0104%" height="15" fill="rgb(239,193,0)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="533" width="0.0104%" height="15" fill="rgb(231,126,1)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="517" width="0.0104%" height="15" fill="rgb(243,166,3)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="501" width="0.0104%" height="15" fill="rgb(223,22,34)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="485" width="0.0104%" height="15" fill="rgb(251,52,51)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="469" width="0.0104%" height="15" fill="rgb(221,165,28)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="453" width="0.0104%" height="15" fill="rgb(218,121,47)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="437" width="0.0104%" height="15" fill="rgb(209,120,9)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="421" width="0.0104%" height="15" fill="rgb(236,68,12)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.7720%" y="405" width="0.0104%" height="15" fill="rgb(225,194,26)" fg:x="6154" fg:w="1"/><text x="64.0220%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="63.7824%" y="581" width="0.0207%" height="15" fill="rgb(231,84,39)" fg:x="6155" fg:w="2"/><text x="64.0324%" y="591.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="63.7927%" y="565" width="0.0104%" height="15" fill="rgb(210,11,45)" fg:x="6156" fg:w="1"/><text x="64.0427%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt;&gt; (7 samples, 0.07%)</title><rect x="63.7513%" y="757" width="0.0725%" height="15" fill="rgb(224,54,52)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt;&gt; (7 samples, 0.07%)</title><rect x="63.7513%" y="741" width="0.0725%" height="15" fill="rgb(238,102,14)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (7 samples, 0.07%)</title><rect x="63.7513%" y="725" width="0.0725%" height="15" fill="rgb(243,160,52)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="63.7513%" y="709" width="0.0725%" height="15" fill="rgb(216,114,19)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (7 samples, 0.07%)</title><rect x="63.7513%" y="693" width="0.0725%" height="15" fill="rgb(244,166,37)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="63.7513%" y="677" width="0.0725%" height="15" fill="rgb(246,29,44)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (7 samples, 0.07%)</title><rect x="63.7513%" y="661" width="0.0725%" height="15" fill="rgb(215,56,53)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="63.7513%" y="645" width="0.0725%" height="15" fill="rgb(217,60,2)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.07%)</title><rect x="63.7513%" y="629" width="0.0725%" height="15" fill="rgb(207,26,24)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.07%)</title><rect x="63.7513%" y="613" width="0.0725%" height="15" fill="rgb(252,210,15)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="623.50"></text></g><g><title>__GI___libc_free (7 samples, 0.07%)</title><rect x="63.7513%" y="597" width="0.0725%" height="15" fill="rgb(253,209,26)" fg:x="6152" fg:w="7"/><text x="64.0013%" y="607.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="63.8031%" y="581" width="0.0207%" height="15" fill="rgb(238,170,14)" fg:x="6157" fg:w="2"/><text x="64.0531%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.8342%" y="533" width="0.0104%" height="15" fill="rgb(216,178,15)" fg:x="6160" fg:w="1"/><text x="64.0842%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="63.8860%" y="517" width="0.0104%" height="15" fill="rgb(250,197,2)" fg:x="6165" fg:w="1"/><text x="64.1360%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.09%)</title><rect x="63.8342%" y="741" width="0.0933%" height="15" fill="rgb(212,70,42)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.09%)</title><rect x="63.8342%" y="725" width="0.0933%" height="15" fill="rgb(227,213,9)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.09%)</title><rect x="63.8342%" y="709" width="0.0933%" height="15" fill="rgb(245,99,25)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.09%)</title><rect x="63.8342%" y="693" width="0.0933%" height="15" fill="rgb(250,82,29)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.09%)</title><rect x="63.8342%" y="677" width="0.0933%" height="15" fill="rgb(241,226,54)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.09%)</title><rect x="63.8342%" y="661" width="0.0933%" height="15" fill="rgb(221,99,41)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.09%)</title><rect x="63.8342%" y="645" width="0.0933%" height="15" fill="rgb(213,90,21)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.09%)</title><rect x="63.8342%" y="629" width="0.0933%" height="15" fill="rgb(205,208,24)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.09%)</title><rect x="63.8342%" y="613" width="0.0933%" height="15" fill="rgb(246,31,12)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.09%)</title><rect x="63.8342%" y="597" width="0.0933%" height="15" fill="rgb(213,154,6)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="607.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.09%)</title><rect x="63.8342%" y="581" width="0.0933%" height="15" fill="rgb(222,163,29)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="591.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.09%)</title><rect x="63.8342%" y="565" width="0.0933%" height="15" fill="rgb(227,201,8)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="575.50"></text></g><g><title>_int_realloc (9 samples, 0.09%)</title><rect x="63.8342%" y="549" width="0.0933%" height="15" fill="rgb(233,9,32)" fg:x="6160" fg:w="9"/><text x="64.0842%" y="559.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="63.8446%" y="533" width="0.0829%" height="15" fill="rgb(217,54,24)" fg:x="6161" fg:w="8"/><text x="64.0946%" y="543.50"></text></g><g><title>sysmalloc (3 samples, 0.03%)</title><rect x="63.8964%" y="517" width="0.0311%" height="15" fill="rgb(235,192,0)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="527.50"></text></g><g><title>grow_heap (3 samples, 0.03%)</title><rect x="63.8964%" y="501" width="0.0311%" height="15" fill="rgb(235,45,9)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="511.50"></text></g><g><title>__GI___mprotect (3 samples, 0.03%)</title><rect x="63.8964%" y="485" width="0.0311%" height="15" fill="rgb(246,42,40)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.8964%" y="469" width="0.0311%" height="15" fill="rgb(248,111,24)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.8964%" y="453" width="0.0311%" height="15" fill="rgb(249,65,22)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.8964%" y="437" width="0.0311%" height="15" fill="rgb(238,111,51)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.8964%" y="421" width="0.0311%" height="15" fill="rgb(250,118,22)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="63.8964%" y="405" width="0.0311%" height="15" fill="rgb(234,84,26)" fg:x="6166" fg:w="3"/><text x="64.1464%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.9067%" y="389" width="0.0207%" height="15" fill="rgb(243,172,12)" fg:x="6167" fg:w="2"/><text x="64.1567%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.9067%" y="373" width="0.0207%" height="15" fill="rgb(236,150,49)" fg:x="6167" fg:w="2"/><text x="64.1567%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="63.9067%" y="357" width="0.0207%" height="15" fill="rgb(225,197,26)" fg:x="6167" fg:w="2"/><text x="64.1567%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9171%" y="341" width="0.0104%" height="15" fill="rgb(214,17,42)" fg:x="6168" fg:w="1"/><text x="64.1671%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9171%" y="325" width="0.0104%" height="15" fill="rgb(224,165,40)" fg:x="6168" fg:w="1"/><text x="64.1671%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9171%" y="309" width="0.0104%" height="15" fill="rgb(246,100,4)" fg:x="6168" fg:w="1"/><text x="64.1671%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="63.9275%" y="741" width="0.0104%" height="15" fill="rgb(222,103,0)" fg:x="6169" fg:w="1"/><text x="64.1775%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="63.9275%" y="725" width="0.0104%" height="15" fill="rgb(227,189,26)" fg:x="6169" fg:w="1"/><text x="64.1775%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="63.9275%" y="709" width="0.0104%" height="15" fill="rgb(214,202,17)" fg:x="6169" fg:w="1"/><text x="64.1775%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="63.9275%" y="693" width="0.0104%" height="15" fill="rgb(229,111,3)" fg:x="6169" fg:w="1"/><text x="64.1775%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="63.9275%" y="677" width="0.0104%" height="15" fill="rgb(229,172,15)" fg:x="6169" fg:w="1"/><text x="64.1775%" y="687.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="63.9275%" y="661" width="0.0104%" height="15" fill="rgb(230,224,35)" fg:x="6169" fg:w="1"/><text x="64.1775%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="63.9378%" y="741" width="0.0207%" height="15" fill="rgb(251,141,6)" fg:x="6170" fg:w="2"/><text x="64.1878%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="63.9378%" y="725" width="0.0207%" height="15" fill="rgb(225,208,6)" fg:x="6170" fg:w="2"/><text x="64.1878%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="63.9482%" y="709" width="0.0104%" height="15" fill="rgb(246,181,16)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="719.50"></text></g><g><title>paranagram::utils::find_sum_rec::{{closure}} (1 samples, 0.01%)</title><rect x="63.9482%" y="693" width="0.0104%" height="15" fill="rgb(227,129,36)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="63.9482%" y="677" width="0.0104%" height="15" fill="rgb(248,117,24)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="63.9482%" y="661" width="0.0104%" height="15" fill="rgb(214,185,35)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="63.9482%" y="645" width="0.0104%" height="15" fill="rgb(236,150,34)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="63.9482%" y="629" width="0.0104%" height="15" fill="rgb(243,228,27)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="63.9482%" y="613" width="0.0104%" height="15" fill="rgb(245,77,44)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="623.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="63.9482%" y="597" width="0.0104%" height="15" fill="rgb(235,214,42)" fg:x="6171" fg:w="1"/><text x="64.1982%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="63.9585%" y="741" width="0.0104%" height="15" fill="rgb(221,74,3)" fg:x="6172" fg:w="1"/><text x="64.2085%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="63.9585%" y="725" width="0.0104%" height="15" fill="rgb(206,121,29)" fg:x="6172" fg:w="1"/><text x="64.2085%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="63.9585%" y="709" width="0.0104%" height="15" fill="rgb(249,131,53)" fg:x="6172" fg:w="1"/><text x="64.2085%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="63.9585%" y="693" width="0.0104%" height="15" fill="rgb(236,170,29)" fg:x="6172" fg:w="1"/><text x="64.2085%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="63.9689%" y="741" width="0.0104%" height="15" fill="rgb(247,96,15)" fg:x="6173" fg:w="1"/><text x="64.2189%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (1 samples, 0.01%)</title><rect x="63.9689%" y="725" width="0.0104%" height="15" fill="rgb(211,210,7)" fg:x="6173" fg:w="1"/><text x="64.2189%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="63.9689%" y="709" width="0.0104%" height="15" fill="rgb(240,88,50)" fg:x="6173" fg:w="1"/><text x="64.2189%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="63.9689%" y="693" width="0.0104%" height="15" fill="rgb(209,229,26)" fg:x="6173" fg:w="1"/><text x="64.2189%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="63.9689%" y="677" width="0.0104%" height="15" fill="rgb(210,68,23)" fg:x="6173" fg:w="1"/><text x="64.2189%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="63.9689%" y="661" width="0.0104%" height="15" fill="rgb(229,180,13)" fg:x="6173" fg:w="1"/><text x="64.2189%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="63.9793%" y="725" width="0.0104%" height="15" fill="rgb(236,53,44)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="63.9793%" y="709" width="0.0104%" height="15" fill="rgb(244,214,29)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="63.9793%" y="693" width="0.0104%" height="15" fill="rgb(220,75,29)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.9793%" y="677" width="0.0104%" height="15" fill="rgb(214,183,37)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.9793%" y="661" width="0.0104%" height="15" fill="rgb(239,117,29)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="63.9793%" y="645" width="0.0104%" height="15" fill="rgb(237,171,35)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="63.9793%" y="629" width="0.0104%" height="15" fill="rgb(229,178,53)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="63.9793%" y="613" width="0.0104%" height="15" fill="rgb(210,102,19)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="63.9793%" y="597" width="0.0104%" height="15" fill="rgb(235,127,22)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="63.9793%" y="581" width="0.0104%" height="15" fill="rgb(244,31,31)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="63.9793%" y="565" width="0.0104%" height="15" fill="rgb(231,43,21)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="63.9793%" y="549" width="0.0104%" height="15" fill="rgb(217,131,35)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="63.9793%" y="533" width="0.0104%" height="15" fill="rgb(221,149,4)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="63.9793%" y="517" width="0.0104%" height="15" fill="rgb(232,170,28)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="527.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="63.9793%" y="501" width="0.0104%" height="15" fill="rgb(238,56,10)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="511.50"></text></g><g><title>grow_heap (1 samples, 0.01%)</title><rect x="63.9793%" y="485" width="0.0104%" height="15" fill="rgb(235,196,14)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="495.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="63.9793%" y="469" width="0.0104%" height="15" fill="rgb(216,45,48)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="453" width="0.0104%" height="15" fill="rgb(238,213,17)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="437" width="0.0104%" height="15" fill="rgb(212,13,2)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="421" width="0.0104%" height="15" fill="rgb(240,114,20)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="405" width="0.0104%" height="15" fill="rgb(228,41,40)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="389" width="0.0104%" height="15" fill="rgb(244,132,35)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="373" width="0.0104%" height="15" fill="rgb(253,189,4)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="357" width="0.0104%" height="15" fill="rgb(224,37,19)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="63.9793%" y="341" width="0.0104%" height="15" fill="rgb(235,223,18)" fg:x="6174" fg:w="1"/><text x="64.2293%" y="351.50"></text></g><g><title>std::panic::catch_unwind (2,921 samples, 30.27%)</title><rect x="33.7409%" y="965" width="30.2694%" height="15" fill="rgb(235,163,25)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,921 samples, 30.27%)</title><rect x="33.7409%" y="949" width="30.2694%" height="15" fill="rgb(217,145,28)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,921 samples, 30.27%)</title><rect x="33.7409%" y="933" width="30.2694%" height="15" fill="rgb(223,223,32)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="943.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,921 samples, 30.27%)</title><rect x="33.7409%" y="917" width="30.2694%" height="15" fill="rgb(227,189,39)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="927.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,921 samples, 30.27%)</title><rect x="33.7409%" y="901" width="30.2694%" height="15" fill="rgb(248,10,22)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="911.50">std::thread::Builder::spawn_unchecked_::{{closure..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,921 samples, 30.27%)</title><rect x="33.7409%" y="885" width="30.2694%" height="15" fill="rgb(248,46,39)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="895.50">std::sys_common::backtrace::__rust_begin_short_ba..</text></g><g><title>paranagram::utils::find_sum::{{closure}} (2,921 samples, 30.27%)</title><rect x="33.7409%" y="869" width="30.2694%" height="15" fill="rgb(248,113,48)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="879.50">paranagram::utils::find_sum::{{closure}}</text></g><g><title>paranagram::utils::find_sum_rec (2,921 samples, 30.27%)</title><rect x="33.7409%" y="853" width="30.2694%" height="15" fill="rgb(245,16,25)" fg:x="3256" fg:w="2921"/><text x="33.9909%" y="863.50">paranagram::utils::find_sum_rec</text></g><g><title>paranagram::utils::find_sum_rec (2,573 samples, 26.66%)</title><rect x="37.3472%" y="837" width="26.6632%" height="15" fill="rgb(249,152,16)" fg:x="3604" fg:w="2573"/><text x="37.5972%" y="847.50">paranagram::utils::find_sum_rec</text></g><g><title>paranagram::utils::find_sum_rec (1,987 samples, 20.59%)</title><rect x="43.4197%" y="821" width="20.5907%" height="15" fill="rgb(250,16,1)" fg:x="4190" fg:w="1987"/><text x="43.6697%" y="831.50">paranagram::utils::find_sum_rec</text></g><g><title>paranagram::utils::find_sum_rec (1,241 samples, 12.86%)</title><rect x="51.1503%" y="805" width="12.8601%" height="15" fill="rgb(249,138,3)" fg:x="4936" fg:w="1241"/><text x="51.4003%" y="815.50">paranagram::utils::..</text></g><g><title>paranagram::utils::find_sum_rec (520 samples, 5.39%)</title><rect x="58.6218%" y="789" width="5.3886%" height="15" fill="rgb(227,71,41)" fg:x="5657" fg:w="520"/><text x="58.8718%" y="799.50">paranag..</text></g><g><title>paranagram::utils::find_sum_rec (127 samples, 1.32%)</title><rect x="62.6943%" y="773" width="1.3161%" height="15" fill="rgb(209,184,23)" fg:x="6050" fg:w="127"/><text x="62.9443%" y="783.50"></text></g><g><title>paranagram::utils::find_sum_rec (18 samples, 0.19%)</title><rect x="63.8238%" y="757" width="0.1865%" height="15" fill="rgb(223,215,31)" fg:x="6159" fg:w="18"/><text x="64.0738%" y="767.50"></text></g><g><title>paranagram::utils::find_sum_rec (3 samples, 0.03%)</title><rect x="63.9793%" y="741" width="0.0311%" height="15" fill="rgb(210,146,28)" fg:x="6174" fg:w="3"/><text x="64.2293%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (2 samples, 0.02%)</title><rect x="63.9896%" y="725" width="0.0207%" height="15" fill="rgb(209,183,41)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (2 samples, 0.02%)</title><rect x="63.9896%" y="709" width="0.0207%" height="15" fill="rgb(209,224,45)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="63.9896%" y="693" width="0.0207%" height="15" fill="rgb(224,209,51)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="63.9896%" y="677" width="0.0207%" height="15" fill="rgb(223,17,39)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="63.9896%" y="661" width="0.0207%" height="15" fill="rgb(234,204,37)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="63.9896%" y="645" width="0.0207%" height="15" fill="rgb(236,120,5)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="63.9896%" y="629" width="0.0207%" height="15" fill="rgb(248,97,27)" fg:x="6175" fg:w="2"/><text x="64.2396%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.0104%" y="933" width="0.0104%" height="15" fill="rgb(240,66,17)" fg:x="6177" fg:w="1"/><text x="64.2604%" y="943.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="64.0104%" y="917" width="0.0104%" height="15" fill="rgb(210,79,3)" fg:x="6177" fg:w="1"/><text x="64.2604%" y="927.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="64.0104%" y="901" width="0.0104%" height="15" fill="rgb(214,176,27)" fg:x="6177" fg:w="1"/><text x="64.2604%" y="911.50"></text></g><g><title>heap_for_ptr (1 samples, 0.01%)</title><rect x="64.0104%" y="885" width="0.0104%" height="15" fill="rgb(235,185,3)" fg:x="6177" fg:w="1"/><text x="64.2604%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="64.0207%" y="917" width="0.0104%" height="15" fill="rgb(227,24,12)" fg:x="6178" fg:w="1"/><text x="64.2707%" y="927.50"></text></g><g><title>_int_malloc (15 samples, 0.16%)</title><rect x="64.0311%" y="885" width="0.1554%" height="15" fill="rgb(252,169,48)" fg:x="6179" fg:w="15"/><text x="64.2811%" y="895.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.18%)</title><rect x="64.0207%" y="933" width="0.1762%" height="15" fill="rgb(212,65,1)" fg:x="6178" fg:w="17"/><text x="64.2707%" y="943.50"></text></g><g><title>tcache_init (16 samples, 0.17%)</title><rect x="64.0311%" y="917" width="0.1658%" height="15" fill="rgb(242,39,24)" fg:x="6179" fg:w="16"/><text x="64.2811%" y="927.50"></text></g><g><title>tcache_init (16 samples, 0.17%)</title><rect x="64.0311%" y="901" width="0.1658%" height="15" fill="rgb(249,32,23)" fg:x="6179" fg:w="16"/><text x="64.2811%" y="911.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="64.1865%" y="885" width="0.0104%" height="15" fill="rgb(251,195,23)" fg:x="6194" fg:w="1"/><text x="64.4365%" y="895.50"></text></g><g><title>get_free_list (1 samples, 0.01%)</title><rect x="64.1865%" y="869" width="0.0104%" height="15" fill="rgb(236,174,8)" fg:x="6194" fg:w="1"/><text x="64.4365%" y="879.50"></text></g><g><title>__GI___pthread_attr_setaffinity_np (1 samples, 0.01%)</title><rect x="64.1969%" y="933" width="0.0104%" height="15" fill="rgb(220,197,8)" fg:x="6195" fg:w="1"/><text x="64.4469%" y="943.50"></text></g><g><title>__pthread_attr_extension (1 samples, 0.01%)</title><rect x="64.1969%" y="917" width="0.0104%" height="15" fill="rgb(240,108,37)" fg:x="6195" fg:w="1"/><text x="64.4469%" y="927.50"></text></g><g><title>__libc_calloc (1 samples, 0.01%)</title><rect x="64.1969%" y="901" width="0.0104%" height="15" fill="rgb(232,176,24)" fg:x="6195" fg:w="1"/><text x="64.4469%" y="911.50"></text></g><g><title>std::sys::unix::thread::guard::current (20 samples, 0.21%)</title><rect x="64.0104%" y="965" width="0.2073%" height="15" fill="rgb(243,35,29)" fg:x="6177" fg:w="20"/><text x="64.2604%" y="975.50"></text></g><g><title>__pthread_getattr_np (20 samples, 0.21%)</title><rect x="64.0104%" y="949" width="0.2073%" height="15" fill="rgb(210,37,18)" fg:x="6177" fg:w="20"/><text x="64.2604%" y="959.50"></text></g><g><title>__GI___pthread_getaffinity_np (1 samples, 0.01%)</title><rect x="64.2073%" y="933" width="0.0104%" height="15" fill="rgb(224,184,40)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="917" width="0.0104%" height="15" fill="rgb(236,39,29)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="901" width="0.0104%" height="15" fill="rgb(232,48,39)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="885" width="0.0104%" height="15" fill="rgb(236,34,42)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="869" width="0.0104%" height="15" fill="rgb(243,106,37)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="853" width="0.0104%" height="15" fill="rgb(218,96,6)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="837" width="0.0104%" height="15" fill="rgb(235,130,12)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="821" width="0.0104%" height="15" fill="rgb(231,95,0)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.2073%" y="805" width="0.0104%" height="15" fill="rgb(228,12,23)" fg:x="6196" fg:w="1"/><text x="64.4573%" y="815.50"></text></g><g><title>std::sys_common::thread_info::set (4 samples, 0.04%)</title><rect x="64.2176%" y="965" width="0.0415%" height="15" fill="rgb(216,12,1)" fg:x="6197" fg:w="4"/><text x="64.4676%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.04%)</title><rect x="64.2176%" y="949" width="0.0415%" height="15" fill="rgb(219,59,3)" fg:x="6197" fg:w="4"/><text x="64.4676%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.04%)</title><rect x="64.2176%" y="933" width="0.0415%" height="15" fill="rgb(215,208,46)" fg:x="6197" fg:w="4"/><text x="64.4676%" y="943.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (4 samples, 0.04%)</title><rect x="64.2176%" y="917" width="0.0415%" height="15" fill="rgb(254,224,29)" fg:x="6197" fg:w="4"/><text x="64.4676%" y="927.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (4 samples, 0.04%)</title><rect x="64.2176%" y="901" width="0.0415%" height="15" fill="rgb(232,14,29)" fg:x="6197" fg:w="4"/><text x="64.4676%" y="911.50"></text></g><g><title>__cxa_thread_atexit_impl (4 samples, 0.04%)</title><rect x="64.2176%" y="885" width="0.0415%" height="15" fill="rgb(208,45,52)" fg:x="6197" fg:w="4"/><text x="64.4676%" y="895.50"></text></g><g><title>__GI__dl_find_dso_for_object (2 samples, 0.02%)</title><rect x="64.2383%" y="869" width="0.0207%" height="15" fill="rgb(234,191,28)" fg:x="6199" fg:w="2"/><text x="64.4883%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,947 samples, 30.54%)</title><rect x="33.7306%" y="1029" width="30.5389%" height="15" fill="rgb(244,67,43)" fg:x="3255" fg:w="2947"/><text x="33.9806%" y="1039.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,947 samples, 30.54%)</title><rect x="33.7306%" y="1013" width="30.5389%" height="15" fill="rgb(236,189,24)" fg:x="3255" fg:w="2947"/><text x="33.9806%" y="1023.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,947 samples, 30.54%)</title><rect x="33.7306%" y="997" width="30.5389%" height="15" fill="rgb(239,214,33)" fg:x="3255" fg:w="2947"/><text x="33.9806%" y="1007.50">core::ops::function::FnOnce::call_once{{vtable.sh..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,947 samples, 30.54%)</title><rect x="33.7306%" y="981" width="30.5389%" height="15" fill="rgb(226,176,41)" fg:x="3255" fg:w="2947"/><text x="33.9806%" y="991.50">std::thread::Builder::spawn_unchecked_::{{closure..</text></g><g><title>std::thread::Thread::cname (1 samples, 0.01%)</title><rect x="64.2591%" y="965" width="0.0104%" height="15" fill="rgb(248,47,8)" fg:x="6201" fg:w="1"/><text x="64.5091%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="64.2591%" y="949" width="0.0104%" height="15" fill="rgb(218,81,44)" fg:x="6201" fg:w="1"/><text x="64.5091%" y="959.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_ref (1 samples, 0.01%)</title><rect x="64.2591%" y="933" width="0.0104%" height="15" fill="rgb(213,98,6)" fg:x="6201" fg:w="1"/><text x="64.5091%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="64.2591%" y="917" width="0.0104%" height="15" fill="rgb(222,85,22)" fg:x="6201" fg:w="1"/><text x="64.5091%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="64.2591%" y="901" width="0.0104%" height="15" fill="rgb(239,46,39)" fg:x="6201" fg:w="1"/><text x="64.5091%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="64.2591%" y="885" width="0.0104%" height="15" fill="rgb(237,12,29)" fg:x="6201" fg:w="1"/><text x="64.5091%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (7 samples, 0.07%)</title><rect x="64.2694%" y="1029" width="0.0725%" height="15" fill="rgb(214,77,8)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="1039.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="64.2694%" y="1013" width="0.0725%" height="15" fill="rgb(217,168,37)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="1023.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (7 samples, 0.07%)</title><rect x="64.2694%" y="997" width="0.0725%" height="15" fill="rgb(221,217,23)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="1007.50"></text></g><g><title>__GI___munmap (7 samples, 0.07%)</title><rect x="64.2694%" y="981" width="0.0725%" height="15" fill="rgb(243,229,36)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="64.2694%" y="965" width="0.0725%" height="15" fill="rgb(251,163,40)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="64.2694%" y="949" width="0.0725%" height="15" fill="rgb(237,222,12)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="64.2694%" y="933" width="0.0725%" height="15" fill="rgb(248,132,6)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="64.2694%" y="917" width="0.0725%" height="15" fill="rgb(227,167,50)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="64.2694%" y="901" width="0.0725%" height="15" fill="rgb(242,84,37)" fg:x="6202" fg:w="7"/><text x="64.5194%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="64.2798%" y="885" width="0.0622%" height="15" fill="rgb(212,4,50)" fg:x="6203" fg:w="6"/><text x="64.5298%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="64.2798%" y="869" width="0.0622%" height="15" fill="rgb(230,228,32)" fg:x="6203" fg:w="6"/><text x="64.5298%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="64.2798%" y="853" width="0.0622%" height="15" fill="rgb(248,217,23)" fg:x="6203" fg:w="6"/><text x="64.5298%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="64.3005%" y="837" width="0.0415%" height="15" fill="rgb(238,197,32)" fg:x="6205" fg:w="4"/><text x="64.5505%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="64.3109%" y="821" width="0.0311%" height="15" fill="rgb(236,106,1)" fg:x="6206" fg:w="3"/><text x="64.5609%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="64.3212%" y="805" width="0.0207%" height="15" fill="rgb(219,228,13)" fg:x="6207" fg:w="2"/><text x="64.5712%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="64.3212%" y="789" width="0.0207%" height="15" fill="rgb(238,30,35)" fg:x="6207" fg:w="2"/><text x="64.5712%" y="799.50"></text></g><g><title>__GI___sigaltstack (5 samples, 0.05%)</title><rect x="64.3420%" y="997" width="0.0518%" height="15" fill="rgb(236,70,23)" fg:x="6209" fg:w="5"/><text x="64.5920%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="64.3420%" y="981" width="0.0518%" height="15" fill="rgb(249,104,48)" fg:x="6209" fg:w="5"/><text x="64.5920%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="64.3420%" y="965" width="0.0518%" height="15" fill="rgb(254,117,50)" fg:x="6209" fg:w="5"/><text x="64.5920%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="64.3420%" y="949" width="0.0518%" height="15" fill="rgb(223,152,4)" fg:x="6209" fg:w="5"/><text x="64.5920%" y="959.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="64.3523%" y="933" width="0.0415%" height="15" fill="rgb(245,6,2)" fg:x="6210" fg:w="4"/><text x="64.6023%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="64.3834%" y="917" width="0.0104%" height="15" fill="rgb(249,150,24)" fg:x="6213" fg:w="1"/><text x="64.6334%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="64.3938%" y="997" width="0.0104%" height="15" fill="rgb(228,185,42)" fg:x="6214" fg:w="1"/><text x="64.6438%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="64.3938%" y="981" width="0.0104%" height="15" fill="rgb(226,39,33)" fg:x="6214" fg:w="1"/><text x="64.6438%" y="991.50"></text></g><g><title>__GI___mmap64 (67 samples, 0.69%)</title><rect x="64.4041%" y="965" width="0.6943%" height="15" fill="rgb(221,166,19)" fg:x="6215" fg:w="67"/><text x="64.6541%" y="975.50"></text></g><g><title>__GI___mmap64 (67 samples, 0.69%)</title><rect x="64.4041%" y="949" width="0.6943%" height="15" fill="rgb(209,109,2)" fg:x="6215" fg:w="67"/><text x="64.6541%" y="959.50"></text></g><g><title>[unknown] (67 samples, 0.69%)</title><rect x="64.4041%" y="933" width="0.6943%" height="15" fill="rgb(252,216,26)" fg:x="6215" fg:w="67"/><text x="64.6541%" y="943.50"></text></g><g><title>[unknown] (67 samples, 0.69%)</title><rect x="64.4041%" y="917" width="0.6943%" height="15" fill="rgb(227,173,36)" fg:x="6215" fg:w="67"/><text x="64.6541%" y="927.50"></text></g><g><title>[unknown] (67 samples, 0.69%)</title><rect x="64.4041%" y="901" width="0.6943%" height="15" fill="rgb(209,90,7)" fg:x="6215" fg:w="67"/><text x="64.6541%" y="911.50"></text></g><g><title>[unknown] (66 samples, 0.68%)</title><rect x="64.4145%" y="885" width="0.6839%" height="15" fill="rgb(250,194,11)" fg:x="6216" fg:w="66"/><text x="64.6645%" y="895.50"></text></g><g><title>[unknown] (66 samples, 0.68%)</title><rect x="64.4145%" y="869" width="0.6839%" height="15" fill="rgb(220,72,50)" fg:x="6216" fg:w="66"/><text x="64.6645%" y="879.50"></text></g><g><title>[unknown] (63 samples, 0.65%)</title><rect x="64.4456%" y="853" width="0.6528%" height="15" fill="rgb(222,106,48)" fg:x="6219" fg:w="63"/><text x="64.6956%" y="863.50"></text></g><g><title>[unknown] (59 samples, 0.61%)</title><rect x="64.4870%" y="837" width="0.6114%" height="15" fill="rgb(216,220,45)" fg:x="6223" fg:w="59"/><text x="64.7370%" y="847.50"></text></g><g><title>[unknown] (59 samples, 0.61%)</title><rect x="64.4870%" y="821" width="0.6114%" height="15" fill="rgb(234,112,18)" fg:x="6223" fg:w="59"/><text x="64.7370%" y="831.50"></text></g><g><title>[unknown] (52 samples, 0.54%)</title><rect x="64.5596%" y="805" width="0.5389%" height="15" fill="rgb(206,179,9)" fg:x="6230" fg:w="52"/><text x="64.8096%" y="815.50"></text></g><g><title>[unknown] (48 samples, 0.50%)</title><rect x="64.6010%" y="789" width="0.4974%" height="15" fill="rgb(215,115,40)" fg:x="6234" fg:w="48"/><text x="64.8510%" y="799.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="64.7047%" y="773" width="0.3938%" height="15" fill="rgb(222,69,34)" fg:x="6244" fg:w="38"/><text x="64.9547%" y="783.50"></text></g><g><title>[unknown] (23 samples, 0.24%)</title><rect x="64.8601%" y="757" width="0.2383%" height="15" fill="rgb(209,161,10)" fg:x="6259" fg:w="23"/><text x="65.1101%" y="767.50"></text></g><g><title>[unknown] (11 samples, 0.11%)</title><rect x="64.9845%" y="741" width="0.1140%" height="15" fill="rgb(217,6,38)" fg:x="6271" fg:w="11"/><text x="65.2345%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="65.0259%" y="725" width="0.0725%" height="15" fill="rgb(229,229,48)" fg:x="6275" fg:w="7"/><text x="65.2759%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.0881%" y="709" width="0.0104%" height="15" fill="rgb(225,21,28)" fg:x="6281" fg:w="1"/><text x="65.3381%" y="719.50"></text></g><g><title>__GI___mprotect (44 samples, 0.46%)</title><rect x="65.0984%" y="965" width="0.4560%" height="15" fill="rgb(206,33,13)" fg:x="6282" fg:w="44"/><text x="65.3484%" y="975.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="65.0984%" y="949" width="0.4560%" height="15" fill="rgb(242,178,17)" fg:x="6282" fg:w="44"/><text x="65.3484%" y="959.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="65.0984%" y="933" width="0.4560%" height="15" fill="rgb(220,162,5)" fg:x="6282" fg:w="44"/><text x="65.3484%" y="943.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="65.0984%" y="917" width="0.4560%" height="15" fill="rgb(210,33,43)" fg:x="6282" fg:w="44"/><text x="65.3484%" y="927.50"></text></g><g><title>[unknown] (44 samples, 0.46%)</title><rect x="65.0984%" y="901" width="0.4560%" height="15" fill="rgb(216,116,54)" fg:x="6282" fg:w="44"/><text x="65.3484%" y="911.50"></text></g><g><title>[unknown] (42 samples, 0.44%)</title><rect x="65.1192%" y="885" width="0.4352%" height="15" fill="rgb(249,92,24)" fg:x="6284" fg:w="42"/><text x="65.3692%" y="895.50"></text></g><g><title>[unknown] (38 samples, 0.39%)</title><rect x="65.1606%" y="869" width="0.3938%" height="15" fill="rgb(231,189,14)" fg:x="6288" fg:w="38"/><text x="65.4106%" y="879.50"></text></g><g><title>[unknown] (37 samples, 0.38%)</title><rect x="65.1710%" y="853" width="0.3834%" height="15" fill="rgb(230,8,41)" fg:x="6289" fg:w="37"/><text x="65.4210%" y="863.50"></text></g><g><title>[unknown] (29 samples, 0.30%)</title><rect x="65.2539%" y="837" width="0.3005%" height="15" fill="rgb(249,7,27)" fg:x="6297" fg:w="29"/><text x="65.5039%" y="847.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="65.3782%" y="821" width="0.1762%" height="15" fill="rgb(232,86,5)" fg:x="6309" fg:w="17"/><text x="65.6282%" y="831.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="65.3990%" y="805" width="0.1554%" height="15" fill="rgb(224,175,18)" fg:x="6311" fg:w="15"/><text x="65.6490%" y="815.50"></text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="65.4093%" y="789" width="0.1451%" height="15" fill="rgb(220,129,12)" fg:x="6312" fg:w="14"/><text x="65.6593%" y="799.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="65.4301%" y="773" width="0.1244%" height="15" fill="rgb(210,19,36)" fg:x="6314" fg:w="12"/><text x="65.6801%" y="783.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="65.4715%" y="757" width="0.0829%" height="15" fill="rgb(219,96,14)" fg:x="6318" fg:w="8"/><text x="65.7215%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="65.5026%" y="741" width="0.0518%" height="15" fill="rgb(249,106,1)" fg:x="6321" fg:w="5"/><text x="65.7526%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="65.5337%" y="725" width="0.0207%" height="15" fill="rgb(249,155,20)" fg:x="6324" fg:w="2"/><text x="65.7837%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.5440%" y="709" width="0.0104%" height="15" fill="rgb(244,168,9)" fg:x="6325" fg:w="1"/><text x="65.7940%" y="719.50"></text></g><g><title>__clone3 (3,140 samples, 32.54%)</title><rect x="33.0363%" y="1077" width="32.5389%" height="15" fill="rgb(216,23,50)" fg:x="3188" fg:w="3140"/><text x="33.2863%" y="1087.50">__clone3</text></g><g><title>start_thread (3,120 samples, 32.33%)</title><rect x="33.2435%" y="1061" width="32.3316%" height="15" fill="rgb(224,219,20)" fg:x="3208" fg:w="3120"/><text x="33.4935%" y="1071.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,073 samples, 31.84%)</title><rect x="33.7306%" y="1045" width="31.8446%" height="15" fill="rgb(222,156,15)" fg:x="3255" fg:w="3073"/><text x="33.9806%" y="1055.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (119 samples, 1.23%)</title><rect x="64.3420%" y="1029" width="1.2332%" height="15" fill="rgb(231,97,17)" fg:x="6209" fg:w="119"/><text x="64.5920%" y="1039.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (119 samples, 1.23%)</title><rect x="64.3420%" y="1013" width="1.2332%" height="15" fill="rgb(218,70,48)" fg:x="6209" fg:w="119"/><text x="64.5920%" y="1023.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (113 samples, 1.17%)</title><rect x="64.4041%" y="997" width="1.1710%" height="15" fill="rgb(212,196,52)" fg:x="6215" fg:w="113"/><text x="64.6541%" y="1007.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (113 samples, 1.17%)</title><rect x="64.4041%" y="981" width="1.1710%" height="15" fill="rgb(243,203,18)" fg:x="6215" fg:w="113"/><text x="64.6541%" y="991.50"></text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.02%)</title><rect x="65.5544%" y="965" width="0.0207%" height="15" fill="rgb(252,125,41)" fg:x="6326" fg:w="2"/><text x="65.8044%" y="975.50"></text></g><g><title>__GI___sysconf (2 samples, 0.02%)</title><rect x="65.5544%" y="949" width="0.0207%" height="15" fill="rgb(223,180,33)" fg:x="6326" fg:w="2"/><text x="65.8044%" y="959.50"></text></g><g><title>linux_sysconf (2 samples, 0.02%)</title><rect x="65.5544%" y="933" width="0.0207%" height="15" fill="rgb(254,159,46)" fg:x="6326" fg:w="2"/><text x="65.8044%" y="943.50"></text></g><g><title>posix_sysconf (1 samples, 0.01%)</title><rect x="65.5648%" y="917" width="0.0104%" height="15" fill="rgb(254,38,10)" fg:x="6327" fg:w="1"/><text x="65.8148%" y="927.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.01%)</title><rect x="65.5648%" y="901" width="0.0104%" height="15" fill="rgb(208,217,32)" fg:x="6327" fg:w="1"/><text x="65.8148%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="65.5751%" y="1077" width="0.0104%" height="15" fill="rgb(221,120,13)" fg:x="6328" fg:w="1"/><text x="65.8251%" y="1087.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="65.5855%" y="1077" width="0.0311%" height="15" fill="rgb(246,54,52)" fg:x="6329" fg:w="3"/><text x="65.8355%" y="1087.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="65.6166%" y="789" width="0.0104%" height="15" fill="rgb(242,34,25)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="799.50"></text></g><g><title>__GI___munmap (1 samples, 0.01%)</title><rect x="65.6166%" y="773" width="0.0104%" height="15" fill="rgb(247,209,9)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="757" width="0.0104%" height="15" fill="rgb(228,71,26)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="741" width="0.0104%" height="15" fill="rgb(222,145,49)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="725" width="0.0104%" height="15" fill="rgb(218,121,17)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="709" width="0.0104%" height="15" fill="rgb(244,50,7)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="693" width="0.0104%" height="15" fill="rgb(246,229,37)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="677" width="0.0104%" height="15" fill="rgb(225,18,5)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="661" width="0.0104%" height="15" fill="rgb(213,204,8)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="645" width="0.0104%" height="15" fill="rgb(238,103,6)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="629" width="0.0104%" height="15" fill="rgb(222,25,35)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="613" width="0.0104%" height="15" fill="rgb(213,203,35)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="597" width="0.0104%" height="15" fill="rgb(221,79,53)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="581" width="0.0104%" height="15" fill="rgb(243,200,35)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6166%" y="565" width="0.0104%" height="15" fill="rgb(248,60,25)" fg:x="6332" fg:w="1"/><text x="65.8666%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="65.6269%" y="693" width="0.0104%" height="15" fill="rgb(227,53,46)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="703.50"></text></g><g><title>para::dbg_main::{{closure}} (1 samples, 0.01%)</title><rect x="65.6269%" y="677" width="0.0104%" height="15" fill="rgb(216,120,32)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="65.6269%" y="661" width="0.0104%" height="15" fill="rgb(220,134,1)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="671.50"></text></g><g><title>para::dbg_main::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="65.6269%" y="645" width="0.0104%" height="15" fill="rgb(237,168,5)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="655.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.01%)</title><rect x="65.6269%" y="629" width="0.0104%" height="15" fill="rgb(231,100,33)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.01%)</title><rect x="65.6269%" y="613" width="0.0104%" height="15" fill="rgb(236,177,47)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="623.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1 samples, 0.01%)</title><rect x="65.6269%" y="597" width="0.0104%" height="15" fill="rgb(235,7,49)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.01%)</title><rect x="65.6269%" y="581" width="0.0104%" height="15" fill="rgb(232,119,22)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="65.6269%" y="565" width="0.0104%" height="15" fill="rgb(254,73,53)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.01%)</title><rect x="65.6269%" y="549" width="0.0104%" height="15" fill="rgb(251,35,20)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="65.6269%" y="533" width="0.0104%" height="15" fill="rgb(241,119,20)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="65.6269%" y="517" width="0.0104%" height="15" fill="rgb(207,102,14)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="65.6269%" y="501" width="0.0104%" height="15" fill="rgb(248,201,50)" fg:x="6333" fg:w="1"/><text x="65.8769%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.05%)</title><rect x="65.6269%" y="789" width="0.0518%" height="15" fill="rgb(222,185,44)" fg:x="6333" fg:w="5"/><text x="65.8769%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="65.6269%" y="773" width="0.0518%" height="15" fill="rgb(218,107,18)" fg:x="6333" fg:w="5"/><text x="65.8769%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (5 samples, 0.05%)</title><rect x="65.6269%" y="757" width="0.0518%" height="15" fill="rgb(237,177,39)" fg:x="6333" fg:w="5"/><text x="65.8769%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.05%)</title><rect x="65.6269%" y="741" width="0.0518%" height="15" fill="rgb(246,69,6)" fg:x="6333" fg:w="5"/><text x="65.8769%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="65.6269%" y="725" width="0.0518%" height="15" fill="rgb(234,208,37)" fg:x="6333" fg:w="5"/><text x="65.8769%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.05%)</title><rect x="65.6269%" y="709" width="0.0518%" height="15" fill="rgb(225,4,6)" fg:x="6333" fg:w="5"/><text x="65.8769%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="65.6373%" y="693" width="0.0415%" height="15" fill="rgb(233,45,0)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="65.6373%" y="677" width="0.0415%" height="15" fill="rgb(226,136,5)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="65.6373%" y="661" width="0.0415%" height="15" fill="rgb(211,91,47)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="671.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="65.6373%" y="645" width="0.0415%" height="15" fill="rgb(242,88,51)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="65.6373%" y="629" width="0.0415%" height="15" fill="rgb(230,91,28)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="65.6373%" y="613" width="0.0415%" height="15" fill="rgb(254,186,29)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="65.6373%" y="597" width="0.0415%" height="15" fill="rgb(238,6,4)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="65.6373%" y="581" width="0.0415%" height="15" fill="rgb(221,151,16)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="591.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="65.6373%" y="565" width="0.0415%" height="15" fill="rgb(251,143,52)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="575.50"></text></g><g><title>__GI___munmap (4 samples, 0.04%)</title><rect x="65.6373%" y="549" width="0.0415%" height="15" fill="rgb(206,90,15)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="533" width="0.0415%" height="15" fill="rgb(218,35,8)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="517" width="0.0415%" height="15" fill="rgb(239,215,6)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="501" width="0.0415%" height="15" fill="rgb(245,116,39)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="485" width="0.0415%" height="15" fill="rgb(242,65,28)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="469" width="0.0415%" height="15" fill="rgb(252,132,53)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="453" width="0.0415%" height="15" fill="rgb(224,159,50)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="437" width="0.0415%" height="15" fill="rgb(224,93,4)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="421" width="0.0415%" height="15" fill="rgb(208,81,34)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="405" width="0.0415%" height="15" fill="rgb(233,92,54)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="389" width="0.0415%" height="15" fill="rgb(237,21,14)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="373" width="0.0415%" height="15" fill="rgb(249,128,51)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="357" width="0.0415%" height="15" fill="rgb(223,129,24)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="341" width="0.0415%" height="15" fill="rgb(231,168,25)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="65.6373%" y="325" width="0.0415%" height="15" fill="rgb(224,39,20)" fg:x="6334" fg:w="4"/><text x="65.8873%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="65.6477%" y="309" width="0.0311%" height="15" fill="rgb(225,152,53)" fg:x="6335" fg:w="3"/><text x="65.8977%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="65.6477%" y="293" width="0.0311%" height="15" fill="rgb(252,17,24)" fg:x="6335" fg:w="3"/><text x="65.8977%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="65.6580%" y="277" width="0.0207%" height="15" fill="rgb(250,114,30)" fg:x="6336" fg:w="2"/><text x="65.9080%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6684%" y="261" width="0.0104%" height="15" fill="rgb(229,5,4)" fg:x="6337" fg:w="1"/><text x="65.9184%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6684%" y="245" width="0.0104%" height="15" fill="rgb(225,176,49)" fg:x="6337" fg:w="1"/><text x="65.9184%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="65.6684%" y="229" width="0.0104%" height="15" fill="rgb(224,221,49)" fg:x="6337" fg:w="1"/><text x="65.9184%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="65.6788%" y="709" width="0.0207%" height="15" fill="rgb(253,169,27)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="65.6788%" y="693" width="0.0207%" height="15" fill="rgb(211,206,16)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="65.6788%" y="677" width="0.0207%" height="15" fill="rgb(244,87,35)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="65.6788%" y="661" width="0.0207%" height="15" fill="rgb(246,28,10)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="65.6788%" y="645" width="0.0207%" height="15" fill="rgb(229,12,44)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="65.6788%" y="629" width="0.0207%" height="15" fill="rgb(210,145,37)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="65.6788%" y="613" width="0.0207%" height="15" fill="rgb(227,112,52)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="65.6788%" y="597" width="0.0207%" height="15" fill="rgb(238,155,34)" fg:x="6338" fg:w="2"/><text x="65.9288%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::Paranagram&gt; (8 samples, 0.08%)</title><rect x="65.6788%" y="789" width="0.0829%" height="15" fill="rgb(239,226,36)" fg:x="6338" fg:w="8"/><text x="65.9288%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;paranagram::word::Word&gt;&gt; (8 samples, 0.08%)</title><rect x="65.6788%" y="773" width="0.0829%" height="15" fill="rgb(230,16,23)" fg:x="6338" fg:w="8"/><text x="65.9288%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="65.6788%" y="757" width="0.0829%" height="15" fill="rgb(236,171,36)" fg:x="6338" fg:w="8"/><text x="65.9288%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[paranagram::word::Word]&gt; (8 samples, 0.08%)</title><rect x="65.6788%" y="741" width="0.0829%" height="15" fill="rgb(221,22,14)" fg:x="6338" fg:w="8"/><text x="65.9288%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;paranagram::word::Word&gt; (8 samples, 0.08%)</title><rect x="65.6788%" y="725" width="0.0829%" height="15" fill="rgb(242,43,11)" fg:x="6338" fg:w="8"/><text x="65.9288%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (6 samples, 0.06%)</title><rect x="65.6995%" y="709" width="0.0622%" height="15" fill="rgb(232,69,23)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.06%)</title><rect x="65.6995%" y="693" width="0.0622%" height="15" fill="rgb(216,180,54)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (6 samples, 0.06%)</title><rect x="65.6995%" y="677" width="0.0622%" height="15" fill="rgb(216,5,24)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="65.6995%" y="661" width="0.0622%" height="15" fill="rgb(225,89,9)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (6 samples, 0.06%)</title><rect x="65.6995%" y="645" width="0.0622%" height="15" fill="rgb(243,75,33)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (6 samples, 0.06%)</title><rect x="65.6995%" y="629" width="0.0622%" height="15" fill="rgb(247,141,45)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="65.6995%" y="613" width="0.0622%" height="15" fill="rgb(232,177,36)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="65.6995%" y="597" width="0.0622%" height="15" fill="rgb(219,125,36)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="607.50"></text></g><g><title>__GI___libc_free (6 samples, 0.06%)</title><rect x="65.6995%" y="581" width="0.0622%" height="15" fill="rgb(227,94,9)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="591.50"></text></g><g><title>_int_free (6 samples, 0.06%)</title><rect x="65.6995%" y="565" width="0.0622%" height="15" fill="rgb(240,34,52)" fg:x="6340" fg:w="6"/><text x="65.9495%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="65.8860%" y="613" width="0.0104%" height="15" fill="rgb(216,45,12)" fg:x="6358" fg:w="1"/><text x="66.1360%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (7 samples, 0.07%)</title><rect x="66.0622%" y="597" width="0.0725%" height="15" fill="rgb(246,21,19)" fg:x="6375" fg:w="7"/><text x="66.3122%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.07%)</title><rect x="66.0622%" y="581" width="0.0725%" height="15" fill="rgb(213,98,42)" fg:x="6375" fg:w="7"/><text x="66.3122%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.19%)</title><rect x="66.5699%" y="581" width="0.1865%" height="15" fill="rgb(250,136,47)" fg:x="6424" fg:w="18"/><text x="66.8199%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.27%)</title><rect x="67.0155%" y="501" width="0.2694%" height="15" fill="rgb(251,124,27)" fg:x="6467" fg:w="26"/><text x="67.2655%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="67.2642%" y="485" width="0.0207%" height="15" fill="rgb(229,180,14)" fg:x="6491" fg:w="2"/><text x="67.5142%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.68%)</title><rect x="66.8912%" y="565" width="0.6839%" height="15" fill="rgb(245,216,25)" fg:x="6455" fg:w="66"/><text x="67.1412%" y="575.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.68%)</title><rect x="66.8912%" y="549" width="0.6839%" height="15" fill="rgb(251,43,5)" fg:x="6455" fg:w="66"/><text x="67.1412%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.68%)</title><rect x="66.8912%" y="533" width="0.6839%" height="15" fill="rgb(250,128,24)" fg:x="6455" fg:w="66"/><text x="67.1412%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (54 samples, 0.56%)</title><rect x="67.0155%" y="517" width="0.5596%" height="15" fill="rgb(217,117,27)" fg:x="6467" fg:w="54"/><text x="67.2655%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (28 samples, 0.29%)</title><rect x="67.2850%" y="501" width="0.2902%" height="15" fill="rgb(245,147,4)" fg:x="6493" fg:w="28"/><text x="67.5350%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (28 samples, 0.29%)</title><rect x="67.2850%" y="485" width="0.2902%" height="15" fill="rgb(242,201,35)" fg:x="6493" fg:w="28"/><text x="67.5350%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (28 samples, 0.29%)</title><rect x="67.2850%" y="469" width="0.2902%" height="15" fill="rgb(218,181,1)" fg:x="6493" fg:w="28"/><text x="67.5350%" y="479.50"></text></g><g><title>&lt;u16 as core::ops::arith::AddAssign&lt;&amp;u16&gt;&gt;::add_assign (37 samples, 0.38%)</title><rect x="67.5751%" y="565" width="0.3834%" height="15" fill="rgb(222,6,29)" fg:x="6521" fg:w="37"/><text x="67.8251%" y="575.50"></text></g><g><title>&lt;u16 as core::ops::arith::AddAssign&gt;::add_assign (37 samples, 0.38%)</title><rect x="67.5751%" y="549" width="0.3834%" height="15" fill="rgb(208,186,3)" fg:x="6521" fg:w="37"/><text x="67.8251%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.11%)</title><rect x="67.9585%" y="533" width="0.1140%" height="15" fill="rgb(216,36,26)" fg:x="6558" fg:w="11"/><text x="68.2085%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="68.3627%" y="501" width="0.0415%" height="15" fill="rgb(248,201,23)" fg:x="6597" fg:w="4"/><text x="68.6127%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.04%)</title><rect x="68.3627%" y="485" width="0.0415%" height="15" fill="rgb(251,170,31)" fg:x="6597" fg:w="4"/><text x="68.6127%" y="495.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="68.3627%" y="469" width="0.0415%" height="15" fill="rgb(207,110,25)" fg:x="6597" fg:w="4"/><text x="68.6127%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (3 samples, 0.03%)</title><rect x="68.4041%" y="501" width="0.0311%" height="15" fill="rgb(250,54,15)" fg:x="6601" fg:w="3"/><text x="68.6541%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.03%)</title><rect x="68.4041%" y="485" width="0.0311%" height="15" fill="rgb(227,68,33)" fg:x="6601" fg:w="3"/><text x="68.6541%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.03%)</title><rect x="68.4041%" y="469" width="0.0311%" height="15" fill="rgb(238,34,41)" fg:x="6601" fg:w="3"/><text x="68.6541%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.03%)</title><rect x="68.4041%" y="453" width="0.0311%" height="15" fill="rgb(220,11,15)" fg:x="6601" fg:w="3"/><text x="68.6541%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="68.6528%" y="453" width="0.0311%" height="15" fill="rgb(246,111,35)" fg:x="6625" fg:w="3"/><text x="68.9028%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (20 samples, 0.21%)</title><rect x="68.5596%" y="469" width="0.2073%" height="15" fill="rgb(209,88,53)" fg:x="6616" fg:w="20"/><text x="68.8096%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.08%)</title><rect x="68.6839%" y="453" width="0.0829%" height="15" fill="rgb(231,185,47)" fg:x="6628" fg:w="8"/><text x="68.9339%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.08%)</title><rect x="68.6839%" y="437" width="0.0829%" height="15" fill="rgb(233,154,1)" fg:x="6628" fg:w="8"/><text x="68.9339%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (37 samples, 0.38%)</title><rect x="68.8290%" y="453" width="0.3834%" height="15" fill="rgb(225,15,46)" fg:x="6642" fg:w="37"/><text x="69.0790%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="69.2124%" y="453" width="0.0104%" height="15" fill="rgb(211,135,41)" fg:x="6679" fg:w="1"/><text x="69.4624%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (7 samples, 0.07%)</title><rect x="69.2228%" y="453" width="0.0725%" height="15" fill="rgb(208,54,0)" fg:x="6680" fg:w="7"/><text x="69.4728%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (7 samples, 0.07%)</title><rect x="69.2228%" y="437" width="0.0725%" height="15" fill="rgb(244,136,14)" fg:x="6680" fg:w="7"/><text x="69.4728%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (52 samples, 0.54%)</title><rect x="68.7668%" y="469" width="0.5389%" height="15" fill="rgb(241,56,14)" fg:x="6636" fg:w="52"/><text x="69.0168%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="69.2953%" y="453" width="0.0104%" height="15" fill="rgb(205,80,24)" fg:x="6687" fg:w="1"/><text x="69.5453%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="69.2953%" y="437" width="0.0104%" height="15" fill="rgb(220,57,4)" fg:x="6687" fg:w="1"/><text x="69.5453%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (10 samples, 0.10%)</title><rect x="69.3057%" y="469" width="0.1036%" height="15" fill="rgb(226,193,50)" fg:x="6688" fg:w="10"/><text x="69.5557%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (105 samples, 1.09%)</title><rect x="68.4560%" y="485" width="1.0881%" height="15" fill="rgb(231,168,22)" fg:x="6606" fg:w="105"/><text x="68.7060%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.13%)</title><rect x="69.4093%" y="469" width="0.1347%" height="15" fill="rgb(254,215,14)" fg:x="6698" fg:w="13"/><text x="69.6593%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.13%)</title><rect x="69.4093%" y="453" width="0.1347%" height="15" fill="rgb(211,115,16)" fg:x="6698" fg:w="13"/><text x="69.6593%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.13%)</title><rect x="69.4093%" y="437" width="0.1347%" height="15" fill="rgb(236,210,16)" fg:x="6698" fg:w="13"/><text x="69.6593%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (11 samples, 0.11%)</title><rect x="69.5440%" y="469" width="0.1140%" height="15" fill="rgb(221,94,12)" fg:x="6711" fg:w="11"/><text x="69.7940%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="69.6477%" y="453" width="0.0104%" height="15" fill="rgb(235,218,49)" fg:x="6721" fg:w="1"/><text x="69.8977%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (119 samples, 1.23%)</title><rect x="68.4352%" y="501" width="1.2332%" height="15" fill="rgb(217,114,14)" fg:x="6604" fg:w="119"/><text x="68.6852%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (12 samples, 0.12%)</title><rect x="69.5440%" y="485" width="0.1244%" height="15" fill="rgb(216,145,22)" fg:x="6711" fg:w="12"/><text x="69.7940%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="69.6580%" y="469" width="0.0104%" height="15" fill="rgb(217,112,39)" fg:x="6722" fg:w="1"/><text x="69.9080%" y="479.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (172 samples, 1.78%)</title><rect x="67.9585%" y="565" width="1.7824%" height="15" fill="rgb(225,85,32)" fg:x="6558" fg:w="172"/><text x="68.2085%" y="575.50">s..</text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (172 samples, 1.78%)</title><rect x="67.9585%" y="549" width="1.7824%" height="15" fill="rgb(245,209,47)" fg:x="6558" fg:w="172"/><text x="68.2085%" y="559.50">s..</text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (161 samples, 1.67%)</title><rect x="68.0725%" y="533" width="1.6684%" height="15" fill="rgb(218,220,15)" fg:x="6569" fg:w="161"/><text x="68.3225%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (150 samples, 1.55%)</title><rect x="68.1865%" y="517" width="1.5544%" height="15" fill="rgb(222,202,31)" fg:x="6580" fg:w="150"/><text x="68.4365%" y="527.50"></text></g><g><title>hashbrown::raw::special_is_empty (7 samples, 0.07%)</title><rect x="69.6684%" y="501" width="0.0725%" height="15" fill="rgb(243,203,4)" fg:x="6723" fg:w="7"/><text x="69.9184%" y="511.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="70.1969%" y="469" width="0.0207%" height="15" fill="rgb(237,92,17)" fg:x="6774" fg:w="2"/><text x="70.4469%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="70.1969%" y="453" width="0.0207%" height="15" fill="rgb(231,119,7)" fg:x="6774" fg:w="2"/><text x="70.4469%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.18%)</title><rect x="70.2176%" y="469" width="0.1762%" height="15" fill="rgb(237,82,41)" fg:x="6776" fg:w="17"/><text x="70.4676%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="70.4767%" y="453" width="0.0311%" height="15" fill="rgb(226,81,48)" fg:x="6801" fg:w="3"/><text x="70.7267%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.10%)</title><rect x="70.5078%" y="453" width="0.1036%" height="15" fill="rgb(234,70,51)" fg:x="6804" fg:w="10"/><text x="70.7578%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.10%)</title><rect x="70.5078%" y="437" width="0.1036%" height="15" fill="rgb(251,86,4)" fg:x="6804" fg:w="10"/><text x="70.7578%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.06%)</title><rect x="70.5492%" y="421" width="0.0622%" height="15" fill="rgb(244,144,28)" fg:x="6808" fg:w="6"/><text x="70.7992%" y="431.50"></text></g><g><title>core::mem::swap (5 samples, 0.05%)</title><rect x="70.6114%" y="453" width="0.0518%" height="15" fill="rgb(232,161,39)" fg:x="6814" fg:w="5"/><text x="70.8614%" y="463.50"></text></g><g><title>core::mem::swap_simple (5 samples, 0.05%)</title><rect x="70.6114%" y="437" width="0.0518%" height="15" fill="rgb(247,34,51)" fg:x="6814" fg:w="5"/><text x="70.8614%" y="447.50"></text></g><g><title>core::ptr::read (5 samples, 0.05%)</title><rect x="70.6114%" y="421" width="0.0518%" height="15" fill="rgb(225,132,2)" fg:x="6814" fg:w="5"/><text x="70.8614%" y="431.50"></text></g><g><title>_int_free (15 samples, 0.16%)</title><rect x="70.7461%" y="341" width="0.1554%" height="15" fill="rgb(209,159,44)" fg:x="6827" fg:w="15"/><text x="70.9961%" y="351.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="70.8912%" y="325" width="0.0104%" height="15" fill="rgb(251,214,1)" fg:x="6841" fg:w="1"/><text x="71.1412%" y="335.50"></text></g><g><title>__GI___libc_free (21 samples, 0.22%)</title><rect x="70.6943%" y="357" width="0.2176%" height="15" fill="rgb(247,84,47)" fg:x="6822" fg:w="21"/><text x="70.9443%" y="367.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="70.9016%" y="341" width="0.0104%" height="15" fill="rgb(240,111,43)" fg:x="6842" fg:w="1"/><text x="71.1516%" y="351.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="70.9119%" y="357" width="0.0207%" height="15" fill="rgb(215,214,35)" fg:x="6843" fg:w="2"/><text x="71.1619%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="70.9119%" y="341" width="0.0207%" height="15" fill="rgb(248,207,23)" fg:x="6843" fg:w="2"/><text x="71.1619%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (27 samples, 0.28%)</title><rect x="70.6632%" y="453" width="0.2798%" height="15" fill="rgb(214,186,4)" fg:x="6819" fg:w="27"/><text x="70.9132%" y="463.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.28%)</title><rect x="70.6632%" y="437" width="0.2798%" height="15" fill="rgb(220,133,22)" fg:x="6819" fg:w="27"/><text x="70.9132%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (27 samples, 0.28%)</title><rect x="70.6632%" y="421" width="0.2798%" height="15" fill="rgb(239,134,19)" fg:x="6819" fg:w="27"/><text x="70.9132%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (24 samples, 0.25%)</title><rect x="70.6943%" y="405" width="0.2487%" height="15" fill="rgb(250,140,9)" fg:x="6822" fg:w="24"/><text x="70.9443%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.25%)</title><rect x="70.6943%" y="389" width="0.2487%" height="15" fill="rgb(225,59,14)" fg:x="6822" fg:w="24"/><text x="70.9443%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.25%)</title><rect x="70.6943%" y="373" width="0.2487%" height="15" fill="rgb(214,152,51)" fg:x="6822" fg:w="24"/><text x="70.9443%" y="383.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="70.9326%" y="357" width="0.0104%" height="15" fill="rgb(251,227,43)" fg:x="6845" fg:w="1"/><text x="71.1826%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="70.9430%" y="453" width="0.0415%" height="15" fill="rgb(241,96,17)" fg:x="6846" fg:w="4"/><text x="71.1930%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.13%)</title><rect x="71.1088%" y="341" width="0.1347%" height="15" fill="rgb(234,198,43)" fg:x="6862" fg:w="13"/><text x="71.3588%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="71.2332%" y="325" width="0.0104%" height="15" fill="rgb(220,108,29)" fg:x="6874" fg:w="1"/><text x="71.4832%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.25%)</title><rect x="71.4611%" y="325" width="0.2487%" height="15" fill="rgb(226,163,33)" fg:x="6896" fg:w="24"/><text x="71.7111%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (82 samples, 0.85%)</title><rect x="70.9845%" y="357" width="0.8497%" height="15" fill="rgb(205,194,45)" fg:x="6850" fg:w="82"/><text x="71.2345%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (57 samples, 0.59%)</title><rect x="71.2435%" y="341" width="0.5907%" height="15" fill="rgb(206,143,44)" fg:x="6875" fg:w="57"/><text x="71.4935%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.12%)</title><rect x="71.7098%" y="325" width="0.1244%" height="15" fill="rgb(236,136,36)" fg:x="6920" fg:w="12"/><text x="71.9598%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (84 samples, 0.87%)</title><rect x="70.9845%" y="453" width="0.8705%" height="15" fill="rgb(249,172,42)" fg:x="6850" fg:w="84"/><text x="71.2345%" y="463.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (84 samples, 0.87%)</title><rect x="70.9845%" y="437" width="0.8705%" height="15" fill="rgb(216,139,23)" fg:x="6850" fg:w="84"/><text x="71.2345%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (84 samples, 0.87%)</title><rect x="70.9845%" y="421" width="0.8705%" height="15" fill="rgb(207,166,20)" fg:x="6850" fg:w="84"/><text x="71.2345%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (84 samples, 0.87%)</title><rect x="70.9845%" y="405" width="0.8705%" height="15" fill="rgb(210,209,22)" fg:x="6850" fg:w="84"/><text x="71.2345%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (84 samples, 0.87%)</title><rect x="70.9845%" y="389" width="0.8705%" height="15" fill="rgb(232,118,20)" fg:x="6850" fg:w="84"/><text x="71.2345%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (84 samples, 0.87%)</title><rect x="70.9845%" y="373" width="0.8705%" height="15" fill="rgb(238,113,42)" fg:x="6850" fg:w="84"/><text x="71.2345%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="71.8342%" y="357" width="0.0207%" height="15" fill="rgb(231,42,5)" fg:x="6932" fg:w="2"/><text x="72.0842%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.08%)</title><rect x="71.8756%" y="405" width="0.0829%" height="15" fill="rgb(243,166,24)" fg:x="6936" fg:w="8"/><text x="72.1256%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="71.9378%" y="389" width="0.0207%" height="15" fill="rgb(237,226,12)" fg:x="6942" fg:w="2"/><text x="72.1878%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (23 samples, 0.24%)</title><rect x="71.8549%" y="421" width="0.2383%" height="15" fill="rgb(229,133,24)" fg:x="6934" fg:w="23"/><text x="72.1049%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.13%)</title><rect x="71.9585%" y="405" width="0.1347%" height="15" fill="rgb(238,33,43)" fg:x="6944" fg:w="13"/><text x="72.2085%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.13%)</title><rect x="71.9585%" y="389" width="0.1347%" height="15" fill="rgb(227,59,38)" fg:x="6944" fg:w="13"/><text x="72.2085%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (38 samples, 0.39%)</title><rect x="72.0933%" y="421" width="0.3938%" height="15" fill="rgb(230,97,0)" fg:x="6957" fg:w="38"/><text x="72.3433%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (30 samples, 0.31%)</title><rect x="72.1762%" y="405" width="0.3109%" height="15" fill="rgb(250,173,50)" fg:x="6965" fg:w="30"/><text x="72.4262%" y="415.50"></text></g><g><title>hashbrown::raw::is_full (30 samples, 0.31%)</title><rect x="72.1762%" y="389" width="0.3109%" height="15" fill="rgb(240,15,50)" fg:x="6965" fg:w="30"/><text x="72.4262%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.04%)</title><rect x="72.4870%" y="421" width="0.0415%" height="15" fill="rgb(221,93,22)" fg:x="6995" fg:w="4"/><text x="72.7370%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (77 samples, 0.80%)</title><rect x="71.8549%" y="437" width="0.7979%" height="15" fill="rgb(245,180,53)" fg:x="6934" fg:w="77"/><text x="72.1049%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.12%)</title><rect x="72.5285%" y="421" width="0.1244%" height="15" fill="rgb(231,88,51)" fg:x="6999" fg:w="12"/><text x="72.7785%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.12%)</title><rect x="72.5285%" y="405" width="0.1244%" height="15" fill="rgb(240,58,21)" fg:x="6999" fg:w="12"/><text x="72.7785%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.12%)</title><rect x="72.5285%" y="389" width="0.1244%" height="15" fill="rgb(237,21,10)" fg:x="6999" fg:w="12"/><text x="72.7785%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (83 samples, 0.86%)</title><rect x="71.8549%" y="453" width="0.8601%" height="15" fill="rgb(218,43,11)" fg:x="6934" fg:w="83"/><text x="72.1049%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (6 samples, 0.06%)</title><rect x="72.6528%" y="437" width="0.0622%" height="15" fill="rgb(218,221,29)" fg:x="7011" fg:w="6"/><text x="72.9028%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (6 samples, 0.06%)</title><rect x="72.6528%" y="421" width="0.0622%" height="15" fill="rgb(214,118,42)" fg:x="7011" fg:w="6"/><text x="72.9028%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (8 samples, 0.08%)</title><rect x="72.7150%" y="421" width="0.0829%" height="15" fill="rgb(251,200,26)" fg:x="7017" fg:w="8"/><text x="72.9650%" y="431.50"></text></g><g><title>core::intrinsics::write_bytes (8 samples, 0.08%)</title><rect x="72.7150%" y="405" width="0.0829%" height="15" fill="rgb(237,101,39)" fg:x="7017" fg:w="8"/><text x="72.9650%" y="415.50"></text></g><g><title>__memset_evex_unaligned_erms (6 samples, 0.06%)</title><rect x="72.7358%" y="389" width="0.0622%" height="15" fill="rgb(251,117,11)" fg:x="7019" fg:w="6"/><text x="72.9858%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.04%)</title><rect x="72.8187%" y="405" width="0.0415%" height="15" fill="rgb(216,223,23)" fg:x="7027" fg:w="4"/><text x="73.0687%" y="415.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (5 samples, 0.05%)</title><rect x="72.8601%" y="405" width="0.0518%" height="15" fill="rgb(251,54,12)" fg:x="7031" fg:w="5"/><text x="73.1101%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.03%)</title><rect x="72.8808%" y="389" width="0.0311%" height="15" fill="rgb(254,176,54)" fg:x="7033" fg:w="3"/><text x="73.1308%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.03%)</title><rect x="72.8808%" y="373" width="0.0311%" height="15" fill="rgb(210,32,8)" fg:x="7033" fg:w="3"/><text x="73.1308%" y="383.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="73.2228%" y="325" width="0.0311%" height="15" fill="rgb(235,52,38)" fg:x="7066" fg:w="3"/><text x="73.4728%" y="335.50"></text></g><g><title>__GI___libc_malloc (30 samples, 0.31%)</title><rect x="73.0674%" y="341" width="0.3109%" height="15" fill="rgb(231,4,44)" fg:x="7051" fg:w="30"/><text x="73.3174%" y="351.50"></text></g><g><title>tcache_get (12 samples, 0.12%)</title><rect x="73.2539%" y="325" width="0.1244%" height="15" fill="rgb(249,2,32)" fg:x="7069" fg:w="12"/><text x="73.5039%" y="335.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="73.3782%" y="341" width="0.0207%" height="15" fill="rgb(224,65,26)" fg:x="7081" fg:w="2"/><text x="73.6282%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="73.3782%" y="325" width="0.0207%" height="15" fill="rgb(250,73,40)" fg:x="7081" fg:w="2"/><text x="73.6282%" y="335.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="73.3990%" y="341" width="0.0207%" height="15" fill="rgb(253,177,16)" fg:x="7083" fg:w="2"/><text x="73.6490%" y="351.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (51 samples, 0.53%)</title><rect x="72.9119%" y="405" width="0.5285%" height="15" fill="rgb(217,32,34)" fg:x="7036" fg:w="51"/><text x="73.1619%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.53%)</title><rect x="72.9119%" y="389" width="0.5285%" height="15" fill="rgb(212,7,10)" fg:x="7036" fg:w="51"/><text x="73.1619%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.53%)</title><rect x="72.9119%" y="373" width="0.5285%" height="15" fill="rgb(245,89,8)" fg:x="7036" fg:w="51"/><text x="73.1619%" y="383.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.52%)</title><rect x="72.9223%" y="357" width="0.5181%" height="15" fill="rgb(237,16,53)" fg:x="7037" fg:w="50"/><text x="73.1723%" y="367.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="73.4197%" y="341" width="0.0207%" height="15" fill="rgb(250,204,30)" fg:x="7085" fg:w="2"/><text x="73.6697%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (68 samples, 0.70%)</title><rect x="72.7979%" y="421" width="0.7047%" height="15" fill="rgb(208,77,27)" fg:x="7025" fg:w="68"/><text x="73.0479%" y="431.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (6 samples, 0.06%)</title><rect x="73.4404%" y="405" width="0.0622%" height="15" fill="rgb(250,204,28)" fg:x="7087" fg:w="6"/><text x="73.6904%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (303 samples, 3.14%)</title><rect x="70.3938%" y="469" width="3.1399%" height="15" fill="rgb(244,63,21)" fg:x="6793" fg:w="303"/><text x="70.6438%" y="479.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (79 samples, 0.82%)</title><rect x="72.7150%" y="453" width="0.8187%" height="15" fill="rgb(236,85,44)" fg:x="7017" fg:w="79"/><text x="72.9650%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (79 samples, 0.82%)</title><rect x="72.7150%" y="437" width="0.8187%" height="15" fill="rgb(215,98,4)" fg:x="7017" fg:w="79"/><text x="72.9650%" y="447.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (3 samples, 0.03%)</title><rect x="73.5026%" y="421" width="0.0311%" height="15" fill="rgb(235,38,11)" fg:x="7093" fg:w="3"/><text x="73.7526%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::next_power_of_two (3 samples, 0.03%)</title><rect x="73.5026%" y="405" width="0.0311%" height="15" fill="rgb(254,186,25)" fg:x="7093" fg:w="3"/><text x="73.7526%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::one_less_than_next_power_of_two (3 samples, 0.03%)</title><rect x="73.5026%" y="389" width="0.0311%" height="15" fill="rgb(225,55,31)" fg:x="7093" fg:w="3"/><text x="73.7526%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (340 samples, 3.52%)</title><rect x="70.0622%" y="533" width="3.5233%" height="15" fill="rgb(211,15,21)" fg:x="6761" fg:w="340"/><text x="70.3122%" y="543.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (340 samples, 3.52%)</title><rect x="70.0622%" y="517" width="3.5233%" height="15" fill="rgb(215,187,41)" fg:x="6761" fg:w="340"/><text x="70.3122%" y="527.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (332 samples, 3.44%)</title><rect x="70.1451%" y="501" width="3.4404%" height="15" fill="rgb(248,69,32)" fg:x="6769" fg:w="332"/><text x="70.3951%" y="511.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (332 samples, 3.44%)</title><rect x="70.1451%" y="485" width="3.4404%" height="15" fill="rgb(252,102,52)" fg:x="6769" fg:w="332"/><text x="70.3951%" y="495.50">has..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (5 samples, 0.05%)</title><rect x="73.5337%" y="469" width="0.0518%" height="15" fill="rgb(253,140,32)" fg:x="7096" fg:w="5"/><text x="73.7837%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (47 samples, 0.49%)</title><rect x="74.8394%" y="437" width="0.4870%" height="15" fill="rgb(216,56,42)" fg:x="7222" fg:w="47"/><text x="75.0894%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (73 samples, 0.76%)</title><rect x="74.8394%" y="453" width="0.7565%" height="15" fill="rgb(216,184,14)" fg:x="7222" fg:w="73"/><text x="75.0894%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (26 samples, 0.27%)</title><rect x="75.3264%" y="437" width="0.2694%" height="15" fill="rgb(237,187,27)" fg:x="7269" fg:w="26"/><text x="75.5764%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (97 samples, 1.01%)</title><rect x="76.3109%" y="437" width="1.0052%" height="15" fill="rgb(219,65,3)" fg:x="7364" fg:w="97"/><text x="76.5609%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (58 samples, 0.60%)</title><rect x="77.3161%" y="437" width="0.6010%" height="15" fill="rgb(245,83,25)" fg:x="7461" fg:w="58"/><text x="77.5661%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (407 samples, 4.22%)</title><rect x="73.8756%" y="501" width="4.2176%" height="15" fill="rgb(214,205,45)" fg:x="7129" fg:w="407"/><text x="74.1256%" y="511.50">&lt;std:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (407 samples, 4.22%)</title><rect x="73.8756%" y="485" width="4.2176%" height="15" fill="rgb(241,20,18)" fg:x="7129" fg:w="407"/><text x="74.1256%" y="495.50">&lt;core..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (407 samples, 4.22%)</title><rect x="73.8756%" y="469" width="4.2176%" height="15" fill="rgb(232,163,23)" fg:x="7129" fg:w="407"/><text x="74.1256%" y="479.50">&lt;core..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (241 samples, 2.50%)</title><rect x="75.5959%" y="453" width="2.4974%" height="15" fill="rgb(214,5,46)" fg:x="7295" fg:w="241"/><text x="75.8459%" y="463.50">&lt;c..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (17 samples, 0.18%)</title><rect x="77.9171%" y="437" width="0.1762%" height="15" fill="rgb(229,78,17)" fg:x="7519" fg:w="17"/><text x="78.1671%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (26 samples, 0.27%)</title><rect x="78.0933%" y="501" width="0.2694%" height="15" fill="rgb(248,89,10)" fg:x="7536" fg:w="26"/><text x="78.3433%" y="511.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (26 samples, 0.27%)</title><rect x="78.0933%" y="485" width="0.2694%" height="15" fill="rgb(248,54,15)" fg:x="7536" fg:w="26"/><text x="78.3433%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (26 samples, 0.27%)</title><rect x="78.0933%" y="469" width="0.2694%" height="15" fill="rgb(223,116,6)" fg:x="7536" fg:w="26"/><text x="78.3433%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (26 samples, 0.27%)</title><rect x="78.0933%" y="453" width="0.2694%" height="15" fill="rgb(205,125,38)" fg:x="7536" fg:w="26"/><text x="78.3433%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (480 samples, 4.97%)</title><rect x="73.5855%" y="533" width="4.9741%" height="15" fill="rgb(251,78,38)" fg:x="7101" fg:w="480"/><text x="73.8355%" y="543.50">hashbr..</text></g><g><title>core::hash::BuildHasher::hash_one (480 samples, 4.97%)</title><rect x="73.5855%" y="517" width="4.9741%" height="15" fill="rgb(253,78,28)" fg:x="7101" fg:w="480"/><text x="73.8355%" y="527.50">core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.20%)</title><rect x="78.3627%" y="501" width="0.1969%" height="15" fill="rgb(209,120,3)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (19 samples, 0.20%)</title><rect x="78.3627%" y="485" width="0.1969%" height="15" fill="rgb(238,229,9)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u32 (19 samples, 0.20%)</title><rect x="78.3627%" y="469" width="0.1969%" height="15" fill="rgb(253,159,18)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.20%)</title><rect x="78.3627%" y="453" width="0.1969%" height="15" fill="rgb(244,42,34)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.20%)</title><rect x="78.3627%" y="437" width="0.1969%" height="15" fill="rgb(224,8,7)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.20%)</title><rect x="78.3627%" y="421" width="0.1969%" height="15" fill="rgb(210,201,45)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (19 samples, 0.20%)</title><rect x="78.3627%" y="405" width="0.1969%" height="15" fill="rgb(252,185,21)" fg:x="7562" fg:w="19"/><text x="78.6127%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="78.9845%" y="485" width="0.0207%" height="15" fill="rgb(223,131,1)" fg:x="7622" fg:w="2"/><text x="79.2345%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.34%)</title><rect x="78.9430%" y="501" width="0.3420%" height="15" fill="rgb(245,141,16)" fg:x="7618" fg:w="33"/><text x="79.1930%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (27 samples, 0.28%)</title><rect x="79.0052%" y="485" width="0.2798%" height="15" fill="rgb(229,55,45)" fg:x="7624" fg:w="27"/><text x="79.2552%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (71 samples, 0.74%)</title><rect x="79.2850%" y="501" width="0.7358%" height="15" fill="rgb(208,92,15)" fg:x="7651" fg:w="71"/><text x="79.5350%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (49 samples, 0.51%)</title><rect x="79.5130%" y="485" width="0.5078%" height="15" fill="rgb(234,185,47)" fg:x="7673" fg:w="49"/><text x="79.7630%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (49 samples, 0.51%)</title><rect x="79.5130%" y="469" width="0.5078%" height="15" fill="rgb(253,104,50)" fg:x="7673" fg:w="49"/><text x="79.7630%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="453" width="0.0518%" height="15" fill="rgb(205,70,7)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="437" width="0.0518%" height="15" fill="rgb(240,178,43)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="421" width="0.0518%" height="15" fill="rgb(214,112,2)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="405" width="0.0518%" height="15" fill="rgb(206,46,17)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="389" width="0.0518%" height="15" fill="rgb(225,220,16)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="373" width="0.0518%" height="15" fill="rgb(238,65,40)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="357" width="0.0518%" height="15" fill="rgb(230,151,21)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="341" width="0.0518%" height="15" fill="rgb(218,58,49)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="325" width="0.0518%" height="15" fill="rgb(219,179,14)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="309" width="0.0518%" height="15" fill="rgb(223,72,1)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="293" width="0.0518%" height="15" fill="rgb(238,126,10)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="277" width="0.0518%" height="15" fill="rgb(224,206,38)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="261" width="0.0518%" height="15" fill="rgb(212,201,54)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="79.9689%" y="245" width="0.0518%" height="15" fill="rgb(218,154,48)" fg:x="7717" fg:w="5"/><text x="80.2189%" y="255.50"></text></g><g><title>hashbrown::raw::h2 (94 samples, 0.97%)</title><rect x="80.0207%" y="501" width="0.9741%" height="15" fill="rgb(232,93,24)" fg:x="7722" fg:w="94"/><text x="80.2707%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="80.9948%" y="501" width="0.0104%" height="15" fill="rgb(245,30,21)" fg:x="7816" fg:w="1"/><text x="81.2448%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="80.9948%" y="485" width="0.0104%" height="15" fill="rgb(242,148,29)" fg:x="7816" fg:w="1"/><text x="81.2448%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="80.9948%" y="469" width="0.0104%" height="15" fill="rgb(244,153,54)" fg:x="7816" fg:w="1"/><text x="81.2448%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (35 samples, 0.36%)</title><rect x="81.0052%" y="501" width="0.3627%" height="15" fill="rgb(252,87,22)" fg:x="7817" fg:w="35"/><text x="81.2552%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (35 samples, 0.36%)</title><rect x="81.0052%" y="485" width="0.3627%" height="15" fill="rgb(210,51,29)" fg:x="7817" fg:w="35"/><text x="81.2552%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (304 samples, 3.15%)</title><rect x="78.5596%" y="517" width="3.1503%" height="15" fill="rgb(242,136,47)" fg:x="7581" fg:w="304"/><text x="78.8096%" y="527.50">has..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (33 samples, 0.34%)</title><rect x="81.3679%" y="501" width="0.3420%" height="15" fill="rgb(238,68,4)" fg:x="7852" fg:w="33"/><text x="81.6179%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (33 samples, 0.34%)</title><rect x="81.3679%" y="485" width="0.3420%" height="15" fill="rgb(242,161,30)" fg:x="7852" fg:w="33"/><text x="81.6179%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (33 samples, 0.34%)</title><rect x="81.3679%" y="469" width="0.3420%" height="15" fill="rgb(218,58,44)" fg:x="7852" fg:w="33"/><text x="81.6179%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1,177 samples, 12.20%)</title><rect x="69.7409%" y="549" width="12.1969%" height="15" fill="rgb(252,125,32)" fg:x="6730" fg:w="1177"/><text x="69.9909%" y="559.50">hashbrown::rustc_e..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (326 samples, 3.38%)</title><rect x="78.5596%" y="533" width="3.3782%" height="15" fill="rgb(219,178,0)" fg:x="7581" fg:w="326"/><text x="78.8096%" y="543.50">has..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (22 samples, 0.23%)</title><rect x="81.7098%" y="517" width="0.2280%" height="15" fill="rgb(213,152,7)" fg:x="7885" fg:w="22"/><text x="81.9598%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,195 samples, 12.38%)</title><rect x="69.7409%" y="565" width="12.3834%" height="15" fill="rgb(249,109,34)" fg:x="6730" fg:w="1195"/><text x="69.9909%" y="575.50">std::collections::..</text></g><g><title>std::collections::hash::map::map_entry (18 samples, 0.19%)</title><rect x="81.9378%" y="549" width="0.1865%" height="15" fill="rgb(232,96,21)" fg:x="7907" fg:w="18"/><text x="82.1878%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (9 samples, 0.09%)</title><rect x="82.1762%" y="501" width="0.0933%" height="15" fill="rgb(228,27,39)" fg:x="7930" fg:w="9"/><text x="82.4262%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (9 samples, 0.09%)</title><rect x="82.1762%" y="485" width="0.0933%" height="15" fill="rgb(211,182,52)" fg:x="7930" fg:w="9"/><text x="82.4262%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.07%)</title><rect x="82.2694%" y="485" width="0.0725%" height="15" fill="rgb(234,178,38)" fg:x="7939" fg:w="7"/><text x="82.5194%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (3 samples, 0.03%)</title><rect x="82.3420%" y="485" width="0.0311%" height="15" fill="rgb(221,111,3)" fg:x="7946" fg:w="3"/><text x="82.5920%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,600 samples, 16.58%)</title><rect x="65.8964%" y="613" width="16.5803%" height="15" fill="rgb(228,175,21)" fg:x="6359" fg:w="1600"/><text x="66.1464%" y="623.50">&lt;core::slice::iter::Iter&lt;T..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}}::{{closure}} (1,577 samples, 16.34%)</title><rect x="66.1347%" y="597" width="16.3420%" height="15" fill="rgb(228,174,43)" fg:x="6382" fg:w="1577"/><text x="66.3847%" y="607.50">paranagram::Paranagram::g..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::merge (1,517 samples, 15.72%)</title><rect x="66.7565%" y="581" width="15.7202%" height="15" fill="rgb(211,191,0)" fg:x="6442" fg:w="1517"/><text x="67.0065%" y="591.50">&lt;std::collections::hash:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (34 samples, 0.35%)</title><rect x="82.1244%" y="565" width="0.3523%" height="15" fill="rgb(253,117,3)" fg:x="7925" fg:w="34"/><text x="82.3744%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (34 samples, 0.35%)</title><rect x="82.1244%" y="549" width="0.3523%" height="15" fill="rgb(241,127,19)" fg:x="7925" fg:w="34"/><text x="82.3744%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (34 samples, 0.35%)</title><rect x="82.1244%" y="533" width="0.3523%" height="15" fill="rgb(218,103,12)" fg:x="7925" fg:w="34"/><text x="82.3744%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (29 samples, 0.30%)</title><rect x="82.1762%" y="517" width="0.3005%" height="15" fill="rgb(236,214,43)" fg:x="7930" fg:w="29"/><text x="82.4262%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (20 samples, 0.21%)</title><rect x="82.2694%" y="501" width="0.2073%" height="15" fill="rgb(244,144,19)" fg:x="7939" fg:w="20"/><text x="82.5194%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (10 samples, 0.10%)</title><rect x="82.3731%" y="485" width="0.1036%" height="15" fill="rgb(246,188,10)" fg:x="7949" fg:w="10"/><text x="82.6231%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.10%)</title><rect x="82.3731%" y="469" width="0.1036%" height="15" fill="rgb(212,193,33)" fg:x="7949" fg:w="10"/><text x="82.6231%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.4870%" y="549" width="0.0104%" height="15" fill="rgb(241,51,29)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="559.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.4870%" y="533" width="0.0104%" height="15" fill="rgb(211,58,19)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.4870%" y="517" width="0.0104%" height="15" fill="rgb(229,111,26)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="82.4870%" y="501" width="0.0104%" height="15" fill="rgb(213,115,40)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="82.4870%" y="485" width="0.0104%" height="15" fill="rgb(209,56,44)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="82.4870%" y="469" width="0.0104%" height="15" fill="rgb(230,108,32)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="82.4870%" y="453" width="0.0104%" height="15" fill="rgb(216,165,31)" fg:x="7960" fg:w="1"/><text x="82.7370%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="82.4974%" y="469" width="0.0207%" height="15" fill="rgb(218,122,21)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="82.4974%" y="453" width="0.0207%" height="15" fill="rgb(223,224,47)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="82.4974%" y="437" width="0.0207%" height="15" fill="rgb(238,102,44)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="82.4974%" y="421" width="0.0207%" height="15" fill="rgb(236,46,40)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="82.4974%" y="405" width="0.0207%" height="15" fill="rgb(247,202,50)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="82.4974%" y="389" width="0.0207%" height="15" fill="rgb(209,99,20)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="82.4974%" y="373" width="0.0207%" height="15" fill="rgb(252,27,34)" fg:x="7961" fg:w="2"/><text x="82.7474%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.08%)</title><rect x="82.4767%" y="613" width="0.0829%" height="15" fill="rgb(215,206,23)" fg:x="7959" fg:w="8"/><text x="82.7267%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.08%)</title><rect x="82.4767%" y="597" width="0.0829%" height="15" fill="rgb(212,135,36)" fg:x="7959" fg:w="8"/><text x="82.7267%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.07%)</title><rect x="82.4870%" y="581" width="0.0725%" height="15" fill="rgb(240,189,1)" fg:x="7960" fg:w="7"/><text x="82.7370%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.07%)</title><rect x="82.4870%" y="565" width="0.0725%" height="15" fill="rgb(242,56,20)" fg:x="7960" fg:w="7"/><text x="82.7370%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (6 samples, 0.06%)</title><rect x="82.4974%" y="549" width="0.0622%" height="15" fill="rgb(247,132,33)" fg:x="7961" fg:w="6"/><text x="82.7474%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (6 samples, 0.06%)</title><rect x="82.4974%" y="533" width="0.0622%" height="15" fill="rgb(208,149,11)" fg:x="7961" fg:w="6"/><text x="82.7474%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="82.4974%" y="517" width="0.0622%" height="15" fill="rgb(211,33,11)" fg:x="7961" fg:w="6"/><text x="82.7474%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.06%)</title><rect x="82.4974%" y="501" width="0.0622%" height="15" fill="rgb(221,29,38)" fg:x="7961" fg:w="6"/><text x="82.7474%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="82.4974%" y="485" width="0.0622%" height="15" fill="rgb(206,182,49)" fg:x="7961" fg:w="6"/><text x="82.7474%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="82.5181%" y="469" width="0.0415%" height="15" fill="rgb(216,140,1)" fg:x="7963" fg:w="4"/><text x="82.7681%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="82.5181%" y="453" width="0.0415%" height="15" fill="rgb(232,57,40)" fg:x="7963" fg:w="4"/><text x="82.7681%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.04%)</title><rect x="82.5181%" y="437" width="0.0415%" height="15" fill="rgb(224,186,18)" fg:x="7963" fg:w="4"/><text x="82.7681%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.5492%" y="421" width="0.0104%" height="15" fill="rgb(215,121,11)" fg:x="7966" fg:w="1"/><text x="82.7992%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="82.5492%" y="405" width="0.0104%" height="15" fill="rgb(245,147,10)" fg:x="7966" fg:w="1"/><text x="82.7992%" y="415.50"></text></g><g><title>_int_free (28 samples, 0.29%)</title><rect x="82.6321%" y="517" width="0.2902%" height="15" fill="rgb(238,153,13)" fg:x="7974" fg:w="28"/><text x="82.8821%" y="527.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="82.8912%" y="501" width="0.0311%" height="15" fill="rgb(233,108,0)" fg:x="7999" fg:w="3"/><text x="83.1412%" y="511.50"></text></g><g><title>__GI___libc_free (37 samples, 0.38%)</title><rect x="82.5596%" y="533" width="0.3834%" height="15" fill="rgb(212,157,17)" fg:x="7967" fg:w="37"/><text x="82.8096%" y="543.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="82.9223%" y="517" width="0.0207%" height="15" fill="rgb(225,213,38)" fg:x="8002" fg:w="2"/><text x="83.1723%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.40%)</title><rect x="82.5596%" y="565" width="0.4041%" height="15" fill="rgb(248,16,11)" fg:x="7967" fg:w="39"/><text x="82.8096%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.40%)</title><rect x="82.5596%" y="549" width="0.4041%" height="15" fill="rgb(241,33,4)" fg:x="7967" fg:w="39"/><text x="82.8096%" y="559.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="82.9430%" y="533" width="0.0207%" height="15" fill="rgb(222,26,43)" fg:x="8004" fg:w="2"/><text x="83.1930%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt;&gt; (40 samples, 0.41%)</title><rect x="82.5596%" y="613" width="0.4145%" height="15" fill="rgb(243,29,36)" fg:x="7967" fg:w="40"/><text x="82.8096%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;paranagram::word::Word&gt;&gt; (40 samples, 0.41%)</title><rect x="82.5596%" y="597" width="0.4145%" height="15" fill="rgb(241,9,27)" fg:x="7967" fg:w="40"/><text x="82.8096%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.41%)</title><rect x="82.5596%" y="581" width="0.4145%" height="15" fill="rgb(205,117,26)" fg:x="7967" fg:w="40"/><text x="82.8096%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="82.9637%" y="565" width="0.0104%" height="15" fill="rgb(209,80,39)" fg:x="8006" fg:w="1"/><text x="83.2137%" y="575.50"></text></g><g><title>_int_free (17 samples, 0.18%)</title><rect x="83.0466%" y="469" width="0.1762%" height="15" fill="rgb(239,155,6)" fg:x="8014" fg:w="17"/><text x="83.2966%" y="479.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="83.2124%" y="453" width="0.0104%" height="15" fill="rgb(212,104,12)" fg:x="8030" fg:w="1"/><text x="83.4624%" y="463.50"></text></g><g><title>__GI___libc_free (26 samples, 0.27%)</title><rect x="82.9845%" y="485" width="0.2694%" height="15" fill="rgb(234,204,3)" fg:x="8008" fg:w="26"/><text x="83.2345%" y="495.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="83.2228%" y="469" width="0.0311%" height="15" fill="rgb(251,218,7)" fg:x="8031" fg:w="3"/><text x="83.4728%" y="479.50"></text></g><g><title>arena_for_chunk (2 samples, 0.02%)</title><rect x="83.2332%" y="453" width="0.0207%" height="15" fill="rgb(221,81,32)" fg:x="8032" fg:w="2"/><text x="83.4832%" y="463.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="83.2539%" y="485" width="0.0104%" height="15" fill="rgb(214,152,26)" fg:x="8034" fg:w="1"/><text x="83.5039%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="83.2539%" y="469" width="0.0104%" height="15" fill="rgb(223,22,3)" fg:x="8034" fg:w="1"/><text x="83.5039%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;char,u16&gt;&gt; (30 samples, 0.31%)</title><rect x="82.9741%" y="613" width="0.3109%" height="15" fill="rgb(207,174,7)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,u16,std::collections::hash::map::RandomState&gt;&gt; (30 samples, 0.31%)</title><rect x="82.9741%" y="597" width="0.3109%" height="15" fill="rgb(224,19,52)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,u16)&gt;&gt; (30 samples, 0.31%)</title><rect x="82.9741%" y="581" width="0.3109%" height="15" fill="rgb(228,24,14)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.31%)</title><rect x="82.9741%" y="565" width="0.3109%" height="15" fill="rgb(230,153,43)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (30 samples, 0.31%)</title><rect x="82.9741%" y="549" width="0.3109%" height="15" fill="rgb(231,106,12)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (30 samples, 0.31%)</title><rect x="82.9741%" y="533" width="0.3109%" height="15" fill="rgb(215,92,2)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.31%)</title><rect x="82.9741%" y="517" width="0.3109%" height="15" fill="rgb(249,143,25)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.31%)</title><rect x="82.9741%" y="501" width="0.3109%" height="15" fill="rgb(252,7,35)" fg:x="8007" fg:w="30"/><text x="83.2241%" y="511.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="83.2642%" y="485" width="0.0207%" height="15" fill="rgb(216,69,40)" fg:x="8035" fg:w="2"/><text x="83.5142%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="83.2850%" y="501" width="0.0104%" height="15" fill="rgb(240,36,33)" fg:x="8037" fg:w="1"/><text x="83.5350%" y="511.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.03%)</title><rect x="83.2850%" y="517" width="0.0311%" height="15" fill="rgb(231,128,14)" fg:x="8037" fg:w="3"/><text x="83.5350%" y="527.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="83.2953%" y="501" width="0.0207%" height="15" fill="rgb(245,143,14)" fg:x="8038" fg:w="2"/><text x="83.5453%" y="511.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="83.2953%" y="485" width="0.0207%" height="15" fill="rgb(222,130,28)" fg:x="8038" fg:w="2"/><text x="83.5453%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="83.2953%" y="469" width="0.0207%" height="15" fill="rgb(212,10,48)" fg:x="8038" fg:w="2"/><text x="83.5453%" y="479.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (1,687 samples, 17.48%)</title><rect x="65.8446%" y="645" width="17.4819%" height="15" fill="rgb(254,118,45)" fg:x="6354" fg:w="1687"/><text x="66.0946%" y="655.50">core::iter::adapters::filte..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (1,683 samples, 17.44%)</title><rect x="65.8860%" y="629" width="17.4404%" height="15" fill="rgb(228,6,45)" fg:x="6358" fg:w="1683"/><text x="66.1360%" y="639.50">paranagram::Paranagram::gen..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (4 samples, 0.04%)</title><rect x="83.2850%" y="613" width="0.0415%" height="15" fill="rgb(241,18,35)" fg:x="8037" fg:w="4"/><text x="83.5350%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (4 samples, 0.04%)</title><rect x="83.2850%" y="597" width="0.0415%" height="15" fill="rgb(227,214,53)" fg:x="8037" fg:w="4"/><text x="83.5350%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (4 samples, 0.04%)</title><rect x="83.2850%" y="581" width="0.0415%" height="15" fill="rgb(224,107,51)" fg:x="8037" fg:w="4"/><text x="83.5350%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new (4 samples, 0.04%)</title><rect x="83.2850%" y="565" width="0.0415%" height="15" fill="rgb(248,60,28)" fg:x="8037" fg:w="4"/><text x="83.5350%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.04%)</title><rect x="83.2850%" y="549" width="0.0415%" height="15" fill="rgb(249,101,23)" fg:x="8037" fg:w="4"/><text x="83.5350%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.04%)</title><rect x="83.2850%" y="533" width="0.0415%" height="15" fill="rgb(228,51,19)" fg:x="8037" fg:w="4"/><text x="83.5350%" y="543.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (1 samples, 0.01%)</title><rect x="83.3161%" y="517" width="0.0104%" height="15" fill="rgb(213,20,6)" fg:x="8040" fg:w="1"/><text x="83.5661%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="83.3161%" y="501" width="0.0104%" height="15" fill="rgb(212,124,10)" fg:x="8040" fg:w="1"/><text x="83.5661%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="83.3161%" y="485" width="0.0104%" height="15" fill="rgb(248,3,40)" fg:x="8040" fg:w="1"/><text x="83.5661%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="83.3161%" y="469" width="0.0104%" height="15" fill="rgb(223,178,23)" fg:x="8040" fg:w="1"/><text x="83.5661%" y="479.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="83.3161%" y="453" width="0.0104%" height="15" fill="rgb(240,132,45)" fg:x="8040" fg:w="1"/><text x="83.5661%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="83.3264%" y="613" width="0.0104%" height="15" fill="rgb(245,164,36)" fg:x="8041" fg:w="1"/><text x="83.5764%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="83.8446%" y="437" width="0.0207%" height="15" fill="rgb(231,188,53)" fg:x="8091" fg:w="2"/><text x="84.0946%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.02%)</title><rect x="83.8446%" y="421" width="0.0207%" height="15" fill="rgb(237,198,39)" fg:x="8091" fg:w="2"/><text x="84.0946%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="83.8446%" y="405" width="0.0207%" height="15" fill="rgb(223,120,35)" fg:x="8091" fg:w="2"/><text x="84.0946%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="437" width="0.0104%" height="15" fill="rgb(253,107,49)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="421" width="0.0104%" height="15" fill="rgb(216,44,31)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="405" width="0.0104%" height="15" fill="rgb(253,87,21)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="389" width="0.0104%" height="15" fill="rgb(226,18,2)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="373" width="0.0104%" height="15" fill="rgb(216,8,46)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="357" width="0.0104%" height="15" fill="rgb(226,140,39)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="341" width="0.0104%" height="15" fill="rgb(221,194,54)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="325" width="0.0104%" height="15" fill="rgb(213,92,11)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="309" width="0.0104%" height="15" fill="rgb(229,162,46)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="293" width="0.0104%" height="15" fill="rgb(214,111,36)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.8653%" y="277" width="0.0104%" height="15" fill="rgb(207,6,21)" fg:x="8093" fg:w="1"/><text x="84.1153%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::utils::FromTupleIndex&gt;::from_tuple_index::{{closure}} (8 samples, 0.08%)</title><rect x="83.8342%" y="453" width="0.0829%" height="15" fill="rgb(213,127,38)" fg:x="8090" fg:w="8"/><text x="84.0842%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.04%)</title><rect x="83.8756%" y="437" width="0.0415%" height="15" fill="rgb(238,118,32)" fg:x="8094" fg:w="4"/><text x="84.1256%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.04%)</title><rect x="83.8756%" y="421" width="0.0415%" height="15" fill="rgb(240,139,39)" fg:x="8094" fg:w="4"/><text x="84.1256%" y="431.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (2 samples, 0.02%)</title><rect x="83.9171%" y="421" width="0.0207%" height="15" fill="rgb(235,10,37)" fg:x="8098" fg:w="2"/><text x="84.1671%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (52 samples, 0.54%)</title><rect x="83.4093%" y="549" width="0.5389%" height="15" fill="rgb(249,171,38)" fg:x="8049" fg:w="52"/><text x="83.6593%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (52 samples, 0.54%)</title><rect x="83.4093%" y="533" width="0.5389%" height="15" fill="rgb(242,144,32)" fg:x="8049" fg:w="52"/><text x="83.6593%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (52 samples, 0.54%)</title><rect x="83.4093%" y="517" width="0.5389%" height="15" fill="rgb(217,117,21)" fg:x="8049" fg:w="52"/><text x="83.6593%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52 samples, 0.54%)</title><rect x="83.4093%" y="501" width="0.5389%" height="15" fill="rgb(249,87,1)" fg:x="8049" fg:w="52"/><text x="83.6593%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52 samples, 0.54%)</title><rect x="83.4093%" y="485" width="0.5389%" height="15" fill="rgb(248,196,48)" fg:x="8049" fg:w="52"/><text x="83.6593%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.11%)</title><rect x="83.8342%" y="469" width="0.1140%" height="15" fill="rgb(251,206,33)" fg:x="8090" fg:w="11"/><text x="84.0842%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.03%)</title><rect x="83.9171%" y="453" width="0.0311%" height="15" fill="rgb(232,141,28)" fg:x="8098" fg:w="3"/><text x="84.1671%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (3 samples, 0.03%)</title><rect x="83.9171%" y="437" width="0.0311%" height="15" fill="rgb(209,167,14)" fg:x="8098" fg:w="3"/><text x="84.1671%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="83.9378%" y="421" width="0.0104%" height="15" fill="rgb(225,11,50)" fg:x="8100" fg:w="1"/><text x="84.1878%" y="431.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="84.0104%" y="421" width="0.0311%" height="15" fill="rgb(209,50,20)" fg:x="8107" fg:w="3"/><text x="84.2604%" y="431.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.13%)</title><rect x="83.9793%" y="437" width="0.1347%" height="15" fill="rgb(212,17,46)" fg:x="8104" fg:w="13"/><text x="84.2293%" y="447.50"></text></g><g><title>tcache_get (7 samples, 0.07%)</title><rect x="84.0415%" y="421" width="0.0725%" height="15" fill="rgb(216,101,39)" fg:x="8110" fg:w="7"/><text x="84.2915%" y="431.50"></text></g><g><title>__rdl_alloc (5 samples, 0.05%)</title><rect x="84.1140%" y="437" width="0.0518%" height="15" fill="rgb(212,228,48)" fg:x="8117" fg:w="5"/><text x="84.3640%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.05%)</title><rect x="84.1140%" y="421" width="0.0518%" height="15" fill="rgb(250,6,50)" fg:x="8117" fg:w="5"/><text x="84.3640%" y="431.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="84.1658%" y="437" width="0.0104%" height="15" fill="rgb(250,160,48)" fg:x="8122" fg:w="1"/><text x="84.4158%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.22%)</title><rect x="83.9689%" y="485" width="0.2176%" height="15" fill="rgb(244,216,33)" fg:x="8103" fg:w="21"/><text x="84.2189%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.22%)</title><rect x="83.9689%" y="469" width="0.2176%" height="15" fill="rgb(207,157,5)" fg:x="8103" fg:w="21"/><text x="84.2189%" y="479.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.22%)</title><rect x="83.9689%" y="453" width="0.2176%" height="15" fill="rgb(228,199,8)" fg:x="8103" fg:w="21"/><text x="84.2189%" y="463.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="84.1762%" y="437" width="0.0104%" height="15" fill="rgb(227,80,20)" fg:x="8123" fg:w="1"/><text x="84.4262%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (84 samples, 0.87%)</title><rect x="83.3368%" y="613" width="0.8705%" height="15" fill="rgb(222,9,33)" fg:x="8042" fg:w="84"/><text x="83.5868%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (84 samples, 0.87%)</title><rect x="83.3368%" y="597" width="0.8705%" height="15" fill="rgb(239,44,28)" fg:x="8042" fg:w="84"/><text x="83.5868%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (82 samples, 0.85%)</title><rect x="83.3575%" y="581" width="0.8497%" height="15" fill="rgb(249,187,43)" fg:x="8044" fg:w="82"/><text x="83.6075%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (79 samples, 0.82%)</title><rect x="83.3886%" y="565" width="0.8187%" height="15" fill="rgb(216,141,28)" fg:x="8047" fg:w="79"/><text x="83.6386%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 0.26%)</title><rect x="83.9482%" y="549" width="0.2591%" height="15" fill="rgb(230,154,53)" fg:x="8101" fg:w="25"/><text x="84.1982%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.26%)</title><rect x="83.9482%" y="533" width="0.2591%" height="15" fill="rgb(227,82,4)" fg:x="8101" fg:w="25"/><text x="84.1982%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.26%)</title><rect x="83.9482%" y="517" width="0.2591%" height="15" fill="rgb(220,107,16)" fg:x="8101" fg:w="25"/><text x="84.1982%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.26%)</title><rect x="83.9482%" y="501" width="0.2591%" height="15" fill="rgb(207,187,2)" fg:x="8101" fg:w="25"/><text x="84.1982%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="84.1865%" y="485" width="0.0207%" height="15" fill="rgb(210,162,52)" fg:x="8124" fg:w="2"/><text x="84.4365%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="84.1865%" y="469" width="0.0207%" height="15" fill="rgb(217,216,49)" fg:x="8124" fg:w="2"/><text x="84.4365%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="84.2073%" y="613" width="0.0104%" height="15" fill="rgb(218,146,49)" fg:x="8126" fg:w="1"/><text x="84.4573%" y="623.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.01%)</title><rect x="84.2073%" y="597" width="0.0104%" height="15" fill="rgb(216,55,40)" fg:x="8126" fg:w="1"/><text x="84.4573%" y="607.50"></text></g><g><title>malloc_consolidate (219 samples, 2.27%)</title><rect x="84.6736%" y="501" width="2.2694%" height="15" fill="rgb(208,196,21)" fg:x="8171" fg:w="219"/><text x="84.9236%" y="511.50">m..</text></g><g><title>unlink_chunk (60 samples, 0.62%)</title><rect x="86.3212%" y="485" width="0.6218%" height="15" fill="rgb(242,117,42)" fg:x="8330" fg:w="60"/><text x="86.5712%" y="495.50"></text></g><g><title>_int_free (265 samples, 2.75%)</title><rect x="84.2280%" y="517" width="2.7461%" height="15" fill="rgb(210,11,23)" fg:x="8128" fg:w="265"/><text x="84.4780%" y="527.50">_i..</text></g><g><title>unlink_chunk (3 samples, 0.03%)</title><rect x="86.9430%" y="501" width="0.0311%" height="15" fill="rgb(217,110,2)" fg:x="8390" fg:w="3"/><text x="87.1930%" y="511.50"></text></g><g><title>__GI___libc_free (269 samples, 2.79%)</title><rect x="84.2176%" y="533" width="2.7876%" height="15" fill="rgb(229,77,54)" fg:x="8127" fg:w="269"/><text x="84.4676%" y="543.50">__..</text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="86.9741%" y="517" width="0.0311%" height="15" fill="rgb(218,53,16)" fg:x="8393" fg:w="3"/><text x="87.2241%" y="527.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="86.9741%" y="501" width="0.0311%" height="15" fill="rgb(215,38,13)" fg:x="8393" fg:w="3"/><text x="87.2241%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (271 samples, 2.81%)</title><rect x="84.2176%" y="565" width="2.8083%" height="15" fill="rgb(235,42,18)" fg:x="8127" fg:w="271"/><text x="84.4676%" y="575.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (271 samples, 2.81%)</title><rect x="84.2176%" y="549" width="2.8083%" height="15" fill="rgb(219,66,54)" fg:x="8127" fg:w="271"/><text x="84.4676%" y="559.50">al..</text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="87.0052%" y="533" width="0.0207%" height="15" fill="rgb(222,205,4)" fg:x="8396" fg:w="2"/><text x="87.2552%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="87.0052%" y="517" width="0.0207%" height="15" fill="rgb(227,213,46)" fg:x="8396" fg:w="2"/><text x="87.2552%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,053 samples, 21.27%)</title><rect x="65.7617%" y="773" width="21.2746%" height="15" fill="rgb(250,145,42)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="783.50">core::iter::traits::iterator::Iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,053 samples, 21.27%)</title><rect x="65.7617%" y="757" width="21.2746%" height="15" fill="rgb(219,15,2)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter:..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2,053 samples, 21.27%)</title><rect x="65.7617%" y="741" width="21.2746%" height="15" fill="rgb(231,181,52)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="751.50">alloc::vec::in_place_collect::&lt;imp..</text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2,053 samples, 21.27%)</title><rect x="65.7617%" y="725" width="21.2746%" height="15" fill="rgb(235,1,42)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="735.50">&lt;I as alloc::vec::in_place_collect..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,053 samples, 21.27%)</title><rect x="65.7617%" y="709" width="21.2746%" height="15" fill="rgb(249,88,27)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="719.50">&lt;core::iter::adapters::filter_map:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,053 samples, 21.27%)</title><rect x="65.7617%" y="693" width="21.2746%" height="15" fill="rgb(235,145,16)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="703.50">&lt;core::iter::adapters::map::Map&lt;I,..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,053 samples, 21.27%)</title><rect x="65.7617%" y="677" width="21.2746%" height="15" fill="rgb(237,114,19)" fg:x="6346" fg:w="2053"/><text x="66.0117%" y="687.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,052 samples, 21.26%)</title><rect x="65.7720%" y="661" width="21.2642%" height="15" fill="rgb(238,51,50)" fg:x="6347" fg:w="2052"/><text x="66.0220%" y="671.50">core::iter::adapters::map::map_try..</text></g><g><title>paranagram::Paranagram::generate_anagrams::{{closure}} (358 samples, 3.71%)</title><rect x="83.3264%" y="645" width="3.7098%" height="15" fill="rgb(205,194,25)" fg:x="8041" fg:w="358"/><text x="83.5764%" y="655.50">para..</text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;paranagram::word::Word&gt; as paranagram::utils::FromTupleIndex&gt;::from_tuple_index (358 samples, 3.71%)</title><rect x="83.3264%" y="629" width="3.7098%" height="15" fill="rgb(215,203,17)" fg:x="8041" fg:w="358"/><text x="83.5764%" y="639.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (272 samples, 2.82%)</title><rect x="84.2176%" y="613" width="2.8187%" height="15" fill="rgb(233,112,49)" fg:x="8127" fg:w="272"/><text x="84.4676%" y="623.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (272 samples, 2.82%)</title><rect x="84.2176%" y="597" width="2.8187%" height="15" fill="rgb(241,130,26)" fg:x="8127" fg:w="272"/><text x="84.4676%" y="607.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (272 samples, 2.82%)</title><rect x="84.2176%" y="581" width="2.8187%" height="15" fill="rgb(252,223,19)" fg:x="8127" fg:w="272"/><text x="84.4676%" y="591.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="87.0259%" y="565" width="0.0104%" height="15" fill="rgb(211,95,25)" fg:x="8398" fg:w="1"/><text x="87.2759%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="87.0259%" y="549" width="0.0104%" height="15" fill="rgb(251,182,27)" fg:x="8398" fg:w="1"/><text x="87.2759%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.0363%" y="565" width="0.0104%" height="15" fill="rgb(238,24,4)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="575.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.0363%" y="549" width="0.0104%" height="15" fill="rgb(224,220,25)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.0363%" y="533" width="0.0104%" height="15" fill="rgb(239,133,26)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="87.0363%" y="517" width="0.0104%" height="15" fill="rgb(211,94,48)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="87.0363%" y="501" width="0.0104%" height="15" fill="rgb(239,87,6)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="87.0363%" y="485" width="0.0104%" height="15" fill="rgb(227,62,0)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="87.0363%" y="469" width="0.0104%" height="15" fill="rgb(211,226,4)" fg:x="8399" fg:w="1"/><text x="87.2863%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="87.0466%" y="517" width="0.0311%" height="15" fill="rgb(253,38,52)" fg:x="8400" fg:w="3"/><text x="87.2966%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="87.0466%" y="501" width="0.0311%" height="15" fill="rgb(229,126,40)" fg:x="8400" fg:w="3"/><text x="87.2966%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="87.0466%" y="485" width="0.0311%" height="15" fill="rgb(229,165,44)" fg:x="8400" fg:w="3"/><text x="87.2966%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="87.0466%" y="469" width="0.0311%" height="15" fill="rgb(247,95,47)" fg:x="8400" fg:w="3"/><text x="87.2966%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="87.0466%" y="453" width="0.0311%" height="15" fill="rgb(216,140,30)" fg:x="8400" fg:w="3"/><text x="87.2966%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="87.0674%" y="437" width="0.0104%" height="15" fill="rgb(246,214,8)" fg:x="8402" fg:w="1"/><text x="87.3174%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.04%)</title><rect x="87.0466%" y="565" width="0.0415%" height="15" fill="rgb(227,224,15)" fg:x="8400" fg:w="4"/><text x="87.2966%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.04%)</title><rect x="87.0466%" y="549" width="0.0415%" height="15" fill="rgb(233,175,4)" fg:x="8400" fg:w="4"/><text x="87.2966%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="87.0466%" y="533" width="0.0415%" height="15" fill="rgb(221,66,45)" fg:x="8400" fg:w="4"/><text x="87.2966%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="87.0777%" y="517" width="0.0104%" height="15" fill="rgb(221,178,18)" fg:x="8403" fg:w="1"/><text x="87.3277%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="87.0777%" y="501" width="0.0104%" height="15" fill="rgb(213,81,29)" fg:x="8403" fg:w="1"/><text x="87.3277%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="87.0777%" y="485" width="0.0104%" height="15" fill="rgb(220,89,49)" fg:x="8403" fg:w="1"/><text x="87.3277%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="87.0777%" y="469" width="0.0104%" height="15" fill="rgb(227,60,33)" fg:x="8403" fg:w="1"/><text x="87.3277%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="87.0881%" y="517" width="0.0311%" height="15" fill="rgb(205,113,12)" fg:x="8404" fg:w="3"/><text x="87.3381%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="87.0881%" y="501" width="0.0311%" height="15" fill="rgb(211,32,1)" fg:x="8404" fg:w="3"/><text x="87.3381%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="87.0881%" y="485" width="0.0311%" height="15" fill="rgb(246,2,12)" fg:x="8404" fg:w="3"/><text x="87.3381%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="87.0881%" y="469" width="0.0311%" height="15" fill="rgb(243,37,27)" fg:x="8404" fg:w="3"/><text x="87.3381%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="87.0881%" y="453" width="0.0311%" height="15" fill="rgb(248,211,31)" fg:x="8404" fg:w="3"/><text x="87.3381%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="87.0881%" y="437" width="0.0311%" height="15" fill="rgb(242,146,47)" fg:x="8404" fg:w="3"/><text x="87.3381%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="87.1088%" y="421" width="0.0104%" height="15" fill="rgb(206,70,20)" fg:x="8406" fg:w="1"/><text x="87.3588%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="87.0881%" y="565" width="0.0415%" height="15" fill="rgb(215,10,51)" fg:x="8404" fg:w="4"/><text x="87.3381%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="87.0881%" y="549" width="0.0415%" height="15" fill="rgb(243,178,53)" fg:x="8404" fg:w="4"/><text x="87.3381%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="87.0881%" y="533" width="0.0415%" height="15" fill="rgb(233,221,20)" fg:x="8404" fg:w="4"/><text x="87.3381%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="87.1192%" y="517" width="0.0104%" height="15" fill="rgb(218,95,35)" fg:x="8407" fg:w="1"/><text x="87.3692%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="87.1192%" y="501" width="0.0104%" height="15" fill="rgb(229,13,5)" fg:x="8407" fg:w="1"/><text x="87.3692%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="87.1192%" y="485" width="0.0104%" height="15" fill="rgb(252,164,30)" fg:x="8407" fg:w="1"/><text x="87.3692%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="87.1192%" y="469" width="0.0104%" height="15" fill="rgb(232,68,36)" fg:x="8407" fg:w="1"/><text x="87.3692%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="87.1192%" y="453" width="0.0104%" height="15" fill="rgb(219,59,54)" fg:x="8407" fg:w="1"/><text x="87.3692%" y="463.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams (15 samples, 0.16%)</title><rect x="87.0363%" y="773" width="0.1554%" height="15" fill="rgb(250,92,33)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.16%)</title><rect x="87.0363%" y="757" width="0.1554%" height="15" fill="rgb(229,162,54)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.16%)</title><rect x="87.0363%" y="741" width="0.1554%" height="15" fill="rgb(244,114,52)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.16%)</title><rect x="87.0363%" y="725" width="0.1554%" height="15" fill="rgb(212,211,43)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.16%)</title><rect x="87.0363%" y="709" width="0.1554%" height="15" fill="rgb(226,147,8)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.16%)</title><rect x="87.0363%" y="693" width="0.1554%" height="15" fill="rgb(226,23,13)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.16%)</title><rect x="87.0363%" y="677" width="0.1554%" height="15" fill="rgb(240,63,4)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.16%)</title><rect x="87.0363%" y="661" width="0.1554%" height="15" fill="rgb(221,1,32)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (15 samples, 0.16%)</title><rect x="87.0363%" y="645" width="0.1554%" height="15" fill="rgb(242,117,10)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.16%)</title><rect x="87.0363%" y="629" width="0.1554%" height="15" fill="rgb(249,172,44)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="639.50"></text></g><g><title>paranagram::Paranagram::existing_anagrams::{{closure}} (15 samples, 0.16%)</title><rect x="87.0363%" y="613" width="0.1554%" height="15" fill="rgb(244,46,45)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="623.50"></text></g><g><title>paranagram::word::Word::contains (15 samples, 0.16%)</title><rect x="87.0363%" y="597" width="0.1554%" height="15" fill="rgb(206,43,17)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;char,u16&gt; as paranagram::utils::HashMapUtils&lt;char,u16&gt;&gt;::contains (15 samples, 0.16%)</title><rect x="87.0363%" y="581" width="0.1554%" height="15" fill="rgb(239,218,39)" fg:x="8399" fg:w="15"/><text x="87.2863%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (6 samples, 0.06%)</title><rect x="87.1295%" y="565" width="0.0622%" height="15" fill="rgb(208,169,54)" fg:x="8408" fg:w="6"/><text x="87.3795%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (6 samples, 0.06%)</title><rect x="87.1295%" y="549" width="0.0622%" height="15" fill="rgb(247,25,42)" fg:x="8408" fg:w="6"/><text x="87.3795%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (6 samples, 0.06%)</title><rect x="87.1295%" y="533" width="0.0622%" height="15" fill="rgb(226,23,31)" fg:x="8408" fg:w="6"/><text x="87.3795%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (6 samples, 0.06%)</title><rect x="87.1295%" y="517" width="0.0622%" height="15" fill="rgb(247,16,28)" fg:x="8408" fg:w="6"/><text x="87.3795%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (6 samples, 0.06%)</title><rect x="87.1295%" y="501" width="0.0622%" height="15" fill="rgb(231,147,38)" fg:x="8408" fg:w="6"/><text x="87.3795%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (6 samples, 0.06%)</title><rect x="87.1295%" y="485" width="0.0622%" height="15" fill="rgb(253,81,48)" fg:x="8408" fg:w="6"/><text x="87.3795%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="87.1917%" y="661" width="0.0415%" height="15" fill="rgb(249,222,43)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="87.1917%" y="645" width="0.0415%" height="15" fill="rgb(221,3,27)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="87.1917%" y="629" width="0.0415%" height="15" fill="rgb(228,180,5)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="87.1917%" y="613" width="0.0415%" height="15" fill="rgb(227,131,42)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="87.1917%" y="597" width="0.0415%" height="15" fill="rgb(212,3,39)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="87.1917%" y="581" width="0.0415%" height="15" fill="rgb(226,45,5)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="591.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="87.1917%" y="565" width="0.0415%" height="15" fill="rgb(215,167,45)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="575.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="87.1917%" y="549" width="0.0415%" height="15" fill="rgb(250,218,53)" fg:x="8414" fg:w="4"/><text x="87.4417%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="87.2228%" y="533" width="0.0104%" height="15" fill="rgb(207,140,0)" fg:x="8417" fg:w="1"/><text x="87.4728%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="87.1917%" y="757" width="0.0518%" height="15" fill="rgb(238,133,51)" fg:x="8414" fg:w="5"/><text x="87.4417%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="87.1917%" y="741" width="0.0518%" height="15" fill="rgb(218,203,53)" fg:x="8414" fg:w="5"/><text x="87.4417%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="87.1917%" y="725" width="0.0518%" height="15" fill="rgb(226,184,25)" fg:x="8414" fg:w="5"/><text x="87.4417%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.05%)</title><rect x="87.1917%" y="709" width="0.0518%" height="15" fill="rgb(231,121,21)" fg:x="8414" fg:w="5"/><text x="87.4417%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.05%)</title><rect x="87.1917%" y="693" width="0.0518%" height="15" fill="rgb(251,14,34)" fg:x="8414" fg:w="5"/><text x="87.4417%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.05%)</title><rect x="87.1917%" y="677" width="0.0518%" height="15" fill="rgb(249,193,11)" fg:x="8414" fg:w="5"/><text x="87.4417%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="87.2332%" y="661" width="0.0104%" height="15" fill="rgb(220,172,37)" fg:x="8418" fg:w="1"/><text x="87.4832%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="87.2332%" y="645" width="0.0104%" height="15" fill="rgb(231,229,43)" fg:x="8418" fg:w="1"/><text x="87.4832%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.01%)</title><rect x="87.2332%" y="629" width="0.0104%" height="15" fill="rgb(250,161,5)" fg:x="8418" fg:w="1"/><text x="87.4832%" y="639.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="87.2435%" y="693" width="0.0415%" height="15" fill="rgb(218,225,18)" fg:x="8419" fg:w="4"/><text x="87.4935%" y="703.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="87.2746%" y="677" width="0.0104%" height="15" fill="rgb(245,45,42)" fg:x="8422" fg:w="1"/><text x="87.5246%" y="687.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="87.2850%" y="693" width="0.0104%" height="15" fill="rgb(211,115,1)" fg:x="8423" fg:w="1"/><text x="87.5350%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.07%)</title><rect x="87.2435%" y="757" width="0.0725%" height="15" fill="rgb(248,133,52)" fg:x="8419" fg:w="7"/><text x="87.4935%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.07%)</title><rect x="87.2435%" y="741" width="0.0725%" height="15" fill="rgb(238,100,21)" fg:x="8419" fg:w="7"/><text x="87.4935%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.07%)</title><rect x="87.2435%" y="725" width="0.0725%" height="15" fill="rgb(247,144,11)" fg:x="8419" fg:w="7"/><text x="87.4935%" y="735.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.07%)</title><rect x="87.2435%" y="709" width="0.0725%" height="15" fill="rgb(206,164,16)" fg:x="8419" fg:w="7"/><text x="87.4935%" y="719.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.02%)</title><rect x="87.2953%" y="693" width="0.0207%" height="15" fill="rgb(222,34,3)" fg:x="8424" fg:w="2"/><text x="87.5453%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="87.3161%" y="725" width="0.0207%" height="15" fill="rgb(248,82,4)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="87.3161%" y="709" width="0.0207%" height="15" fill="rgb(228,81,46)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="87.3161%" y="693" width="0.0207%" height="15" fill="rgb(227,67,47)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="87.3161%" y="677" width="0.0207%" height="15" fill="rgb(215,93,53)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="87.3161%" y="661" width="0.0207%" height="15" fill="rgb(248,194,39)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="87.3161%" y="645" width="0.0207%" height="15" fill="rgb(215,5,19)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="87.3161%" y="629" width="0.0207%" height="15" fill="rgb(226,215,51)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="639.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="87.3161%" y="613" width="0.0207%" height="15" fill="rgb(225,56,26)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="623.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="87.3161%" y="597" width="0.0207%" height="15" fill="rgb(222,75,29)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="607.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="87.3161%" y="581" width="0.0207%" height="15" fill="rgb(236,139,6)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="591.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.02%)</title><rect x="87.3161%" y="565" width="0.0207%" height="15" fill="rgb(223,137,36)" fg:x="8426" fg:w="2"/><text x="87.5661%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="549" width="0.0104%" height="15" fill="rgb(226,99,2)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="533" width="0.0104%" height="15" fill="rgb(206,133,23)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="517" width="0.0104%" height="15" fill="rgb(243,173,15)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="501" width="0.0104%" height="15" fill="rgb(228,69,28)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="485" width="0.0104%" height="15" fill="rgb(212,51,22)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="469" width="0.0104%" height="15" fill="rgb(227,113,0)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="453" width="0.0104%" height="15" fill="rgb(252,84,27)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="437" width="0.0104%" height="15" fill="rgb(223,145,39)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.3264%" y="421" width="0.0104%" height="15" fill="rgb(239,219,30)" fg:x="8427" fg:w="1"/><text x="87.5764%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (29 samples, 0.30%)</title><rect x="87.3161%" y="757" width="0.3005%" height="15" fill="rgb(224,196,39)" fg:x="8426" fg:w="29"/><text x="87.5661%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.30%)</title><rect x="87.3161%" y="741" width="0.3005%" height="15" fill="rgb(205,35,43)" fg:x="8426" fg:w="29"/><text x="87.5661%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.28%)</title><rect x="87.3368%" y="725" width="0.2798%" height="15" fill="rgb(228,201,21)" fg:x="8428" fg:w="27"/><text x="87.5868%" y="735.50"></text></g><g><title>__memcpy_evex_unaligned_erms (27 samples, 0.28%)</title><rect x="87.3368%" y="709" width="0.2798%" height="15" fill="rgb(237,118,16)" fg:x="8428" fg:w="27"/><text x="87.5868%" y="719.50"></text></g><g><title>[unknown] (22 samples, 0.23%)</title><rect x="87.3886%" y="693" width="0.2280%" height="15" fill="rgb(241,17,19)" fg:x="8433" fg:w="22"/><text x="87.6386%" y="703.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="87.4093%" y="677" width="0.2073%" height="15" fill="rgb(214,10,25)" fg:x="8435" fg:w="20"/><text x="87.6593%" y="687.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="87.4093%" y="661" width="0.2073%" height="15" fill="rgb(238,37,29)" fg:x="8435" fg:w="20"/><text x="87.6593%" y="671.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="87.4093%" y="645" width="0.2073%" height="15" fill="rgb(253,83,25)" fg:x="8435" fg:w="20"/><text x="87.6593%" y="655.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="87.4301%" y="629" width="0.1865%" height="15" fill="rgb(234,192,12)" fg:x="8437" fg:w="18"/><text x="87.6801%" y="639.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="87.4404%" y="613" width="0.1762%" height="15" fill="rgb(241,216,45)" fg:x="8438" fg:w="17"/><text x="87.6904%" y="623.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="87.4404%" y="597" width="0.1762%" height="15" fill="rgb(242,22,33)" fg:x="8438" fg:w="17"/><text x="87.6904%" y="607.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="87.4611%" y="581" width="0.1554%" height="15" fill="rgb(231,105,49)" fg:x="8440" fg:w="15"/><text x="87.7111%" y="591.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="87.4611%" y="565" width="0.1554%" height="15" fill="rgb(218,204,15)" fg:x="8440" fg:w="15"/><text x="87.7111%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="87.5337%" y="549" width="0.0829%" height="15" fill="rgb(235,138,41)" fg:x="8447" fg:w="8"/><text x="87.7837%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="87.5440%" y="533" width="0.0725%" height="15" fill="rgb(246,0,9)" fg:x="8448" fg:w="7"/><text x="87.7940%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="87.5440%" y="517" width="0.0725%" height="15" fill="rgb(210,74,4)" fg:x="8448" fg:w="7"/><text x="87.7940%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.6166%" y="757" width="0.0207%" height="15" fill="rgb(250,60,41)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.6166%" y="741" width="0.0207%" height="15" fill="rgb(220,115,12)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.6166%" y="725" width="0.0207%" height="15" fill="rgb(237,100,13)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="87.6166%" y="709" width="0.0207%" height="15" fill="rgb(213,55,26)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="87.6166%" y="693" width="0.0207%" height="15" fill="rgb(216,17,4)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="87.6166%" y="677" width="0.0207%" height="15" fill="rgb(220,153,47)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.6166%" y="661" width="0.0207%" height="15" fill="rgb(215,131,9)" fg:x="8455" fg:w="2"/><text x="87.8666%" y="671.50"></text></g><g><title>&lt;std::sync::mpmc::select::Token as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="87.6373%" y="709" width="0.0207%" height="15" fill="rgb(233,46,42)" fg:x="8457" fg:w="2"/><text x="87.8873%" y="719.50"></text></g><g><title>&lt;std::sync::mpmc::zero::ZeroToken as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="87.6373%" y="693" width="0.0207%" height="15" fill="rgb(226,86,7)" fg:x="8457" fg:w="2"/><text x="87.8873%" y="703.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3 samples, 0.03%)</title><rect x="87.6373%" y="757" width="0.0311%" height="15" fill="rgb(239,226,21)" fg:x="8457" fg:w="3"/><text x="87.8873%" y="767.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (3 samples, 0.03%)</title><rect x="87.6373%" y="741" width="0.0311%" height="15" fill="rgb(244,137,22)" fg:x="8457" fg:w="3"/><text x="87.8873%" y="751.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (3 samples, 0.03%)</title><rect x="87.6373%" y="725" width="0.0311%" height="15" fill="rgb(211,139,35)" fg:x="8457" fg:w="3"/><text x="87.8873%" y="735.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (1 samples, 0.01%)</title><rect x="87.6580%" y="709" width="0.0104%" height="15" fill="rgb(214,62,50)" fg:x="8459" fg:w="1"/><text x="87.9080%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="87.6580%" y="693" width="0.0104%" height="15" fill="rgb(212,113,44)" fg:x="8459" fg:w="1"/><text x="87.9080%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="87.6580%" y="677" width="0.0104%" height="15" fill="rgb(226,150,43)" fg:x="8459" fg:w="1"/><text x="87.9080%" y="687.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (6 samples, 0.06%)</title><rect x="87.6684%" y="757" width="0.0622%" height="15" fill="rgb(250,71,37)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="767.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (6 samples, 0.06%)</title><rect x="87.6684%" y="741" width="0.0622%" height="15" fill="rgb(219,76,19)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::join (6 samples, 0.06%)</title><rect x="87.6684%" y="725" width="0.0622%" height="15" fill="rgb(250,39,11)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="735.50"></text></g><g><title>__pthread_clockjoin_ex (6 samples, 0.06%)</title><rect x="87.6684%" y="709" width="0.0622%" height="15" fill="rgb(230,64,31)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="719.50"></text></g><g><title>__GI___nptl_deallocate_stack (6 samples, 0.06%)</title><rect x="87.6684%" y="693" width="0.0622%" height="15" fill="rgb(208,222,23)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="703.50"></text></g><g><title>queue_stack (6 samples, 0.06%)</title><rect x="87.6684%" y="677" width="0.0622%" height="15" fill="rgb(227,125,18)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="687.50"></text></g><g><title>__nptl_free_stacks (6 samples, 0.06%)</title><rect x="87.6684%" y="661" width="0.0622%" height="15" fill="rgb(234,210,9)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="671.50"></text></g><g><title>__GI___munmap (6 samples, 0.06%)</title><rect x="87.6684%" y="645" width="0.0622%" height="15" fill="rgb(217,127,24)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="629" width="0.0622%" height="15" fill="rgb(239,141,48)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="613" width="0.0622%" height="15" fill="rgb(227,109,8)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="597" width="0.0622%" height="15" fill="rgb(235,184,23)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="581" width="0.0622%" height="15" fill="rgb(227,226,48)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="565" width="0.0622%" height="15" fill="rgb(206,150,11)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="549" width="0.0622%" height="15" fill="rgb(254,2,33)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="533" width="0.0622%" height="15" fill="rgb(243,160,20)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="517" width="0.0622%" height="15" fill="rgb(218,208,30)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="87.6684%" y="501" width="0.0622%" height="15" fill="rgb(224,120,49)" fg:x="8460" fg:w="6"/><text x="87.9184%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="87.6788%" y="485" width="0.0518%" height="15" fill="rgb(246,12,2)" fg:x="8461" fg:w="5"/><text x="87.9288%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="87.6995%" y="469" width="0.0311%" height="15" fill="rgb(236,117,3)" fg:x="8463" fg:w="3"/><text x="87.9495%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="87.7098%" y="453" width="0.0207%" height="15" fill="rgb(216,128,52)" fg:x="8464" fg:w="2"/><text x="87.9598%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="87.7202%" y="437" width="0.0104%" height="15" fill="rgb(246,145,19)" fg:x="8465" fg:w="1"/><text x="87.9702%" y="447.50"></text></g><g><title>[unknown] (948 samples, 9.82%)</title><rect x="87.8135%" y="693" width="9.8238%" height="15" fill="rgb(222,11,46)" fg:x="8474" fg:w="948"/><text x="88.0635%" y="703.50">[unknown]</text></g><g><title>[unknown] (945 samples, 9.79%)</title><rect x="87.8446%" y="677" width="9.7927%" height="15" fill="rgb(245,82,36)" fg:x="8477" fg:w="945"/><text x="88.0946%" y="687.50">[unknown]</text></g><g><title>[unknown] (944 samples, 9.78%)</title><rect x="87.8549%" y="661" width="9.7824%" height="15" fill="rgb(250,73,51)" fg:x="8478" fg:w="944"/><text x="88.1049%" y="671.50">[unknown]</text></g><g><title>[unknown] (939 samples, 9.73%)</title><rect x="87.9067%" y="645" width="9.7306%" height="15" fill="rgb(221,189,23)" fg:x="8483" fg:w="939"/><text x="88.1567%" y="655.50">[unknown]</text></g><g><title>[unknown] (933 samples, 9.67%)</title><rect x="87.9689%" y="629" width="9.6684%" height="15" fill="rgb(210,33,7)" fg:x="8489" fg:w="933"/><text x="88.2189%" y="639.50">[unknown]</text></g><g><title>[unknown] (923 samples, 9.56%)</title><rect x="88.0725%" y="613" width="9.5648%" height="15" fill="rgb(210,107,22)" fg:x="8499" fg:w="923"/><text x="88.3225%" y="623.50">[unknown]</text></g><g><title>[unknown] (914 samples, 9.47%)</title><rect x="88.1658%" y="597" width="9.4715%" height="15" fill="rgb(222,116,37)" fg:x="8508" fg:w="914"/><text x="88.4158%" y="607.50">[unknown]</text></g><g><title>[unknown] (911 samples, 9.44%)</title><rect x="88.1969%" y="581" width="9.4404%" height="15" fill="rgb(254,17,48)" fg:x="8511" fg:w="911"/><text x="88.4469%" y="591.50">[unknown]</text></g><g><title>[unknown] (906 samples, 9.39%)</title><rect x="88.2487%" y="565" width="9.3886%" height="15" fill="rgb(224,36,32)" fg:x="8516" fg:w="906"/><text x="88.4987%" y="575.50">[unknown]</text></g><g><title>[unknown] (899 samples, 9.32%)</title><rect x="88.3212%" y="549" width="9.3161%" height="15" fill="rgb(232,90,46)" fg:x="8523" fg:w="899"/><text x="88.5712%" y="559.50">[unknown]</text></g><g><title>[unknown] (884 samples, 9.16%)</title><rect x="88.4767%" y="533" width="9.1606%" height="15" fill="rgb(241,66,40)" fg:x="8538" fg:w="884"/><text x="88.7267%" y="543.50">[unknown]</text></g><g><title>[unknown] (875 samples, 9.07%)</title><rect x="88.5699%" y="517" width="9.0674%" height="15" fill="rgb(249,184,29)" fg:x="8547" fg:w="875"/><text x="88.8199%" y="527.50">[unknown]</text></g><g><title>[unknown] (870 samples, 9.02%)</title><rect x="88.6218%" y="501" width="9.0155%" height="15" fill="rgb(231,181,1)" fg:x="8552" fg:w="870"/><text x="88.8718%" y="511.50">[unknown]</text></g><g><title>[unknown] (861 samples, 8.92%)</title><rect x="88.7150%" y="485" width="8.9223%" height="15" fill="rgb(224,94,2)" fg:x="8561" fg:w="861"/><text x="88.9650%" y="495.50">[unknown]</text></g><g><title>[unknown] (14 samples, 0.15%)</title><rect x="97.4922%" y="469" width="0.1451%" height="15" fill="rgb(229,170,15)" fg:x="9408" fg:w="14"/><text x="97.7422%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="453" width="0.0622%" height="15" fill="rgb(240,127,35)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="437" width="0.0622%" height="15" fill="rgb(248,196,34)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="421" width="0.0622%" height="15" fill="rgb(236,137,7)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="405" width="0.0622%" height="15" fill="rgb(235,127,16)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="389" width="0.0622%" height="15" fill="rgb(250,192,54)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="373" width="0.0622%" height="15" fill="rgb(218,98,20)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="357" width="0.0622%" height="15" fill="rgb(230,176,47)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="341" width="0.0622%" height="15" fill="rgb(244,2,33)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="325" width="0.0622%" height="15" fill="rgb(231,100,17)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.5751%" y="309" width="0.0622%" height="15" fill="rgb(245,23,12)" fg:x="9416" fg:w="6"/><text x="97.8251%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.5855%" y="293" width="0.0518%" height="15" fill="rgb(249,55,22)" fg:x="9417" fg:w="5"/><text x="97.8355%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.5855%" y="277" width="0.0518%" height="15" fill="rgb(207,134,9)" fg:x="9417" fg:w="5"/><text x="97.8355%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="97.6062%" y="261" width="0.0311%" height="15" fill="rgb(218,134,0)" fg:x="9419" fg:w="3"/><text x="97.8562%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.6166%" y="245" width="0.0207%" height="15" fill="rgb(213,212,33)" fg:x="9420" fg:w="2"/><text x="97.8666%" y="255.50"></text></g><g><title>__GI___pthread_disable_asynccancel (4 samples, 0.04%)</title><rect x="97.6373%" y="693" width="0.0415%" height="15" fill="rgb(252,106,18)" fg:x="9422" fg:w="4"/><text x="97.8873%" y="703.50"></text></g><g><title>std::thread::sleep (961 samples, 9.96%)</title><rect x="87.7306%" y="757" width="9.9585%" height="15" fill="rgb(208,126,42)" fg:x="8466" fg:w="961"/><text x="87.9806%" y="767.50">std::thread::s..</text></g><g><title>std::sys::unix::thread::Thread::sleep (961 samples, 9.96%)</title><rect x="87.7306%" y="741" width="9.9585%" height="15" fill="rgb(246,175,29)" fg:x="8466" fg:w="961"/><text x="87.9806%" y="751.50">std::sys::unix..</text></g><g><title>__GI___nanosleep (958 samples, 9.93%)</title><rect x="87.7617%" y="725" width="9.9275%" height="15" fill="rgb(215,13,50)" fg:x="8469" fg:w="958"/><text x="88.0117%" y="735.50">__GI___nanosle..</text></g><g><title>__GI___clock_nanosleep (955 samples, 9.90%)</title><rect x="87.7927%" y="709" width="9.8964%" height="15" fill="rgb(216,172,15)" fg:x="8472" fg:w="955"/><text x="88.0427%" y="719.50">__GI___clock_n..</text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="97.6788%" y="693" width="0.0104%" height="15" fill="rgb(212,103,13)" fg:x="9426" fg:w="1"/><text x="97.9288%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="97.6891%" y="693" width="0.0415%" height="15" fill="rgb(231,171,36)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="97.6891%" y="677" width="0.0415%" height="15" fill="rgb(250,123,20)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.04%)</title><rect x="97.6891%" y="661" width="0.0415%" height="15" fill="rgb(212,53,50)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="97.6891%" y="645" width="0.0415%" height="15" fill="rgb(243,54,12)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="97.6891%" y="629" width="0.0415%" height="15" fill="rgb(234,101,34)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="97.6891%" y="613" width="0.0415%" height="15" fill="rgb(254,67,22)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="623.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="97.6891%" y="597" width="0.0415%" height="15" fill="rgb(250,35,47)" fg:x="9427" fg:w="4"/><text x="97.9391%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="97.7098%" y="581" width="0.0207%" height="15" fill="rgb(226,126,38)" fg:x="9429" fg:w="2"/><text x="97.9598%" y="591.50"></text></g><g><title>__GI___pthread_attr_init (1 samples, 0.01%)</title><rect x="97.7306%" y="677" width="0.0104%" height="15" fill="rgb(216,138,53)" fg:x="9431" fg:w="1"/><text x="97.9806%" y="687.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.01%)</title><rect x="97.7306%" y="661" width="0.0104%" height="15" fill="rgb(246,199,43)" fg:x="9431" fg:w="1"/><text x="97.9806%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="645" width="0.0622%" height="15" fill="rgb(232,125,11)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="629" width="0.0622%" height="15" fill="rgb(218,219,45)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="613" width="0.0622%" height="15" fill="rgb(216,102,54)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="597" width="0.0622%" height="15" fill="rgb(250,228,7)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="581" width="0.0622%" height="15" fill="rgb(226,125,25)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="565" width="0.0622%" height="15" fill="rgb(224,165,27)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="549" width="0.0622%" height="15" fill="rgb(233,86,3)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="533" width="0.0622%" height="15" fill="rgb(228,116,20)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="517" width="0.0622%" height="15" fill="rgb(209,192,17)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="501" width="0.0622%" height="15" fill="rgb(224,88,34)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="97.7513%" y="485" width="0.0622%" height="15" fill="rgb(233,38,6)" fg:x="9433" fg:w="6"/><text x="98.0013%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.7617%" y="469" width="0.0518%" height="15" fill="rgb(212,59,30)" fg:x="9434" fg:w="5"/><text x="98.0117%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.7617%" y="453" width="0.0518%" height="15" fill="rgb(213,80,3)" fg:x="9434" fg:w="5"/><text x="98.0117%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.7617%" y="437" width="0.0518%" height="15" fill="rgb(251,178,7)" fg:x="9434" fg:w="5"/><text x="98.0117%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="97.7617%" y="421" width="0.0518%" height="15" fill="rgb(213,154,26)" fg:x="9434" fg:w="5"/><text x="98.0117%" y="431.50"></text></g><g><title>__GI___mmap64 (24 samples, 0.25%)</title><rect x="97.8135%" y="645" width="0.2487%" height="15" fill="rgb(238,165,49)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="655.50"></text></g><g><title>__GI___mmap64 (24 samples, 0.25%)</title><rect x="97.8135%" y="629" width="0.2487%" height="15" fill="rgb(248,91,46)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="639.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="97.8135%" y="613" width="0.2487%" height="15" fill="rgb(244,21,52)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="623.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="97.8135%" y="597" width="0.2487%" height="15" fill="rgb(247,122,20)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="607.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="97.8135%" y="581" width="0.2487%" height="15" fill="rgb(218,27,9)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="591.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="97.8135%" y="565" width="0.2487%" height="15" fill="rgb(246,7,6)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="575.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="97.8135%" y="549" width="0.2487%" height="15" fill="rgb(227,135,54)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="559.50"></text></g><g><title>[unknown] (24 samples, 0.25%)</title><rect x="97.8135%" y="533" width="0.2487%" height="15" fill="rgb(247,14,11)" fg:x="9439" fg:w="24"/><text x="98.0635%" y="543.50"></text></g><g><title>[unknown] (20 samples, 0.21%)</title><rect x="97.8549%" y="517" width="0.2073%" height="15" fill="rgb(206,149,34)" fg:x="9443" fg:w="20"/><text x="98.1049%" y="527.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="97.8653%" y="501" width="0.1969%" height="15" fill="rgb(227,228,4)" fg:x="9444" fg:w="19"/><text x="98.1153%" y="511.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="97.8964%" y="485" width="0.1658%" height="15" fill="rgb(238,218,28)" fg:x="9447" fg:w="16"/><text x="98.1464%" y="495.50"></text></g><g><title>[unknown] (13 samples, 0.13%)</title><rect x="97.9275%" y="469" width="0.1347%" height="15" fill="rgb(252,86,40)" fg:x="9450" fg:w="13"/><text x="98.1775%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.12%)</title><rect x="97.9378%" y="453" width="0.1244%" height="15" fill="rgb(251,225,11)" fg:x="9451" fg:w="12"/><text x="98.1878%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.08%)</title><rect x="97.9793%" y="437" width="0.0829%" height="15" fill="rgb(206,46,49)" fg:x="9455" fg:w="8"/><text x="98.2293%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="97.9896%" y="421" width="0.0725%" height="15" fill="rgb(245,128,24)" fg:x="9456" fg:w="7"/><text x="98.2396%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="97.9896%" y="405" width="0.0725%" height="15" fill="rgb(219,177,34)" fg:x="9456" fg:w="7"/><text x="98.2396%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.0000%" y="389" width="0.0622%" height="15" fill="rgb(218,60,48)" fg:x="9457" fg:w="6"/><text x="98.2500%" y="399.50"></text></g><g><title>__pthread_create_2_1 (36 samples, 0.37%)</title><rect x="97.7409%" y="677" width="0.3731%" height="15" fill="rgb(221,11,5)" fg:x="9432" fg:w="36"/><text x="97.9909%" y="687.50"></text></g><g><title>allocate_stack (35 samples, 0.36%)</title><rect x="97.7513%" y="661" width="0.3627%" height="15" fill="rgb(220,148,13)" fg:x="9433" fg:w="35"/><text x="98.0013%" y="671.50"></text></g><g><title>setup_stack_prot (5 samples, 0.05%)</title><rect x="98.0622%" y="645" width="0.0518%" height="15" fill="rgb(210,16,3)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="655.50"></text></g><g><title>__GI___mprotect (5 samples, 0.05%)</title><rect x="98.0622%" y="629" width="0.0518%" height="15" fill="rgb(236,80,2)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="613" width="0.0518%" height="15" fill="rgb(239,129,19)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="597" width="0.0518%" height="15" fill="rgb(220,106,35)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="581" width="0.0518%" height="15" fill="rgb(252,139,45)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="565" width="0.0518%" height="15" fill="rgb(229,8,36)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="549" width="0.0518%" height="15" fill="rgb(230,126,33)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="533" width="0.0518%" height="15" fill="rgb(239,140,21)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="98.0622%" y="517" width="0.0518%" height="15" fill="rgb(254,104,9)" fg:x="9463" fg:w="5"/><text x="98.3122%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="98.0725%" y="501" width="0.0415%" height="15" fill="rgb(239,52,14)" fg:x="9464" fg:w="4"/><text x="98.3225%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="98.0829%" y="485" width="0.0311%" height="15" fill="rgb(208,227,44)" fg:x="9465" fg:w="3"/><text x="98.3329%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="98.0829%" y="469" width="0.0311%" height="15" fill="rgb(246,18,19)" fg:x="9465" fg:w="3"/><text x="98.3329%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="98.0829%" y="453" width="0.0311%" height="15" fill="rgb(235,228,25)" fg:x="9465" fg:w="3"/><text x="98.3329%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.0933%" y="437" width="0.0207%" height="15" fill="rgb(240,156,20)" fg:x="9466" fg:w="2"/><text x="98.3433%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.0933%" y="421" width="0.0207%" height="15" fill="rgb(224,8,20)" fg:x="9466" fg:w="2"/><text x="98.3433%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.0933%" y="405" width="0.0207%" height="15" fill="rgb(214,12,52)" fg:x="9466" fg:w="2"/><text x="98.3433%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.0933%" y="389" width="0.0207%" height="15" fill="rgb(211,220,47)" fg:x="9466" fg:w="2"/><text x="98.3433%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.1036%" y="373" width="0.0104%" height="15" fill="rgb(250,173,5)" fg:x="9467" fg:w="1"/><text x="98.3536%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.1036%" y="357" width="0.0104%" height="15" fill="rgb(250,125,52)" fg:x="9467" fg:w="1"/><text x="98.3536%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="98.1140%" y="677" width="0.0104%" height="15" fill="rgb(209,133,18)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="98.1140%" y="661" width="0.0104%" height="15" fill="rgb(216,173,22)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="98.1140%" y="645" width="0.0104%" height="15" fill="rgb(205,3,22)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="98.1140%" y="629" width="0.0104%" height="15" fill="rgb(248,22,20)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="98.1140%" y="613" width="0.0104%" height="15" fill="rgb(233,6,29)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="98.1140%" y="597" width="0.0104%" height="15" fill="rgb(240,22,54)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="98.1140%" y="581" width="0.0104%" height="15" fill="rgb(231,133,32)" fg:x="9468" fg:w="1"/><text x="98.3640%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new (39 samples, 0.40%)</title><rect x="97.7306%" y="693" width="0.4041%" height="15" fill="rgb(248,193,4)" fg:x="9431" fg:w="39"/><text x="97.9806%" y="703.50"></text></g><g><title>std::sys::unix::thread::min_stack_size (1 samples, 0.01%)</title><rect x="98.1244%" y="677" width="0.0104%" height="15" fill="rgb(211,178,46)" fg:x="9469" fg:w="1"/><text x="98.3744%" y="687.50"></text></g><g><title>__GI___pthread_get_minstack (1 samples, 0.01%)</title><rect x="98.1244%" y="661" width="0.0104%" height="15" fill="rgb(224,5,42)" fg:x="9469" fg:w="1"/><text x="98.3744%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::{{closure}} (2 samples, 0.02%)</title><rect x="98.1347%" y="645" width="0.0207%" height="15" fill="rgb(239,176,25)" fg:x="9470" fg:w="2"/><text x="98.3847%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="98.1347%" y="629" width="0.0207%" height="15" fill="rgb(245,187,50)" fg:x="9470" fg:w="2"/><text x="98.3847%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="98.1347%" y="613" width="0.0207%" height="15" fill="rgb(248,24,15)" fg:x="9470" fg:w="2"/><text x="98.3847%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="98.1347%" y="597" width="0.0207%" height="15" fill="rgb(205,166,13)" fg:x="9470" fg:w="2"/><text x="98.3847%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="98.1347%" y="581" width="0.0207%" height="15" fill="rgb(208,114,23)" fg:x="9470" fg:w="2"/><text x="98.3847%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="98.1347%" y="565" width="0.0207%" height="15" fill="rgb(239,127,18)" fg:x="9470" fg:w="2"/><text x="98.3847%" y="575.50"></text></g><g><title>paranagram::Paranagram::generate_anagrams (3,127 samples, 32.40%)</title><rect x="65.7617%" y="789" width="32.4041%" height="15" fill="rgb(219,154,28)" fg:x="6346" fg:w="3127"/><text x="66.0117%" y="799.50">paranagram::Paranagram::generate_anagrams</text></g><g><title>paranagram::utils::find_sum (1,059 samples, 10.97%)</title><rect x="87.1917%" y="773" width="10.9741%" height="15" fill="rgb(225,157,23)" fg:x="8414" fg:w="1059"/><text x="87.4417%" y="783.50">paranagram::util..</text></g><g><title>std::thread::spawn (46 samples, 0.48%)</title><rect x="97.6891%" y="757" width="0.4767%" height="15" fill="rgb(219,8,6)" fg:x="9427" fg:w="46"/><text x="97.9391%" y="767.50"></text></g><g><title>std::thread::Builder::spawn (46 samples, 0.48%)</title><rect x="97.6891%" y="741" width="0.4767%" height="15" fill="rgb(212,47,6)" fg:x="9427" fg:w="46"/><text x="97.9391%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (46 samples, 0.48%)</title><rect x="97.6891%" y="725" width="0.4767%" height="15" fill="rgb(224,190,4)" fg:x="9427" fg:w="46"/><text x="97.9391%" y="735.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (46 samples, 0.48%)</title><rect x="97.6891%" y="709" width="0.4767%" height="15" fill="rgb(239,183,29)" fg:x="9427" fg:w="46"/><text x="97.9391%" y="719.50"></text></g><g><title>std::thread::Thread::new (3 samples, 0.03%)</title><rect x="98.1347%" y="693" width="0.0311%" height="15" fill="rgb(213,57,7)" fg:x="9470" fg:w="3"/><text x="98.3847%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (3 samples, 0.03%)</title><rect x="98.1347%" y="677" width="0.0311%" height="15" fill="rgb(216,148,1)" fg:x="9470" fg:w="3"/><text x="98.3847%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (3 samples, 0.03%)</title><rect x="98.1347%" y="661" width="0.0311%" height="15" fill="rgb(236,182,29)" fg:x="9470" fg:w="3"/><text x="98.3847%" y="671.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (1 samples, 0.01%)</title><rect x="98.1554%" y="645" width="0.0104%" height="15" fill="rgb(244,120,48)" fg:x="9472" fg:w="1"/><text x="98.4054%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (1 samples, 0.01%)</title><rect x="98.1554%" y="629" width="0.0104%" height="15" fill="rgb(206,71,34)" fg:x="9472" fg:w="1"/><text x="98.4054%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::padding_needed_for (1 samples, 0.01%)</title><rect x="98.1554%" y="613" width="0.0104%" height="15" fill="rgb(242,32,6)" fg:x="9472" fg:w="1"/><text x="98.4054%" y="623.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="98.1865%" y="629" width="0.0622%" height="15" fill="rgb(241,35,3)" fg:x="9475" fg:w="6"/><text x="98.4365%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="98.1865%" y="613" width="0.0622%" height="15" fill="rgb(222,62,19)" fg:x="9475" fg:w="6"/><text x="98.4365%" y="623.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="98.1865%" y="597" width="0.0622%" height="15" fill="rgb(223,110,41)" fg:x="9475" fg:w="6"/><text x="98.4365%" y="607.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (6 samples, 0.06%)</title><rect x="98.1865%" y="581" width="0.0622%" height="15" fill="rgb(208,224,4)" fg:x="9475" fg:w="6"/><text x="98.4365%" y="591.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.06%)</title><rect x="98.1865%" y="565" width="0.0622%" height="15" fill="rgb(241,137,19)" fg:x="9475" fg:w="6"/><text x="98.4365%" y="575.50"></text></g><g><title>core::slice::memchr::memchr (5 samples, 0.05%)</title><rect x="98.1969%" y="549" width="0.0518%" height="15" fill="rgb(244,24,17)" fg:x="9476" fg:w="5"/><text x="98.4469%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4 samples, 0.04%)</title><rect x="98.2073%" y="533" width="0.0415%" height="15" fill="rgb(245,178,49)" fg:x="9477" fg:w="4"/><text x="98.4573%" y="543.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.02%)</title><rect x="98.2280%" y="517" width="0.0207%" height="15" fill="rgb(219,160,38)" fg:x="9479" fg:w="2"/><text x="98.4780%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.02%)</title><rect x="98.2694%" y="581" width="0.0207%" height="15" fill="rgb(228,137,14)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.02%)</title><rect x="98.2694%" y="565" width="0.0207%" height="15" fill="rgb(237,134,11)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="98.2694%" y="549" width="0.0207%" height="15" fill="rgb(211,126,44)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="98.2694%" y="533" width="0.0207%" height="15" fill="rgb(226,171,33)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="98.2694%" y="517" width="0.0207%" height="15" fill="rgb(253,99,13)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="98.2694%" y="501" width="0.0207%" height="15" fill="rgb(244,48,7)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="98.2694%" y="485" width="0.0207%" height="15" fill="rgb(244,217,54)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="98.2694%" y="469" width="0.0207%" height="15" fill="rgb(224,15,18)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="98.2694%" y="453" width="0.0207%" height="15" fill="rgb(244,99,12)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="98.2694%" y="437" width="0.0207%" height="15" fill="rgb(233,226,8)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="98.2694%" y="421" width="0.0207%" height="15" fill="rgb(229,211,3)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="98.2694%" y="405" width="0.0207%" height="15" fill="rgb(216,140,21)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="98.2694%" y="389" width="0.0207%" height="15" fill="rgb(234,122,30)" fg:x="9483" fg:w="2"/><text x="98.5194%" y="399.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="98.2798%" y="373" width="0.0104%" height="15" fill="rgb(236,25,46)" fg:x="9484" fg:w="1"/><text x="98.5298%" y="383.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="98.2902%" y="485" width="0.0311%" height="15" fill="rgb(217,52,54)" fg:x="9485" fg:w="3"/><text x="98.5402%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="98.3005%" y="469" width="0.0207%" height="15" fill="rgb(222,29,26)" fg:x="9486" fg:w="2"/><text x="98.5505%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.04%)</title><rect x="98.2902%" y="581" width="0.0415%" height="15" fill="rgb(216,177,29)" fg:x="9485" fg:w="4"/><text x="98.5402%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.04%)</title><rect x="98.2902%" y="565" width="0.0415%" height="15" fill="rgb(247,136,51)" fg:x="9485" fg:w="4"/><text x="98.5402%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.04%)</title><rect x="98.2902%" y="549" width="0.0415%" height="15" fill="rgb(231,47,47)" fg:x="9485" fg:w="4"/><text x="98.5402%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="98.2902%" y="533" width="0.0415%" height="15" fill="rgb(211,192,36)" fg:x="9485" fg:w="4"/><text x="98.5402%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="98.2902%" y="517" width="0.0415%" height="15" fill="rgb(229,156,32)" fg:x="9485" fg:w="4"/><text x="98.5402%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="98.2902%" y="501" width="0.0415%" height="15" fill="rgb(248,213,20)" fg:x="9485" fg:w="4"/><text x="98.5402%" y="511.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="98.3212%" y="485" width="0.0104%" height="15" fill="rgb(217,64,7)" fg:x="9488" fg:w="1"/><text x="98.5712%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="98.3212%" y="469" width="0.0104%" height="15" fill="rgb(232,142,8)" fg:x="9488" fg:w="1"/><text x="98.5712%" y="479.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (1 samples, 0.01%)</title><rect x="98.3523%" y="533" width="0.0104%" height="15" fill="rgb(224,92,44)" fg:x="9491" fg:w="1"/><text x="98.6023%" y="543.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="98.3627%" y="517" width="0.0104%" height="15" fill="rgb(214,169,17)" fg:x="9492" fg:w="1"/><text x="98.6127%" y="527.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.01%)</title><rect x="98.3627%" y="501" width="0.0104%" height="15" fill="rgb(210,59,37)" fg:x="9492" fg:w="1"/><text x="98.6127%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="98.3627%" y="485" width="0.0104%" height="15" fill="rgb(214,116,48)" fg:x="9492" fg:w="1"/><text x="98.6127%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.01%)</title><rect x="98.4145%" y="373" width="0.0104%" height="15" fill="rgb(244,191,6)" fg:x="9497" fg:w="1"/><text x="98.6645%" y="383.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.01%)</title><rect x="98.4145%" y="357" width="0.0104%" height="15" fill="rgb(241,50,52)" fg:x="9497" fg:w="1"/><text x="98.6645%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (3 samples, 0.03%)</title><rect x="98.4145%" y="389" width="0.0311%" height="15" fill="rgb(236,75,39)" fg:x="9497" fg:w="3"/><text x="98.6645%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.02%)</title><rect x="98.4249%" y="373" width="0.0207%" height="15" fill="rgb(236,99,0)" fg:x="9498" fg:w="2"/><text x="98.6749%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.02%)</title><rect x="98.4249%" y="357" width="0.0207%" height="15" fill="rgb(207,202,15)" fg:x="9498" fg:w="2"/><text x="98.6749%" y="367.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (6 samples, 0.06%)</title><rect x="98.3938%" y="485" width="0.0622%" height="15" fill="rgb(233,207,14)" fg:x="9495" fg:w="6"/><text x="98.6438%" y="495.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (6 samples, 0.06%)</title><rect x="98.3938%" y="469" width="0.0622%" height="15" fill="rgb(226,27,51)" fg:x="9495" fg:w="6"/><text x="98.6438%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.06%)</title><rect x="98.3938%" y="453" width="0.0622%" height="15" fill="rgb(206,104,42)" fg:x="9495" fg:w="6"/><text x="98.6438%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (6 samples, 0.06%)</title><rect x="98.3938%" y="437" width="0.0622%" height="15" fill="rgb(212,225,4)" fg:x="9495" fg:w="6"/><text x="98.6438%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.05%)</title><rect x="98.4041%" y="421" width="0.0518%" height="15" fill="rgb(233,96,42)" fg:x="9496" fg:w="5"/><text x="98.6541%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.05%)</title><rect x="98.4041%" y="405" width="0.0518%" height="15" fill="rgb(229,21,32)" fg:x="9496" fg:w="5"/><text x="98.6541%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="98.4456%" y="389" width="0.0104%" height="15" fill="rgb(226,216,24)" fg:x="9500" fg:w="1"/><text x="98.6956%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="98.4456%" y="373" width="0.0104%" height="15" fill="rgb(221,163,17)" fg:x="9500" fg:w="1"/><text x="98.6956%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="98.4456%" y="357" width="0.0104%" height="15" fill="rgb(216,216,42)" fg:x="9500" fg:w="1"/><text x="98.6956%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="98.4974%" y="389" width="0.0104%" height="15" fill="rgb(240,118,7)" fg:x="9505" fg:w="1"/><text x="98.7474%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="98.5181%" y="373" width="0.0207%" height="15" fill="rgb(221,67,37)" fg:x="9507" fg:w="2"/><text x="98.7681%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="98.5389%" y="373" width="0.0104%" height="15" fill="rgb(241,32,44)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="383.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.5389%" y="357" width="0.0104%" height="15" fill="rgb(235,204,43)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.01%)</title><rect x="98.5389%" y="341" width="0.0104%" height="15" fill="rgb(213,116,10)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="98.5389%" y="325" width="0.0104%" height="15" fill="rgb(239,15,48)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="98.5389%" y="309" width="0.0104%" height="15" fill="rgb(207,123,36)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="98.5389%" y="293" width="0.0104%" height="15" fill="rgb(209,103,30)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="98.5389%" y="277" width="0.0104%" height="15" fill="rgb(238,100,19)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="287.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="98.5389%" y="261" width="0.0104%" height="15" fill="rgb(244,30,14)" fg:x="9509" fg:w="1"/><text x="98.7889%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="98.5596%" y="261" width="0.0104%" height="15" fill="rgb(249,174,6)" fg:x="9511" fg:w="1"/><text x="98.8096%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="98.5803%" y="245" width="0.0415%" height="15" fill="rgb(235,213,41)" fg:x="9513" fg:w="4"/><text x="98.8303%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (11 samples, 0.11%)</title><rect x="98.5492%" y="373" width="0.1140%" height="15" fill="rgb(213,118,6)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (11 samples, 0.11%)</title><rect x="98.5492%" y="357" width="0.1140%" height="15" fill="rgb(235,44,51)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.11%)</title><rect x="98.5492%" y="341" width="0.1140%" height="15" fill="rgb(217,9,53)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.11%)</title><rect x="98.5492%" y="325" width="0.1140%" height="15" fill="rgb(237,172,34)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.11%)</title><rect x="98.5492%" y="309" width="0.1140%" height="15" fill="rgb(206,206,11)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.11%)</title><rect x="98.5492%" y="293" width="0.1140%" height="15" fill="rgb(214,149,29)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.11%)</title><rect x="98.5492%" y="277" width="0.1140%" height="15" fill="rgb(208,123,3)" fg:x="9510" fg:w="11"/><text x="98.7992%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.09%)</title><rect x="98.5699%" y="261" width="0.0933%" height="15" fill="rgb(229,126,4)" fg:x="9512" fg:w="9"/><text x="98.8199%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="98.6218%" y="245" width="0.0415%" height="15" fill="rgb(222,92,36)" fg:x="9517" fg:w="4"/><text x="98.8718%" y="255.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="98.6943%" y="325" width="0.0311%" height="15" fill="rgb(216,39,41)" fg:x="9524" fg:w="3"/><text x="98.9443%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (7 samples, 0.07%)</title><rect x="98.6632%" y="341" width="0.0725%" height="15" fill="rgb(253,127,28)" fg:x="9521" fg:w="7"/><text x="98.9132%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="98.7254%" y="325" width="0.0104%" height="15" fill="rgb(249,152,51)" fg:x="9527" fg:w="1"/><text x="98.9754%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="98.7254%" y="309" width="0.0104%" height="15" fill="rgb(209,123,42)" fg:x="9527" fg:w="1"/><text x="98.9754%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (8 samples, 0.08%)</title><rect x="98.6632%" y="373" width="0.0829%" height="15" fill="rgb(241,118,22)" fg:x="9521" fg:w="8"/><text x="98.9132%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.08%)</title><rect x="98.6632%" y="357" width="0.0829%" height="15" fill="rgb(208,25,7)" fg:x="9521" fg:w="8"/><text x="98.9132%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (1 samples, 0.01%)</title><rect x="98.7358%" y="341" width="0.0104%" height="15" fill="rgb(243,144,39)" fg:x="9528" fg:w="1"/><text x="98.9858%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.02%)</title><rect x="98.7461%" y="341" width="0.0207%" height="15" fill="rgb(250,50,5)" fg:x="9529" fg:w="2"/><text x="98.9961%" y="351.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.02%)</title><rect x="98.7461%" y="325" width="0.0207%" height="15" fill="rgb(207,67,11)" fg:x="9529" fg:w="2"/><text x="98.9961%" y="335.50"></text></g><g><title>__memset_evex_unaligned_erms (2 samples, 0.02%)</title><rect x="98.7461%" y="309" width="0.0207%" height="15" fill="rgb(245,204,40)" fg:x="9529" fg:w="2"/><text x="98.9961%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (38 samples, 0.39%)</title><rect x="98.4870%" y="453" width="0.3938%" height="15" fill="rgb(238,228,24)" fg:x="9504" fg:w="38"/><text x="98.7370%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (38 samples, 0.39%)</title><rect x="98.4870%" y="437" width="0.3938%" height="15" fill="rgb(217,116,22)" fg:x="9504" fg:w="38"/><text x="98.7370%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (38 samples, 0.39%)</title><rect x="98.4870%" y="421" width="0.3938%" height="15" fill="rgb(234,98,12)" fg:x="9504" fg:w="38"/><text x="98.7370%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (38 samples, 0.39%)</title><rect x="98.4870%" y="405" width="0.3938%" height="15" fill="rgb(242,170,50)" fg:x="9504" fg:w="38"/><text x="98.7370%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (36 samples, 0.37%)</title><rect x="98.5078%" y="389" width="0.3731%" height="15" fill="rgb(235,7,5)" fg:x="9506" fg:w="36"/><text x="98.7578%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (13 samples, 0.13%)</title><rect x="98.7461%" y="373" width="0.1347%" height="15" fill="rgb(241,114,28)" fg:x="9529" fg:w="13"/><text x="98.9961%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (13 samples, 0.13%)</title><rect x="98.7461%" y="357" width="0.1347%" height="15" fill="rgb(246,112,42)" fg:x="9529" fg:w="13"/><text x="98.9961%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (11 samples, 0.11%)</title><rect x="98.7668%" y="341" width="0.1140%" height="15" fill="rgb(248,228,14)" fg:x="9531" fg:w="11"/><text x="99.0168%" y="351.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.11%)</title><rect x="98.7668%" y="325" width="0.1140%" height="15" fill="rgb(208,133,18)" fg:x="9531" fg:w="11"/><text x="99.0168%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.11%)</title><rect x="98.7668%" y="309" width="0.1140%" height="15" fill="rgb(207,35,49)" fg:x="9531" fg:w="11"/><text x="99.0168%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.11%)</title><rect x="98.7668%" y="293" width="0.1140%" height="15" fill="rgb(205,68,36)" fg:x="9531" fg:w="11"/><text x="99.0168%" y="303.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.10%)</title><rect x="98.7772%" y="277" width="0.1036%" height="15" fill="rgb(245,62,40)" fg:x="9532" fg:w="10"/><text x="99.0272%" y="287.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.10%)</title><rect x="98.7772%" y="261" width="0.1036%" height="15" fill="rgb(228,27,24)" fg:x="9532" fg:w="10"/><text x="99.0272%" y="271.50"></text></g><g><title>_int_malloc (9 samples, 0.09%)</title><rect x="98.7876%" y="245" width="0.0933%" height="15" fill="rgb(253,19,12)" fg:x="9533" fg:w="9"/><text x="99.0376%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.07%)</title><rect x="98.8083%" y="229" width="0.0725%" height="15" fill="rgb(232,28,20)" fg:x="9535" fg:w="7"/><text x="99.0583%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="213" width="0.0622%" height="15" fill="rgb(218,35,51)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="197" width="0.0622%" height="15" fill="rgb(212,90,40)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="181" width="0.0622%" height="15" fill="rgb(220,172,12)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="165" width="0.0622%" height="15" fill="rgb(226,159,20)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="149" width="0.0622%" height="15" fill="rgb(234,205,16)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="133" width="0.0622%" height="15" fill="rgb(207,9,39)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="98.8187%" y="117" width="0.0622%" height="15" fill="rgb(249,143,15)" fg:x="9536" fg:w="6"/><text x="99.0687%" y="127.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="98.8394%" y="101" width="0.0415%" height="15" fill="rgb(253,133,29)" fg:x="9538" fg:w="4"/><text x="99.0894%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8601%" y="85" width="0.0207%" height="15" fill="rgb(221,187,0)" fg:x="9540" fg:w="2"/><text x="99.1101%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8601%" y="69" width="0.0207%" height="15" fill="rgb(205,204,26)" fg:x="9540" fg:w="2"/><text x="99.1101%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8601%" y="53" width="0.0207%" height="15" fill="rgb(224,68,54)" fg:x="9540" fg:w="2"/><text x="99.1101%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="98.8601%" y="37" width="0.0207%" height="15" fill="rgb(209,67,4)" fg:x="9540" fg:w="2"/><text x="99.1101%" y="47.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="98.9119%" y="373" width="0.0104%" height="15" fill="rgb(228,229,18)" fg:x="9545" fg:w="1"/><text x="99.1619%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="98.9119%" y="357" width="0.0104%" height="15" fill="rgb(231,89,13)" fg:x="9545" fg:w="1"/><text x="99.1619%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="98.9326%" y="357" width="0.0311%" height="15" fill="rgb(210,182,18)" fg:x="9547" fg:w="3"/><text x="99.1826%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="98.9637%" y="357" width="0.0207%" height="15" fill="rgb(240,105,2)" fg:x="9550" fg:w="2"/><text x="99.2137%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.12%)</title><rect x="98.8808%" y="453" width="0.1244%" height="15" fill="rgb(207,170,50)" fg:x="9542" fg:w="12"/><text x="99.1308%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.12%)</title><rect x="98.8808%" y="437" width="0.1244%" height="15" fill="rgb(232,133,24)" fg:x="9542" fg:w="12"/><text x="99.1308%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.12%)</title><rect x="98.8808%" y="421" width="0.1244%" height="15" fill="rgb(235,166,27)" fg:x="9542" fg:w="12"/><text x="99.1308%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.12%)</title><rect x="98.8808%" y="405" width="0.1244%" height="15" fill="rgb(209,19,13)" fg:x="9542" fg:w="12"/><text x="99.1308%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.12%)</title><rect x="98.8808%" y="389" width="0.1244%" height="15" fill="rgb(226,79,39)" fg:x="9542" fg:w="12"/><text x="99.1308%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.08%)</title><rect x="98.9223%" y="373" width="0.0829%" height="15" fill="rgb(222,163,10)" fg:x="9546" fg:w="8"/><text x="99.1723%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="98.9845%" y="357" width="0.0207%" height="15" fill="rgb(214,44,19)" fg:x="9552" fg:w="2"/><text x="99.2345%" y="367.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="99.0155%" y="421" width="0.0207%" height="15" fill="rgb(210,217,13)" fg:x="9555" fg:w="2"/><text x="99.2655%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="99.0363%" y="421" width="0.0104%" height="15" fill="rgb(237,61,54)" fg:x="9557" fg:w="1"/><text x="99.2863%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="99.0363%" y="405" width="0.0104%" height="15" fill="rgb(226,184,24)" fg:x="9557" fg:w="1"/><text x="99.2863%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="99.0363%" y="389" width="0.0104%" height="15" fill="rgb(223,226,4)" fg:x="9557" fg:w="1"/><text x="99.2863%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.05%)</title><rect x="99.0052%" y="437" width="0.0518%" height="15" fill="rgb(210,26,41)" fg:x="9554" fg:w="5"/><text x="99.2552%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="99.0466%" y="421" width="0.0104%" height="15" fill="rgb(220,221,6)" fg:x="9558" fg:w="1"/><text x="99.2966%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="99.0466%" y="405" width="0.0104%" height="15" fill="rgb(225,89,49)" fg:x="9558" fg:w="1"/><text x="99.2966%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="99.0466%" y="389" width="0.0104%" height="15" fill="rgb(218,70,45)" fg:x="9558" fg:w="1"/><text x="99.2966%" y="399.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap (69 samples, 0.72%)</title><rect x="98.3523%" y="565" width="0.7150%" height="15" fill="rgb(238,166,21)" fg:x="9491" fg:w="69"/><text x="98.6023%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69 samples, 0.72%)</title><rect x="98.3523%" y="549" width="0.7150%" height="15" fill="rgb(224,141,44)" fg:x="9491" fg:w="69"/><text x="98.6023%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.70%)</title><rect x="98.3627%" y="533" width="0.7047%" height="15" fill="rgb(230,12,49)" fg:x="9492" fg:w="68"/><text x="98.6127%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (67 samples, 0.69%)</title><rect x="98.3731%" y="517" width="0.6943%" height="15" fill="rgb(212,174,12)" fg:x="9493" fg:w="67"/><text x="98.6231%" y="527.50"></text></g><g><title>&lt;&amp;str as paranagram::utils::IntoHashMap&lt;char,u16&gt;&gt;::to_hashmap::{{closure}} (67 samples, 0.69%)</title><rect x="98.3731%" y="501" width="0.6943%" height="15" fill="rgb(246,67,9)" fg:x="9493" fg:w="67"/><text x="98.6231%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (59 samples, 0.61%)</title><rect x="98.4560%" y="485" width="0.6114%" height="15" fill="rgb(239,35,23)" fg:x="9501" fg:w="59"/><text x="98.7060%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (59 samples, 0.61%)</title><rect x="98.4560%" y="469" width="0.6114%" height="15" fill="rgb(211,167,0)" fg:x="9501" fg:w="59"/><text x="98.7060%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="99.0052%" y="453" width="0.0622%" height="15" fill="rgb(225,119,45)" fg:x="9554" fg:w="6"/><text x="99.2552%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="99.0570%" y="437" width="0.0104%" height="15" fill="rgb(210,162,6)" fg:x="9559" fg:w="1"/><text x="99.3070%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.0777%" y="469" width="0.0104%" height="15" fill="rgb(208,118,35)" fg:x="9561" fg:w="1"/><text x="99.3277%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="99.0777%" y="453" width="0.0104%" height="15" fill="rgb(239,4,53)" fg:x="9561" fg:w="1"/><text x="99.3277%" y="463.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="99.1088%" y="293" width="0.0104%" height="15" fill="rgb(213,130,21)" fg:x="9564" fg:w="1"/><text x="99.3588%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="99.1088%" y="341" width="0.0207%" height="15" fill="rgb(235,148,0)" fg:x="9564" fg:w="2"/><text x="99.3588%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="99.1088%" y="325" width="0.0207%" height="15" fill="rgb(244,224,18)" fg:x="9564" fg:w="2"/><text x="99.3588%" y="335.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="99.1088%" y="309" width="0.0207%" height="15" fill="rgb(211,214,4)" fg:x="9564" fg:w="2"/><text x="99.3588%" y="319.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="99.1192%" y="293" width="0.0104%" height="15" fill="rgb(206,119,25)" fg:x="9565" fg:w="1"/><text x="99.3692%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="99.1192%" y="277" width="0.0104%" height="15" fill="rgb(243,93,47)" fg:x="9565" fg:w="1"/><text x="99.3692%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="99.1088%" y="389" width="0.0311%" height="15" fill="rgb(224,194,6)" fg:x="9564" fg:w="3"/><text x="99.3588%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="99.1088%" y="373" width="0.0311%" height="15" fill="rgb(243,229,6)" fg:x="9564" fg:w="3"/><text x="99.3588%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="99.1088%" y="357" width="0.0311%" height="15" fill="rgb(207,23,50)" fg:x="9564" fg:w="3"/><text x="99.3588%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="99.1295%" y="341" width="0.0104%" height="15" fill="rgb(253,192,32)" fg:x="9566" fg:w="1"/><text x="99.3795%" y="351.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="99.1295%" y="325" width="0.0104%" height="15" fill="rgb(213,21,6)" fg:x="9566" fg:w="1"/><text x="99.3795%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.06%)</title><rect x="99.0881%" y="453" width="0.0622%" height="15" fill="rgb(243,151,13)" fg:x="9562" fg:w="6"/><text x="99.3381%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (6 samples, 0.06%)</title><rect x="99.0881%" y="437" width="0.0622%" height="15" fill="rgb(233,165,41)" fg:x="9562" fg:w="6"/><text x="99.3381%" y="447.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.06%)</title><rect x="99.0881%" y="421" width="0.0622%" height="15" fill="rgb(246,176,45)" fg:x="9562" fg:w="6"/><text x="99.3381%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.06%)</title><rect x="99.0881%" y="405" width="0.0622%" height="15" fill="rgb(217,170,52)" fg:x="9562" fg:w="6"/><text x="99.3381%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="99.1399%" y="389" width="0.0104%" height="15" fill="rgb(214,203,54)" fg:x="9567" fg:w="1"/><text x="99.3899%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="99.1606%" y="389" width="0.0104%" height="15" fill="rgb(248,215,49)" fg:x="9569" fg:w="1"/><text x="99.4106%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="99.1606%" y="373" width="0.0104%" height="15" fill="rgb(208,46,10)" fg:x="9569" fg:w="1"/><text x="99.4106%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="99.1710%" y="389" width="0.0104%" height="15" fill="rgb(254,5,31)" fg:x="9570" fg:w="1"/><text x="99.4210%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.12%)</title><rect x="99.0777%" y="501" width="0.1244%" height="15" fill="rgb(222,104,33)" fg:x="9561" fg:w="12"/><text x="99.3277%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.12%)</title><rect x="99.0777%" y="485" width="0.1244%" height="15" fill="rgb(248,49,16)" fg:x="9561" fg:w="12"/><text x="99.3277%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (11 samples, 0.11%)</title><rect x="99.0881%" y="469" width="0.1140%" height="15" fill="rgb(232,198,41)" fg:x="9562" fg:w="11"/><text x="99.3381%" y="479.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (5 samples, 0.05%)</title><rect x="99.1503%" y="453" width="0.0518%" height="15" fill="rgb(214,125,3)" fg:x="9568" fg:w="5"/><text x="99.4003%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_alphabetic (5 samples, 0.05%)</title><rect x="99.1503%" y="437" width="0.0518%" height="15" fill="rgb(229,220,28)" fg:x="9568" fg:w="5"/><text x="99.4003%" y="447.50"></text></g><g><title>core::unicode::unicode_data::alphabetic::lookup (4 samples, 0.04%)</title><rect x="99.1606%" y="421" width="0.0415%" height="15" fill="rgb(222,64,37)" fg:x="9569" fg:w="4"/><text x="99.4106%" y="431.50"></text></g><g><title>core::unicode::unicode_data::skip_search (4 samples, 0.04%)</title><rect x="99.1606%" y="405" width="0.0415%" height="15" fill="rgb(249,184,13)" fg:x="9569" fg:w="4"/><text x="99.4106%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (2 samples, 0.02%)</title><rect x="99.1813%" y="389" width="0.0207%" height="15" fill="rgb(252,176,6)" fg:x="9571" fg:w="2"/><text x="99.4313%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.02%)</title><rect x="99.1813%" y="373" width="0.0207%" height="15" fill="rgb(228,153,7)" fg:x="9571" fg:w="2"/><text x="99.4313%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (1 samples, 0.01%)</title><rect x="99.1917%" y="357" width="0.0104%" height="15" fill="rgb(242,193,5)" fg:x="9572" fg:w="1"/><text x="99.4417%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="99.1917%" y="341" width="0.0104%" height="15" fill="rgb(232,140,9)" fg:x="9572" fg:w="1"/><text x="99.4417%" y="351.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="99.2021%" y="453" width="0.0207%" height="15" fill="rgb(213,222,16)" fg:x="9573" fg:w="2"/><text x="99.4521%" y="463.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="99.2021%" y="437" width="0.0207%" height="15" fill="rgb(222,75,50)" fg:x="9573" fg:w="2"/><text x="99.4521%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.05%)</title><rect x="99.2539%" y="357" width="0.0518%" height="15" fill="rgb(205,180,2)" fg:x="9578" fg:w="5"/><text x="99.5039%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.05%)</title><rect x="99.2539%" y="341" width="0.0518%" height="15" fill="rgb(216,34,7)" fg:x="9578" fg:w="5"/><text x="99.5039%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="99.2539%" y="325" width="0.0518%" height="15" fill="rgb(253,16,32)" fg:x="9578" fg:w="5"/><text x="99.5039%" y="335.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="99.2642%" y="309" width="0.0415%" height="15" fill="rgb(208,97,28)" fg:x="9579" fg:w="4"/><text x="99.5142%" y="319.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="99.2642%" y="293" width="0.0415%" height="15" fill="rgb(225,92,11)" fg:x="9579" fg:w="4"/><text x="99.5142%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="277" width="0.0104%" height="15" fill="rgb(243,38,12)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="261" width="0.0104%" height="15" fill="rgb(208,139,16)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="245" width="0.0104%" height="15" fill="rgb(227,24,9)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="229" width="0.0104%" height="15" fill="rgb(206,62,11)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="213" width="0.0104%" height="15" fill="rgb(228,134,27)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="197" width="0.0104%" height="15" fill="rgb(205,55,33)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="181" width="0.0104%" height="15" fill="rgb(243,75,43)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="165" width="0.0104%" height="15" fill="rgb(223,27,42)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2953%" y="149" width="0.0104%" height="15" fill="rgb(232,189,33)" fg:x="9582" fg:w="1"/><text x="99.5453%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.10%)</title><rect x="99.2228%" y="421" width="0.1036%" height="15" fill="rgb(210,9,39)" fg:x="9575" fg:w="10"/><text x="99.4728%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (10 samples, 0.10%)</title><rect x="99.2228%" y="405" width="0.1036%" height="15" fill="rgb(242,85,26)" fg:x="9575" fg:w="10"/><text x="99.4728%" y="415.50"></text></g><g><title>alloc::string::String::push (10 samples, 0.10%)</title><rect x="99.2228%" y="389" width="0.1036%" height="15" fill="rgb(248,44,4)" fg:x="9575" fg:w="10"/><text x="99.4728%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.10%)</title><rect x="99.2228%" y="373" width="0.1036%" height="15" fill="rgb(250,96,46)" fg:x="9575" fg:w="10"/><text x="99.4728%" y="383.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="99.3057%" y="357" width="0.0207%" height="15" fill="rgb(229,116,26)" fg:x="9583" fg:w="2"/><text x="99.5557%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.11%)</title><rect x="99.2228%" y="437" width="0.1140%" height="15" fill="rgb(246,94,34)" fg:x="9575" fg:w="11"/><text x="99.4728%" y="447.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.01%)</title><rect x="99.3264%" y="421" width="0.0104%" height="15" fill="rgb(251,73,21)" fg:x="9585" fg:w="1"/><text x="99.5764%" y="431.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_ascii_lowercase (1 samples, 0.01%)</title><rect x="99.3264%" y="405" width="0.0104%" height="15" fill="rgb(254,121,25)" fg:x="9585" fg:w="1"/><text x="99.5764%" y="415.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_uppercase (1 samples, 0.01%)</title><rect x="99.3264%" y="389" width="0.0104%" height="15" fill="rgb(215,161,49)" fg:x="9585" fg:w="1"/><text x="99.5764%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.28%)</title><rect x="99.0674%" y="565" width="0.2798%" height="15" fill="rgb(221,43,13)" fg:x="9560" fg:w="27"/><text x="99.3174%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (27 samples, 0.28%)</title><rect x="99.0674%" y="549" width="0.2798%" height="15" fill="rgb(249,5,37)" fg:x="9560" fg:w="27"/><text x="99.3174%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (26 samples, 0.27%)</title><rect x="99.0777%" y="533" width="0.2694%" height="15" fill="rgb(226,25,44)" fg:x="9561" fg:w="26"/><text x="99.3277%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.27%)</title><rect x="99.0777%" y="517" width="0.2694%" height="15" fill="rgb(238,189,16)" fg:x="9561" fg:w="26"/><text x="99.3277%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.15%)</title><rect x="99.2021%" y="501" width="0.1451%" height="15" fill="rgb(251,186,8)" fg:x="9573" fg:w="14"/><text x="99.4521%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.15%)</title><rect x="99.2021%" y="485" width="0.1451%" height="15" fill="rgb(254,34,31)" fg:x="9573" fg:w="14"/><text x="99.4521%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.15%)</title><rect x="99.2021%" y="469" width="0.1451%" height="15" fill="rgb(225,215,27)" fg:x="9573" fg:w="14"/><text x="99.4521%" y="479.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (12 samples, 0.12%)</title><rect x="99.2228%" y="453" width="0.1244%" height="15" fill="rgb(221,192,48)" fg:x="9575" fg:w="12"/><text x="99.4728%" y="463.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.01%)</title><rect x="99.3368%" y="437" width="0.0104%" height="15" fill="rgb(219,137,20)" fg:x="9586" fg:w="1"/><text x="99.5868%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.01%)</title><rect x="99.3368%" y="421" width="0.0104%" height="15" fill="rgb(219,84,11)" fg:x="9586" fg:w="1"/><text x="99.5868%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::ne (1 samples, 0.01%)</title><rect x="99.3368%" y="405" width="0.0104%" height="15" fill="rgb(224,10,23)" fg:x="9586" fg:w="1"/><text x="99.5868%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.3472%" y="501" width="0.0104%" height="15" fill="rgb(248,22,39)" fg:x="9587" fg:w="1"/><text x="99.5972%" y="511.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.3472%" y="485" width="0.0104%" height="15" fill="rgb(212,154,20)" fg:x="9587" fg:w="1"/><text x="99.5972%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.3472%" y="469" width="0.0104%" height="15" fill="rgb(236,199,50)" fg:x="9587" fg:w="1"/><text x="99.5972%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="99.3472%" y="453" width="0.0104%" height="15" fill="rgb(211,9,17)" fg:x="9587" fg:w="1"/><text x="99.5972%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.3472%" y="437" width="0.0104%" height="15" fill="rgb(243,216,36)" fg:x="9587" fg:w="1"/><text x="99.5972%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.02%)</title><rect x="99.3575%" y="485" width="0.0207%" height="15" fill="rgb(250,2,10)" fg:x="9588" fg:w="2"/><text x="99.6075%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.04%)</title><rect x="99.3472%" y="565" width="0.0415%" height="15" fill="rgb(226,50,48)" fg:x="9587" fg:w="4"/><text x="99.5972%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.04%)</title><rect x="99.3472%" y="549" width="0.0415%" height="15" fill="rgb(243,81,16)" fg:x="9587" fg:w="4"/><text x="99.5972%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.04%)</title><rect x="99.3472%" y="533" width="0.0415%" height="15" fill="rgb(250,14,2)" fg:x="9587" fg:w="4"/><text x="99.5972%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.04%)</title><rect x="99.3472%" y="517" width="0.0415%" height="15" fill="rgb(233,135,29)" fg:x="9587" fg:w="4"/><text x="99.5972%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="99.3575%" y="501" width="0.0311%" height="15" fill="rgb(224,64,43)" fg:x="9588" fg:w="3"/><text x="99.6075%" y="511.50"></text></g><g><title>paranagram::word::Word::new::{{closure}} (1 samples, 0.01%)</title><rect x="99.3782%" y="485" width="0.0104%" height="15" fill="rgb(238,84,13)" fg:x="9590" fg:w="1"/><text x="99.6282%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="99.3886%" y="469" width="0.0104%" height="15" fill="rgb(253,48,26)" fg:x="9591" fg:w="1"/><text x="99.6386%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="99.3886%" y="453" width="0.0104%" height="15" fill="rgb(205,223,31)" fg:x="9591" fg:w="1"/><text x="99.6386%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="99.3886%" y="565" width="0.0207%" height="15" fill="rgb(221,41,32)" fg:x="9591" fg:w="2"/><text x="99.6386%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="99.3886%" y="549" width="0.0207%" height="15" fill="rgb(213,158,31)" fg:x="9591" fg:w="2"/><text x="99.6386%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="99.3886%" y="533" width="0.0207%" height="15" fill="rgb(245,126,43)" fg:x="9591" fg:w="2"/><text x="99.6386%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="99.3886%" y="517" width="0.0207%" height="15" fill="rgb(227,7,22)" fg:x="9591" fg:w="2"/><text x="99.6386%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="99.3886%" y="501" width="0.0207%" height="15" fill="rgb(252,90,44)" fg:x="9591" fg:w="2"/><text x="99.6386%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="99.3886%" y="485" width="0.0207%" height="15" fill="rgb(253,91,0)" fg:x="9591" fg:w="2"/><text x="99.6386%" y="495.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="99.3990%" y="469" width="0.0104%" height="15" fill="rgb(252,175,49)" fg:x="9592" fg:w="1"/><text x="99.6490%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="99.3990%" y="453" width="0.0104%" height="15" fill="rgb(246,150,1)" fg:x="9592" fg:w="1"/><text x="99.6490%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.01%)</title><rect x="99.4093%" y="565" width="0.0104%" height="15" fill="rgb(241,192,25)" fg:x="9593" fg:w="1"/><text x="99.6593%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="99.4093%" y="549" width="0.0104%" height="15" fill="rgb(239,187,11)" fg:x="9593" fg:w="1"/><text x="99.6593%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="99.4093%" y="533" width="0.0104%" height="15" fill="rgb(218,202,51)" fg:x="9593" fg:w="1"/><text x="99.6593%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="99.4093%" y="517" width="0.0104%" height="15" fill="rgb(225,176,8)" fg:x="9593" fg:w="1"/><text x="99.6593%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="99.4508%" y="421" width="0.0311%" height="15" fill="rgb(219,122,41)" fg:x="9597" fg:w="3"/><text x="99.7008%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="99.4611%" y="405" width="0.0207%" height="15" fill="rgb(248,140,20)" fg:x="9598" fg:w="2"/><text x="99.7111%" y="415.50"></text></g><g><title>core::str::validations::next_code_point (6 samples, 0.06%)</title><rect x="99.4301%" y="437" width="0.0622%" height="15" fill="rgb(245,41,37)" fg:x="9595" fg:w="6"/><text x="99.6801%" y="447.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (1 samples, 0.01%)</title><rect x="99.4819%" y="421" width="0.0104%" height="15" fill="rgb(235,82,39)" fg:x="9600" fg:w="1"/><text x="99.7319%" y="431.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="99.4301%" y="453" width="0.0829%" height="15" fill="rgb(230,108,42)" fg:x="9595" fg:w="8"/><text x="99.6801%" y="463.50"></text></g><g><title>unidecode::unidecode (2 samples, 0.02%)</title><rect x="99.4922%" y="437" width="0.0207%" height="15" fill="rgb(215,150,50)" fg:x="9601" fg:w="2"/><text x="99.7422%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="99.5233%" y="309" width="0.0207%" height="15" fill="rgb(233,212,5)" fg:x="9604" fg:w="2"/><text x="99.7733%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.02%)</title><rect x="99.5233%" y="293" width="0.0207%" height="15" fill="rgb(245,80,22)" fg:x="9604" fg:w="2"/><text x="99.7733%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="99.5440%" y="277" width="0.0104%" height="15" fill="rgb(238,129,16)" fg:x="9606" fg:w="1"/><text x="99.7940%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.03%)</title><rect x="99.5855%" y="261" width="0.0311%" height="15" fill="rgb(240,19,0)" fg:x="9610" fg:w="3"/><text x="99.8355%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.03%)</title><rect x="99.5855%" y="245" width="0.0311%" height="15" fill="rgb(232,42,35)" fg:x="9610" fg:w="3"/><text x="99.8355%" y="255.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.03%)</title><rect x="99.5855%" y="229" width="0.0311%" height="15" fill="rgb(223,130,24)" fg:x="9610" fg:w="3"/><text x="99.8355%" y="239.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="99.5855%" y="213" width="0.0311%" height="15" fill="rgb(237,16,22)" fg:x="9610" fg:w="3"/><text x="99.8355%" y="223.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="99.6062%" y="197" width="0.0104%" height="15" fill="rgb(248,192,20)" fg:x="9612" fg:w="1"/><text x="99.8562%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="99.6166%" y="261" width="0.0104%" height="15" fill="rgb(233,167,2)" fg:x="9613" fg:w="1"/><text x="99.8666%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.08%)</title><rect x="99.5544%" y="277" width="0.0829%" height="15" fill="rgb(252,71,44)" fg:x="9607" fg:w="8"/><text x="99.8044%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="99.6269%" y="261" width="0.0104%" height="15" fill="rgb(238,37,47)" fg:x="9614" fg:w="1"/><text x="99.8769%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.13%)</title><rect x="99.5130%" y="341" width="0.1347%" height="15" fill="rgb(214,202,54)" fg:x="9603" fg:w="13"/><text x="99.7630%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.13%)</title><rect x="99.5130%" y="325" width="0.1347%" height="15" fill="rgb(254,165,40)" fg:x="9603" fg:w="13"/><text x="99.7630%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.10%)</title><rect x="99.5440%" y="309" width="0.1036%" height="15" fill="rgb(246,173,38)" fg:x="9606" fg:w="10"/><text x="99.7940%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.10%)</title><rect x="99.5440%" y="293" width="0.1036%" height="15" fill="rgb(215,3,27)" fg:x="9606" fg:w="10"/><text x="99.7940%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="99.6373%" y="277" width="0.0104%" height="15" fill="rgb(239,169,51)" fg:x="9615" fg:w="1"/><text x="99.8873%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="99.6373%" y="261" width="0.0104%" height="15" fill="rgb(212,5,25)" fg:x="9615" fg:w="1"/><text x="99.8873%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="99.6477%" y="341" width="0.0415%" height="15" fill="rgb(243,45,17)" fg:x="9616" fg:w="4"/><text x="99.8977%" y="351.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.04%)</title><rect x="99.6477%" y="325" width="0.0415%" height="15" fill="rgb(242,97,9)" fg:x="9616" fg:w="4"/><text x="99.8977%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 0.20%)</title><rect x="99.5130%" y="437" width="0.1969%" height="15" fill="rgb(228,71,31)" fg:x="9603" fg:w="19"/><text x="99.7630%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend::{{closure}} (19 samples, 0.20%)</title><rect x="99.5130%" y="421" width="0.1969%" height="15" fill="rgb(252,184,16)" fg:x="9603" fg:w="19"/><text x="99.7630%" y="431.50"></text></g><g><title>alloc::string::String::push_str (19 samples, 0.20%)</title><rect x="99.5130%" y="405" width="0.1969%" height="15" fill="rgb(236,169,46)" fg:x="9603" fg:w="19"/><text x="99.7630%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.20%)</title><rect x="99.5130%" y="389" width="0.1969%" height="15" fill="rgb(207,17,47)" fg:x="9603" fg:w="19"/><text x="99.7630%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.20%)</title><rect x="99.5130%" y="373" width="0.1969%" height="15" fill="rgb(206,201,28)" fg:x="9603" fg:w="19"/><text x="99.7630%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.20%)</title><rect x="99.5130%" y="357" width="0.1969%" height="15" fill="rgb(224,184,23)" fg:x="9603" fg:w="19"/><text x="99.7630%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.02%)</title><rect x="99.6891%" y="341" width="0.0207%" height="15" fill="rgb(208,139,48)" fg:x="9620" fg:w="2"/><text x="99.9391%" y="351.50"></text></g><g><title>unidecode::unidecode (2 samples, 0.02%)</title><rect x="99.7098%" y="421" width="0.0207%" height="15" fill="rgb(208,130,10)" fg:x="9622" fg:w="2"/><text x="99.9598%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 1.59%)</title><rect x="98.1865%" y="677" width="1.5855%" height="15" fill="rgb(211,213,45)" fg:x="9475" fg:w="153"/><text x="98.4365%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (153 samples, 1.59%)</title><rect x="98.1865%" y="661" width="1.5855%" height="15" fill="rgb(235,100,30)" fg:x="9475" fg:w="153"/><text x="98.4365%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (153 samples, 1.59%)</title><rect x="98.1865%" y="645" width="1.5855%" height="15" fill="rgb(206,144,31)" fg:x="9475" fg:w="153"/><text x="98.4365%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (147 samples, 1.52%)</title><rect x="98.2487%" y="629" width="1.5233%" height="15" fill="rgb(224,200,26)" fg:x="9481" fg:w="147"/><text x="98.4987%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (147 samples, 1.52%)</title><rect x="98.2487%" y="613" width="1.5233%" height="15" fill="rgb(247,104,53)" fg:x="9481" fg:w="147"/><text x="98.4987%" y="623.50"></text></g><g><title>paranagram::Paranagram::new::{{closure}} (147 samples, 1.52%)</title><rect x="98.2487%" y="597" width="1.5233%" height="15" fill="rgb(220,14,17)" fg:x="9481" fg:w="147"/><text x="98.4987%" y="607.50"></text></g><g><title>paranagram::word::Word::new (139 samples, 1.44%)</title><rect x="98.3316%" y="581" width="1.4404%" height="15" fill="rgb(230,140,40)" fg:x="9489" fg:w="139"/><text x="98.5816%" y="591.50"></text></g><g><title>unidecode::unidecode (34 samples, 0.35%)</title><rect x="99.4197%" y="565" width="0.3523%" height="15" fill="rgb(229,2,41)" fg:x="9594" fg:w="34"/><text x="99.6697%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.35%)</title><rect x="99.4197%" y="549" width="0.3523%" height="15" fill="rgb(232,89,16)" fg:x="9594" fg:w="34"/><text x="99.6697%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (34 samples, 0.35%)</title><rect x="99.4197%" y="533" width="0.3523%" height="15" fill="rgb(247,59,52)" fg:x="9594" fg:w="34"/><text x="99.6697%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (33 samples, 0.34%)</title><rect x="99.4301%" y="517" width="0.3420%" height="15" fill="rgb(226,110,21)" fg:x="9595" fg:w="33"/><text x="99.6801%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.34%)</title><rect x="99.4301%" y="501" width="0.3420%" height="15" fill="rgb(224,176,43)" fg:x="9595" fg:w="33"/><text x="99.6801%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.34%)</title><rect x="99.4301%" y="485" width="0.3420%" height="15" fill="rgb(221,73,6)" fg:x="9595" fg:w="33"/><text x="99.6801%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 0.34%)</title><rect x="99.4301%" y="469" width="0.3420%" height="15" fill="rgb(232,78,19)" fg:x="9595" fg:w="33"/><text x="99.6801%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (25 samples, 0.26%)</title><rect x="99.5130%" y="453" width="0.2591%" height="15" fill="rgb(233,112,48)" fg:x="9603" fg:w="25"/><text x="99.7630%" y="463.50"></text></g><g><title>unidecode::unidecode::{{closure}} (6 samples, 0.06%)</title><rect x="99.7098%" y="437" width="0.0622%" height="15" fill="rgb(243,131,47)" fg:x="9622" fg:w="6"/><text x="99.9598%" y="447.50"></text></g><g><title>unidecode::unidecode_char (4 samples, 0.04%)</title><rect x="99.7306%" y="421" width="0.0415%" height="15" fill="rgb(226,51,1)" fg:x="9624" fg:w="4"/><text x="99.9806%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.04%)</title><rect x="99.7306%" y="405" width="0.0415%" height="15" fill="rgb(247,58,7)" fg:x="9624" fg:w="4"/><text x="99.9806%" y="415.50"></text></g><g><title>unidecode::unidecode_char::{{closure}} (4 samples, 0.04%)</title><rect x="99.7306%" y="389" width="0.0415%" height="15" fill="rgb(209,7,32)" fg:x="9624" fg:w="4"/><text x="99.9806%" y="399.50"></text></g><g><title>__libc_start_main_impl (3,300 samples, 34.20%)</title><rect x="65.6166%" y="1061" width="34.1969%" height="15" fill="rgb(209,39,41)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="1071.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,300 samples, 34.20%)</title><rect x="65.6166%" y="1045" width="34.1969%" height="15" fill="rgb(226,182,46)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="1055.50">__libc_start_call_main</text></g><g><title>main (3,300 samples, 34.20%)</title><rect x="65.6166%" y="1029" width="34.1969%" height="15" fill="rgb(230,219,10)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (3,300 samples, 34.20%)</title><rect x="65.6166%" y="1013" width="34.1969%" height="15" fill="rgb(227,175,30)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,300 samples, 34.20%)</title><rect x="65.6166%" y="997" width="34.1969%" height="15" fill="rgb(217,2,50)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,300 samples, 34.20%)</title><rect x="65.6166%" y="981" width="34.1969%" height="15" fill="rgb(229,160,0)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,300 samples, 34.20%)</title><rect x="65.6166%" y="965" width="34.1969%" height="15" fill="rgb(207,78,37)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (3,300 samples, 34.20%)</title><rect x="65.6166%" y="949" width="34.1969%" height="15" fill="rgb(225,57,0)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (3,300 samples, 34.20%)</title><rect x="65.6166%" y="933" width="34.1969%" height="15" fill="rgb(232,154,2)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,300 samples, 34.20%)</title><rect x="65.6166%" y="917" width="34.1969%" height="15" fill="rgb(241,212,25)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,300 samples, 34.20%)</title><rect x="65.6166%" y="901" width="34.1969%" height="15" fill="rgb(226,69,20)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,300 samples, 34.20%)</title><rect x="65.6166%" y="885" width="34.1969%" height="15" fill="rgb(247,184,54)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::..</text></g><g><title>std::rt::lang_start::{{closure}} (3,300 samples, 34.20%)</title><rect x="65.6166%" y="869" width="34.1969%" height="15" fill="rgb(210,145,0)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,300 samples, 34.20%)</title><rect x="65.6166%" y="853" width="34.1969%" height="15" fill="rgb(253,82,12)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,300 samples, 34.20%)</title><rect x="65.6166%" y="837" width="34.1969%" height="15" fill="rgb(245,42,11)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="847.50">core::ops::function::FnOnce::call_once</text></g><g><title>para::main (3,300 samples, 34.20%)</title><rect x="65.6166%" y="821" width="34.1969%" height="15" fill="rgb(219,147,32)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="831.50">para::main</text></g><g><title>para::dbg_main (3,300 samples, 34.20%)</title><rect x="65.6166%" y="805" width="34.1969%" height="15" fill="rgb(246,12,7)" fg:x="6332" fg:w="3300"/><text x="65.8666%" y="815.50">para::dbg_main</text></g><g><title>paranagram::Paranagram::new (159 samples, 1.65%)</title><rect x="98.1658%" y="789" width="1.6477%" height="15" fill="rgb(243,50,9)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (159 samples, 1.65%)</title><rect x="98.1658%" y="773" width="1.6477%" height="15" fill="rgb(219,149,6)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (159 samples, 1.65%)</title><rect x="98.1658%" y="757" width="1.6477%" height="15" fill="rgb(241,51,42)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (159 samples, 1.65%)</title><rect x="98.1658%" y="741" width="1.6477%" height="15" fill="rgb(226,128,27)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (159 samples, 1.65%)</title><rect x="98.1658%" y="725" width="1.6477%" height="15" fill="rgb(244,144,4)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (159 samples, 1.65%)</title><rect x="98.1658%" y="709" width="1.6477%" height="15" fill="rgb(221,4,13)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (159 samples, 1.65%)</title><rect x="98.1658%" y="693" width="1.6477%" height="15" fill="rgb(208,170,28)" fg:x="9473" fg:w="159"/><text x="98.4158%" y="703.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="99.7720%" y="677" width="0.0415%" height="15" fill="rgb(226,131,13)" fg:x="9628" fg:w="4"/><text x="100.0220%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.7824%" y="661" width="0.0311%" height="15" fill="rgb(215,72,41)" fg:x="9629" fg:w="3"/><text x="100.0324%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.7824%" y="645" width="0.0311%" height="15" fill="rgb(243,108,20)" fg:x="9629" fg:w="3"/><text x="100.0324%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.7824%" y="629" width="0.0311%" height="15" fill="rgb(230,189,17)" fg:x="9629" fg:w="3"/><text x="100.0324%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.7824%" y="613" width="0.0311%" height="15" fill="rgb(220,50,17)" fg:x="9629" fg:w="3"/><text x="100.0324%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="99.7824%" y="597" width="0.0311%" height="15" fill="rgb(248,152,48)" fg:x="9629" fg:w="3"/><text x="100.0324%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7927%" y="581" width="0.0207%" height="15" fill="rgb(244,91,11)" fg:x="9630" fg:w="2"/><text x="100.0427%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7927%" y="565" width="0.0207%" height="15" fill="rgb(220,157,5)" fg:x="9630" fg:w="2"/><text x="100.0427%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7927%" y="549" width="0.0207%" height="15" fill="rgb(253,137,8)" fg:x="9630" fg:w="2"/><text x="100.0427%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.7927%" y="533" width="0.0207%" height="15" fill="rgb(217,137,51)" fg:x="9630" fg:w="2"/><text x="100.0427%" y="543.50"></text></g><g><title>_start (3,301 samples, 34.21%)</title><rect x="65.6166%" y="1077" width="34.2073%" height="15" fill="rgb(218,209,53)" fg:x="6332" fg:w="3301"/><text x="65.8666%" y="1087.50">_start</text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.8135%" y="1061" width="0.0104%" height="15" fill="rgb(249,137,25)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="1071.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="99.8135%" y="1045" width="0.0104%" height="15" fill="rgb(239,155,26)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="1055.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.8135%" y="1029" width="0.0104%" height="15" fill="rgb(227,85,46)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="1039.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.8135%" y="1013" width="0.0104%" height="15" fill="rgb(251,107,43)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="1023.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="99.8135%" y="997" width="0.0104%" height="15" fill="rgb(234,170,33)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="1007.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="99.8135%" y="981" width="0.0104%" height="15" fill="rgb(206,29,35)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="991.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.01%)</title><rect x="99.8135%" y="965" width="0.0104%" height="15" fill="rgb(227,138,25)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="949" width="0.0104%" height="15" fill="rgb(249,131,35)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="933" width="0.0104%" height="15" fill="rgb(239,6,40)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="917" width="0.0104%" height="15" fill="rgb(246,136,47)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="901" width="0.0104%" height="15" fill="rgb(253,58,26)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="885" width="0.0104%" height="15" fill="rgb(237,141,10)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="869" width="0.0104%" height="15" fill="rgb(234,156,12)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="853" width="0.0104%" height="15" fill="rgb(243,224,36)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="837" width="0.0104%" height="15" fill="rgb(205,229,51)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="821" width="0.0104%" height="15" fill="rgb(223,189,4)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8135%" y="805" width="0.0104%" height="15" fill="rgb(249,167,54)" fg:x="9632" fg:w="1"/><text x="100.0635%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.10%)</title><rect x="99.8238%" y="1077" width="0.1036%" height="15" fill="rgb(218,34,28)" fg:x="9633" fg:w="10"/><text x="100.0738%" y="1087.50"></text></g><g><title>para (9,645 samples, 99.95%)</title><rect x="0.0000%" y="1093" width="99.9482%" height="15" fill="rgb(232,109,42)" fg:x="0" fg:w="9645"/><text x="0.2500%" y="1103.50">para</text></g><g><title>paranagram::utils::find_sum_rec (2 samples, 0.02%)</title><rect x="99.9275%" y="1077" width="0.0207%" height="15" fill="rgb(248,214,46)" fg:x="9643" fg:w="2"/><text x="100.1775%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="99.9275%" y="1061" width="0.0207%" height="15" fill="rgb(244,216,40)" fg:x="9643" fg:w="2"/><text x="100.1775%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="99.9275%" y="1045" width="0.0207%" height="15" fill="rgb(231,226,31)" fg:x="9643" fg:w="2"/><text x="100.1775%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="99.9275%" y="1029" width="0.0207%" height="15" fill="rgb(238,38,43)" fg:x="9643" fg:w="2"/><text x="100.1775%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="99.9275%" y="1013" width="0.0207%" height="15" fill="rgb(208,88,43)" fg:x="9643" fg:w="2"/><text x="100.1775%" y="1023.50"></text></g><g><title>all (9,650 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(205,136,37)" fg:x="0" fg:w="9650"/><text x="0.2500%" y="1119.50"></text></g><g><title>perf-exec (5 samples, 0.05%)</title><rect x="99.9482%" y="1093" width="0.0518%" height="15" fill="rgb(237,34,14)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="1077" width="0.0518%" height="15" fill="rgb(236,193,44)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="1061" width="0.0518%" height="15" fill="rgb(231,48,10)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="1045" width="0.0518%" height="15" fill="rgb(213,141,34)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="1029" width="0.0518%" height="15" fill="rgb(249,130,34)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="1013" width="0.0518%" height="15" fill="rgb(219,42,41)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="997" width="0.0518%" height="15" fill="rgb(224,100,54)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="981" width="0.0518%" height="15" fill="rgb(229,200,27)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="965" width="0.0518%" height="15" fill="rgb(217,118,10)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="949" width="0.0518%" height="15" fill="rgb(206,22,3)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="933" width="0.0518%" height="15" fill="rgb(232,163,46)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="917" width="0.0518%" height="15" fill="rgb(206,95,13)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="901" width="0.0518%" height="15" fill="rgb(253,154,18)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="885" width="0.0518%" height="15" fill="rgb(219,32,23)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="869" width="0.0518%" height="15" fill="rgb(230,191,45)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="853" width="0.0518%" height="15" fill="rgb(229,64,36)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="837" width="0.0518%" height="15" fill="rgb(205,129,25)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.9482%" y="821" width="0.0518%" height="15" fill="rgb(254,112,7)" fg:x="9645" fg:w="5"/><text x="100.1982%" y="831.50"></text></g></svg></svg>